{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: find2perl output to array", "body": "Matt wrote:\n> Thanks Martin,\n>> change following line:\n>>  \n>>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n>>> /^DATA.*\\.zip\\z/s && print(\"$name\\n\");\n>>>     \n>>\n>> to\n>>\n>>  \n>>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n>>> /^DATA.*\\.zip\\z/s && push @files, $name;\n>>>     \n>>\n>> at the end you have all files in the @files array.\n>>\n>>   \n> \n> I did that, and then at the bottom of the script I tried looping through \n> just to verify that @files was populated - no dice.\n> \n> use vars qw/*name *dir *prune/;\n> *name   = *File::Find::name;\n> *dir    = *File::Find::dir;\n> *prune  = *File::Find::prune;\n> \n> sub wanted;\n> \n> $smallcuid = lc $cuid;\n> \n> # Traverse desired filesystems\n> File::Find::find({wanted => \\&wanted}, \n> '/home/ftpuser/'.$smallcuid.'/flexvault/'.$directory.'/');\n> exit;\n> \n> \n> sub wanted {\n>    my ($dev,$ino,$mode,$nlink,$uid,$gid);\n> \n> (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n> /^DATA.*\\.zip\\z/s && push @files, name;\n> }\n> \n> for $element (@files) {\n>       print $element, \"\\n\";\n> }\n> \n> \n> \n> What have I done wrong?  Although if I put that for loop within the \n> function it does populate, but it repeats each results 6 times.\n\nIt's not displaying the contents of the array becuase you have a\ncall to exit before the loop.\n\nIt's repeating several times because your wanted() subroutine is called\nfor every file and directory.\n\nThe code you have published will put 'name' into @files several times,\nand doesn't show the origin of $cuid or directory.\n\nSomething like the code below should work.\n\nHTH,\n\nRob\n\n\nuse strict;\nuse warnings;\n\nuse File::Find;\n\nmy ($cuid, $smallcuid);\nmy $directory;\nmy @files;\n\nfind(\\&wanted, \"/home/ftpuser/$smallcuid/flexvault/$directory/\");\n\nprint \"$_\\n\" foreach @files;\n\nsub wanted {\n  push @files, $File::Find::name if -f and /^DATA.*\\.zip\\z/s;\n}\n\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}