{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22492 - in branches: SAMBA_3_0/source/include\n\tSAMBA_3_0/source/smbd SAMBA_3_0_25/source/include\n\tSAMBA_3_0_25/source/smbd", "body": "Author: jra\nDate: 2007-04-23 21:07:05 +0000 (Mon, 23 Apr 2007)\nNew Revision: 22492\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22492\n\nLog:\nAdd objectid code.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/include/ntioctl.h\n   branches/SAMBA_3_0/source/smbd/nttrans.c\n   branches/SAMBA_3_0_25/source/include/ntioctl.h\n   branches/SAMBA_3_0_25/source/smbd/nttrans.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/include/ntioctl.h\n===================================================================\n--- branches/SAMBA_3_0/source/include/ntioctl.h\t2007-04-23 16:45:56 UTC (rev 22491)\n+++ branches/SAMBA_3_0/source/include/ntioctl.h\t2007-04-23 21:07:05 UTC (rev 22492)\n@@ -47,7 +47,7 @@\n #define FSCTL_SET_REPARSE_POINT      0x000900A4\n #define FSCTL_GET_REPARSE_POINT      0x000900A8\n #define FSCTL_DELETE_REPARSE_POINT   0x000900AC\n-#define FSCTL_0x000900C0\t     0x000900C0\n+#define FSCTL_CREATE_OR_GET_OBJECT_ID 0x000900C0\n #define FSCTL_SET_SPARSE             0x000900C4\n #define FSCTL_SET_ZERO_DATA          0x000900C8\n #define FSCTL_SET_ENCRYPTION         0x000900D7\n\nModified: branches/SAMBA_3_0/source/smbd/nttrans.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/nttrans.c\t2007-04-23 16:45:56 UTC (rev 22491)\n+++ branches/SAMBA_3_0/source/smbd/nttrans.c\t2007-04-23 21:07:05 UTC (rev 22492)\n@@ -2285,24 +2285,38 @@\n \t\t\t\t0);\n \t\treturn -1;\n \t\n-\tcase FSCTL_0x000900C0:\n-\t\t/* pretend this succeeded - don't know what this really is\n-\t\t   but works ok like this --metze\n+\tcase FSCTL_CREATE_OR_GET_OBJECT_ID:\n+\t{\n+\t\tunsigned char objid[16];\n+\n+\t\t/* This should return the object-id on this file.\n+\t\t * I think I'll make this be the inode+dev. JRA.\n \t\t */\n \n-\t\tDEBUG(10,(\"FSCTL_0x000900C0: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(inbuf, outbuf, bufsize, NT_STATUS_OK, NULL, 0, NULL,\n-\t\t\t\t0);\n+\t\tDEBUG(10,(\"FSCTL_CREATE_OR_GET_OBJECT_ID: called on FID[0x%04X]\\n\",fidnum));\n+\n+\t\tdata_count = 64;\n+\t\tpdata = nttrans_realloc(ppdata, data_count);\n+\t\tif (pdata == NULL) {\n+\t\t\treturn ERROR_NT(NT_STATUS_NO_MEMORY);\n+\t\t}\n+\t\tSINO_T_VAL(pdata,0,fsp->inode);\n+\t\tSDEV_T_VAL(pdata,8,fsp->dev);\n+\t\tmemcpy(pdata+16,create_volume_objectid(conn,objid),16);\n+\t\tSINO_T_VAL(pdata,32,fsp->inode);\n+\t\tSDEV_T_VAL(pdata,40,fsp->dev);\n+\t\tsend_nt_replies(inbuf, outbuf, bufsize, NT_STATUS_OK, NULL, 0, pdata, data_count);\n \t\treturn -1;\n+\t}\n \n+\n \tcase FSCTL_GET_REPARSE_POINT:\n \t\t/* pretend this fail - my winXP does it like this\n \t\t * --metze\n \t\t */\n \n \t\tDEBUG(10,(\"FSCTL_GET_REPARSE_POINT: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(inbuf, outbuf, bufsize, NT_STATUS_NOT_A_REPARSE_POINT,\n-\t\t\t\tNULL, 0, NULL, 0);\n+\t\treturn ERROR_NT(NT_STATUS_NOT_A_REPARSE_POINT);\n \t\treturn -1;\n \n \tcase FSCTL_SET_REPARSE_POINT:\n@@ -2311,8 +2325,7 @@\n \t\t */\n \n \t\tDEBUG(10,(\"FSCTL_SET_REPARSE_POINT: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(inbuf, outbuf, bufsize, NT_STATUS_NOT_A_REPARSE_POINT,\n-\t\t\t\tNULL, 0, NULL, 0);\n+\t\treturn ERROR_NT(NT_STATUS_NOT_A_REPARSE_POINT);\n \t\treturn -1;\n \t\t\t\n \tcase FSCTL_GET_SHADOW_COPY_DATA: /* don't know if this name is right...*/\n\nModified: branches/SAMBA_3_0_25/source/include/ntioctl.h\n===================================================================\n--- branches/SAMBA_3_0_25/source/include/ntioctl.h\t2007-04-23 16:45:56 UTC (rev 22491)\n+++ branches/SAMBA_3_0_25/source/include/ntioctl.h\t2007-04-23 21:07:05 UTC (rev 22492)\n@@ -47,7 +47,7 @@\n #define FSCTL_SET_REPARSE_POINT      0x000900A4\n #define FSCTL_GET_REPARSE_POINT      0x000900A8\n #define FSCTL_DELETE_REPARSE_POINT   0x000900AC\n-#define FSCTL_0x000900C0\t     0x000900C0\n+#define FSCTL_CREATE_OR_GET_OBJECT_ID 0x000900C0\n #define FSCTL_SET_SPARSE             0x000900C4\n #define FSCTL_SET_ZERO_DATA          0x000900C8\n #define FSCTL_SET_ENCRYPTION         0x000900D7\n\nModified: branches/SAMBA_3_0_25/source/smbd/nttrans.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/smbd/nttrans.c\t2007-04-23 16:45:56 UTC (rev 22491)\n+++ branches/SAMBA_3_0_25/source/smbd/nttrans.c\t2007-04-23 21:07:05 UTC (rev 22492)\n@@ -2279,15 +2279,29 @@\n \t\t\t\t0);\n \t\treturn -1;\n \t\n-\tcase FSCTL_0x000900C0:\n-\t\t/* pretend this succeeded - don't know what this really is\n-\t\t   but works ok like this --metze\n+\tcase FSCTL_CREATE_OR_GET_OBJECT_ID:\n+\t{\n+\t\tunsigned char objid[16];\n+\n+\t\t/* This should return the object-id on this file.\n+ \t\t * I think I'll make this be the inode+dev. JRA.\n \t\t */\n \n-\t\tDEBUG(10,(\"FSCTL_0x000900C0: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(outbuf, bufsize, NT_STATUS_OK, NULL, 0, NULL,\n-\t\t\t\t0);\n+\t\tDEBUG(10,(\"FSCTL_CREATE_OR_GET_OBJECT_ID: called on FID[0x%04X]\\n\",fidnum));\n+\n+\t\tdata_count = 64;\n+\t\tpdata = nttrans_realloc(ppdata, data_count);\n+\t\tif (pdata == NULL) {\n+\t\t\treturn ERROR_NT(NT_STATUS_NO_MEMORY);\n+\t\t}\t\t\n+\t\tSINO_T_VAL(pdata,0,fsp->inode);\n+\t\tSDEV_T_VAL(pdata,8,fsp->dev);\n+\t\tmemcpy(pdata+16,create_volume_objectid(conn,objid),16);\n+\t\tSINO_T_VAL(pdata,32,fsp->inode);\n+\t\tSDEV_T_VAL(pdata,40,fsp->dev);\n+\t\tsend_nt_replies(outbuf, bufsize, NT_STATUS_OK, NULL, 0, pdata, data_count);\n \t\treturn -1;\n+\t}\n \n \tcase FSCTL_GET_REPARSE_POINT:\n \t\t/* pretend this fail - my winXP does it like this\n@@ -2295,9 +2309,7 @@\n \t\t */\n \n \t\tDEBUG(10,(\"FSCTL_GET_REPARSE_POINT: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(outbuf, bufsize, NT_STATUS_NOT_A_REPARSE_POINT,\n-\t\t\t\tNULL, 0, NULL, 0);\n-\t\treturn -1;\n+\t\treturn ERROR_NT(NT_STATUS_NOT_A_REPARSE_POINT);\n \n \tcase FSCTL_SET_REPARSE_POINT:\n \t\t/* pretend this fail - I'm assuming this because of the FSCTL_GET_REPARSE_POINT case.\n@@ -2305,9 +2317,7 @@\n \t\t */\n \n \t\tDEBUG(10,(\"FSCTL_SET_REPARSE_POINT: called on FID[0x%04X](but not implemented)\\n\",fidnum));\n-\t\tsend_nt_replies(outbuf, bufsize, NT_STATUS_NOT_A_REPARSE_POINT,\n-\t\t\t\tNULL, 0, NULL, 0);\n-\t\treturn -1;\n+\t\treturn ERROR_NT(NT_STATUS_NOT_A_REPARSE_POINT);\n \t\t\t\n \tcase FSCTL_GET_SHADOW_COPY_DATA: /* don't know if this name is right...*/\n \t{\n\n"}