{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23639 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_26/source/lib", "body": "Author: obnox\nDate: 2007-06-27 22:10:25 +0000 (Wed, 27 Jun 2007)\nNew Revision: 23639\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23639\n\nLog:\nEliminate trailing whitespaces in the new tdb_validate functions...\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0/source/lib/util_tdb.c\n   branches/SAMBA_3_0_26/source/lib/util_tdb.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/util_tdb.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/util_tdb.c\t2007-06-27 20:32:35 UTC (rev 23638)\n+++ branches/SAMBA_3_0/source/lib/util_tdb.c\t2007-06-27 22:10:25 UTC (rev 23639)\n@@ -990,7 +990,7 @@\n  * internal validation function, executed by the child.  \n  */\n static int tdb_validate_child(const char *tdb_path,\n-\t\t\t      tdb_validate_data_func validate_fn, \n+\t\t\t      tdb_validate_data_func validate_fn,\n \t\t\t      int pfd)\n {\n \tint ret = -1;\n@@ -998,7 +998,7 @@\n \tint num_entries = 0;\n \tTDB_CONTEXT *tdb = NULL;\n \tstruct tdb_validation_status v_status;\n-\t\n+\n \tv_status.tdb_error = False;\n \tv_status.bad_freelist = False;\n \tv_status.bad_entry = False;\n@@ -1050,7 +1050,7 @@\n \tif (tdb) {\n \t\tif (ret == 0) {\n \t\t\ttdb_close(tdb);\n-\t\t} \n+\t\t}\n \t\telse if (tfd != -1) {\n \t\t\tclose(tfd);\n \t\t}\n@@ -1072,10 +1072,10 @@\n \tint pipe_fds[2];\n \tstruct tdb_validation_status v_status;\n \tint bytes_read = 0;\n-\t\n-\t/* fork and let the child do the validation. \n+\n+\t/* fork and let the child do the validation.\n \t * benefit: no need to twist signal handlers and panic functions.\n-\t * just let the child panic. we catch the signal. \n+\t * just let the child panic. we catch the signal.\n \t * communicate the extended status struct over a pipe. */\n \n \tif (pipe(pipe_fds) != 0) {\n@@ -1099,7 +1099,7 @@\n \n \t/* parent */\n \n-\tDEBUG(10, (\"tdb_validate: fork succeeded, child PID = %d\\n\", \n+\tDEBUG(10, (\"tdb_validate: fork succeeded, child PID = %d\\n\",\n \t\t   child_pid));\n \tclose(pipe_fds[1]); /* close writing fd */\n \n@@ -1151,7 +1151,6 @@\n \t\t\t     \"unexpected PID.\");\n \t}\n \n-\t\t\n \tDEBUG(10, (\"tdb_validate: validating child returned.\\n\"));\n \tif (WIFEXITED(child_status)) {\n \t\tDEBUG(10, (\"tdb_validate: child exited, code %d.\\n\",\n\nModified: branches/SAMBA_3_0_26/source/lib/util_tdb.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/util_tdb.c\t2007-06-27 20:32:35 UTC (rev 23638)\n+++ branches/SAMBA_3_0_26/source/lib/util_tdb.c\t2007-06-27 22:10:25 UTC (rev 23639)\n@@ -990,7 +990,7 @@\n  * internal validation function, executed by the child.  \n  */\n static int tdb_validate_child(const char *tdb_path,\n-\t\t\t      tdb_validate_data_func validate_fn, \n+\t\t\t      tdb_validate_data_func validate_fn,\n \t\t\t      int pfd)\n {\n \tint ret = -1;\n@@ -998,7 +998,7 @@\n \tint num_entries = 0;\n \tTDB_CONTEXT *tdb = NULL;\n \tstruct tdb_validation_status v_status;\n-\t\n+\n \tv_status.tdb_error = False;\n \tv_status.bad_freelist = False;\n \tv_status.bad_entry = False;\n@@ -1050,7 +1050,7 @@\n \tif (tdb) {\n \t\tif (ret == 0) {\n \t\t\ttdb_close(tdb);\n-\t\t} \n+\t\t}\n \t\telse if (tfd != -1) {\n \t\t\tclose(tfd);\n \t\t}\n@@ -1072,10 +1072,10 @@\n \tint pipe_fds[2];\n \tstruct tdb_validation_status v_status;\n \tint bytes_read = 0;\n-\t\n-\t/* fork and let the child do the validation. \n+\n+\t/* fork and let the child do the validation.\n \t * benefit: no need to twist signal handlers and panic functions.\n-\t * just let the child panic. we catch the signal. \n+\t * just let the child panic. we catch the signal.\n \t * communicate the extended status struct over a pipe. */\n \n \tif (pipe(pipe_fds) != 0) {\n@@ -1099,7 +1099,7 @@\n \n \t/* parent */\n \n-\tDEBUG(10, (\"tdb_validate: fork succeeded, child PID = %d\\n\", \n+\tDEBUG(10, (\"tdb_validate: fork succeeded, child PID = %d\\n\",\n \t\t   child_pid));\n \tclose(pipe_fds[1]); /* close writing fd */\n \n@@ -1151,7 +1151,6 @@\n \t\t\t     \"unexpected PID.\");\n \t}\n \n-\t\t\n \tDEBUG(10, (\"tdb_validate: validating child returned.\\n\"));\n \tif (WIFEXITED(child_status)) {\n \t\tDEBUG(10, (\"tdb_validate: child exited, code %d.\\n\",\n\n"}