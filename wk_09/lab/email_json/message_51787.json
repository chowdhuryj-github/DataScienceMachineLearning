{"category": "ham", "to_address": "R-help <r-help@stat.math.ethz.ch>", "from_address": "=?ISO-8859-1?Q?S=E9bastien?= <pomchip@free.fr>", "subject": "[R] Overlaying lattice graphs (continued)", "body": "Dear R Users,\n\nI recently posted an email on this list  about the use of data.frame and \noverlaying multiple plots. Deepayan kindly indicated to me the \npanel.superposition command which worked perfectly in the context of the \nexample I gave.\nI'd like to go a little bit further on this topic using a more complex \ndataset structure (actually the one I want to work on).\n\n >mydata\n      Plot    Model    Individuals    Time        Observed          \nPredicted\n1    1        A           1                  0.05         \n10                    10.2\n2    1        A           1                  0.10         \n20                    19.5\netc...\n10  1        B           1                  0.05         10            \n         9.8\n11  1        B           1                  0.10         20            \n         20.2\netc...\n\nThere are p \"levels\" in mydata$Plot, m in mydata$Model, n in \nmydata$Individuals and t in mydata$Time (Note that I probably use the \nword levels improperly as all columns are not factors). Basically, this \ndataset summarizes the t measurements obtained in n individuals as well \nas the predicted values from m different modeling approaches (applied to \nall individuals). Therefore, the observations are repeated m times in \nthe Observed columns, while the predictions appears only once for a \ngiven model an a given individual.\n\nWhat I want to write is a R batch file creating a Trellis graph, where \neach panel corresponds to one individual and contains the observations \n(as scatterplot) plus the predicted values for all models (as lines of \ndifferent colors)... $Plot is just a token: it might be used to not \noverload graphs in case there are too many tested models. The fun part \nis that the values of p, m, n and t might vary from one dataset to the \nother, so everything has to be coded dynamically.\n\nFor the plotting part I was thinking about having a loop in my code \ncontaining something like that:\n\nfor (i in 1:nlevels(mydata$Model)) {\n\nsubdata<-subset(mydata,mydata$Model=level(mydata$Model)[i])\nxyplot(subset(Observed + Predicted ~ Time | Individuals, data = \nsubdata)       #plus additionnal formatting code\n\n}\n\nUnfortunately, this code simply creates a new Trellis plot instead of \nadding the model one by one on the panels. Any idea or link to a useful \ncommand will wellcome.\n\nSebastien\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}