{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Andreas Moroder <andreas.moroder@sb-brixen.it>", "subject": "Encryption", "body": "Hello,\n\nI have to calculate a hash of username and password in perl.\nThe calculation should be done this way:\n\n1. Concatenate the username and the password to produce a plaintext string;\n2. Convert the plaintext string to uppercase characters;\n3. Convert the plaintext string to multi-byte storage format; ASCII \ncharacters have the\nhigh byte set to 0x00;\n4. Encrypt the plaintext string (padded with 0s if necessary to the next \neven block length)\nusing the DES algorithm in cipher block chaining (CBC) mode with a fixed \nkey value of\n0x0090687678ABCDEF;\n5. Encrypt the plaintext string again with DES-CBC, but using the last \nblock of the output\nof the previous step (ignoring parity bits) as the encryption key. The \nlast block of the\noutput is converted into a printable string to produce the password hash \nvalue.\n\nIs it possible to implement this in perl ?\nIs the Crypt-DES Module on CPAN the right module and how can I convert \nstandard string to Multibyte storage ( UTF-16 ? )\nAn example ist\n\nUser: example\npassword: test\nhash: BDA63848A8C31752\n\nI don't need this script to hack anything, we would like to modify oru \noracle paasword from a webfrontend.\n\nThanks\nAndreas\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}