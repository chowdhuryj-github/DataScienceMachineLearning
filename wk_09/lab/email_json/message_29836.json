{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 299: AIX needs sin_len field for bind() in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 299\nrevision-id: tridge@samba.org-20070514234252-lkr0iynk4eys7ff1\nparent: tridge@samba.org-20070514040133-2ktprtc6t6161yy5\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-05-15 09:42:52 +1000\nmessage:\n  AIX needs sin_len field for bind()\nmodified:\n  configure.ac                   configure.ac-20061117234101-o3qt14umlg9en8z0-10\n  tcp/tcp_connect.c              tcp_connect.c-20061128004937-x70q1cu5xzg5g2tm-1\n=== modified file 'configure.ac'\n--- a/configure.ac\t2007-05-05 07:18:06 +0000\n+++ b/configure.ac\t2007-05-14 23:42:52 +0000\n@@ -30,6 +30,16 @@\n m4_include(libevents.m4)\n m4_include(ib/config.m4)\n \n+AC_CACHE_CHECK([for sin_len in sock],ctdb_cv_HAVE_SOCK_SIN_LEN,[\n+AC_TRY_COMPILE([#include \n+#include \n+#include ],\n+[struct sockaddr_in sock; sock.sin_len = sizeof(sock);],\n+ctdb_cv_HAVE_SOCK_SIN_LEN=yes,ctdb_cv_HAVE_SOCK_SIN_LEN=no)])\n+if test x\"$ctdb_cv_HAVE_SOCK_SIN_LEN\" = x\"yes\"; then\n+    AC_DEFINE(HAVE_SOCK_SIN_LEN,1,[Whether the sockaddr_in struct has a sin_len property])\n+fi\n+\n AC_SUBST(EXTRA_OBJ)\n \n AC_OUTPUT(Makefile)\n\n=== modified file 'tcp/tcp_connect.c'\n--- a/tcp/tcp_connect.c\t2007-05-01 03:25:02 +0000\n+++ b/tcp/tcp_connect.c\t2007-05-14 23:42:52 +0000\n@@ -125,6 +125,10 @@\n \n \tset_nonblocking(tnode->fd);\n \n+\tZERO_STRUCT(sock_out);\n+#ifdef HAVE_SOCK_SIN_LEN\n+\tsock_out.sin_len = sizeof(sock_out);\n+#endif\n \tif (ctdb_tcp_get_address(ctdb, node->address.address, &sock_out.sin_addr) != 0) {\n \t\treturn;\n \t}\n@@ -138,6 +142,10 @@\n \t * the remote side is actually routable in case CTDB traffic will run on\n \t * a dedicated non-routeable network.\n \t */\n+\tZERO_STRUCT(sock_in);\n+#ifdef HAVE_SOCK_SIN_LEN\n+\tsock_in.sin_len = sizeof(sock_in);\n+#endif\n \tif (ctdb_tcp_get_address(ctdb, ctdb->address.address, &sock_in.sin_addr) != 0) {\n \t\treturn;\n \t}\n@@ -239,6 +247,10 @@\n \t}\n \n \tfor (i=0;inum_nodes;i++) {\n+\t\tZERO_STRUCT(sock);\n+#ifdef HAVE_SOCK_SIN_LEN\n+\t\tsock.sin_len = sizeof(sock);\n+#endif\n \t\tsock.sin_port = htons(ctdb->nodes[i]->address.port);\n \t\tsock.sin_family = PF_INET;\n \t\tif (ctdb_tcp_get_address(ctdb, ctdb->nodes[i]->address.address, \n@@ -309,6 +321,10 @@\n \t\treturn ctdb_tcp_listen_automatic(ctdb);\n \t}\n \n+\tZERO_STRUCT(sock);\n+#ifdef HAVE_SOCK_SIN_LEN\n+\tsock.sin_len = sizeof(sock);\n+#endif\n \tsock.sin_port = htons(ctdb->address.port);\n \tsock.sin_family = PF_INET;\n \t\n\n"}