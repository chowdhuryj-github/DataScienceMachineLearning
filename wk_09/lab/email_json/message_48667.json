{"category": "ham", "to_address": "r-help@stat.math.ethz.ch, \"Shemyakin, Arkady\" <A9SHEMYAKIN@stthomas.edu>", "from_address": "Jason Q McClintic <jqmcclintic@stthomas.edu>", "subject": "[R] A question about logical controls and function arguements", "body": "Dear R-help subscribers,\n\nI'm trying to write a function to generate data simulating the image\ncreated by a point radiation source in a plane on a screen where there\nis filter with a single circular aperture in it between the source and\nthe screen.\n\nFollowing some guides (including Intro to R and some I found online) and\nexamples I have specified the function (full code below question) with\nseveral arguments with the form:\n\noption=c(\"option1\",\"option2\")\n\nFor instance, I want filter to either be \"FALSE\" to tell the function\nthere is no filter or an ordered triplet describing the location and\nradius of the area radiation is not blocked by the filter. There are\nseveral others along similar lines.\n\nWhen I source the function into R, it parses fine, but when attempting\nto run it with\n\ndata.spect<-spect.data(source.p=\"r\",filter=c(0,0,1),file.out=\"FALSE\")\n\nthe following warning is returned:\n\nWarning messages:\n1: the condition has length > 1 and only the first element will be used\nin: if (filter == \"FALSE\") {\n2: the condition has length > 1 and only the first element will be used\nin: if (filter == \"FALSE\") {\n\nThe code this is referencing is about 1/3 from the bottom of the function.\n\nI'm not sure how to correct this. I tried ifelse in one case and it\ndoesn't work at all. Searching the archives for \"function arguments\"\ndidn't yield anything about the kind of arguments that are causing the\ntrouble.\n\nI also want to get the matrix of generated data out, and have tried\ndata.spect$final.sample (following an example I found online), but it\nreturns null. I also attempted to use data.spect$initial.sample, but\nthis returned null as well.\n\nI'm still very new to writing my own functions, and any and all help\nwould be appreciated.\n\nThere are notes about what different options are supposed to do at the\nend of the appended code.\n\nThanks in advance,\n\nJason Q McClintic\n--\nJason Q McClintic\njqmcclintic@stthomas.edu\nmccl0219@tc.umn.edu\n\nspect.data<-function(num.points=50,fixed=FALSE,source.p=c(\"r\",\"c(0,0)\"),\n   source.mean=0,source.sd=1,filter=c(\"FALSE\",\"c(0,0,1)\"),\n   heights=c(0.5,0.5),\n   file.out=c(\"FALSE\",\"/home/jqmcclintic/Desktop/spect.data\")){\n\t##Determine Start Point\n\tif (source.p==\"r\")\n{source<-c(rnorm(1,source.mean,source.sd),rnorm(1,source.mean,source.sd))}\nelse {source<-source.p}\n\tcat(\"The location of the source is: \",source,\"\\n\")\n\t##Generate the data\n\tremainder<-num.points\n\tinitial.sample<-c(1,1)\n\t##finds intersection points with the screen\n\t\tintersect.screen.at<-function(x,h){\n\t\t\tt<-h[1]/(2*cos(x))\n\t\t\tx.intercept<-t*sin(x[,2])*cos(x[,1])\n\t\t\ty.intercept<-t*sin(x[,2])*sin(x[,1])\n\t\t}\n\t##finds intersection points with the collecting plate\n\t\tintersect.plate.at<-function(x,h){\n\t\t\tt<-h[2]/(2*cos(x))\n\t\t\tx.intercept<-t*sin(x[,2])*cos(x[,1])\n\t\t\ty.intercept<-t*sin(x[,2])*sin(x[,1])\n\t\t}\n\t##determines if the intersection point is inside or outside the hole in\nthe screen. x is the matrix of intersection points and s is the location\nand radius of the hole in the screen. 1 for yes, 0 for no.\n\t\tpasses.through<-function(x,s){\n\t\t\tdistance<-sqrt(((x[,1]-s[1])^2)+((x[,2]-s[2])^2))\n\t\t\tthrough<-ifelse(distance0){\n\t\t##Generate n random vectors uniformly distributed over S2\n\t\ttheta<-runif(remainder,0,6.2831853)\n\t\tphi<-runif(remainder,0,1.5707963)\n\t\ttheta.phi<-cbind(theta,phi)\n\t\tinitial.sample<-rbind(initial.sample,theta.phi)\n\t\t##Call intersect.screen.at\n\t\tintersects.screen<-intersect.screen.at(initial.sample,heights)\n\t\t##Call intersect.plate.at\n\t\tintersects.plate<-if(filter==\"FALSE\")\n{intersect.screen.at(initial.sample,heights)} else {\n\t\t\tintersect.plate.at(initial.sample,heights)\n\t\t}\n\t\t##Does it intersect inside or outside the hole?\n\t\nintersect.hole<-if(filter==\"FALSE\"){array(1,dim=length(initial.sample))}\nelse{passes.through(intersects.screen,filter)}\n\t\t##Remove points that do not pass throught the hole. By design, if\nthere is no filter, all pass through the hole.\n\t\tinitial.sample<-cbind(initial.sample,intersect.hole)\n\t\tinitial.sample<-subset(initial.sample,initial.sample[,3]==1)\n\t\t##Reset remainder\n\t\tremainder<-if(fixed==\"FALSE\") {0} else {\n\t\t\tnum.points-length(initial.sample)\n\t\t}\n\t}\n\twrite(initial.sample)\n\t##remove the top row of the initial sample since it is non-random.\n\tfinal.sample<-initial.sample[-1,]\n\t##print the final sample to a csv file for archival purposes\n\tif(file.out!=\"FALSE\"){write.csv(final.sample,file=file.out);cat(\"The\nlocation of the data is:\",file.out,\"\\n\")} else{cat(\"No csv file\nrequested\",\"\\n\")}\n}\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}