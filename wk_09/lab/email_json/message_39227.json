{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23252 - in branches/SAMBA_3_0/source/nsswitch: .", "body": "Author: obnox\nDate: 2007-05-30 22:04:42 +0000 (Wed, 30 May 2007)\nNew Revision: 23252\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23252\n\nLog:\nComplete the reworking of the ads lookup_groupmem function \nstarted in r23070, r23072, r23073, r23078, r23081 and r23082:\n\nAfter retrieving the list of sids with the extended dn\nldap query, instead of passing all sids to the lsa_lookup_sids\ncall, now while extracting the sids from the extended dn member \nentries, we first try to lookup the sid from cache and only pass \nthe sids that were not in cache to the lsa_lookup_sids call.\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-05-30 21:55:49 UTC (rev 23251)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-05-30 22:04:42 UTC (rev 23252)\n@@ -907,9 +907,13 @@\n \tint i;\n \tsize_t num_members = 0;\n \tads_control args;\n-\tchar **domains = NULL;     /* only needed for rpccli_lsa_lookup_sids */\n         struct rpc_pipe_client *cli;\n         POLICY_HND lsa_policy;\n+\tDOM_SID *sid_mem_nocache = NULL;\n+\tchar **names_nocache = NULL;\n+\tuint32 *name_types_nocache = NULL;\n+\tchar **domains_nocache = NULL;     /* only needed for rpccli_lsa_lookup_sids */\n+\tuint32 num_nocache = 0;\n \n \n \tDEBUG(10,(\"ads: lookup_groupmem %s sid=%s\\n\", domain->name, \n@@ -957,74 +961,115 @@\n \t\tgoto done;\n \t} \n \t\n-\t(*sid_mem) = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_members);\n-\tif ((num_members != 0) && \n-\t    ((members == NULL) || (*sid_mem == NULL))) { \n-\t\tDEBUG(1, (\"talloc failed\\n\"));\n-\t\tstatus = NT_STATUS_NO_MEMORY;\n-\t\tgoto done;\n-\t}\n-\n-\tfor (i=0; i 0) {\n+\n+\t\tstatus = cm_connect_lsa(domain, mem_ctx, &cli, &lsa_policy);\n+\n+\t\tif (!NT_STATUS_IS_OK(status)) {\n+\t\t\tgoto done;\n+\t\t}\n+\n+\t\tstatus = rpccli_lsa_lookup_sids_all(cli, mem_ctx, \n+\t\t\t\t\t\t    &lsa_policy,\n+\t\t\t\t\t\t    num_nocache, \n+\t\t\t\t\t\t    sid_mem_nocache, \n+\t\t\t\t\t\t    &domains_nocache, \n+\t\t\t\t\t\t    &names_nocache, \n+\t\t\t\t\t\t    &name_types_nocache);\n+\n+\t\tif (NT_STATUS_IS_OK(status) ||\n+\t\t    NT_STATUS_EQUAL(status, STATUS_SOME_UNMAPPED)) \n+\t\t{\n+\t\t\t/* Copy the entries over from the \"_nocache\" arrays \n+\t\t\t * to the result arrays, skipping the gaps the \n+\t\t\t * lookup_sids call left. */\n+\t\t\t*num_names = 0;\n+\t\t\tfor (i=0; i < num_nocache; i++) {\n+\t\t\t\tif (((names_nocache)[i] != NULL) && \n+\t\t\t\t    ((name_types_nocache)[i] != SID_NAME_UNKNOWN)) \n+\t\t\t\t{\n+\t\t\t\t\tsid_copy(&(*sid_mem)[*num_names],\n+\t\t\t\t\t\t &sid_mem_nocache[i]);\n+\t\t\t\t\t(*names)[*num_names] = names_nocache[i];\n+\t\t\t\t\t(*name_types)[*num_names] = name_types_nocache[i];\n+\t\t\t\t\t(*num_names)++;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\telse if (NT_STATUS_EQUAL(status, NT_STATUS_NONE_MAPPED)) {\n+\t\t\tDEBUG(10, (\"lookup_groupmem: lsa_lookup_sids could \"\n+\t\t\t\t   \"not map any SIDs at all.\\n\"));\n+\t\t\t/* Don't handle this as an error here.\n+\t\t\t * There is nothing left to do with respect to the \n+\t\t\t * overall result... */\n+\t\t}\n+\t\telse if (!NT_STATUS_IS_OK(status)) {\n+\t\t\tDEBUG(10, (\"lookup_groupmem: Error looking up %d \"\n+\t\t\t\t   \"sids via rpc_lsa_lookup_sids: %s\\n\",\n+\t\t\t\t   num_members, nt_errstr(status)));\n+\t\t\tgoto done;\n+\t\t}\n \t}\n-\telse if (!NT_STATUS_IS_OK(status)) {\n-\t\tDEBUG(10, (\"lookup_groupmem: Error looking up %d \"\n-\t\t\t   \"sids via rpc_lsa_lookup_sids: %s\\n\",\n-\t\t\t   num_members, nt_errstr(status)));\n-\t\tgoto done;\n-\t}\n-\t\n+\n \tstatus = NT_STATUS_OK;\n \tDEBUG(3,(\"ads lookup_groupmem for sid=%s succeeded\\n\",\n \t\t sid_string_static(group_sid)));\n@@ -1034,6 +1079,12 @@\n \tif (res) \n \t\tads_msgfree(ads, res);\n \n+\t/* free intermediate lists. - a temp talloc ctx might be better. */\n+\tTALLOC_FREE(sid_mem_nocache);\n+\tTALLOC_FREE(names_nocache);\n+\tTALLOC_FREE(name_types_nocache);\n+\tTALLOC_FREE(domains_nocache);\n+\n \treturn status;\n }\n \n\n"}