{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Seanie <seanie@wdcc.org.uk>", "subject": "Re: cat (.sh) in Perl", "body": "John W. Krahn wrote:\n> > Your syntax for the open() statements is a bit dodgy too :-)\n> Perl defines the syntax so you must mean something else?  :-)\n\nAs in \"too much unnecessary typing and commas and such, which don't really \nadd clarity\", rather than \"incorrect\"\n\n> You should also include the $! or $^E variable in the error message so you\n> know *why* it failed.\n\nYes yes. I was making the point that file operations should be tested and \nthrow errors when they barf. Which the OP wasn't doing.\n\n> > for my $infile (qw|m.top.html m.mid.html m.arc.html m.bot.html|){\n> >   die \"$infile not found\" unless -r \"$root/$infile\"; # or use next to\n> > skip it\n>\n> $infile could exist and not be readable so the message \"$infile not found\"\n> does not accurately describe the problem\n\nOk, granted. s/found/readable/\n\n> and if you are logged in as root then the file is readable reguardless.  \nUnless it doesn't exist. What's your point?\n\n> Also you have a race condition \n> where the file could be made unreadable between that statement and the\n> next one.\n\nAnd could be deleted entirely before (or during) the subsequent read by \nanother process. Still not sure of your point. I didn't think the OP wanted \na lecture about file locking.\n\n> Except that you are saying that 'm.top.html' is a Perl program that perl\n> should compile and run (which will probably produce a *lot* of error\n> messages.)\n\nOK, I missed a pair of single quotes after the -pe. I'll give you that one.\n\n-- \nSeanie@wdcc.org.uk [pgp: 8A8FA6DE]\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}