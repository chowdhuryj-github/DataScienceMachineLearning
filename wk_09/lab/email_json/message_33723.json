{"category": "ham", "to_address": "Robert <jsubei@yahoo.fr>", "from_address": "\"jim holtman\" <jholtman@gmail.com>", "subject": "Re: [R] sequentially process a list", "body": "This should do it for you.  It makes use of 'rle' to find the 'runs' of\nthresholds and then changes the values to the sequence numbers\n\n> x <- \"time  value\n+ 1        5\n+ 2        10\n+ 3      7\n+ 4      10\n+ 5      19\n+ 6      21\n+ 7      20\n+ 8      18\n+ 9      10\n+ 10      7\n+ 11      8\n+ 12      12\n+ 13      17\n+ 14      19\n+ 15      24\n+ 16      18\n+ 17      15\n+ 18      10\n+ 19      9\n+ \"\n> x <- read.table(textConnection(x), header=TRUE)\n> # find the 'runs' of thresholds\n> threshold <- rle(x$value >= 17)\n> # get offset of each group\n> offset <- cumsum(c(1,threshold$lengths))\n> # create sequence numbers for the groups\n> seqNum <- cumsum(threshold$value)\n> # compute the indices of where the thresholds are\n> x$group <- NA  # initialize the vector\n> # change the values for the groups\n> for (i in which(threshold$value)){\n+     x$group[seq(offset[i], length=threshold$length[i])] <- seqNum[i]\n+ }\n> # extract max for each group\n> x\n   time value group\n1     1     5    NA\n2     2    10    NA\n3     3     7    NA\n4     4    10    NA\n5     5    19     1\n6     6    21     1\n7     7    20     1\n8     8    18     1\n9     9    10    NA\n10   10     7    NA\n11   11     8    NA\n12   12    12    NA\n13   13    17     2\n14   14    19     2\n15   15    24     2\n16   16    18     2\n17   17    15    NA\n18   18    10    NA\n19   19     9    NA\n> tapply(x$value, x$group, max)\n 1  2\n21 24\n\n\n\nOn 5/21/07, Robert  wrote:\n>\n> Hi dear R users,\n>\n> I'm a R beginner and I have a basic question about sequential treatments\n> of lists.\n>\n> I have a time based (i.e. events are consecutive) list of values of a\n> biological property.\n>\n> Like :\n>\n> time  value\n> 1        5\n> 2        10\n> 3      7\n> 4      10\n> 5      19\n> 6      21\n> 7      20\n> 8      18\n> 9      10\n> 10      7\n> 11      8\n> 12      12\n> 13      17\n> 14      19\n> 15      24\n> 16      18\n> 17      15\n> 18      10\n> 19      9\n> [...]\n>\n>\n> And I have to define a threshold and to attach each event to his group,\n> i.e. values upper the threshold.\n>\n> Like, for a threshold value of 17\n>\n> time  value   group\n> 1        5       NA\n> 2        10      NA\n> 3      7      NA\n> 4      10      NA\n> 5      19      1\n> 6      21      1\n> 7      20      1\n> 8      18      1\n> 9      10      NA\n> 10      7      NA\n> 11      8      NA\n> 12      12      NA\n> 13      17      2\n> 14      19      2\n> 15      24      2\n> 16      18      2\n> 17      15      NA\n> 18      10      NA\n> 19      9      NA\n> [...]\n>\n>\n> The only solution that I have found is to do a sequentially read and write\n> :\n> for(i in 1:length(my_events_list))\n> {\n>    [...]\n> }\n>\n> But I very slow. Do you have another ideas ?\n>\n> And after I need to extract maximum values for each group\n> Like :\n> group        max_value\n> 1            21\n> 2            24\n> [...]\n>\n> and for each event which is part of a group to know if is't a ascending\n> phase or no.\n>\n>\n> Yes, lot of questions !! Sorry, but I think that the solution may be\n> unique.\n>\n> In advance, thank you a lot\n>\n> regards\n>\n> JS\n>\n>\n>\n>\n>\n>\n>\n>\n> _____________________________________________________________________________\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n\n-- \nJim Holtman\nCincinnati, OH\n+1 513 646 9390\n\nWhat is the problem you are trying to solve?\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}