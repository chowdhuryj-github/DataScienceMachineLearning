{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "Some Things I'd Like To Do With Pod", "body": "I have a feeling we've sorta assumed some use cases for whatever Pod\ndesign we're advocating, so I thought I'd write down what I'd like to\ndo with Pod. At this level, I don't care how it gets done, which model\nit uses, or anything else.\n\nThis isn't a fantasy wishlist of anything I think I might want. These\nare things that I've wanted for a couple years. I'm not trying to start\nan RFC process, but think about how to motivate some of the things we\nare debating. These are just use cases, not really feature requests:\n\n======Pull out the docs for a single method.in a class\n\nI want perldoc -f for modules. That works for perlfunc because there is\na simple structure to the file where all the =item represent a function\n(and similarly for perldoc -q and the perlfaq).\n\nI'm not thinking ahead to what the method docs would look like. If I\nhad this I'd be happy just to get plain text.\n\n======Know which class the Pod is in\n\nOne of the failings of Pod::Coverage right now is that it assumes that\nthere is only one class per file and the filename represents the class.\nThis means I can't use Pod::Coverage or Test::Pod::Coverage when Ihave\na design that doesn't do that (e.g. a convenience class that's private\nand only a screen long).\n\nI'd really like a Pod parser to know what class it is in, and which\nclass the documentation belongs to.\n\n=======Per class documentation, not per file documentation\n\nRelated to the one above, I'd like to have NAME, SYNOPSIS, etc. for\neach class, not just per file. Well, what I really want is the\nSmalltalk class and method browsers, but I know I'm not going to get\nthose. It's a major missing feature from my perlbrowser tool (on CPAN).\nPart of that means, though, that if I want that docs for Foo::Bar which\nlive in Foo.pm, then perldoc6 has to know how to find that class.\nThat's a much larger issue than just the Pod format.\n\nIf I put more than one class in a file, I'd like to be able to extract\nit's documentation separately. Of course, this leads to huger problems\nmaking it work, so I'm not holding my breath. It's more likely I'll\nhave to live with separate files :)\n\n========Private docs\n\nThere's documentation for module users, and there is documentation for\nmodule developers. I'd like to document the private methods too, but\nwithout something to tell perldoc6 that you want the secret docs, you\ndon't see them. The secret docs are for the people working inside the\ncode of the class (creators, maintainers, whatever), and those docs are\njust like the user docs in structure.\n\n"}