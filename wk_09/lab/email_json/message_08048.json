{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "larry@cvs.develooper.com", "subject": "[svn:perl6-synopsis] r14377 - doc/trunk/design/syn", "body": "Author: larry\nDate: Tue Apr 17 11:26:03 2007\nNew Revision: 14377\n\nModified:\n   doc/trunk/design/syn/S04.pod\n\nLog:\nNeglected to mention that unless also allows binding of its false parameter\n\n\nModified: doc/trunk/design/syn/S04.pod\n==============================================================================\n--- doc/trunk/design/syn/S04.pod\t(original)\n+++ doc/trunk/design/syn/S04.pod\tTue Apr 17 11:26:03 2007\n@@ -208,7 +208,8 @@\n within the closure you already know whether it evaluated to true\n or false.)  Binding within an C automatically binds the value\n tested by the previous C or C, which, while known to be\n-false, might nevertheless be an I value of false.\n+false, might nevertheless be an I value of false.  (By similar\n+reasoning, an C allows binding of a false parameter.)\n \n Conditional statement modifiers work as in Perl\u00a05.  So do the\n implicit conditionals implied by short-circuit operators.  Note though that\n\n"}