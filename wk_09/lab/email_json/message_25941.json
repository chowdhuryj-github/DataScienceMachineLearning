{"category": "ham", "to_address": "Alek Storm <alek.storm@gmail.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: [perl #42905] [PATCH] implement vtable overriding for PDD15,\n bugfix", "body": "Alek Storm wrote:\n> \n> Attached a patch to bring that in line with the \n> rest of the patch, and also to s/vtable function/vtable method/gi.  In \n> addition, a vtable method ISA method; it's just not returned by \n> 'find_method'.\n\nI actually changed every instance of 'vtable method' to 'vtable \nfunction' a few days ago to help clear up the confusion. (A vtable \nfunction does have an invocant 'self' but doesn't act as a method in any \nother way.) But, while I was adding the description of :vtable and \n:method to the PDD just now, I came up with a naming scheme that's even \nmore useful: 'vtable function' refers to a function pointer stored in \nthe vtable, 'vtable override' refers to a .sub defined in a PIR class to \noverride a vtable function.\n\nAllison\n\n"}