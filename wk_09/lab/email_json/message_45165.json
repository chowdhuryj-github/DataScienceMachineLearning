{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23392 - in\n\tbranches/SAMBA_3_0_26/source/registry: .", "body": "Author: obnox\nDate: 2007-06-08 21:48:09 +0000 (Fri, 08 Jun 2007)\nNew Revision: 23392\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23392\n\nLog:\nMerge r19841 from SAMBA_3_0.\n(Adapted to the later change in r22935.)\n\nwrap regdb_store_keys and regdb_store_values in tdb transactions\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/registry/reg_db.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/registry/reg_db.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/registry/reg_db.c\t2007-06-08 19:58:32 UTC (rev 23391)\n+++ branches/SAMBA_3_0_26/source/registry/reg_db.c\t2007-06-08 21:48:09 UTC (rev 23392)\n@@ -393,15 +393,20 @@\n {\n \tint num_subkeys, i;\n \tpstring path;\n-\tREGSUBKEY_CTR *subkeys, *old_subkeys;\n+\tREGSUBKEY_CTR *subkeys = NULL, *old_subkeys = NULL;\n \tchar *oldkeyname;\n \t\n+\tif ( tdb_transaction_start( tdb_reg ) == -1 ) {\n+\t\tDEBUG(0, (\"regdb_store_keys: tdb_transaction_start failed\\n\"));\n+\t\treturn False;\n+\t}\n+\n \t/* fetch a list of the old subkeys so we can determine if any were\n \t * deleted */\n \t\n \tif ( !(old_subkeys = TALLOC_ZERO_P( ctr, REGSUBKEY_CTR )) ) {\n \t\tDEBUG(0,(\"regdb_store_keys: talloc() failure!\\n\"));\n-\t\treturn False;\n+\t\tgoto fail;\n \t}\n \n \tregdb_fetch_keys( key, old_subkeys );\n@@ -411,7 +416,7 @@\n \tif ( !regdb_store_keys_internal( key, ctr ) ) {\n \t\tDEBUG(0,(\"regdb_store_keys: Failed to store new subkey list \"\n \t\t\t \"for parent [%s]\\n\", key ));\n-\t\treturn False;\n+\t\tgoto fail;\n \t}\n \t\n \t/* now delete removed keys */\n@@ -419,15 +424,30 @@\n \tnum_subkeys = regsubkey_ctr_numkeys( old_subkeys );\n \tfor ( i=0; i<num_subkeys; i++ ) {\n \t\toldkeyname = regsubkey_ctr_specific_key( old_subkeys, i );\n-\t\tif ( !regsubkey_ctr_key_exists( ctr, oldkeyname ) ) {\n-\t\t\tpstr_sprintf( path, \"%s%c%s\", key, '/', oldkeyname );\n-\t\t\tnormalize_reg_path( path );\n-\t\t\ttdb_delete_bystring( tdb_reg, path );\n-\t\t\tpstr_sprintf( path, \"%s/%s/%s\", VALUE_PREFIX, key,\n-\t\t\t\t      oldkeyname );\n-\t\t\tnormalize_reg_path( path );\n-\t\t\ttdb_delete_bystring( tdb_reg, path );\n+\n+\t\tif ( regsubkey_ctr_key_exists( ctr, oldkeyname ) ) {\n+\t\t\t/*\n+\t\t\t * It's still around, don't delete\n+\t\t\t */\n+\n+\t\t\tcontinue;\n \t\t}\n+\n+\t\tpstr_sprintf( path, \"%s/%s\", key, oldkeyname );\n+\t\tnormalize_reg_path( path );\n+\t\tif (tdb_delete_bystring( tdb_reg, path ) == -1) {\n+\t\t\tDEBUG(1, (\"Deleting %s failed\\n\", path));\n+\t\t\tgoto fail;\n+\t\t}\n+\t\t\n+\t\tpstr_sprintf( path, \"%s/%s/%s\", VALUE_PREFIX, key,\n+\t\t\t      oldkeyname );\n+\t\tnormalize_reg_path( path );\n+\n+\t\t/*\n+\t\t * Ignore errors here, we might have no values around\n+\t\t */\n+\t\ttdb_delete_bystring( tdb_reg, path );\n \t}\n \n \tTALLOC_FREE( old_subkeys );\n@@ -436,12 +456,12 @@\n \t\n \tnum_subkeys = regsubkey_ctr_numkeys( ctr );\n \tfor ( i=0; i<num_subkeys; i++ ) {\n-\t\tpstr_sprintf( path, \"%s%c%s\", key, '/',\n+\t\tpstr_sprintf( path, \"%s/%s\", key,\n \t\t\t      regsubkey_ctr_specific_key( ctr, i ) );\n \n \t\tif ( !(subkeys = TALLOC_ZERO_P( ctr, REGSUBKEY_CTR )) ) {\n \t\t\tDEBUG(0,(\"regdb_store_keys: talloc() failure!\\n\"));\n-\t\t\treturn False;\n+\t\t\tgoto fail;\n \t\t}\n \n \t\tif ( regdb_fetch_keys( path, subkeys ) == -1 ) {\n@@ -449,15 +469,29 @@\n \t\t\tif ( !regdb_store_keys_internal( path, subkeys ) ) {\n \t\t\t\tDEBUG(0,(\"regdb_store_keys: Failed to store \"\n \t\t\t\t\t \"new record for key [%s]\\n\", path ));\n-\t\t\t\tTALLOC_FREE( subkeys );\n-\t\t\t\treturn False;\n+\t\t\t\tgoto fail;\n \t\t\t}\n \t\t}\n \n \t\tTALLOC_FREE( subkeys );\n \t}\n-\t\n+\n+\tif (tdb_transaction_commit( tdb_reg ) == -1) {\n+\t\tDEBUG(0, (\"regdb_store_keys: Could not commit transaction\\n\"));\n+\t\treturn False;\n+\t}\n+\n \treturn True;\n+\n+ fail:\n+\tTALLOC_FREE( old_subkeys );\n+\tTALLOC_FREE( subkeys );\n+\n+\tif (tdb_transaction_cancel( tdb_reg ) == -1) {\n+\t\tsmb_panic(\"regdb_store_keys: tdb_transaction_cancel failed\\n\");\n+\t}\n+\n+\treturn False;\n }\n \n \n@@ -647,7 +681,7 @@\n \tpstr_sprintf( keystr, \"%s/%s\", VALUE_PREFIX, key );\n \tnormalize_reg_path( keystr );\n \t\n-\tret = tdb_store_bystring(tdb_reg, keystr, data, TDB_REPLACE);\n+\tret = tdb_trans_store_bystring(tdb_reg, keystr, data, TDB_REPLACE);\n \t\n \tSAFE_FREE( data.dptr );\n \t\n\n"}