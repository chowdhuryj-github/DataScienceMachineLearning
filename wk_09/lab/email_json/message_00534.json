{"category": "ham", "to_address": "r-help <r-help@stat.math.ethz.ch>", "from_address": "Shao <xshining@gmail.com>", "subject": "Re: [R] How to solve differential and integral equation using R?", "body": "Thanks,\nI have much to learn~~~\n\nShao chunxuan\n\n\n\n\n\n\nOn 4/9/07, gyadav@ccilindia.co.in  wrote:\n>\n>\n> i think 'odesolve' and MASS package may help you..... rest is below\n> >help.search(\"differential\")\n> >help.search(\"integration\")\n> HTH\n>\n>\n> >help.search(\"differential\")\n> Help files with alias or concept or title matching 'differential' using\n> fuzzy matching:\n>\n> distfacmap(adehabitat)           Compute distances to the different levels\n> of a factor map\n> Citrus(BSDA)                     Percent of peak bone density of different\n> aged children\n> Clean(BSDA)                      Residual contaminant following the use of\n> three different\n>                                  cleansing agents\n> Fabric(BSDA)                     Measures of softness of 10 different\n> clothing garments washed\n>                                  with and without a softener\n> Differential Equation System\n> pda.fd(fda)                      Principal Differential Analysis\n> summary.Lfd(fda)                 Summarize a Linear Differential Operator\n> Object\n> vec2Lfd(fda)                     Make a Linear Differential Operator\n> Object from a Vector\n> cellular(forward)                Cellular differentiation data\n> diffseries(fracdiff)             Fractionally Differenciate Data\n> test.between(hierfstat)          Tests the significance of the effect of\n> test.lev on genetic\n>                                  differentiation\n> test.between.within(hierfstat)   Tests the significance of the effect of\n> test.lev on genetic\n>                                  differentiation\n> test. g(hierfstat)                Tests the significance of the effect of\n> level on genetic\n>                                  differentiation\n> test.within(hierfstat)           Tests the significance of the effect of\n> inner.level on genetic\n>                                  differentiation within blocks defined by\n> outer.level\n> poster.plot(IDPmisc)             Convenient xyplot with Differently\n> Colored Margin and Plot Region\n> ebayes(limma)                    Empirical Bayes Statistics for\n> Differential Expression\n> nlmeODE(nlmeODE)                 Non-linear mixed-effects modelling in\n> nlme using differential\n>                                  equations\n> Dmean(nlreg)                     Differentiate the Mean Function of a\n> Nonlinear Model\n> Dvar(nlreg)                      Differentiate the Variance Function of a\n> Nonlinear Model\n> lsoda(odesolve)                  Solve System of ODE (ordinary\n> differential equation)s.\n> rk4(odesolve)                    Solve System of ODE (ordinary\n> differential equation)s by\n>                                  classical Runge-Kutta 4th order\n> integration.\n> deriv.polynomial(polynom)        Differentiate a Polynomial\n> sde.sim(sde)                     Simulation of Stochastic Differential\n> Equation\n> crossdist.psp(spatstat)          Pairwise distances between two different\n> line segment patterns\n> compare.method(varmixt)          Compare the different analysis methods\n> fdr.compare.method(varmixt)      Comparison of the different analysis\n> methods\n>\n>\n> >help.search(\"integration\")\n>\n> Help files with alias or concept or title matching 'integration' using\n> fuzzy matching:\n>\n> interaction(base)                Compute Factor Interactions\n> plot.bim.mcmc(bim)               Bayesian MCMC sequence plots for burnin\n> and iterations.\n> plot.nDesign(binGroup)           Plot iteration of nDesign\n> boa.getiter(boa)                 Extract Iterations\n> boa.iter(boa)                    Extract Iteration Numbers\n> boa.sortiter(boa)                Sort by Iteration Numbers\n> sintegral(Bolstad)               Numerical integration using Simpson's\n> Rule\n> modelIteration(BRugs)            Returns number of iterations\n> modelSetSeed(BRugs)              Seed of Random Number Generator\n> modelSetAP(BRugs)                Changing settings of updating algorithms\n> modelUpdate(BRugs)               Updating the model\n> samplesSample(BRugs)             Stored values\n> samplesStats(BRugs)              Calculate summary statistics\n> Angell(car)                      Moral Integration of American Cities\n> trapz(caTools)                   Trapezoid Rule Numerical Integration\n> E(distrEx)                       Generic Function for the Computation of\n> (Conditional)\n>                                  Expectations\n> GLIntegrate(distrEx)             Gauss-Legendre Quadrature\n> distrExIntegrate(distrEx)        Integration of One-Dimensional Functions\n> distrExOptions(distrEx)          Function to change the global variables\n> of the package 'distrEx'\n> Mofa(Ecdat)                      International Expansion of U.S. Mofa's\n> (majority-owned Foreign\n>                                  Affiliates in Fire (finance, Insurance\n> and Real Estate)\n> myintegrate(elliptic)            Complex integration\n> newton.rapheson(elliptic)        Newton Rapheson iteration to find roots\n> of equations\n> ilspline(fame)                   Linear Spline Integration\n> strongx(faraway)                 Strong interaction experiment data\n> itnumber(fpc)                    Number of regression fixed point cluster\n> iterations\n> cvLoss(gbev)                     Cross-validation of boosting iteration.\n> plotLoss(gbev)                   Plot loss function versus iteration.\n> ConvertMedUnits(gdata)           Convert medical measurements between\n> International Standard (SI)\n>                                  and US 'Conventional' Units.\n> MedUnits(gdata)                  Table of conversions between Intertional\n> Standard (SI) and US\n>                                  'Conventional' Units for common medical\n> measurements.\n> scan.glm.2D(GenABEL)             Scans regional data allowing for\n> gene-gene interaction using glm\n> MultHomog(gnm)                   Specify a Multiplicative Interaction with\n> Homogeneous Effects in\n>                                  a gnm Model Formula\n> Symm(gnm)                        Symmetric Interaction of Factors\n> Topo(gnm)                        Topological Interaction of Factors\n> interaction.positioned(HH)       interaction method for positioned\n> factors.\n> interaction2wt(HH)               Plot all main effects and twoway\n> interactions in a multifactor\n>                                  design\n> intxplot(HH)                     Interaction plot, with an option to print\n> standard error bars.\n> panel.interaction2wt(HH)         Plot all main effects and twoway\n> interactions in a multifactor\n>                                  design\n> ciapower(Hmisc)                  Power of Interaction Test for Exponential\n> Survival\n> safeIntegrate(HyperbolicDist)    Safe Integration of One-Dimensional\n> Functions\n> interaction.indices(kappalab)    The Shapley interaction indices\n> area(MASS)                       Adaptive Numerical Integration\n> intr.plot.2d(MBESS)              Plotting Conditional Regression Lines\n> with Interactions in Two\n>                                  Dimensions\n> intr.plot(MBESS)                 Regression Surface Containing Interaction\n> sigma.mle(merror)                Computes the ith iteration for computing\n> the squared imprecision\n>                                  estimates.\n> gam.outer(mgcv)                  Minimize GCV or UBRE score of a GAM using\n> 'outer' iteration\n> mice.mids(mice)                  Multivariate Imputation by Chained\n> Equations (Iteration Step)\n> nthOrderModel(mimR)              Create generating class with nth order\n> interactions for\n>                                  log-linear model\n> mc.irf(MSBVAR)                   Monte Carlo Integration / Simulation of\n> Impulse Response\n>                                  Functions\n> gqz(npmlreg)                     Gauss-Hermite integration points\n> rk4(odesolve)                    Solve System of ODE (ordinary\n> differential equation)s by\n>                                  classical Runge-Kutta 4th order\n> integration.\n> odfInsertPlot(odfWeave)          Write XML for image inseration\n> qb.epistasis(qtlbim)             Density Plots for Models Showing\n> Epistasis and GxE Interactions.\n> Interaction2wtRcmdr(Rcmdr.HH)    Rcmdr menu interface to interaction2wt\n> interaction2wt(Rcmdr.HH)         Plot all main effects and twoway\n> interactions in a multifactor\n>                                  design\n> panel.interaction2wt(Rcmdr.HH)   Plot all main effects and twoway\n> interactions in a multifactor\n>                                  design\n> imode(rggobi)                    Interaction mode\n> pmodes(rggobi)                   List available projection/interaction\n> modes\n> gdk-Cairo-Interaction(RGtk2)     Cairo Interaction\n> gdk-Pango-Interaction(RGtk2)     Pango Interaction\n> gtkMainIteration(RGtk2)          gtkMainIteration\n> gtkMainIterationDo(RGtk2)        gtkMainIterationDo\n> quadIntegr(rjacobi)              Quadrature Integration\n> mfit(Rlab)                       Computes main and interaction fitted\n> effects\n> telef(robustbase)                Number of International Calls from\n> Belgium\n> telef(rrcov)                     Number of International Calls from\n> Belgium\n> SIMS(SASmixed)                   Second International Mathematics Study\n> data\n> graphinter(SensoMineR)           Graphical display of the interaction\n> between two qualitative\n>                                  variables\n> interact(SensoMineR)             Estimation of interaction coefficients\n> E2.4(SenSrivastava)              International Car Ownership Data\n> integrate.xy(sfsmisc)            Cheap Numerical Integration through Data\n> points.\n> rotate(shapes)                   Internal function(s)\n> euler(simecol)                   Euler Integration\n> iteration(simecol)               Discrete Simulation\n> rk4(simecol)                     Runge-Kutta 4th order integration\n> SNPassoc-internal(SNPassoc)      Internal SNPstat functions\n> haplo.interaction(SNPassoc)      Haplotype interaction with a covariate\n> int(SNPassoc)                    Identify interaction term\n> interactionPval(SNPassoc)        Two-dimensional SNP analysis for\n> association studies\n> Ord(spatstat)                    Generic Ord Interaction model\n> OrdThresh(spatstat)              Ord's Interaction model\n> PairPiece(spatstat)              The Piecewise Constant Pairwise\n> Interaction Point Process Model\n> Pairwise(spatstat)               Generic Pairwise Interaction model\n> Saturated(spatstat)              Saturated Pairwise Interaction model\n> affinexy(spatstat)               Internal spatstat functions\n> ord.family(spatstat)             Ord Interaction Process Family\n> pairsat.family(spatstat)         Saturated Pairwise Interaction Point\n> Process Family\n> pairwise.family(spatstat)        Pairwise Interaction Process Family\n> reach(spatstat)                  Interaction Distance of a Point Process\n> diffinv(stats)                   Discrete Integration: Inverse of\n> Differencing\n> integrate(stats)                 Integration of One-Dimensional Functions\n> interaction.plot(stats)          Two-way Interaction Plot\n> nls.control(stats)               Control the Iterations in nls\n> po.test(tseries)                 Phillips-Ouliaris Cointegration Test\n> alphaols(urca)                   OLS regression of VECM weighting matrix\n> ca.po(urca)                      Phillips & Ouliaris Cointegration Test\n> cajolst(urca)                    Testing Cointegrating Rank with Level\n> Shift at Unknown time\n> cajools(urca)                    OLS regression of VECM\n> menu(utils)                      Menu Interaction Function\n> humpfit(vegan)                   No-interaction Model for Hump-backed\n> Species Richness vs. Biomass\n> dpss.taper(waveslim)             Calculating Thomson's Spectral\n> Multitapers by Inverse Iteration\n>\n>\n>\n> Type 'help(FOO, package = PKG)' to inspect entry 'FOO(PKG) TITLE'.\n>\n>\n> -gaurav\n> ============================================================================================\n> DISCLAIMER AND CONFIDENTIALITY CAUTION:\n>\n> This message and any attachments with it (the \"message\") are confidential\n> and intended\n> solely for the addressees. Unauthorized reading, copying, dissemination,\n> distribution or\n> disclosure either whole or partial, is prohibited. If you receive this\n> message in error,\n> please delete it and immediately notify the sender. Communicating through\n> email is not\n> secure and capable of interception, corruption and delays. Anyone\n> communicating with The\n> Clearing Corporation of India Limited (CCIL) by email accepts the risks\n> involved and their\n> consequences. The internet can not guarantee the integrity of this\n> message. CCIL shall\n> (will) not therefore be liable for the message if modified. The recipient\n> should check this\n> email and any attachments for the presence of viruses. CCIL accepts no\n> liability for any\n> damage caused by any virus transmitted by this email.\n>\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}