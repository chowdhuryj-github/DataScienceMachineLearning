{"category": "ham", "to_address": "Petr PIKAL <petr.pikal@precheza.cz>", "from_address": "Martin Maechler <maechler@stat.math.ethz.ch>", "subject": "Re: [R] Odp:  Odp:  outlying", "body": "[Note: CC'ing to R-SIG-robust, the \"Special Interest Group on\n       \t      \t \t         using Robust Statistics in R\" ]\n\n>>>>> \"PP\" == Petr PIKAL \n>>>>>     on Tue, 19 Jun 2007 12:55:37 +0200 writes:\n\n    PP> r-help-bounces@stat.math.ethz.ch napsal dne 19.06.2007\n    PP> 12:23:58:\n    >> Hi\n    >> \n    >> It often depends on your attitude to limits for outlying\n    >> observations.  Boxplot has some identifying routine for\n    >> selecting outlying points.\n    >> \n    >> Any procedure usually requires somebody to choose which\n    >> observation is outlying and why. You can use e.g. all\n    >> values which are beyond some threshold based on sd but\n    >> that holds only if distribution is normal.\n\nyes, and that's never true for the \"alternative\", i.e. for the\ncase where there *are* outliers.\n\n    >> set.seed(1) \n    >> x<-rnorm(x)\n\n    PP> Sorry, it shall be\n\n    PP> x <- rnorm(1000)\n\n    PP> ul <- mean(x) +3*sd(x)\n    PP> ll <- mean(x) -3*sd(x)\n    PP> beyond <- (x>ul)  | ( x  \n    PP> > x[beyond]\n    PP> [1] 3.810277\n\n    >> Regards Petr\n\nNo, really, do NOT do the above!\nIt only works with very few and relatively mild outliers.\n\nThere are much more robust alternatives.\nI show them for the simple example\n\nx <- c(1:10, 100)\n\n1) As mentioned by Petr,  use instead what  boxplot() does,\n  just type\n     boxplot.stats\n\n  and ``see what to do''.  This gives   Median +/- 1.5 * IQR :\n  i.e.,\n\n ## Boxplot's default rule\n str(bp.st <- boxplot.stats(x))\n bp.st$stats[ c(1,5) ]\n ## 1  10\n\n2) Use the recommendations of  Hampel (1985)\n\n   @ARTICLE{HamF85,\n     author = \t\"Hampel, F.\",\n     title = \t\"The breakdown points of the mean combined with some\n\t\t     rejection rules\", \n     journal = \t\"Technometrics\",\n     year = \t1985,\n     volume = \t27,\n     pages = \t\"95--107\",\n   }\n\n   \n   i.e.   Median +/- 5 * MAD   where MAD = is the *NON*-scaled MAD,\n   \t  \t       \t       \t     \t ~=  mad(*, constant=1)\n   i.e., in R\n\n   M <- median(x)\n   (FH.interval <- M +  c(-5, 5) * mad(x, center=M, const=1))\n   ## -9 21\n\n3) or something slightly more efficient (under approximate\n  normality of the non-outliers),\n  e.g., based on  MASS::rlm() :\n\n n <- length(x)\n s.rm <- summary(robm <- MASS::rlm(x ~ 1))\n s.rm\n\n (cc <- coef(s.rm))\n\n ## \"approximate\" robust degrees of freedom; this is a hack\n ##   which could well be correct\n ##   asymptotically {where the weights would be 0/1} :\n (df.resid <- sum(robm$w) - robm$rank)\n (Tcrit <- qt(0.995, df = df.resid))\n\n ## Std.error of mean ~= sqrt(1/n Var(X_i)) =  1/sqrt(n) sqrt(Var(X_i))\n cc[,1] + c(-1,1) * sqrt(n) * Tcrit * cc[,\"Std. Error\"]\n ##  -6.391201 18.555177\n\n\n---\nMartin Maechler, ETH Zurich\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}