{"category": "ham", "to_address": "<R-help@stat.math.ethz.ch>", "from_address": "\"Mike White\" <mikewhite.diu@btconnect.com>", "subject": "Re: [R] Fisher's r to z' transformation - help needed", "body": "Duncan and Peter\n[resent to include on R-Help]\nThank you for your help. It seems my data structure is not suitable for use\nwith Fisher's z' transformation.\n\nThe simulated data was intended to represent the outputs of several\ninstruments over time. Each row of dat represents the output from one\ninstrument on a particular day and each column represents a variable being\nmeasured.  Each instrument sensitivity is different and may be a small\noffset, so that the output is effectively transformed as ax +b where x is\nthe 'true' output and the values of a and b are not known.  Pearson's r was\ntherefore used to check the correlation between outputs.  I then want to\nplot the r values on a control chart and set an upper warning line and\naction line for a maximum acceptable  value for 1-r based on either\ncomparing each output with every other output or by comparing to a mean of\nthe outputs.  I was then hoping to use  Fisher's z' transformation to set\nthe usual warning and action lines based on a single sided normal\ndistribution.\n\nThe only alternative I can think of is to use the simulation to produce the\nr distribution and then use the quantile function to set limits based on\nprobability? I would be grateful for any help and advice you can provide.\n\nThanks\nMike White\n\n----- Original Message ----- \nFrom: \"Duncan Murdoch\" \nTo: \"Mike White\" \nCc: \nSent: Wednesday, May 23, 2007 1:38 PM\nSubject: Re: [R] Fisher's r to z' transformation - help needed\n\n\n> On 5/23/2007 7:40 AM, Mike White wrote:\n> > I am trying to use Fisher's z' transformation of the Pearson's r but the\n> > standard error does not appear to be correct.  I have simulated an\nexample\n> > using the R code below.  The z' data appears to have a reasonably normal\n> > distribution but the standard error given by the formula 1/sqrt(N-3)\n(from\n> > http://davidmlane.com/hyperstat/A98696.html) gives a different results\nthan\n> > sd(z).  Can anyone tell me where I am going wrong?\n>\n> Your simulation is very strange.  Why are you calculating the\n> correlation of data with its own mean?\n>\n> Here's a simpler simulation that seems to confirm the approximation is\n> reasonable:\n>\n>  > p <- 10\n>  > sdx <- 1\n>  > sdy <- 1\n>  > x <- matrix(rnorm(1000*p, sd=sdx), 1000, p)\n>  > y <- matrix(rnorm(1000*p, mean=x, sd=sdy), 1000, p)\n>\n> The true correlation is sdx/sqrt(sdx^2 + sdy^2), i.e. 0.71.\n>\n>  > r <- numeric(1000)\n>  > for (i in 1:1000) r[i] <- cor(x[i,], y[i,])\n>  > f <- 0.5*(log(1+r) - log(1-r))\n>  > sd(f)\n> [1] 0.3739086\n>  > 1/sqrt(p-3)\n> [1] 0.3779645\n>\n>  > p <- 5\n>  > x <- matrix(rnorm(1000*p, sd=sdx), 1000, p)\n>  > y <- matrix(rnorm(1000*p, mean=x, sd=sdy), 1000, p)\n>  > r <- numeric(1000)\n>  > for (i in 1:1000) r[i] <- cor(x[i,], y[i,])\n>  > f <- 0.5*(log(1+r) - log(1-r))\n>  > sd(f)\n> [1] 0.6571383\n>  > 1/sqrt(p-3)\n> [1] 0.7071068\n>\n> Duncan Murdoch\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}