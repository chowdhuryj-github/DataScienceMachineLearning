{"category": "ham", "to_address": "R-Help <r-help@stat.math.ethz.ch>", "from_address": "Ross Boylan <ross@biostat.ucsf.edu>", "subject": "[R] random numbers", "body": "Although this query was inspired by distributed random number\ngeneration, one of the questions (#2 below) is a single-machine issue.\n\nI call C++ code from R to generate simulated data.  I'm doing this on a\ncluster, and use rmpi and rsprng.  While rsprng randomizes R-level\nrandom numbers (e.g., from runif), it has no effect on the C code, which\nis completely SPRNG and MPI ignorant.\n\nCurrently I generate a seed to pass into the C code, using\nas.integer(runif(1, max=.Machine$integer.max)-.Machine$integer.max/2)\nIt seems to work.\n\nAny comments on this approach?  Here are some issues I see:\n\n1) The much simpler method of using the consecutive integers as seeds\nalso seemed to work.  This also has the advantage of repeatability.  I\navoided it because I was concerned it wouldn't be random enough.  Would\nconsecutive integers as in\n  parLapply(cluster, seq(nSimulations), function(i) myfunction(seed=i))\nbe sufficient?\n\nI suppose I could also generate all the random seeds on the master.\n\n2) This got me thinking about how to generate random integers that span\nthe whole range of 32 bit signed integers.  The method show above only\nspans half the range, since .Machine$integer.max = 2^31.  It also makes\nsome assumptions about the relation between the value in  .Machine\n$integer.max and the seed for random numbers.  Interestingly,\ninteger.max was 2^31 despite running on a 64 bit powerpc, albeit under\nthe mostly 32 bit OS-X (I think Leopard--not the current one; Darwin\nKernel 7.9.0).\n\nMy understanding is that random number generators internally produce 32\nbit integers, which then get converted into the desired distribution.\nI'm a little surprised there doesn't seem to be a way to get at them.\nOr is one supposed to do runif()*2^32-2^31?\n\n3) Vagaries of the underlying C++ random number generator could also\ncomplicate life.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}