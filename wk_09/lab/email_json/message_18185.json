{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "\"Matt Diephouse\" <mddiep@gmail.com>", "subject": "Re: [perl #42776] [BUG] is isa ok?", "body": "On 4/27/07, via RT Jerry Gay  wrote:\n> # New Ticket Created by  Jerry Gay\n> # Please include the string:  [perl #42776]\n> # in the subject line of all future correspondence about this issue.\n> # \n>\n>\n> there are two 'isa' ops, defined in src/ops/object.ops\n>\n> one takes a string param, and the other a pmc. it seems the string\n> variant is used frequently throughout the source and tests, but the\n> pmc variant is much less frequently used, and i haven't come across\n> any tests, either. it seems these two ops don't agree on return\n> value... which is problematic.\n>\n>   D:\\usr\\local\\parrot\\head>parrot -\n>   .sub main\n>       .local pmc class, obj\n>       class = new 'Class'\n>       obj = class.'new'()\n>       $I0 = isa obj, 'Object'\n>       print $I0\n>       .local pmc cl\n>       cl = new 'String'\n>       cl = 'Object'\n>       $I1 = isa obj, cl\n>       print $I1\n>   .end\n>   ^Z\n>   10\n>\n> why? iunno. but this is causing me problems when using 'isa_ok' in\n> 'Test/More.pir', since it uses the pmc variant.\n\nIt looks like the PMC variant is correct in this case, because Object\nisn't actually a class. There's a class flag for PMCs that sets\nwhether or not they are a class and Object doesn't have this set.\n\nWhen you call the PMC variant of isa, it calls Parrot_object_isa, and\nthat has this code:\n\n    /* if this is not a class */\n    if (!PObj_is_class_TEST(pmc)) {\n        pmc = VTABLE_get_class(interp, pmc);\n    }\n\nSo since Object isn't a class, it calls the get_class vtable and gets\nthe Class pmc. It then tests the object to see if it's a Class, which\nit obviously isn't.\n\nContrast this to the String isa variant. It calls the isa vtable\nfunction. Object inherits whatever default isa implementation is\nprovided. I'm not sure where that code is (it's a little harder to\nfind), but I'm guessing it just does a string comparison on the PMC\nnames without testing if the PMC is a class.\n\n-- \nMatt Diephouse\nhttp://matt.diephouse.com\n\n"}