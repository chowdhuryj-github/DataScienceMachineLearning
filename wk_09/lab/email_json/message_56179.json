{"category": "ham", "to_address": "\"Robert Wilkins\" <irishhacker@gmail.com>", "from_address": "\"Christophe Pallier\" <christophe@pallier.org>", "subject": "Re: [R] A really simple data manipulation example", "body": "For merging, selecting and aggregating, R is not too bad:\nI believe the following code is more or less equivalent to your Vilno\nexample, isn't?\n\n\n# to input data, replace the following two lline by 'read.table'\nlabresults <- data.frame(patient.id=gl(10,5), visit.num=gl(5,10),\nsodium=rnorm(50))\ndemo <- data.frame(patient.id=gl(10,1), gender=gl(2,5,labels=c('F','M')))\n\ndata <- merge(labresults, demo)\ndata <- subset(data, visit.num!=2)\nwith(data,\n     aggregate(sodium, list(gender=gender), mean)\n     )\n\n\nIf the data sets are very large, then doing merges/selection/aggregation\noutside of R can be a good idea.\n\n\nChristophe\n\nOn 6/27/07, Robert Wilkins  wrote:\n>\n> In response to those who asked for a better explanation of what the\n> Vilno software does, here's a simple example that gives some idea of\n> what it does.\n>\n> LABRESULTS is a dataset with multiple rows per patient , with lab\n> sodium measurements. It has columns: PATIENT_ID, VISIT_NUM, and\n> SODIUM.\n>\n> DEMO is a dataset with one row per patient, with demographic data.\n> It has columns: PATIENT_ID, GENDER.\n>\n> Here's a simple example, the following paragraph of code is a\n> data processing function (dpf) :\n>\n>\n> inlist LABRESULTS DEMO ;\n> mergeby PATIENT_ID ;\n> if (SODIUM == -9) SODIUM = NULL ;\n> if (VISIT_NUM != 2) deleterow ;\n> select AVERAGE_SODIUM = avg(SODIUM) by GENDER ;\n> sendoff(RESULTS_DATASET)  GENDER AVERAGE_SODIUM ;\n> turnoff;     // just means end-of-paragraph , version 1.0 won't need this.\n>\n> Can you guess what it does? The lab result rows are merged with the\n> demographic rows, just to get the gender information merged in.\n> Obviously, they are merged by patient. The code -9 is used to denote\n> \"missing\", so convert that to NULL. I'm about to take a statistic for\n> visit 2, so rows with visit 0 or 1 must be deleted. I'm assuming, for\n> visit 2, each patient has at most one row. Now, for each sex group,\n> take the average sodium level. After the select statement, I have just\n> two rows, for male and female, with the average sodium level in the\n> AVERAGE_SODIUM column. Now the sendoff statement just stores the\n> current data table into a datafile, called RESULTS_DATASET.\n>\n> So you have a sequence of data tables, each calculation reading in the\n> current table , and leaving a new data table for the next calculation.\n>\n> So you have input datasets, a bunch of intermediate calculations, and\n> one or more output datasets. Pretty simple idea.\n>\n> *****************************************\n>\n> Some caveats:\n>\n> LABRESULTS and DEMO are binary datasets. The asciitobinary and\n> binarytoascii statements are used to convert between binary datasets\n> and comma-separated ascii data files. (You can use any delimiter:\n> comma, vertical bar , etc). An asciitobinary statement is typically\n> just two lines of code.\n>\n> The dpf begins with the inlist statement , and , for the moment ,\n> needs \"turnoff ;\" as the last line. Version 1.0 won't require the use\n> of \"turnoff;\", but version 0.85 does. It only means this paragraph of\n> code ends here ( a program can , of course , contain many paragraphs:\n> data processing functions, print statements, asciitobinary statements,\n> etc.).\n>\n> If you've worked with lab data, you know lab data does not look so\n> simplistic. I need a simple example.\n>\n> Vilno has a lot of functionality, many-to-many joins, adding columns,\n> firstrow() and lastrow() flags, and so forth. A fair amount of complex\n> data manipulations have already been tested with test programs ( in\n> the tarball ). Of course a simple example cannot show you that, it's\n> just a small taste.\n>\n> *********************************************\n>\n> If you've never used SPSS or SAS before, you won't care, but this\n> programming language falls in the same family as the SPSS and SAS\n> programming languages. All three programming languages have a fair\n> amount in common, but are quite different from the S programming\n> language. The vilno data processing function can replace the SAS\n> datastep. (It can also replace PROC TRANSPOSE and much of PROC MEANS,\n> except standard deviation calculations still need to be included in\n> the select statement).\n>\n> ********************************************\n>\n> I hope that helps.\n>\n> http://code.google.com/p/vilno\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n\n-- \nChristophe Pallier (http://www.pallier.org)\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}