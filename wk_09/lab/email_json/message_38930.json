{"category": "ham", "to_address": "\"Will Coleda\" <will@coleda.com>", "from_address": "\"andrew cooke\" <andrew@acooke.org>", "subject": "Re: Intro / Parrot / Functional Lang Imp Q", "body": ">> pattern matching (where is that handled?)\n>\n> Pattern matching is provided with one of the PGE compilers. See\n> languages/tcl/runtime/builtin/regexp.pir for an example (there is probably\n> better documentation, I just happened to know I was using it there in\n> tcl.)\n\nThanks.\n\n>> and a little mutability.  In other words, I don't care much\n>> about first class continuations, exceptions, (static) types or\n>> inheritance.\n>>\n>> Also, am I right in thinking that I can use whatever language I want for\n>> generating the IR?\n>\n> Sure. languages/BASIC used perl, as did tcl some time back. Most are\n> generating PIR with PIR these days, though. (ISTR plumhead is generating\n> PIR multiple ways)\n\nI will check the languages directory, but this confuses me - do people\nwrite parsers in PIR?\n\nThanks for the reply,\nAndrew\n\n"}