{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 478: - added monitoring of rpc ports for nfs,\n\tand of Samba ports and directories in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 478\nrevision-id: tridge@samba.org-20070606020842-dbjg17e73v52anv2\nparent: tridge@samba.org-20070606012706-wlzgtpwgr0hfrifu\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Wed 2007-06-06 12:08:42 +1000\nmessage:\n  - added monitoring of rpc ports for nfs, and of Samba ports and directories\n  - added monitoring of the ethernet link state\n  \n  When monitoring detects an error, the node loses its public IP address\nmodified:\n  common/ctdb_tunables.c         ctdb_tunables.c-20070604095258-4m34d7cm1qa7yos9-1\n  config/events.d/10.interface   10.interface-20070604050809-s21zslfirn07zjt8-1\n  config/events.d/50.samba       samba-20070601105340-vlcvnp6euoj3zdwy-3\n  config/events.d/59.nfslock     nfslock-20070601105340-vlcvnp6euoj3zdwy-2\n  config/events.d/60.nfs         nfs-20070601141008-hy3h4qgbk1jd2jci-1\n  config/functions               functions-20070601105405-gajwirydr5a9zd6x-1\n=== modified file 'common/ctdb_tunables.c'\n--- a/common/ctdb_tunables.c\t2007-06-06 00:25:46 +0000\n+++ b/common/ctdb_tunables.c\t2007-06-06 02:08:42 +0000\n@@ -36,7 +36,7 @@\n \t{ \"RecoverInterval\",   1,  offsetof(struct ctdb_tunable, recover_interval) },\n \t{ \"ElectionTimeout\",   3,  offsetof(struct ctdb_tunable, election_timeout) },\n \t{ \"TakeoverTimeout\",   5,  offsetof(struct ctdb_tunable, takeover_timeout) },\n-\t{ \"MonitorInterval\",  60,  offsetof(struct ctdb_tunable, monitor_interval) },\n+\t{ \"MonitorInterval\",  15,  offsetof(struct ctdb_tunable, monitor_interval) },\n };\n \n /*\n\n=== modified file 'config/events.d/10.interface'\n--- a/config/events.d/10.interface\t2007-06-04 05:09:03 +0000\n+++ b/config/events.d/10.interface\t2007-06-06 02:08:42 +0000\n@@ -6,6 +6,9 @@\n # public interface\n \n . /etc/ctdb/functions\n+loadconfig ctdb\n+\n+[ -z \"$CTDB_PUBLIC_INTERFACE\" ] && exit 0\n \n cmd=\"$1\"\n shift\n@@ -73,6 +76,15 @@\n      shutdown)\n \t;;\n \n+     monitor)\n+\t[ -x /usr/sbin/ethtool ] && {\n+\t    /usr/sbin/ethtool $CTDB_PUBLIC_INTERFACE | grep 'Link detected: yes' > /dev/null || {\n+\t\techo \"`date` ERROR: No link on network interface $CTDB_PUBLIC_INTERFACE\"\n+\t\texit 1\n+\t    }\n+\t}\n+\t;;\n+\n esac\n \n exit 0\n\n=== modified file 'config/events.d/50.samba'\n--- a/config/events.d/50.samba\t2007-06-05 07:43:19 +0000\n+++ b/config/events.d/50.samba\t2007-06-06 02:08:42 +0000\n@@ -50,6 +50,15 @@\n \tservice smb stop\n \tservice winbind stop\n \t;;\n+\n+     monitor)\n+\tsmb_dirs=`testparm -st 2> /dev/null | egrep '^\\s*path = '  | cut -d= -f2`\n+\tctdb_check_directories \"Samba\" $smb_dirs\t\n+\n+\tsmb_ports=`testparm -stv 2> /dev/null | egrep '\\s*smb ports =' | cut -d= -f2`\n+\tctdb_check_tcp_ports \"Samba\" $smb_ports\n+\t;;\n+\n esac\n \n # ignore unknown commands\n\n=== modified file 'config/events.d/59.nfslock'\n--- a/config/events.d/59.nfslock\t2007-06-05 08:16:45 +0000\n+++ b/config/events.d/59.nfslock\t2007-06-06 02:08:42 +0000\n@@ -51,6 +51,14 @@\n \n \t/bin/rm -f /etc/ctdb/state/statd/restart\n \t;;\n+\n+      monitor)\n+\t# check that lockd responds to rpc requests\n+\tctdb_check_rpc \"statd\" 100024 1\n+\tctdb_check_rpc \"lockd\" 100021 1\n+\tctdb_check_directories \"statd\" $STATD_SHARED_DIRECTORY\n+\t;;\n+\n esac\n \n exit 0\n\n=== modified file 'config/events.d/60.nfs'\n--- a/config/events.d/60.nfs\t2007-06-05 05:18:37 +0000\n+++ b/config/events.d/60.nfs\t2007-06-06 02:08:42 +0000\n@@ -9,6 +9,8 @@\n cmd=\"$1\"\n shift\n \n+PATH=/usr/bin:/bin:/usr/sbin:/sbin:$PATH\n+\n case $cmd in \n      startup)\n \tmkdir -p /etc/ctdb/state/nfs\n@@ -45,6 +47,16 @@\n \t/bin/rm -f /etc/ctdb/state/nfs/restart\n \t;;\n \n+      monitor)\n+\t# check that NFS responds to rpc requests\n+\tctdb_check_rpc \"NFS\" 100003 3\n+\tctdb_check_rpc \"mount\" 100005 1\n+\n+\t# and that its directories are available\n+\tnfs_dirs=`grep -v '^#' < /etc/exports | cut -d' ' -f1`\n+\tctdb_check_directories \"nfs\" $nfs_dirs\n+\t;;\n+\n esac\n \n exit 0\n\n=== modified file 'config/functions'\n--- a/config/functions\t2007-06-03 12:07:07 +0000\n+++ b/config/functions\t2007-06-06 02:08:42 +0000\n@@ -28,7 +28,7 @@\n \n ######################################################\n # wait for a set of tcp ports\n-# usage: ctdb_wait_tcp_ports SERICE_NAME \n+# usage: ctdb_wait_tcp_ports SERVICE_NAME \n ######################################################\n ctdb_wait_tcp_ports() {\n   service_name=\"$1\"\n@@ -59,9 +59,10 @@\n }\n \n \n+\n ######################################################\n # wait for a set of directories\n-# usage: ctdb_wait_directories SERICE_NAME \n+# usage: ctdb_wait_directories SERVICE_NAME \n ######################################################\n ctdb_wait_directories() {\n   service_name=\"$1\"\n@@ -84,3 +85,58 @@\n   echo \"`/bin/date` Local directories for $service_name are available\"\n }\n \n+\n+######################################################\n+# check that a rpc server is registered with portmap\n+# and responding to requests\n+# usage: ctdb_check_rpc SERVICE_NAME PROGNUM VERSION\n+######################################################\n+ctdb_check_rpc() {\n+    service_name=\"$1\"\n+    prognum=\"$2\"\n+    version=\"$3\"\n+    rpcinfo -u localhost $prognum $version > /dev/null || {\n+\t    echo \"`date` ERROR: $service_name not responding to rpc requests\"\n+\t    exit 1\n+    }\n+}\n+\n+######################################################\n+# check a set of directories is available\n+# usage: ctdb_check_directories SERVICE_NAME \n+######################################################\n+ctdb_check_directories() {\n+  service_name=\"$1\"\n+  shift\n+  wait_dirs=\"$*\"\n+  [ -z \"$wait_dirs\" ] && return;\n+  for d in $wait_dirs; do\n+      [ -d $d ] || {\n+\t  echo \"`date` ERROR: $service_name directory $d not available\"\n+\t  exit 1\n+      }\n+  done\n+}\n+\n+######################################################\n+# check a set of tcp ports\n+# usage: ctdb_check_tcp_ports SERVICE_NAME \n+######################################################\n+ctdb_check_tcp_ports() {\n+  service_name=\"$1\"\n+  shift\n+  wait_ports=\"$*\"\n+  [ -z \"$wait_ports\" ] && return;\n+  for p in $wait_ports; do\n+      all_ok=1\n+      if [ -x /usr/bin/netcat ]; then\n+          /usr/bin/netcat -z 127.0.0.1 $p || all_ok=0\n+      elif [ -x /usr/bin/nc ]; then\n+          /usr/bin/nc -z 127.0.0.1 $p || all_ok=0\n+      fi\n+      [ $all_ok -eq 1 ] || {\n+\t  echo \"`date` ERROR: $service_name tcp port $p is not responding\"\n+\t  exit 1\n+      }\n+  done\n+}\n\n"}