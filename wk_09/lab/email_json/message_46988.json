{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "\"Robert Wilkins\" <irishhacker@gmail.com>", "subject": "[R] Awk and Vilno", "body": "In clinical trial data preparation and many other data situations, the\nstatistical programmer needs to merge and re-merge multiple input\nfiles countless times. A syntax for merging files that is clear and\nconcise is very important for the statistical programmer's\nproductivity.\n\nHere is how Vilno does it:\n\ninlist dataset1 dataset2 dataset3 ;\njoinby variable1 variable2  where ( var3<=var4 ) ;\n\nEach column in a dataset has a variable name ( variable1, variable2,\nvar3, var4 ).\nYou are merging three input datafiles: dataset1, dataset2, and dataset3.\nThe joinby statement asks for a many-to-many join, rather like the SQL\nSELECT statement.\n[ The mergeby statement asks for a many-to-one join , more efficient ]\n[ The readby statement asks for interleaving of rows, the rows don't\n\"match up\" ,\n  but one row goes under the preceding row (100 rows + 100 rows -> 200\noutput rows ]\nThe join( or merge ) is done with variable1*variable2 subgroups: A row\nfrom dataset1 where variable1=4 and variable2=\"Sam\" can only match to\na row from dataset2 where variable1=4 and variable2=\"Sam\". Also, any\nmatch-ups where it is not the case that var3<=var4 are also excluded.\n\nHere's how the SAS datastep will do it:\n\nmerge dataset1 dataset2 dataset3 ;\nby variable1 variable2 ;\nif ^( var3<=var4 ) then delete ;\n\n[Actually, the SAS datastep can only do a many-to-one join, but you\ncan do a PROC SQL paragraph to do an SQL SELECT statement, then export\nthe results to a SAS datastep afterwards.]\n\nThe point is : there are lots of data preparation scenarios where\nlarge numbers of merges need to be done. This is an example where\nVilno and SAS are easier to use than the competition. I'm sure an Awk\nprogrammer can come up with something, but the result would be\nawkward.\n\nYou can also find other data preparation problems where the best tool\nis Awk. Looking through \"Sed & Awk\" (O'Reilly) gives a good idea. I'm\nnot expert Awk-er sure, but I think I can see that Awk and Vilno are\nreally like apples and oranges.\n\nFor scanning inconsistently structured ASCII data files, where\ndifferent rows have different column specifications, Awk is a better\ntool.\n\nFor data problems that lend themselves to UNIX-style regular\nexpressions, Awk, again, is a great tool.\n\nIf you have a data manipulation problem that is incredibly simple,\nthen converting an ascii data file to binary, and then back, may not\nseem worth it. Awk, again, wins. But the asciitobinary and\nbinarytoascii statement ( there and back ) only takes 4 lines or so,\nso Vilno is really not that bad.\n\nCertain apsects of Vilno and SAS are a bit more user-friendly:\nEach column has a variable name, such as \"PatientID\".\nAwk uses $1, $2, $3 , as variable names for columns. Not user-friendly.\nIn both Vilno and SAS (and SQL) the possibility of \"MISSING\" ( or\n\"NULL\" ) is built into the data values held in the columns. So you\ndon't have to use separate boolean variables to track MISSING vs\nNOT-MISSING. Very convenient.\n\nVilno does have a lot of functionality that is a lot harder to\nimplement in most other programming languages. (You can implement that\nfunctionality, but it would take a ton of code - the three merge-in\noptions for Vilno are an example).\n\nThe upshot:\n\nAwk is a hammer.\nVilno is a screwdriver.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}