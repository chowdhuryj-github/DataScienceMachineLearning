{"category": "ham", "to_address": "yitzle <yitzle@users.sourceforge.net>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Sort + Use of uninitialized value", "body": "On 4/25/07, yitzle  wrote:\n> Inside the loop I check if the value is defined, so I don't care where\n> in the order the undefined one shows up in. I don't want to delete\n> undefined ones or anything...\n\nThen you can either turn off the warnings for that section (not\nadvised), ignore the warnings (also not advised), or give the null\nvalues a value.  In the following example I use 0 as the value, but it\ncould be any numeric value depending on where you want undefined\nvalues to be sorted.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nmy %h = (\n        a => { val => 3 },\n        b => { val => 34 },\n        c => { val => 4 },\n        d => { }\n);\n\nfor my $key (sort { ($h{$a}{val} || 0) <=> ($h{$b}{val} || 0) } keys %h) {\n        print \"$key\\n\";\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}