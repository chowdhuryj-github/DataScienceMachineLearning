{"category": "ham", "to_address": "\"Audrey Tang\" <audreyt@audreyt.org>", "from_address": "\"Hakim Cassimally\" <hakim.cassimally@gmail.com>", "subject": "Re: Generalizing ?? !!", "body": "On 11/06/07, Audrey Tang  wrote:\n>\n> \u001b$B:_\u001b(B Jun 11, 2007 5:10 AM \u001b$B;~!$\u001b(BJonathan Lang \u001b$BUmE~!'\u001b(B\n> > A variation of chaining associativity gets\n> > used, with the \"chaining rule\" being '$v1 op1 $v2 // $v1 op2 $v3'\n> > instead of '$v1 op1 $v2 && $v2 op2 $v3', as is the case for comparison\n> > chaining.\n>\n> But wouldn't that make:\n>\n>    True ?? undef !! Moose;\n>\n> evaluate to Moose, instead of undef as we wanted?\n\nPerhaps I haven't understood hypothetical variables, but would it make\nsense to make ?? hypothetically bind its LHS?\n\nThat way, !! would be analogous to the other short-ciruiting \"or\" operators:\n\n   ||   # truth\n   //   # definedness\n   !!   # boundness\n\nThis haskell seems to be equivalent (using ? ! as the token \"!!\" is\nalready in use).\n\n  True  ? a = Just a\n  False ? _ = Nothing\n\n  Just a  ! _ = a\n  Nothing ! b = b\n\n*Main> True ? \"Bill\" ! \"Ben\"\n\"Bill\"\n*Main> False ? \"Bill\" ! \"Ben\"\n\"Ben\"\n\nCiao,\nosfameron\n\n"}