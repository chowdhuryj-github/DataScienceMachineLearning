{"category": "ham", "to_address": "\"Duncan Murdoch\" <murdoch@stats.uwo.ca>,\n   \"Greg Snow\" <Greg.Snow@intermountainmail.org>", "from_address": "\"Greg Snow\" <Greg.Snow@intermountainmail.org>", "subject": "Re: [R] [SPAM] - Re: R package development in windows -\n BayesianFilter detected spam", "body": "I am glad to help.  The pp program is the main tool to use to create the executable.\n\n-----Original Message-----\nFrom: \"Duncan Murdoch\" \nTo: \"Greg Snow\" \nCc: \"Gabor Grothendieck\" ; \"Doran, Harold\" ; \"r-help@stat.math.ethz.ch\" \nSent: 5/4/07 4:46 PM\nSubject: Re: [R] [SPAM] - Re: R package development in windows - BayesianFilter detected spam\n\nOn 04/05/2007 4:25 PM, Greg Snow wrote:\n> I have used the pp/par combination for Perl before.  It is pretty straight forward to convert an existing perl script into a stand alone windows executable.  \n>  \n> Both the Activestate licence and the Perl Artistic licence allow for embedding a script and perl interpreter together and distributing the result.\n>  \n> The current perl script(s) used for the R package build package could easily be converted to a 'stand alone' windows executable and be distributed with Rtools for those who do not want to install Perl themselves.\n>  \n> The only drawback is that even a \"Hello World\" script will result in over a meg sized executable (due to the perl interpreter being included).\n\nI took a quick look at the PAR page on CPAN, and it seems possible to \nbuild a DLL that incorporates the interpreter, and then each individual \nscript .exe could be much smaller.  I'll see if I can get that to work; \nit would be really nice to be able to drop the Perl requirement.  If we \ncould do that, I'd include the command line tools plus the compiled \nscripts with the basic R distribution, so you could easily build simple \npackages.  The Rtools.exe installer would then just need to install the \nMinGW compilers for packages containing compiled code, and a few extras \nneeded for building R.\n\nI don't really know Perl, so I might be asking for advice if I get stuck.\n\nDuncan Murdoch\n>  \n> \n> ________________________________\n> \n> From: r-help-bounces@stat.math.ethz.ch on behalf of Gabor Grothendieck\n> Sent: Fri 5/4/2007 11:55 AM\n> To: Doran, Harold\n> Cc: r-help@stat.math.ethz.ch; Duncan Murdoch\n> Subject: Re: [R] [SPAM] - Re: R package development in windows - BayesianFilter detected spam\n> \n> \n> \n> Just googling I found this:\n> \n> http://www.perlmonks.org/?node_id=186402\n> \n> On 5/4/07, Doran, Harold  wrote:\n>>> The best, of course, would be to get rid of Perl altogether.\n>> In Python, it is possible to make standalone executables. Is it possible\n>> to also do this in Perl, then one could eliminate a perl install. Or, is\n>> it possible to use Python to accomplish what perl is currently doing? I\n>> may be getting in over my head here since I really don't know what perl\n>> is doing under the hood.\n>>\n>> Harold\n>>\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n> \n> \n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}