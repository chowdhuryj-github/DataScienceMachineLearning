{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Algorithm or module needed", "body": "On Jun 1, 10:29 am, der...@sciencephoto.com (Beginner) wrote:\n> Hi,\n>\n> I am trying to copy some file from a removable HDD to a network\n> drive. I want replicate the directory structure and omit un-needed\n> files.\n>\n> The directory paths a 4-5 levels deep and I am trying to work out an\n> efficient way to recreate the directory path.\n>\n> What I've been doing is using File::Find to collect the file and then\n> in the coderef calling the following subroutine to check the path but\n> i didn't go too far as my method seems....well not well formed.\n>\n> The path to a source file looks like:\n>\n> e:/Dir1/Day 1/AM/01/myfile.jpg\n>\n> use strict;\n> use warnings;\n> ...\n> ...snip\n>\n> sub check_dir {\n>\n> # @_ = File::Find::dir\n>\n>  my $path = shift;\n>  return unless (-e $path);\n>\n> # Split the path on it's parts.\n>  my @parts = split('/',$path);\n>\n> # Loop from 1 to skip the first part of the path.\n>  for (my $i = 1; $i <= $#parts; ++$i)  {\n>\n>         my $l = $dist.'/'.$parts[$i];\n>         if (! -e $l) {\n>                 print \"Checking $l\\n\";\n>                 my $j = $i + 1;                 # urg!\n>                 my $lev = $dist.'/'.$parts[$i].'/'.$parts[$j];\n>                 if (! -e $lev) {\n>                         print \"Checking $lev\\n\";\n>                 }\n>         }\n>  }\n>\n> Can anyone offer me some advice with this?\n\nEither File::Copy::Recursive, or File::Path combined with File::Find,\nFile::Copy and File::Basename\n\nFile::Copy::Recursive is available on the CPAN at\nhttp://search.cpan.org/~dmuey/File-Copy-Recursive-0.33/Recursive.pm\n\nFile::Path, File::Find, and File::Basename are all core modules.\nFile::Copy::Recursive will definitely be the least work for you.\nOtherwise, your algorith should be something like (pseudo-code):\nfind( \\\u00a9_file, '/');\nsub copy_file {\n   if (-d) {\n      mkpath(\"newsystem/$_\");\n   } elsif (-f) {\n      my $path = basedir($File::Find::name);\n      mkpath(\"newsystem/$path\");\n      copy $path, \"newsystem/$path\";\n   } else {\n      carp \"Don't know how to handle $File::Find::name!\\n\";\n   }\n}\n\nPaul Lalli\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}