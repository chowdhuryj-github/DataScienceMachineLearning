{"category": "ham", "to_address": "\"Ajit Pawar\" <ajitpawar75@gmail.com>", "from_address": "\"jim holtman\" <jholtman@gmail.com>", "subject": "Re: [R] Converting \"list of data frame\" to data frame", "body": "since you didn't supply a reproducible example, here is a test that I\nran with varying number of rows that seems to work fine.  You might\nwant to provide at leat an \"str\" of the structure that you are doing\nthe rbind on.\n\n\n> x <- lapply(1:10, function(z){\n+     data.frame(a=runif(z), b=rnorm(z), c=factor(seq(z)))\n+ })\n> str(x)\nList of 10\n $ :'data.frame':       1 obs. of  3 variables:\n  ..$ a: num 0.986\n  ..$ b: num -0.543\n  ..$ c: Factor w/ 1 level \"1\": 1\n $ :'data.frame':       2 obs. of  3 variables:\n  ..$ a: num [1:2] 0.8121 0.0772\n  ..$ b: num [1:2] -0.349 -1.008\n  ..$ c: Factor w/ 2 levels \"1\",\"2\": 1 2\n $ :'data.frame':       3 obs. of  3 variables:\n  ..$ a: num [1:3] 0.970 0.989 0.176\n  ..$ b: num [1:3]  0.1058  0.4570 -0.0772\n  ..$ c: Factor w/ 3 levels \"1\",\"2\",\"3\": 1 2 3\n $ :'data.frame':       4 obs. of  3 variables:\n  ..$ a: num [1:4] 0.3692 0.7254 0.4861 0.0638\n  ..$ b: num [1:4] 0.788 2.075 1.027 1.208\n  ..$ c: Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 2 3 4\n $ :'data.frame':       5 obs. of  3 variables:\n  ..$ a: num [1:5] 0.109 0.333 0.837 0.277 0.587\n  ..$ b: num [1:5]  0.9811  0.5324 -0.0905  0.1565 -0.7373\n  ..$ c: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5\n $ :'data.frame':       6 obs. of  3 variables:\n  ..$ a: num [1:6] 0.420 0.334 0.865 0.177 0.493 ...\n  ..$ b: num [1:6]  0.162  2.025 -0.704  0.961  1.790 ...\n  ..$ c: Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6\n $ :'data.frame':       7 obs. of  3 variables:\n  ..$ a: num [1:7] 0.507 0.155 0.348 0.660 0.312 ...\n  ..$ b: num [1:7]  0.409  1.689  1.587 -0.331 -2.285 ...\n  ..$ c: Factor w/ 7 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7\n $ :'data.frame':       8 obs. of  3 variables:\n  ..$ a: num [1:8] 0.706 0.476 0.495 0.308 0.695 ...\n  ..$ b: num [1:8]  0.421 -0.400 -1.370  0.988  1.520 ...\n  ..$ c: Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8\n $ :'data.frame':       9 obs. of  3 variables:\n  ..$ a: num [1:9] 0.4822 0.9205 0.0415 0.2940 0.5009 ...\n  ..$ b: num [1:9]  1.576 -1.476 -0.145 -0.953  0.407 ...\n  ..$ c: Factor w/ 9 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9\n $ :'data.frame':       10 obs. of  3 variables:\n  ..$ a: num [1:10] 0.938 0.716 0.163 0.476 0.690 ...\n  ..$ b: num [1:10] -0.706 -0.161  0.501 -1.014  1.615 ...\n  ..$ c: Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9 10\n> x.r <- do.call('rbind', x)\n> str(x.r)\n'data.frame':   55 obs. of  3 variables:\n $ a: num  0.9863 0.8121 0.0772 0.9702 0.9895 ...\n $ b: num  -0.543 -0.349 -1.008  0.106  0.457 ...\n $ c: Factor w/ 10 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 2 1 2 3 1 2 3 4 ...\n>\n>\n\nOn 4/29/07, Ajit Pawar  wrote:\n> Spielas/R-help,\n>        Thanks for your reply. I did try the solution but the result is not\n> what I expect and I also get the following warning message:\n>\n> -------------------\n>  Warning message:\n>  number of columns of result\n>        is not a multiple of vector length (arg 1) in: rbind(1, c(6, 9, 10,\n> 12, 13, 14, 19, 22, 29, 30, 42, 45, 47,\n>  -------------------\n>\n>        The \"list of data frames\" that sapply returns has same number of\n> columns *but* different number of rows depending on the index of sapply.\n>\n>        Any idea what might be going wrong?\n>\n>        Many thanks in advance!.\n>\n> Cheers\n>\n> AP\n>\n>\n>\n>\n>\n>\n> On 4/29/07, Spielas Bates  wrote:\n> >\n> > On 4/28/07, Ajit Pawar  wrote:\n> > > Greetings,\n> > >       This might be something very simple but a nice solution eludes\n> > me!!\n> > >\n> > >        I have a function that I call within sapply that generates data\n> > frame\n> > > in each call. Now when sapply returns me back the result - it's in the\n> > form\n> > > of a \"list of data frames\". so in order to extract the information into\n> > a\n> > > single data frame I have to loop thru the following code:\n> > >\n> > >        for(i=1:n) {\n> > >            my.df = rbind(my.df,list.from.sapply[,i]);\n> > >        }\n> > >\n> > >    Is there anyway to code it better?\n> >\n> > do.call(\"rbind\", my.df.list.from.sapply)\n> >\n>\n>        [[alternative HTML version deleted]]\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n-- \nJim Holtman\nCincinnati, OH\n+1 513 646 9390\n\nWhat is the problem you are trying to solve?\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}