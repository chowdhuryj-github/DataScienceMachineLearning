{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Mark Glines (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #43102] t/pmc/threads.t tests 5,7 fail with --gc=libc ", "body": "# New Ticket Created by  Mark Glines \n# Please include the string:  [perl #43102]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nWhile testing/trying to fix RT #42938, I noticed an additional test\nfailure in t/pmc/threads.t.  Test 7 crashes with a signal 11\n(segmentation fault), on my Gentoo Linux-x86 box.  This is with svn\nr18722.\n\nI've stared at gdb, header files and preprocessor output for a while.\nI'll include all the info I think is relevant.\n\n\nt/pmc/threads....NOK 7/20\n#     Failed test (t/pmc/threads.t at line 290)\n# Exited with error code: [SIGNAL 11]\n# Received:\n# thread\n#\n# Expected:\n# /(done\\nthread\\n)|(thread\\ndone\\n)/\n#\n\nStarting program: /home/paranoid/parrot/parrot detach.pir\n[Thread debugging using libthread_db enabled]\n[New Thread -1227352400 (LWP 25907)]\nwarning: Lowest section in /usr/lib/libicudata.so.36 is .hash at 000000d4\n[New Thread -1227355216 (LWP 25910)]\n[New Thread -1235747920 (LWP 25911)]\n[New Thread -1244140624 (LWP 25912)]\nthread\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread -1244140624 (LWP 25912)]\n0xb7da53ab in clear_cow (interp=0x82256f0, pool=0x82285c8, cleanup=1)\n    at src/gc/dod.c:469\n469                         *refcount               = 0;\n(gdb) print refcount\n$1 = (INTVAL * const) 0xb7eb4b41\n\n\nThe code in question:\n                    INTVAL * const refcount = PObj_bufrefcountptr(b);\n                    *refcount               = 0;\n\nWhich expands to:\n                    INTVAL * const refcount = (&(((Buffer_alloc_unit *)((char *) (b)->obj.u._b._bufstart - (((size_t) &((Buffer_alloc_unit *)0)->buffer))))->ref_ count));\n                    *refcount = 0;\n\n(gdb) bt\n#0  0xb7da53ab in clear_cow (interp=0x82256f0, pool=0x82285c8,\n    cleanup=1) at src/gc/dod.c:469\n#1  0xb7da30ae in sweep_cb_buf (interp=0x82256f0, pool=0x82285c8, flag=6,\n    arg=0x0) at src/headers.c:691\n#2  0xb7da2f56 in Parrot_forall_header_pools (interp=0x82256f0, flag=6,\n    arg=0x0, func=0xb7da3080 ) at src/headers.c:640\n#3  0xb7da318f in Parrot_destroy_header_pools (interp=0x82256f0)\n    at src/headers.c:732\n#4  0xb7d490bb in Parrot_really_destroy (interp=0x82256f0, exit_code=0,\n    arg=0x0) at src/inter_create.c:390\n#5  0xb7dc5399 in thread_func (arg=0x83c0c28) at src/thread.c:403\n#6  0xb7b6f380 in start_thread () from /lib/libpthread.so.0\n#7  0xb6f1554e in clone () from /lib/libc.so.6\n(gdb) print *b\n$3 = {obj = {u = {_b = {_bufstart = 0xb7eb4b45, _buflen = 6}, _ptrs = {\n        _struct_val = 0xb7eb4b45, _pmc_val = 0x6}, _i = {\n        _int_val = -1209316539, _int_val2 = 6},\n      _num_val = 1.425648877988937e-313, _string_val = 0xb7eb4b45},\n    flags = 196864}}\n(gdb) print ((char*)(b->obj.u._b._bufstart))\n$4 = 0xb7eb4b45 \"parrot\"\n\n\nSo it looks to me like it's expecting to find a refcount integer right\nbefore the buffer, in memory.  But the buffer is a null-terminated\nstring, packed in memory with another string directly preceding it...\nno refcount integer!\n\nHere's a hexdump of the memory:\n\nb7eb4b30  75 70 2e 63 00 28 73 65  6c 66 29 2d 3e 70 6d 63  |up.c~(self)->pmc|\nb7eb4b40  5f 65 78 74 00 70 61 72  72 6f 74 00 00 00 00 00  |_ext~parrot~~~~~|\n_bufstart pointer:       ^^                                       ^\n\n(in the ASCII part of that hexdump, \"~\" means null.)\n\nI'm in way over my head here, but I see 3 warning signs telling me\nthis is a bug:\n\n1.  The SIGSEGV, obviously.\n2.  The lack of refcount integer where the code expects to find one.\n3.  The buffer isn't dword-aligned.  (Aren't allocated buffers aligned\nby default?  Could this be a constant string defined at compile time,\ninstead?)\n\n\nI also get an intermittant failure of test 5 (occurs about once every 5\nruns).  I believe it is likely to be caused by the same issue, but I\nhave not debugged it to the same extent.\n\n#     Failed test (t/pmc/threads.t at line 204)\n# Exited with error code: [SIGNAL 11]\n# Received:\n# start 1\n# in thread\n# done\n#\n# Expected:\n# start 1\n# in thread\n# done\n\n \nMark\n\n"}