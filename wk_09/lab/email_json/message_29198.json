{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "herbert breunung <deirdre_skye@web.de>", "subject": "Re: Is Perl 6 too late?", "body": "\n> And to attract contributors, you have to have a convincing vision.\n\nright\n\nplease make a decision for you to program in a language that has fame\nor one that you like most. as moritz said the special variables are now \nbetter sorted and some changes you write about are too far from perls\nbasic principles, i thank that would not be perl anymore. but even for\ndemands like yours it is thought as 2 or 3 lisp-style macros could\nturn perl6 into something your seems to want. except that one with\ntype recognition of course which i cant think of how to make this work\nwith an macro.\n\nbut hey since parrot also will read python you would not run too far\nif you try python. i think you could only win if you try it. maybe youll find \nproblems with python you didnt thought abd be than better informed \nof or found your  favoured programming lang.\n\nbest\nherbert\n\n\n> I'm only a distant observer of the Perl6 design process, so I might not\n> be in the position to criticize Perl6.\n> On the other hand, a distant view might be insightful.\n> This is not intended to be a provocation.\n> But I also think that there is a great opportunity to make _big_ changes\n> to Perl to be even more competitive.\n> But maybe Perl6 is probably too far defined to encounter big changes in\n> some critical aspects.\n> \n> As Ruby and Python are getting more and more attraction [1][2] I think\n> they do something right, that Perl doesn't.\n> What I think where both (especially Python) do better is in readable code.\n> \n> What makes Perl hard to read is the excessive use of special characters\n> (/\\W/).\n> In my opinion, reducing the use of those characters would make Perl a\n> lot easier to read and also easier to write.\n> Global variables with cryptic names, that no beginner can make any sense\n> of by reading it. And after not working with \"$<\" for some months I\n> can't remember it either, although I've got quite some Perl experience.\n> \n> Additionally I'm not a friend of sigils: Typing them is relatively\n> painful, for reading there is no advantage if you use an editor with\n> decent syntax highlighting and the code looks more cryptic. The answer\n> in Perl6 are twigils, great... One step backwards in my optinion.\n> Most programming languages\n> /C(++|#)?|Java(Script)?|Python|Ruby|Groovy/... don't need them. The only\n> obvious advantage of using sigils is variable interpolation in strings.\n> But that could easily be done only in strings without the need to put a\n> $ in front of each and every variable name in the rest of the code.\n> \n> I would also like semicolons to be optional. There are far more cases of\n> single line statements than multiline statements. So you would save\n> quite some characters, when the semicolon would be optional and you\n> could concatenate multiline statements with e.g. a backslash.\n> \n> Some say that there are too much operators in Perl(6). I partially\n> agree. I don't like the implicit type casting forced by the operators\n> (== int / eq string). That's harder to learn and remember. Harder to\n> read also.\n> I really like the Python way of doing it: Set the variables type on the\n> assignment and remember it. The (fewer) operators now work according to\n> the type of the operands. No implicit (and error prone) type casting.\n> That way seems to be the best compromise of easiness and type safety.\n> \n> I could continue on that, but I've already written too much...\n> \n> [1] http://radar.oreilly.com/archives/2007/05/state_of_the_co_6.html\n> [2] http://www.google.com/trends?q=perl%2C+python+-snake%2C+ruby\n> \n> \n> \n> People not only want code that _is_ sexy, but they also want it to\n> _look_ sexy.\n> \n> -- \n> Thomas Wittek\n> http://gedankenkonstrukt.de/\n> Jabber: streawkceur@jabber.i-pobox.net\n> \n\n\n______________________________________________________________________\nXXL-Speicher, PC-Virenschutz, Spartarife & mehr: Nur im WEB.DE Club!\t\t\nJetzt gratis testen! http://produkte.web.de/club/?mc=021130\n\n"}