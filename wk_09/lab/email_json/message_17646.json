{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 202: merged broadcast messages from ronnie in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 202\nrevision-id: tridge@samba.org-20070427132613-jlz3n8rz4icubshz\nparent: tridge@samba.org-20070427131436-wm4r5ylzeocpzs2z\nparent: sahlberg@ronnie-20070427131617-80d257e288bc8ec6\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Fri 2007-04-27 15:26:13 +0200\nmessage:\n  merged broadcast messages from ronnie\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_message.c          ctdb_message.c-20070208224107-9dnio7x7z33prrmt-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n    ------------------------------------------------------------\n    revno: 197.1.5\n    merged: sahlberg@ronnie-20070427131617-80d257e288bc8ec6\n    parent: sahlberg@ronnie-20070427120812-5abf7503c3753756\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Fri 2007-04-27 23:16:17 +1000\n    message:\n      add a special VNN that means \"all\" nodes so that a message can be \n      broadcasted to all daemons in the cluster\n      \n      change the message dispatch routine for sending messages so that it \n      allows several clients to use the same srvid\n      messages are then passed on to all clients that have that srvid\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-04-27 08:43:52 +0000\n+++ b/common/ctdb_daemon.c\t2007-04-27 13:16:17 +0000\n@@ -266,7 +266,7 @@\n \t\tctdb_request_message(client->ctdb, (struct ctdb_req_header *)c);\n \t\treturn;\n \t}\n-\t\n+\n \t/* its for a remote node */\n \tdata.dptr = &c->data[0];\n \tdata.dsize = c->datalen;\n\n=== modified file 'common/ctdb_message.c'\n--- a/common/ctdb_message.c\t2007-04-19 21:47:37 +0000\n+++ b/common/ctdb_message.c\t2007-04-27 13:16:17 +0000\n@@ -39,16 +39,11 @@\n \t/* XXX we need a must faster way of finding the matching srvid\n \t   - maybe a tree? */\n \tfor (ml=ctdb->message_list;ml;ml=ml->next) {\n-\t\tif (ml->srvid == srvid || ml->srvid == CTDB_SRVID_ALL) break;\n-\t}\n-\tif (ml == NULL) {\n-\t\tDEBUG(1,(__location__ \" daemon vnn:%d  no msg handler for srvid=%u\\n\", \n-\t\t\t ctdb_get_vnn(ctdb), srvid));\n-\t\t/* no registered message handler */\n-\t\treturn -1;\n+\t\tif (ml->srvid == srvid || ml->srvid == CTDB_SRVID_ALL) {\n+\t\t\tml->message_handler(ctdb, srvid, data, ml->message_private);\n+\t\t}\n \t}\n \n-\tml->message_handler(ctdb, srvid, data, ml->message_private);\n \treturn 0;\n }\n \n@@ -141,8 +136,28 @@\n \tr->srvid         = srvid;\n \tr->datalen       = data.dsize;\n \tmemcpy(&r->data[0], data.dptr, data.dsize);\n-\t\n-\tctdb_queue_packet(ctdb, &r->hdr);\n+\n+\tif (vnn != CTDB_BROADCAST_VNN) {\n+\t\tctdb_queue_packet(ctdb, &r->hdr);\n+\t} else {\n+\t\tstruct ctdb_node *node;\n+\t\tint i;\n+\n+\t\t/* this was a broadcast message\n+\t\t   loop over all other nodes and send them each a copy\n+\t\t*/\n+\t\tfor (i=0; inodes[i];\n+\n+\t\t\t/* we do not send the message to ourself */\n+\t\t\tif (node && node->vnn!=ctdb->vnn) {\n+\t\t\t\tr->hdr.destnode = node->vnn;\n+\t\t\t\tctdb_queue_packet(ctdb, &r->hdr);\n+\t\t\t}\n+\t\t}\n+\t\t/* also make sure to dispatch the message locally */\n+\t\tctdb_dispatch_message(ctdb, srvid, data);\n+\t}\n \n \ttalloc_free(r);\n \treturn 0;\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-04-27 13:14:36 +0000\n+++ b/include/ctdb_private.h\t2007-04-27 13:26:13 +0000\n@@ -30,9 +30,10 @@\n #define CTDB_DS_ALIGNMENT 8\n \n \n-#define CTDB_NULL_FUNC 0xf0000001\n-#define CTDB_CURRENT_NODE 0xF0000001\n+#define CTDB_NULL_FUNC     0xF0000001\n \n+#define CTDB_CURRENT_NODE  0xF0000001\n+#define CTDB_BROADCAST_VNN 0xF0000002\n /*\n   an installed ctdb remote call\n */\n\n"}