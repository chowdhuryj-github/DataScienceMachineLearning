{"category": "ham", "to_address": "\"Speakup is a screen review system for Linux.\" <speakup@braille.uwo.ca>", "from_address": "\"Spie Sutherland\" <spie@proficio.ca>", "subject": "Re: moving from amd to p3?", "body": "Yes, lspci is very useful in knowing what hardware you have, and\ntherefore what drivers you need. Try using the -v verbose option.\nThen on your running system, do lsmod and note what drivers you\nhave loaded, and match them with your pci devices. Some may\nnot be modules, because all of these drivers can be either loadable\nmodules or statically compiled into the kernel.\n\nI actually think going through the config process, even frequently\nis a good idea, because it teaches you about all of the various\ndrivers. When you first start building kernels it's inevitable that\nsome mistakes will be made, but those are valuable experiences.\nI recall selecting a processor option that I thought was right and\nthe system wouldn't boot, won't be making that mistake again.\nI have at times missed selecting drivers I needed, or included\nstuff I will never use, but over time you get to know what they\nall are. I can go through the kernel config very fast now and\nknow what I need, which in the large collection of stuff is not\nmuch!\n\nAlso look at your existing .config file. There you see all of the\ndrivers listed, which are statically built into kernel, which are\nmodules, and which are not included. The \"standard\" kernels\nthat come with distros usually have way more than you need.\nThat's not really a problem these days with tons of RAM\navailable and fast processors, but you can reduce your build\ntime a lot by removing a bunch of stuff you don't need. I have\nbecome more disciplined with this because I also work on\nembedded systems where you definitely only want what you\nneed, it's unthinkable to compile drivers for hardware that\nyou don't have.\n\nThe only way to really get to know the kernel drivers is to\nbuild kernels. It does take a long time, but I recommend\nnot sitting around waiting for them, start a build and go to\nsleep, go for a walk, go to work, whatever.\n\nThe \"default\" kernel will have all of the various ethernet\ndrivers included, when I only need one, and only one will\nwork with my hardware. Same is true of other things like\naudio, but you need to get to know that there are core\ndrivers and hardware specific. For example, with usb there\nis a usb core driver, everyone needs that, but your system\nwill have either an ohci, uhci, or ehci controller, and the\ndevices you actually use on usb are probably just a few\ncompared to the huge list that gets compiled if you choose\nthem all. Audio is similar, you have core drivers for alsa\nand then hardware specific ones.\n\nThere is usually huge sections of the kernel that you don't\nneed on a PC, for example, I have an IDE controller so\nI don't need SCSI, I only need SCSI emulation to support\nCD burning, so I exlude most of SCSI. I don't need a \ngame controller joystick port. I don't need any of the \nprinter drivers. I don't need all of those flash devices \nlisted as mtd, memory technology devices, etc. \n\nAfter you have gone through the config several times you\nget to know what you need and don't. The kernel is huge,\ngetting to be kinda scary huge. Usually including extra\nstuff doesn't really \"cost\" you anything more than some\ndisk space and compile time, because your system will\nonly load drivers it actually needs, unless you statically\ncompile in stuff you don't have hardware for. So it's safe\nto include all of the networking hardware driver, for\nexample, but getting to know what all these drivers are\ntakes the mystery out of the kernel, and also teaches\nyou what hardware is supported, when you go to buy\nnew cards or peripherals.\n\nAnother thing to consider, there is a huge amount of\nnetworking code, much of which you don't need if you\nare just using the web and email etc. Excluding stuff you\ndon't need increases security. If I will never do any\npoint to point tunneling, then I'd rather not let anyone,\nin case someone does manage to compromise the\nmachine. The networking in particular takes some time\nto understand, but there are tons of good FAQs on the\nnet about most of it. Do I need sendmail? Not me, I\njust use a provider pop3 server for mail. Do I need\nmulticast networking? Nope. I only need DHCP \nclient support, not server. There are so many things I \ndon't need altogether. Getting to know what you do \nneed speeds up builds and increases your chances \nof successful builds. I have found that sometimes my\nkernel build will terminate in error trying to build \nsome module I will never use. Actually that has \nhappened quite a lot over the years. Better to just\ncompile what I need.  \n\n  -- Spie\n\n\nScott wrote:\nWhat is the best way to go through the config?  \nDo you just do like a lspci \n\n\n_______________________________________________\nSpeakup mailing list\nSpeakup@braille.uwo.ca\nhttp://speech.braille.uwo.ca/mailman/listinfo/speakup\n\n"}