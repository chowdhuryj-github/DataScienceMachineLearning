{"category": "ham", "to_address": "Andrew Bartlett <abartlet@samba.org>", "from_address": "derrell@samba.org", "subject": "Re: svn commit: samba r22731 - in branches/SAMBA_3_0/source: . tests", "body": "Andrew Bartlett  writes:\n\n> On Mon, 2007-05-07 at 21:31 -0400, derrell@samba.org wrote:\n>> Andrew Bartlett  writes:\n>> \n>> > On Mon, 2007-05-07 at 13:37 -0400, derrell@samba.org wrote:\n>> >> By\n>> >> consistently testing for and using the warnings-are-errors flag, the problem\n>> >> is eliminated.  During a developer build, readahead() is found to _not_ exist\n>> >> so the compilation works fine.  During a production build, readahead() is\n>> >> found to exist and the compilation works fine since it doesn't use the\n>> >> warnings-are-errors flag.\n>> >\n>> > This sounds like a disaster!\n>> >\n>> > We shouldn't be gaining or loosing features just because we are in a\n>> > developer build.  That way leads to madness, particularly if a user or\n>> > developer encounters a problem, then rebuilds with --enable-developer to\n>> > trace it down.\n>> \n>\n>> IMO, it's worthwhile for developer builds to error upon missing declaration so\n>> I prefer the existing implementation which enables it for all developer\n>> builds.  It should not, however, be enabled at the expense of not being able\n>> to do a compile with a developer build.\n>\n> Are you saying that no header on your system declares readahead()?\n\nExactly.  And some functions, like exit(), are explicitly not declared in\nheader files on many systems.  I believe this has to do with some\ncompatibility issue with C++, but I don't know the details.  \n\n> The correct fix is to fix the missing declaration.\n\nNo.  It's not an individual user's responsibility to make changes to system\nheader files.  There are sometimes reasons (as with exit) that functions are\nnot declared in system header files.  Making manual changes will screw up\nfuture system upgrades.  System header files should not be touched.\n\n> The whole point of the developer build is that issues like this are\n> found and fixed.\n\nNo.  The purpose of that feature (from my point of view -- I don't know who\nput it in or what their intention was) is to ensure that non-declared *SAMBA*\nfunctions are identified and declared, not to try to fix what may or may not\nbe broken systems on which the development is being accomplished.\n\nOn systems that provide declarations for all functions, my change will have no\neffect.  It has an effect only on systems where some system functions are\nmissing declarations in system header files.  If you've succeeded in a\ndeveloper build and compile immediately prior to this change, you will still\nsucceed with no changes to what configure detects nor to your build.  Only\nthose (few?) systems where some functions are missing declarations in system\nheaders are affected, and this change allows them to compile in developer\nmode whereas immediately prior to this change, they could not compile.\n\nI'd still like to hear alternate implementation suggestions that solve the\nproblem.\n\nCheers,\n\nDerrell\n\n"}