{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22587 - in branches: SAMBA_3_0/source/rpc_server\n\tSAMBA_3_0_25/source/rpc_server", "body": "Author: jra\nDate: 2007-04-30 01:17:34 +0000 (Mon, 30 Apr 2007)\nNew Revision: 22587\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22587\n\nLog:\nEnsure TALLOC_ZERO_ARRAY is consistent.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/rpc_server/srv_lsa_nt.c\n   branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\n   branches/SAMBA_3_0/source/rpc_server/srv_spoolss_nt.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_lsa_nt.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/rpc_server/srv_lsa_nt.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_server/srv_lsa_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n+++ branches/SAMBA_3_0/source/rpc_server/srv_lsa_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n@@ -1066,8 +1066,19 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\tif (!ref) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n \n+\tif (num_entries) {\n+\t\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\t\tif (!rids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\trids = NULL;\n+\t}\n+\n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n \t\tgoto done;\n@@ -1079,9 +1090,6 @@\n \t\tgoto done;\n \t}\n \n-\tif (!ref || !rids)\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\n \t/* set up the LSA Lookup RIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_rids(p->mem_ctx, ref, rids, num_entries,\n@@ -1128,14 +1136,23 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n-\trids2 = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID2, num_entries);\n-\n-\tif ((ref == NULL) || (rids == NULL) || (rids2 == NULL)) {\n+\tif (ref == NULL) {\n \t\tr_u->status = NT_STATUS_NO_MEMORY;\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n+\tif (num_entries) {\n+\t\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\t\trids2 = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID2, num_entries);\n+\t\tif ((rids == NULL) || (rids2 == NULL)) {\n+\t\t\tr_u->status = NT_STATUS_NO_MEMORY;\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\trids = NULL;\n+\t\trids2 = NULL;\n+\t}\n+\n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n \t\tgoto done;\n@@ -1200,7 +1217,17 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\tif (ref == NULL) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\tif (num_entries) {\n+\t\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\t\tif (!trans_sids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\ttrans_sids = NULL;\n+\t}\n \n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n@@ -1213,10 +1240,6 @@\n \t\tgoto done;\n \t}\n \n-\tif (!ref || !trans_sids) {\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\t}\n-\n \t/* set up the LSA Lookup SIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_sids(p->mem_ctx, ref, trans_sids, num_entries,\n@@ -1268,12 +1291,19 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n-\n-\tif (!ref || !trans_sids) {\n+\tif (!ref) {\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n+\tif (num_entries) {\n+\t\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\t\tif (!trans_sids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\ttrans_sids = NULL;\n+\t}\n+\n \t/* set up the LSA Lookup SIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_sids(p->mem_ctx, ref, trans_sids, num_entries,\n@@ -1384,8 +1414,12 @@\n \tif (!(handle->access & POLICY_VIEW_LOCAL_INFORMATION))\n \t\treturn NT_STATUS_ACCESS_DENIED;\n \n-\tif ( !(entries = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_PRIV_ENTRY, num_privs )) )\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (num_privs) {\n+\t\tif ( !(entries = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_PRIV_ENTRY, num_privs )) )\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tentries = NULL;\n+\t}\n \n \tfor (i = 0; i < num_privs; i++) {\n \t\tif( i < enum_context) {\n@@ -1489,12 +1523,17 @@\n \tif (q_u->enum_context >= num_entries)\n \t\treturn NT_STATUS_NO_MORE_ENTRIES;\n \n-\tsids->ptr_sid = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_entries-q_u->enum_context);\n-\tsids->sid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_entries-q_u->enum_context);\n+\tif (num_entries-q_u->enum_context) {\n+\t\tsids->ptr_sid = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_entries-q_u->enum_context);\n+\t\tsids->sid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_entries-q_u->enum_context);\n \n-\tif (sids->ptr_sid==NULL || sids->sid==NULL) {\n-\t\tSAFE_FREE(sid_list);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif (sids->ptr_sid==NULL || sids->sid==NULL) {\n+\t\t\tSAFE_FREE(sid_list);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tsids->ptr_sid = NULL;\n+\t\tsids->sid = NULL;\n \t}\n \n \tfor (i = q_u->enum_context, j = 0; i < num_entries; i++, j++) {\n\nModified: branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n+++ branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n@@ -3939,11 +3939,15 @@\n \tif (!NT_STATUS_IS_OK(result))\n \t\treturn result;\n \n-\tattr=TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_members);\n+\tif (num_members) {\n+\t\tattr=TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_members);\n+\t\tif (attr == NULL) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tattr = NULL;\n+\t}\n \t\n-\tif ((num_members!=0) && (attr==NULL))\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\t\n \tfor (i=0; imem_ctx, DOM_R_REF);\n-\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\tif (!ref) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n \n+\tif (num_entries) {\n+\t\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\t\tif (!rids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\trids = NULL;\n+\t}\n+\n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n \t\tgoto done;\n@@ -1082,9 +1093,6 @@\n \t\tgoto done;\n \t}\n \n-\tif (!ref || !rids)\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\n \t/* set up the LSA Lookup RIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_rids(p->mem_ctx, ref, rids, num_entries,\n@@ -1131,14 +1139,23 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n-\trids2 = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID2, num_entries);\n-\n-\tif ((ref == NULL) || (rids == NULL) || (rids2 == NULL)) {\n+\tif (ref == NULL) {\n \t\tr_u->status = NT_STATUS_NO_MEMORY;\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n+\tif (num_entries) {\n+\t\trids = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID, num_entries);\n+\t\trids2 = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_RID2, num_entries);\n+\t\tif ((rids == NULL) || (rids2 == NULL)) {\n+\t\t\tr_u->status = NT_STATUS_NO_MEMORY;\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\trids = NULL;\n+\t\trids2 = NULL;\n+\t}\n+\n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n \t\tgoto done;\n@@ -1203,7 +1220,17 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\tif (ref == NULL) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\tif (num_entries) {\n+\t\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\t\tif (!trans_sids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\ttrans_sids = NULL;\n+\t}\n \n \tif (!find_policy_by_hnd(p, &q_u->pol, (void **)(void *)&handle)) {\n \t\tr_u->status = NT_STATUS_INVALID_HANDLE;\n@@ -1216,10 +1243,6 @@\n \t\tgoto done;\n \t}\n \n-\tif (!ref || !trans_sids) {\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\t}\n-\n \t/* set up the LSA Lookup SIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_sids(p->mem_ctx, ref, trans_sids, num_entries,\n@@ -1271,12 +1294,19 @@\n \t}\n \n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n-\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n-\n-\tif (!ref || !trans_sids) {\n+\tif (!ref) {\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n+\tif (num_entries) {\n+\t\ttrans_sids = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_TRANSLATED_SID3, num_entries);\n+\t\tif (!trans_sids) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\ttrans_sids = NULL;\n+\t}\n+\n \t/* set up the LSA Lookup SIDs response */\n \tbecome_root(); /* lookup_name can require root privs */\n \tr_u->status = lookup_lsa_sids(p->mem_ctx, ref, trans_sids, num_entries,\n@@ -1387,8 +1417,12 @@\n \tif (!(handle->access & POLICY_VIEW_LOCAL_INFORMATION))\n \t\treturn NT_STATUS_ACCESS_DENIED;\n \n-\tif ( !(entries = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_PRIV_ENTRY, num_privs )) )\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (num_privs) {\n+\t\tif ( !(entries = TALLOC_ZERO_ARRAY(p->mem_ctx, LSA_PRIV_ENTRY, num_privs )) )\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tentries = NULL;\n+\t}\n \n \tfor (i = 0; i < num_privs; i++) {\n \t\tif( i < enum_context) {\n@@ -1492,12 +1526,17 @@\n \tif (q_u->enum_context >= num_entries)\n \t\treturn NT_STATUS_NO_MORE_ENTRIES;\n \n-\tsids->ptr_sid = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_entries-q_u->enum_context);\n-\tsids->sid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_entries-q_u->enum_context);\n+\tif (num_entries-q_u->enum_context) {\n+\t\tsids->ptr_sid = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_entries-q_u->enum_context);\n+\t\tsids->sid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_entries-q_u->enum_context);\n \n-\tif (sids->ptr_sid==NULL || sids->sid==NULL) {\n-\t\tSAFE_FREE(sid_list);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif (sids->ptr_sid==NULL || sids->sid==NULL) {\n+\t\t\tSAFE_FREE(sid_list);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tsids->ptr_sid = NULL;\n+\t\tsids->sid = NULL;\n \t}\n \n \tfor (i = q_u->enum_context, j = 0; i < num_entries; i++, j++) {\n\nModified: branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n+++ branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n@@ -3954,11 +3954,15 @@\n \tif (!NT_STATUS_IS_OK(result))\n \t\treturn result;\n \n-\tattr=TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_members);\n+\tif (num_members) {\n+\t\tattr=TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_members);\n+\t\tif (attr == NULL) {\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tattr = NULL;\n+\t}\n \t\n-\tif ((num_members!=0) && (attr==NULL))\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\t\n \tfor (i=0; i<num_members; i++)\n \t\tattr[i] = SID_NAME_USER;\n \n\nModified: branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n+++ branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n@@ -2496,9 +2496,8 @@\n \t\t\t\tif ( printer ) \n \t\t\t\t\tfree_a_printer( &printer, 2 );\n \t\t\t\treturn WERR_NOMEM;\n-\t\t} \n-\t\t} \n-\t\telse {\n+\t\t\t} \n+\t\t} else {\n \t\t\t*data = NULL;\n \t\t}\n \t}\n\n"}