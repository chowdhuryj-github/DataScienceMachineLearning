{"category": "ham", "to_address": "mw-u2@gmx.de", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Use R in a pipeline as a filter", "body": "This is one of the things that 'Rscript' is for: see 'An Introduction to \nR' (section B.4 in the HTML version, \nhttp://cran.r-project.org/doc/manuals/R-intro.html#Scripting-with-R).\n\nYou haven't even told us your version of R or OS (see the posting guide):\nyou need R >= 2.5.0 for this.  But your 'example' would be\n\n./generate-data | Rscript Script.R | ./further-analyse-data > result.dat\n\n\nOn Thu, 7 Jun 2007, mw-u2@gmx.de wrote:\n\n> Hi,\n>\n> how can I use R in a pipline like this\n>\n> $ ./generate-data | R --script-file=Script.R | ./further-analyse-data > result.dat\n>\n> Assume a column based output of ./generate-data, e.g. something like:\n> 1 1 1\n> 2 4 8\n> 3 9 27\n> 4 16 64\n>\n> The R commands that process the data should come from Script.R and \n> should print to stdout (Script.R could for example calculate the square \n> of every entry or calculate the mean of the columns, ...)\n>\n> The output should be printed to stdout, such that further-analyse-data \n> can use the output.\n>\n> Can some R expert code that for me please? I would be very happy. I am \n> also happy about information how to do that myself although I dont think \n> I know enough to do that myself.\n>\n> Thank you for your consideration,\n>\n> Micha\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}