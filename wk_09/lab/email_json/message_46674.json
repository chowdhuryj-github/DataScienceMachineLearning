{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: Declaring constants in perl", "body": "From: Paul Lalli \n> On Jun 8, 7:33 am, alok.n...@hp.com (Alok Nath) wrote:\n> >         What is the convention used to declare constants in perl ?\n> >         In C we declare constant type in Capital letters , not sure\n> >         how its in perl.\n> \n> There is a 'constant' pragma in Perl that you can use:\n> use constant PI => 3.14;\n> \n> but it is \"better\" these days to use the Readonly module, available on\n> the CPAN.  They have several advantages over constants:\n> 1) They can be defined lexically - constants are globals (because\n> they're implemented as subroutines)\n> 2) They interpolate into strings, because they're real variables\n> 3) You can define Readonly hashes and arrays as well as scalars.\n> \n> So many people would prefer you abandon the first example I gave, and\n> replace it with:\n> use Readonly;\n> Readonly my $PI => 3.14;\n> \n> Paul Lalli\n\nEverything has it's pros and cons. \n\n1) The constant pragma is already installed with any Perl 5.004 or \nnewer, while you have to install Readonly.pm\n\n2) The constants created by the constant pragma are actually known \nand believed to be constant in compiletime and the optimizer may use \nthat knowledge. \n\nCompare\n\nperl -MO=Deparse -e \"use constant FOO => 0; expensive() if FOO; print \n1;\"\n\t  ==>\n\tuse constant ('FOO', 0);\n\t'???';\n\tprint 1;\n\nand\n\nperl -MO=Deparse -e \"use Readonly; Readonly my $FOO => 0; expensive() \nif $FOO; print 1;\"\n\t  ==>\n\tuse Readonly;\n\tReadonly my $FOO, 0;\n\texpensive() if $FOO;\n\tprint 1;\n\nor\n\nperl -MO=Deparse -e \"use constant X => 12414; print X*78.7;\"\n\t  ==>\n\tuse constant ('X', 12414);\n\tprint 976981.8;\n\nand\n\nperl -MO=Deparse -e \"use Readonly; Readonly my $X => 12414; print \n$X*78.7;\"\n\t  ==>\n\tuse Readonly;\n\tReadonly my $X, 12414;\n\tprint $X * 78.7;\n\nAs you can see with \"use constant\" the optimizer has a chance to \nremove inaccessible code or precompute some constant dependent \nexpressions, with Readonly it can't.\n\n\nWhich may or may not matter, but you should be aware of that.\n\nJenda\nP.S.: The -MO=Deparse tells perl to parse, compile and optimize the \ncode and then instead of executing it, convert it \"back\" to readable \ncode and print.\n\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}