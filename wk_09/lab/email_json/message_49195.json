{"category": "ham", "to_address": "sivasakthi <msivasakthi@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Comparing the Perl encrypted files", "body": "On 6/15/07, sivasakthi  wrote:\n>\n> > text mode: Line endings are translated to/from Perl's end-of-line\n> > character \"\\n\" to the host operating system's end-of-line character\n> > (CRLF for DOS based machines, LF for UNIX based machines, etc.)\n> >\n> > binary mode (aka raw): No translations are made.  Characters/bytes are\n> > written directly to the file.\n> >\n> > encryption: A method of making data (hopeful) unreadable, but\n> > recoverable, using an algorithm.  The output can be either binary or\n> > text depending on the algorithm.\n> >\n> > Do you want to compare two binary files to see if they have the same contents?\n>\n>\n> Yes..i need  to compare the contents of  two binary files..\n\nAlright, now that we understand what you want the question becomes why?\n\nWhy use Perl?  Is this part of some larger script?\nIs an approximation of equality good enough?\nAre we talking about equality or equivalence (every byte the same or\ncontains the same records, but possibly in a different order)?\nHow large are the files?\n\nHere is a simple script that will compare two or more files in a\nbinary fashion, but it is no better than the standard Unix utilities.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\ndie \"you must specify at least two files\\n\" unless @ARGV >= 2;\n\nmy @files = map { open my $f, '<', $_ or die \"could not open $_\"; $f } @ARGV;\n\n$/ = \\4096;\n\nmy $chunk = 0;\nwhile (1) {\n        my @chunks = grep { defined } map { scalar <$_> } @files;\n\n        last if @chunks == 0;\n\n        die \"files don't match\\n\" unless @chunks == @files;\n\n        my $first = shift @chunks;\n        die \"files don't match\\n\" if grep { $_ ne $first } @chunks;\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}