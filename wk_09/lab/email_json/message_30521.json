{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "Leopold Toetsch <lt@toetsch.at>", "subject": "Re: [perl #42961] [PATCH] add const qualifiers to free signature", "body": "Am Dienstag, 15. Mai 2007 21:28 schrieb Nicholas Clark:\n> On Tue, May 15, 2007 at 12:10:09PM -0700, Mike Mattie wrote:\n> > If someone remembers the magic to muzzle the compiler around free( from )\n> > in memory.c please feel free to amend the patch.\n>\n> I remember being told that there's a trick involving a union. Something\n> like\n>\n> union {\n>   void *out;\n>   const void *in;\n> } launder;\n>\n> You assign to in, then read from out. Et voila, you launder the const away.\n\nWell, there is of course ;) such a macro already:\n\ninclude/parrot/parrot.h:#define const_cast(b) (__ptr_u.__c_ptr = (b), \n__ptr_u.__ptr)\n\nSee usage in e.g.\n\n$ grep const_cast src/string.c\n\n> Nicholas Clark\n\nleo\n\n"}