{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: cat (.sh) in Perl", "body": "Seanie wrote:\n> yitzle wrote:\n>>`cat m.top.html m.mid.html m.arc.html m.bot.html > blah`\n>>How can this be done without a system call?\n> \n> As a general rule, if your script contains 'system()' anywhere in it, you've \n> done it wrong. This is especially true for simple file operations such as \n> the above, and for anything else CPAN has yet to fail me. I can't remember \n> the last time I was forced to shell out to get something done.\n> \n>>Here's my first guess:\n>>@doc = ();\n>>for (qw/m.top.html m.mid.html m.arc.html m.bot.html/) {\n>>\topen $FILE,\"<\",\"$root/$_\";\n>>\tmy @tmp = <$FILE>;\n>>\t@doc = (@doc,@tmp);\n>>\tclose $FILE;\n>>}\n>>open $FILE,\">\",\"blah\";\n>>print $FILE $_ foreach(@doc);\n>>close $FILE;\n>>\n>>Is there something I'm missing?\n> \n> Quite a lot, yes.\n> \n> Always use the strict and warnings pragmas, no exceptions, and test to ensure \n> operations on files, sockets etc have worked before moving on.\n> You don't need to loop your file contents in, and then loop them back out \n> again separately later; one for loop will suffice for both.\n> Your syntax for the open() statements is a bit dodgy too :-)\n\nPerl defines the syntax so you must mean something else?  :-)\n\n> Here's a fairly verbose chunk of code that ought to do what you want:\n> \n> use strict;\n> use warnings;\n> open OUTFILE, \">blah\" or die \"error creating output file\\n\";\n\nYou should also include the $! or $^E variable in the error message so you\nknow *why* it failed.\n\n> for my $infile (qw|m.top.html m.mid.html m.arc.html m.bot.html|){\n>   die \"$infile not found\" unless -r \"$root/$infile\"; # or use next to skip it\n\n$infile could exist and not be readable so the message \"$infile not found\"\ndoes not accurately describe the problem and if you are logged in as root then\nthe file is readable reguardless.  Also you have a race condition where the\nfile could be made unreadable between that statement and the next one.\n\n>   open INFILE, \"<$root/$infile\" or die \"error opening input file\\n\";\n\nSee above about $! and/or $^E.\n\n>   print OUTFILE while ();\n>   close INFILE;\n>   }\n> close OUTFILE;\n> \n> Keep in mind that there are plenty of other ways of doing this, some terser \n> than others. You can even do this:\n> \n> perl -pe m.top.html m.mid.html m.arc.html m.bot.html > blah\n> \n> ....which is Perl doing a very convincing cat impression.\n\nExcept that you are saying that 'm.top.html' is a Perl program that perl\nshould compile and run (which will probably produce a *lot* of error messages.)\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}