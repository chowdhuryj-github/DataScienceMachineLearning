{"category": "ham", "to_address": "\"Booman, M\" <m.booman@path.umcg.nl>, r-help@stat.math.ethz.ch", "from_address": "\"Liaw, Andy\" <andy_liaw@merck.com>", "subject": "Re: [R] Help on averaging sets of rows defined by row name", "body": "Do note that I used dat[1] instead of dat[,1] or dat[[1]] as the second\nargument to aggregate():  If dat is a data frame, then dat[1] is also a\ndata frame with only the first column.  Since data frame is also a list,\ndat[1] is a one-component list.\n \nMy guess is that Tierry didn't try his suggestion, or else he would have\nnoticed the error.\n \nAndy\n\n\n________________________________\n\n\tFrom: Booman, M [mailto:m.booman@path.umcg.nl] \n\tSent: Friday, April 20, 2007 10:26 AM\n\tTo: Liaw, Andy; r-help@stat.math.ethz.ch\n\tSubject: RE: [R] Help on averaging sets of rows defined by row\nname\n\t\n\t\n\n\tThanks for your help everyone!\n\tI had some trouble with the 'aggregate' function because the\n'table.impute[,1]' was not a list (which the 'by' argument should be),\nand it took a very very long time to coerce it into one. But the\nrowmeans method works almost instantly! And I have no problems with NA's\nbecause I used a knn imputer first.\n\t\n\t\n\t-----Original Message-----\n\tFrom: Liaw, Andy [mailto:andy_liaw@merck.com]\n\tSent: Fri 4/20/2007 4:09 PM\n\tTo: Booman, M; r-help@stat.math.ethz.ch\n\tSubject: RE: [R] Help on averaging sets of rows defined by row\nname\n\t\n\tYou might want to check which of the following scales better for\nthe\n\tsize of data you have.\n\t\n\t## Make up some data to try.\n\tR> dat <- data.frame(gene=rep(letters[1:3], each=3),\ns1=runif(9),\n\ts2=runif(9))\n\tR> dat\n\t  gene        s1        s2\n\t1    a 0.9959172 0.9531052\n\t2    a 0.2064497 0.4257022\n\t3    a 0.4791100 0.5977923\n\t4    b 0.1307096 0.8256453\n\t5    b 0.7887983 0.8904983\n\t6    b 0.7841745 0.6901540\n\t7    c 0.3356583 0.7125086\n\t8    c 0.5859311 0.0509323\n\t9    c 0.7681325 0.8677725\n\t\n\t## Use aggregate():\n\tR> aggregate(dat[-1], dat[1], mean)\n\t  gene        s1        s2\n\t1    a 0.5604923 0.6588666\n\t2    b 0.5678941 0.8020992\n\t3    c 0.5632407 0.5437378\n\t\n\t## Do it \"by hand\": need a bit more work if there are Nas.\n\tR> rowsum(dat[-1], dat[[1]]) / table(dat[[1]])\n\t         s1        s2\n\ta 0.5604923 0.6588666\n\tb 0.5678941 0.8020992\n\tc 0.5632407 0.5437378\n\t\n\tAndy\n\t\n\t\n\tFrom: Booman, M\n\t>\n\t> Dear all,\n\t>\n\t> This is my problem: I have a table of gene expression data,\n\t> where 1st column is gene name, and 2nd -39th columns each are\n\t> exression data for 38 samples. There are multiple\n\t> measurements per sample for each gene, so there are multiple\n\t> rows for each gene name. I want to average these measurements\n\t> so i end up with one value per sample for each gene name. The\n\t> output data frame (table.averaged) is further used in other R\n\t> script. The code I use now (see below) takes 20 secs for each\n\t> loop, so it takes 45 minutes to average my files of 13500\n\t> unique genes. Can anyone help me do this faster?\n\t>\n\t> Cheers, marije\n\t>\n\t> Code I use:\n\t>\n\t>\n\t> table.imputed[,1] <- as.character(table.imputed[,1])   \n\t> #table.imputed is data.frame,1st column = gene name (class\n\t> factor), rest of columns = expression data (class numeric)\n\t>\n\t> genesunique <- unique(table.imputed[,1])                  \n\t> #To make list of unique genes in the set\n\t>\n\t> table.averaged <- NULL\n\t>   for (j in 1:length(genesunique)) {\n\t>      if (j%%100 == 0){                                       \n\t>            #To report progress\n\t>        cat(j, \"genes finished\", sep=\" \", fill=TRUE)\n\t>        }\n\t>     \n\t> table.averaged<-rbind(table.averaged,givemean(genesunique[j],\n\t> table.imputed))   #collects all rows of average values and\n\t> binds them back into one data frame\n\t>   }\n\t>\n\t> givemean <- function (gene, table.imputed) {\n\t>    thisgene<-table.imputed[table.imputed[,1]==gene,]         \n\t>                              #make a subset containing only\n\t> the rows for one gene name\n\t>    data.frame(gene,t(sapply(thisgene[,2:ncol(thisgene)],mean,\n\t> na.rm=TRUE)))     #calculates average for each sample\n\t> (column) and outputs one row of average values and the gene\nname\n\t> }\n\t>\n\t>\n\t> De inhoud van dit bericht is vertrouwelijk en alleen bestemd\n\t> voor de geadresseerde(n). Anderen dan de geadresseerde mogen\n\t> geen gebruik maken van dit bericht, het openbaar maken of op\n\t> enige wijze verspreiden of vermenigvuldigen. Het UMCG kan\n\t> niet aansprakelijk gesteld worden voor een incomplete\n\t> aankomst of vertraging van dit verzonden bericht.\n\t>\n\t> The contents of this message are confidential and only\n\t> intended for the eyes of the addressee(s). Others than the\n\t> addressee(s) are not allowed to use this message, to make it\n\t> public or to distribute or multiply this message in any way.\n\t> The UMCG cannot be held responsible for incomplete reception\n\t> or delay of this transferred message.\n\t>\n\t\n\t\n\t\n------------------------------------------------------------------------\n------\n\tNotice:  This e-mail message, together with any attachments,\ncontains\n\tinformation of Merck & Co., Inc. (One Merck Drive, Whitehouse\nStation,\n\tNew Jersey, USA 08889), and/or its affiliates (which may be\nknown\n\toutside the United States as Merck Frosst, Merck Sharp & Dohme\nor MSD\n\tand in Japan, as Banyu - direct contact information for\naffiliates is\n\tavailable at http://www.merck.com/contact/contacts.html) that\nmay be\n\tconfidential, proprietary copyrighted and/or legally privileged.\nIt is\n\tintended solely for the use of the individual or entity named on\nthis\n\tmessage. If you are not the intended recipient, and have\nreceived this\n\tmessage in error, please notify us immediately by reply e-mail\nand then\n\tdelete it from your system.\n\t\n\t\n------------------------------------------------------------------------\n------\n\t\n\t\n\n\t\n________________________________\n\n\tDe inhoud van dit bericht is vertrouwelijk en alleen bestemd\nvoor de geadresseerde(n). Anderen dan de geadresseerde mogen geen\ngebruik maken van dit bericht, het openbaar maken of op enige wijze\nverspreiden of vermenigvuldigen. Het UMCG kan niet aansprakelijk gesteld\nworden voor een incomplete aankomst of vertraging van dit verzonden\nbericht.\n\t\n\tThe contents of this message are confidential and only intended\nfor the eyes of the addressee(s). Others than the addressee(s) are not\nallowed to use this message, to make it public or to distribute or\nmultiply this message in any way. The UMCG cannot be held responsible\nfor incomplete reception or delay of this transferred message. \n\n\t\n\n\n------------------------------------------------------------------------------\nNotice:  This e-mail message, together with any attachments,...{{dropped}}\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}