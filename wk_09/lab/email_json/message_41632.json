{"category": "ham", "to_address": "\"Jonathan Lang\" <dataweaver@gmail.com>,\n   \"Chas Owens\" <chas.owens@gmail.com>, p6l <perl6-language@perl.org>", "from_address": "\"Mark J. Reed\" <markjreed@mail.com>", "subject": "Re: 'x' vs. 'xx'", "body": "Is \"item context\" what we're calling scalar these days, or something else?\n\nOn 6/3/07, Jonathan Lang  wrote:\n> Chas Owens wrote:\n> > I am almost certain that the following code is in list context.\n> >\n> > pugs> my @a = '-' x 5, 'foo', '-' x 5;\n> > pugs> @a\n> > (\"-----\", \"foo\", \"-----\")\n> > pugs> my @b = cat('-' xx 5), 'foo', cat('-' xx 5)\n> > (\"-\", \"-\", \"-\", \"-\", \"-\", \"foo\", \"-\", \"-\", \"-\", \"-\", \"-\")\n> >\n> > However, it does seem that Pug's version of cat does not handle the\n> > Str emulation, so that may fix it, but I don't see how it could since\n> > (at least in my mind) the code above is in list context.\n>\n> You're right; it is.\n>\n> From what you're saying, I get the impression that you think that \"'-'\n> x 5\" ought to produce a single string of five dashes regardless of\n> whether the context is item or list.  Correct?  (Note: I'm not asking\n> about what the spec says, since what it says is potentially up for\n> revision, given sufficient cause; I'm asking about what you think the\n> spec _should_ say.)  If so, \"cat($n xx *)\" is not an adequate\n> replacement for \"$n x *\", since it produces a list of one-character\n> strings if used in list context.  OTOH, \"~cat($n xx *)\" might work.\n>\n> Personally, I would tend to favor the notion that infix: always\n> produces a single string.  With this in mind, I'm now leaning toward\n> \"~cat($a xx $n)\" as the more verbose equivalent of \"$a x $n\".  You\n> always produce a single string, and you do so lazily (according to the\n> way that 'cat' works in item context).\n>\n> --\n> Jonathan \"Dataweaver\" Lang\n>\n\n\n-- \nMark J. Reed \n"}