{"category": "ham", "to_address": "p2 <parrot-porters@perl.org>", "from_address": "Allison Randal <allison@perl.org>", "subject": "PMC Proxy high-level review", "body": "While putting together the news entries for the 0.4.13 release, I ended \nup doing a code review on PMCProxy.\n\nIt looks like every low-level PMC is creating a proxy object for itself \nand these proxies are stored in the interpreter global parrot_interp_t.\n\nI intended that proxies would only be created when they were needed by a \nsubclassing Class PMC, and would only be stored in the Class PMC.\n\n\nLooking at the code from another perspective, though, maybe what we've \ngot here is the beginning of an \"HLLSubclassable\" role that adds a \nhandful of Class methods to low-level PMCs.\n\nUltimately all PMCs need to be able to respond to inspect_str. And \nultimately, all PMCs need to have an entry in their NameSpace so the \ntype IDs can go away entirely. So these parts of the implementation are \nmore general than PMCProxy.\n\nAllison\n\n"}