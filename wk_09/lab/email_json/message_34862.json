{"category": "ham", "to_address": "Mike White <mikewhite.diu@btconnect.com>", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] Fisher's r to z' transformation - help needed", "body": "On 5/23/2007 7:40 AM, Mike White wrote:\n> I am trying to use Fisher's z' transformation of the Pearson's r but the\n> standard error does not appear to be correct.  I have simulated an example\n> using the R code below.  The z' data appears to have a reasonably normal\n> distribution but the standard error given by the formula 1/sqrt(N-3) (from\n> http://davidmlane.com/hyperstat/A98696.html) gives a different results than\n> sd(z).  Can anyone tell me where I am going wrong?\n\nYour simulation is very strange.  Why are you calculating the \ncorrelation of data with its own mean?\n\nHere's a simpler simulation that seems to confirm the approximation is \nreasonable:\n\n > p <- 10\n > sdx <- 1\n > sdy <- 1\n > x <- matrix(rnorm(1000*p, sd=sdx), 1000, p)\n > y <- matrix(rnorm(1000*p, mean=x, sd=sdy), 1000, p)\n\nThe true correlation is sdx/sqrt(sdx^2 + sdy^2), i.e. 0.71.\n\n > r <- numeric(1000)\n > for (i in 1:1000) r[i] <- cor(x[i,], y[i,])\n > f <- 0.5*(log(1+r) - log(1-r))\n > sd(f)\n[1] 0.3739086\n > 1/sqrt(p-3)\n[1] 0.3779645\n\n > p <- 5\n > x <- matrix(rnorm(1000*p, sd=sdx), 1000, p)\n > y <- matrix(rnorm(1000*p, mean=x, sd=sdy), 1000, p)\n > r <- numeric(1000)\n > for (i in 1:1000) r[i] <- cor(x[i,], y[i,])\n > f <- 0.5*(log(1+r) - log(1-r))\n > sd(f)\n[1] 0.6571383\n > 1/sqrt(p-3)\n[1] 0.7071068\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}