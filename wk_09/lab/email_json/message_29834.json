{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 301: added a -i switch to run ctdbd without forking in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 301\nrevision-id: tridge@samba.org-20070514234433-s9apc5wp2heogcya\nparent: tridge@samba.org-20070514234403-ghdhn9vpf6fyqnhq\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-05-15 09:44:33 +1000\nmessage:\n  added a -i switch to run ctdbd without forking\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  direct/ctdbd.c                 ctdbd.c-20070411085044-dqmhr6mfeexnyt4m-1\n  include/ctdb.h                 ctdb.h-20061117234101-o3qt14umlg9en8z0-11\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-05-12 23:20:16 +0000\n+++ b/common/ctdb_daemon.c\t2007-05-14 23:44:33 +0000\n@@ -62,7 +62,10 @@\n \t}\n \n \t/* start the transport running */\n-\tctdb->methods->start(ctdb);\n+\tif (ctdb->methods->start(ctdb) != 0) {\n+\t\tDEBUG(0,(\"transport failed to start!\\n\"));\n+\t\tctdb_fatal(ctdb, \"transport failed to start\");\n+\t}\n \n \t/* go into a wait loop to allow other nodes to complete */\n \tevent_loop_wait(ctdb->ev);\n@@ -603,11 +606,14 @@\n \t\treturn -1;\n \t}\n \n+#if 0\n+\t/* AIX doesn't like this :( */\n \tif (fchown(ctdb->daemon.sd, geteuid(), getegid()) != 0 ||\n \t    fchmod(ctdb->daemon.sd, 0700) != 0) {\n \t\tDEBUG(0,(\"Unable to secure ctdb socket '%s', ctdb->daemon.name\\n\"));\n \t\tgoto failed;\n \t}\n+#endif\n \n \tset_non_blocking(ctdb->daemon.sd);\n \n@@ -701,7 +707,7 @@\n /*\n   start the protocol going as a daemon\n */\n-int ctdb_start_daemon(struct ctdb_context *ctdb)\n+int ctdb_start_daemon(struct ctdb_context *ctdb, bool do_fork)\n {\n \tint res;\n \tstruct fd_event *fde;\n@@ -717,13 +723,15 @@\n \t\texit(10);\n \t}\n \n-\tif (fork()) {\n+\tif (do_fork && fork()) {\n \t\treturn 0;\n \t}\n \n \ttdb_reopen_all(False);\n \n-\tsetsid();\n+\tif (do_fork) {\n+\t\tsetsid();\n+\t}\n \tblock_signal(SIGPIPE);\n \tblock_signal(SIGCHLD);\n \n\n=== modified file 'direct/ctdbd.c'\n--- a/direct/ctdbd.c\t2007-04-30 13:31:40 +0000\n+++ b/direct/ctdbd.c\t2007-05-14 23:44:33 +0000\n@@ -45,10 +45,12 @@\n int main(int argc, const char *argv[])\n {\n \tstruct ctdb_context *ctdb;\n+\tint interactive = 0;\n \n \tstruct poptOption popt_options[] = {\n \t\tPOPT_AUTOHELP\n \t\tPOPT_CTDB_CMDLINE\n+\t\t{ \"interactive\", 'i', POPT_ARG_NONE, &interactive, 0, \"don't fork\", NULL },\n \t\tPOPT_TABLEEND\n \t};\n \tint opt;\n@@ -90,5 +92,5 @@\n \t}\n \n \t/* start the protocol running (as a child) */\n-\treturn ctdb_start_daemon(ctdb);\n+\treturn ctdb_start_daemon(ctdb, interactive?False:True);\n }\n\n=== modified file 'include/ctdb.h'\n--- a/include/ctdb.h\t2007-05-12 05:15:27 +0000\n+++ b/include/ctdb.h\t2007-05-14 23:44:33 +0000\n@@ -112,7 +112,7 @@\n   start the ctdb protocol\n */\n int ctdb_start(struct ctdb_context *ctdb);\n-int ctdb_start_daemon(struct ctdb_context *ctdb);\n+int ctdb_start_daemon(struct ctdb_context *ctdb, bool do_fork);\n \n /*\n   attach to a ctdb database\n\n"}