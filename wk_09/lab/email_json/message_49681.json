{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r23530 - in branches: SAMBA_3_0/source/auth\n\tSAMBA_3_0_25/source/auth SAMBA_3_0_26/source/auth", "body": "Author: jra\nDate: 2007-06-17 19:23:32 +0000 (Sun, 17 Jun 2007)\nNew Revision: 23530\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23530\n\nLog:\nFix bugs #4678 and #4697 which had the same root cause.\nIn make_server_info_pw() we assign a user SID in our\nauthoritative SAM, even though this may be from a\npure \"Unix User\" that doesn't exist in the SAM.\nThis causes lookups on \"[in]valid users\" to fail as they\nwill lookup this name as a \"Unix User\" SID to check against\nthe user token. Fix this by adding the \"Unix User\"\\unix_username\nSID to the sid array. The correct fix should probably be\nchanging the server_info->sam_account user SID to be a\nS-1-22 Unix SID, but this might break old configs where\nplaintext passwords were used with no SAM backend.\nJeremy\n\nModified:\n   branches/SAMBA_3_0/source/auth/auth_util.c\n   branches/SAMBA_3_0_25/source/auth/auth_util.c\n   branches/SAMBA_3_0_26/source/auth/auth_util.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/auth/auth_util.c\n===================================================================\n--- branches/SAMBA_3_0/source/auth/auth_util.c\t2007-06-17 16:46:44 UTC (rev 23529)\n+++ branches/SAMBA_3_0/source/auth/auth_util.c\t2007-06-17 19:23:32 UTC (rev 23530)\n@@ -966,6 +966,10 @@\n \tNTSTATUS status;\n \tstruct samu *sampass = NULL;\n \tgid_t *gids;\n+\tchar *qualified_name = NULL;\n+\tTALLOC_CTX *mem_ctx = NULL;\n+\tDOM_SID u_sid;\n+\tenum lsa_SidType type;\n \tauth_serversupplied_info *result;\n \t\n \tif ( !(sampass = samu_new( NULL )) ) {\n@@ -999,6 +1003,56 @@\n \t\treturn status;\n \t}\n \n+\t/*\n+\t * The SID returned in server_info->sam_account is based\n+\t * on our SAM sid even though for a pure UNIX account this should\n+\t * not be the case as it doesn't really exist in the SAM db.\n+\t * This causes lookups on \"[in]valid users\" to fail as they\n+\t * will lookup this name as a \"Unix User\" SID to check against\n+\t * the user token. Fix this by adding the \"Unix User\"\\unix_username\n+\t * SID to the sid array. The correct fix should probably be\n+\t * changing the server_info->sam_account user SID to be a\n+\t * S-1-22 Unix SID, but this might break old configs where\n+\t * plaintext passwords were used with no SAM backend.\n+\t */\n+\n+\tmem_ctx = talloc_init(\"make_server_info_pw_tmp\");\n+\tif (!mem_ctx) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tqualified_name = talloc_asprintf(mem_ctx, \"%s\\\\%s\",\n+\t\t\t\t\tunix_users_domain_name(),\n+\t\t\t\t\tunix_username );\n+\tif (!qualified_name) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tif (!lookup_name(mem_ctx, qualified_name, LOOKUP_NAME_ALL,\n+\t\t\t\t\t\tNULL, NULL,\n+\t\t\t\t\t\t&u_sid, &type)) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tTALLOC_FREE(mem_ctx);\n+\n+\tif (type != SID_NAME_USER) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tif (!add_sid_to_array_unique(result, &u_sid,\n+\t\t\t\t\t&result->sids,\n+\t\t\t\t\t&result->num_sids)) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n \t/* For now we throw away the gids and convert via sid_to_gid\n \t * later. This needs fixing, but I'd like to get the code straight and\n \t * simple first. */\n\nModified: branches/SAMBA_3_0_25/source/auth/auth_util.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/auth/auth_util.c\t2007-06-17 16:46:44 UTC (rev 23529)\n+++ branches/SAMBA_3_0_25/source/auth/auth_util.c\t2007-06-17 19:23:32 UTC (rev 23530)\n@@ -1356,6 +1356,10 @@\n \tNTSTATUS status;\n \tstruct samu *sampass = NULL;\n \tgid_t *gids;\n+\tchar *qualified_name = NULL;\n+\tTALLOC_CTX *mem_ctx = NULL;\n+\tDOM_SID u_sid;\n+\tenum lsa_SidType type;\n \tauth_serversupplied_info *result;\n \t\n \tif ( !(sampass = samu_new( NULL )) ) {\n@@ -1389,6 +1393,56 @@\n \t\treturn status;\n \t}\n \n+\t/*\n+\t * The SID returned in server_info->sam_account is based\n+\t * on our SAM sid even though for a pure UNIX account this should\n+\t * not be the case as it doesn't really exist in the SAM db.\n+\t * This causes lookups on \"[in]valid users\" to fail as they\n+\t * will lookup this name as a \"Unix User\" SID to check against\n+\t * the user token. Fix this by adding the \"Unix User\"\\unix_username\n+\t * SID to the sid array. The correct fix should probably be\n+\t * changing the server_info->sam_account user SID to be a\n+\t * S-1-22 Unix SID, but this might break old configs where\n+\t * plaintext passwords were used with no SAM backend.\n+\t */\n+\n+\tmem_ctx = talloc_init(\"make_server_info_pw_tmp\");\n+\tif (!mem_ctx) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tqualified_name = talloc_asprintf(mem_ctx, \"%s\\\\%s\",\n+\t\t\t\t\tunix_users_domain_name(),\n+\t\t\t\t\tunix_username );\n+\tif (!qualified_name) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tif (!lookup_name(mem_ctx, qualified_name, LOOKUP_NAME_ALL,\n+\t\t\t\t\t\tNULL, NULL,\n+\t\t\t\t\t\t&u_sid, &type)) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tTALLOC_FREE(mem_ctx);\n+\n+\tif (type != SID_NAME_USER) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tif (!add_sid_to_array_unique(result, &u_sid,\n+\t\t\t\t\t&result->sids,\n+\t\t\t\t\t&result->num_sids)) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n \t/* For now we throw away the gids and convert via sid_to_gid\n \t * later. This needs fixing, but I'd like to get the code straight and\n \t * simple first. */\n\nModified: branches/SAMBA_3_0_26/source/auth/auth_util.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/auth/auth_util.c\t2007-06-17 16:46:44 UTC (rev 23529)\n+++ branches/SAMBA_3_0_26/source/auth/auth_util.c\t2007-06-17 19:23:32 UTC (rev 23530)\n@@ -966,6 +966,10 @@\n \tNTSTATUS status;\n \tstruct samu *sampass = NULL;\n \tgid_t *gids;\n+\tchar *qualified_name = NULL;\n+\tTALLOC_CTX *mem_ctx = NULL;\n+\tDOM_SID u_sid;\n+\tenum lsa_SidType type;\n \tauth_serversupplied_info *result;\n \t\n \tif ( !(sampass = samu_new( NULL )) ) {\n@@ -999,6 +1003,56 @@\n \t\treturn status;\n \t}\n \n+\t/*\n+\t * The SID returned in server_info->sam_account is based\n+\t * on our SAM sid even though for a pure UNIX account this should\n+\t * not be the case as it doesn't really exist in the SAM db.\n+\t * This causes lookups on \"[in]valid users\" to fail as they\n+\t * will lookup this name as a \"Unix User\" SID to check against\n+\t * the user token. Fix this by adding the \"Unix User\"\\unix_username\n+\t * SID to the sid array. The correct fix should probably be\n+\t * changing the server_info->sam_account user SID to be a\n+\t * S-1-22 Unix SID, but this might break old configs where\n+\t * plaintext passwords were used with no SAM backend.\n+\t */\n+\n+\tmem_ctx = talloc_init(\"make_server_info_pw_tmp\");\n+\tif (!mem_ctx) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tqualified_name = talloc_asprintf(mem_ctx, \"%s\\\\%s\",\n+\t\t\t\t\tunix_users_domain_name(),\n+\t\t\t\t\tunix_username );\n+\tif (!qualified_name) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n+\tif (!lookup_name(mem_ctx, qualified_name, LOOKUP_NAME_ALL,\n+\t\t\t\t\t\tNULL, NULL,\n+\t\t\t\t\t\t&u_sid, &type)) {\n+\t\tTALLOC_FREE(result);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tTALLOC_FREE(mem_ctx);\n+\n+\tif (type != SID_NAME_USER) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_SUCH_USER;\n+\t}\n+\n+\tif (!add_sid_to_array_unique(result, &u_sid,\n+\t\t\t\t\t&result->sids,\n+\t\t\t\t\t&result->num_sids)) {\n+\t\tTALLOC_FREE(result);\n+\t\treturn NT_STATUS_NO_MEMORY;\n+\t}\n+\n \t/* For now we throw away the gids and convert via sid_to_gid\n \t * later. This needs fixing, but I'd like to get the code straight and\n \t * simple first. */\n\n"}