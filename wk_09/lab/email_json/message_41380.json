{"category": "ham", "to_address": "\"Chas Owens\" <chas.owens@gmail.com>", "from_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "subject": "Re: 'x' vs. 'xx'", "body": "Chas Owens wrote:\n> Jonathan Lang wrote:\n> > Is there any reason why we can't simply define '$a x $n' as being\n> > shorthand for 'cat($a xx $n)'?  In what way does the former differ\n> > from the latter, other than the use of a Whatever in place of $n?\n>\n> \"$a x $n\" is equivalent to \"join '', $a xx $n\", but that isn't an apt\n> description of its behavior.  \"cat($a xx *)\" is an attempt to provide\n> an infinite string since 'a' x Inf would result in memory overflow\n> (but the cat trick works since lists are evaluated lazily).\n\nThen it looks to me like 'cat($a xx $n)' is more flexible than \"join\n'', $a xx $n\", and would work better as the baseline definition for\n'$a x $n'.  Is there any reason to prefer a join-based definition to a\ncat-based one?  AFAICT, the only thing that 'join' can do that 'cat'\ncan't is to provide a delimiter when stitching the component strings\ntogether; in the case of 'x', this feature is (rightfully) not being\nused.\n\n-- \nJonathan \"Dataweaver\" Lang\n\n"}