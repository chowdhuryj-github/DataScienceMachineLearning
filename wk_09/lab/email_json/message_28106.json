{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 287: make sure we ignore requeued ctdb_call packets of older\n\tgenerations except for packets from the client in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 287\nrevision-id: tridge@samba.org-20070512080850-g6h43oqsh8ngm5np\nparent: tridge@samba.org-20070512060456-ooug9gdg7obqndrj\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-05-12 18:08:50 +1000\nmessage:\n  make sure we ignore requeued ctdb_call packets of older generations except for packets from the client\nmodified:\n  common/ctdb_call.c             ctdb_call.c-20061128065342-to93h6eejj5kon81-1\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n  common/ctdb_recover.c          ctdb_recover.c-20070503002147-admmfgt1oj6gexfo-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n=== modified file 'common/ctdb_call.c'\n--- a/common/ctdb_call.c\t2007-05-11 00:33:43 +0000\n+++ b/common/ctdb_call.c\t2007-05-12 08:08:50 +0000\n@@ -363,7 +363,7 @@\n \t\n \t/* fetch the current record */\n \tret = ctdb_ltdb_lock_fetch_requeue(ctdb_db, key, &header, hdr, &data2,\n-\t\t\t\t\t   ctdb_recv_raw_pkt, ctdb);\n+\t\t\t\t\t   ctdb_recv_raw_pkt, ctdb, False);\n \tif (ret == -1) {\n \t\tctdb_fatal(ctdb, \"ctdb_req_dmaster failed to fetch record\");\n \t\treturn;\n@@ -433,7 +433,7 @@\n \t   if the call will be answered locally */\n \n \tret = ctdb_ltdb_lock_fetch_requeue(ctdb_db, call.key, &header, hdr, &data,\n-\t\t\t\t\t   ctdb_recv_raw_pkt, ctdb);\n+\t\t\t\t\t   ctdb_recv_raw_pkt, ctdb, False);\n \tif (ret == -1) {\n \t\tctdb_send_error(ctdb, hdr, ret, \"ltdb fetch failed in ctdb_request_call\");\n \t\treturn;\n@@ -556,7 +556,7 @@\n \tdata.dsize = c->datalen;\n \n \tret = ctdb_ltdb_lock_requeue(ctdb_db, key, hdr,\n-\t\t\t\t     ctdb_recv_raw_pkt, ctdb);\n+\t\t\t\t     ctdb_recv_raw_pkt, ctdb, False);\n \tif (ret == -2) {\n \t\treturn;\n \t}\n\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-05-12 04:34:21 +0000\n+++ b/common/ctdb_daemon.c\t2007-05-12 08:08:50 +0000\n@@ -413,7 +413,7 @@\n \n \tret = ctdb_ltdb_lock_fetch_requeue(ctdb_db, key, &header, \n \t\t\t\t\t   (struct ctdb_req_header *)c, &data,\n-\t\t\t\t\t   daemon_incoming_packet, client);\n+\t\t\t\t\t   daemon_incoming_packet, client, True);\n \tif (ret == -2) {\n \t\t/* will retry later */\n \t\tctdb->status.pending_calls--;\n\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-05-11 00:33:43 +0000\n+++ b/common/ctdb_ltdb.c\t2007-05-12 08:08:50 +0000\n@@ -195,6 +195,8 @@\n \tvoid (*recv_pkt)(void *, uint8_t *, uint32_t);\n \tvoid *recv_context;\n \tstruct ctdb_req_header *hdr;\n+\tuint32_t generation;\n+\tbool ignore_generation;\n };\n \n /*\n@@ -203,6 +205,12 @@\n static void lock_fetch_callback(void *p)\n {\n \tstruct lock_fetch_state *state = talloc_get_type(p, struct lock_fetch_state);\n+\tif (!state->ignore_generation &&\n+\t    state->generation != state->ctdb->vnn_map->generation) {\n+\t\tDEBUG(0,(\"Discarding previous generation lockwait packet\\n\"));\n+\t\ttalloc_free(state->hdr);\n+\t\treturn;\n+\t}\n \tstate->recv_pkt(state->recv_context, (uint8_t *)state->hdr, state->hdr->length);\n \tDEBUG(2,(__location__ \" PACKET REQUEUED\\n\"));\n }\n@@ -235,7 +243,7 @@\n int ctdb_ltdb_lock_requeue(struct ctdb_db_context *ctdb_db, \n \t\t\t   TDB_DATA key, struct ctdb_req_header *hdr,\n \t\t\t   void (*recv_pkt)(void *, uint8_t *, uint32_t ),\n-\t\t\t   void *recv_context)\n+\t\t\t   void *recv_context, bool ignore_generation)\n {\n \tint ret;\n \tstruct tdb_context *tdb = ctdb_db->ltdb->tdb;\n@@ -267,6 +275,8 @@\n \tstate->hdr = hdr;\n \tstate->recv_pkt = recv_pkt;\n \tstate->recv_context = recv_context;\n+\tstate->generation = ctdb_db->ctdb->vnn_map->generation;\n+\tstate->ignore_generation = ignore_generation;\n \n \t/* now the contended path */\n \th = ctdb_lockwait(ctdb_db, key, lock_fetch_callback, state);\n@@ -291,11 +301,12 @@\n \t\t\t\t TDB_DATA key, struct ctdb_ltdb_header *header, \n \t\t\t\t struct ctdb_req_header *hdr, TDB_DATA *data,\n \t\t\t\t void (*recv_pkt)(void *, uint8_t *, uint32_t ),\n-\t\t\t\t void *recv_context)\n+\t\t\t\t void *recv_context, bool ignore_generation)\n {\n \tint ret;\n \n-\tret = ctdb_ltdb_lock_requeue(ctdb_db, key, hdr, recv_pkt, recv_context);\n+\tret = ctdb_ltdb_lock_requeue(ctdb_db, key, hdr, recv_pkt, \n+\t\t\t\t     recv_context, ignore_generation);\n \tif (ret == 0) {\n \t\tret = ctdb_ltdb_fetch(ctdb_db, key, header, hdr, data);\n \t\tif (ret != 0) {\n\n=== modified file 'common/ctdb_recover.c'\n--- a/common/ctdb_recover.c\t2007-05-12 05:29:06 +0000\n+++ b/common/ctdb_recover.c\t2007-05-12 08:08:50 +0000\n@@ -318,7 +318,9 @@\n \t\t\tDEBUG(0, (__location__ \" Unable to fetch record\\n\"));\n \t\t\tgoto failed;\n \t\t}\n-\t\tif (header.rsn < hdr->rsn) {\n+\t\t/* the <= is to cope with just-created records, which\n+\t\t   have a rsn of zero */\n+\t\tif (header.rsn <= hdr->rsn) {\n \t\t\tret = ctdb_ltdb_store(ctdb_db, key, hdr, data);\n \t\t\tif (ret != 0) {\n \t\t\t\tDEBUG(0, (__location__ \" Unable to store record\\n\"));\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-12 05:51:08 +0000\n+++ b/include/ctdb_private.h\t2007-05-12 08:08:50 +0000\n@@ -556,12 +556,12 @@\n int ctdb_ltdb_lock_requeue(struct ctdb_db_context *ctdb_db, \n \t\t\t   TDB_DATA key, struct ctdb_req_header *hdr,\n \t\t\t   void (*recv_pkt)(void *, uint8_t *, uint32_t ),\n-\t\t\t   void *recv_context);\n+\t\t\t   void *recv_context, bool ignore_generation);\n int ctdb_ltdb_lock_fetch_requeue(struct ctdb_db_context *ctdb_db, \n \t\t\t\t TDB_DATA key, struct ctdb_ltdb_header *header, \n \t\t\t\t struct ctdb_req_header *hdr, TDB_DATA *data,\n \t\t\t\t void (*recv_pkt)(void *, uint8_t *, uint32_t ),\n-\t\t\t\t void *recv_context);\n+\t\t\t\t void *recv_context, bool ignore_generation);\n void ctdb_recv_pkt(struct ctdb_context *ctdb, uint8_t *data, uint32_t length);\n \n struct ctdb_call_state *ctdb_call_local_send(struct ctdb_db_context *ctdb_db, \n\n"}