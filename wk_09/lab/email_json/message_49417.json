{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23528 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0/source/smbd SAMBA_3_0_26/source/lib\n\tSAMBA_3_0_26/source/smbd", "body": "Author: vlendec\nDate: 2007-06-17 05:19:30 +0000 (Sun, 17 Jun 2007)\nNew Revision: 23528\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23528\n\nLog:\nTwo changes to make the valgrind massif (heap profiler) output readable:\n\nRemove the allocated inbuf/output. In async I/O we copy the buffers\nexplicitly now, so NewInBuffer is called exactly once. This does not\nreduce memory footprint, but removes one of the larger chunks that\nclobber the rest of the massif output\n\nIn getgroups_unix_user on Linux 2.6 we allocated 64k groups x 4 bytes\nper group x 2 (once in the routine itself and once in libc) = 512k just\nto throw it away directly again. This reduces it do a more typical limit\nof 32 groups per user. We certainly cope with overflow fine if 32 is not\nenough. Not 100% sure about this one, a DEVELOPER only thing?\n\n\nModified:\n   branches/SAMBA_3_0/source/lib/system_smbd.c\n   branches/SAMBA_3_0/source/smbd/process.c\n   branches/SAMBA_3_0_26/source/lib/system_smbd.c\n   branches/SAMBA_3_0_26/source/smbd/process.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/system_smbd.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/system_smbd.c\t2007-06-16 22:52:51 UTC (rev 23527)\n+++ branches/SAMBA_3_0/source/lib/system_smbd.c\t2007-06-17 05:19:30 UTC (rev 23528)\n@@ -154,7 +154,7 @@\n \tgid_t *groups;\n \tint i;\n \n-\tmax_grp = groups_max();\n+\tmax_grp = MIN(32, groups_max());\n \ttemp_groups = SMB_MALLOC_ARRAY(gid_t, max_grp);\n \tif (! temp_groups) {\n \t\treturn False;\n\nModified: branches/SAMBA_3_0/source/smbd/process.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/process.c\t2007-06-16 22:52:51 UTC (rev 23527)\n+++ branches/SAMBA_3_0/source/smbd/process.c\t2007-06-17 05:19:30 UTC (rev 23528)\n@@ -25,10 +25,11 @@\n extern struct auth_context *negprot_global_auth_context;\n extern int smb_echo_count;\n \n-static char *InBuffer = NULL;\n-static char *OutBuffer = NULL;\n-static char *current_inbuf = NULL;\n+#define TOTAL_BUFFER_SIZE (BUFFER_SIZE+LARGE_WRITEX_HDR_SIZE+SAFETY_MARGIN)\n \n+static char InBuffer[TOTAL_BUFFER_SIZE];\n+static char OutBuffer[TOTAL_BUFFER_SIZE];\n+\n /* \n  * Size of data we can send to client. Set\n  *  by the client for all protocols above CORE.\n@@ -208,11 +209,11 @@\n \n \tDEBUG(10,(\"push_deferred_open_smb_message: pushing message len %u mid %u \"\n \t\t  \"timeout time [%u.%06u]\\n\",\n-\t\t  (unsigned int) smb_len(current_inbuf)+4, (unsigned int)mid,\n+\t\t  (unsigned int) smb_len(InBuffer)+4, (unsigned int)mid,\n \t\t  (unsigned int)end_time.tv_sec,\n \t\t  (unsigned int)end_time.tv_usec));\n \n-\treturn push_queued_message(current_inbuf, smb_len(current_inbuf)+4,\n+\treturn push_queued_message(InBuffer, smb_len(InBuffer)+4,\n \t\t\t\t   request_time, end_time,\n \t\t\t\t   private_data, priv_len);\n }\n@@ -1007,7 +1008,6 @@\n \t\t\treturn(ERROR_DOS(ERRSRV,ERRaccess));\n \t\t}\n \n-\t\tcurrent_inbuf = inbuf; /* In case we need to defer this message in open... */\n \t\toutsize = smb_messages[type].fn(conn, inbuf,outbuf,size,bufsize);\n \t}\n \n@@ -1441,49 +1441,8 @@\n \treturn OutBuffer;\n }\n \n-const int total_buffer_size = (BUFFER_SIZE + LARGE_WRITEX_HDR_SIZE + SAFETY_MARGIN);\n \n /****************************************************************************\n- Allocate a new InBuffer. Returns the new and old ones.\n-****************************************************************************/\n-\n-static char *NewInBuffer(char **old_inbuf)\n-{\n-\tchar *new_inbuf = (char *)SMB_MALLOC(total_buffer_size);\n-\tif (!new_inbuf) {\n-\t\treturn NULL;\n-\t}\n-\tif (old_inbuf) {\n-\t\t*old_inbuf = InBuffer;\n-\t}\n-\tInBuffer = new_inbuf;\n-#if defined(DEVELOPER)\n-\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, InBuffer, total_buffer_size);\n-#endif\n-\treturn InBuffer;\n-}\n-\n-/****************************************************************************\n- Allocate a new OutBuffer. Returns the new and old ones.\n-****************************************************************************/\n-\n-static char *NewOutBuffer(char **old_outbuf)\n-{\n-\tchar *new_outbuf = (char *)SMB_MALLOC(total_buffer_size);\n-\tif (!new_outbuf) {\n-\t\treturn NULL;\n-\t}\n-\tif (old_outbuf) {\n-\t\t*old_outbuf = OutBuffer;\n-\t}\n-\tOutBuffer = new_outbuf;\n-#if defined(DEVELOPER)\n-\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, OutBuffer, total_buffer_size);\n-#endif\n-\treturn OutBuffer;\n-}\n-\n-/****************************************************************************\n  Process commands from the client\n ****************************************************************************/\n \n@@ -1492,11 +1451,6 @@\n \ttime_t last_timeout_processing_time = time(NULL);\n \tunsigned int num_smbs = 0;\n \n-\t/* Allocate the primary Inbut/Output buffers. */\n-\n-\tif ((NewInBuffer(NULL) == NULL) || (NewOutBuffer(NULL) == NULL)) \n-\t\treturn;\n-\n \tmax_recv = MIN(lp_maxxmit(),BUFFER_SIZE);\n \n \twhile (True) {\n@@ -1520,7 +1474,8 @@\n \t\trun_events(smbd_event_context(), 0, NULL, NULL);\n \n #if defined(DEVELOPER)\n-\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, InBuffer, total_buffer_size);\n+\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,\n+\t\t\t       InBuffer, TOTAL_BUFFER_SIZE);\n #endif\n \n \t\twhile (!receive_message_or_smb(InBuffer,BUFFER_SIZE+LARGE_WRITEX_HDR_SIZE,select_timeout)) {\n@@ -1541,7 +1496,8 @@\n \t\t */ \n \t\tnum_echos = smb_echo_count;\n \n-\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, OutBuffer, total_buffer_size);\n+\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,\n+\t\t\t       OutBuffer, TOTAL_BUFFER_SIZE);\n \n \t\tprocess_smb(InBuffer, OutBuffer);\n \n\nModified: branches/SAMBA_3_0_26/source/lib/system_smbd.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/system_smbd.c\t2007-06-16 22:52:51 UTC (rev 23527)\n+++ branches/SAMBA_3_0_26/source/lib/system_smbd.c\t2007-06-17 05:19:30 UTC (rev 23528)\n@@ -154,7 +154,7 @@\n \tgid_t *groups;\n \tint i;\n \n-\tmax_grp = groups_max();\n+\tmax_grp = MIN(32, groups_max());\n \ttemp_groups = SMB_MALLOC_ARRAY(gid_t, max_grp);\n \tif (! temp_groups) {\n \t\treturn False;\n\nModified: branches/SAMBA_3_0_26/source/smbd/process.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/process.c\t2007-06-16 22:52:51 UTC (rev 23527)\n+++ branches/SAMBA_3_0_26/source/smbd/process.c\t2007-06-17 05:19:30 UTC (rev 23528)\n@@ -26,10 +26,11 @@\n extern struct auth_context *negprot_global_auth_context;\n extern int smb_echo_count;\n \n-static char *InBuffer = NULL;\n-static char *OutBuffer = NULL;\n-static char *current_inbuf = NULL;\n+#define TOTAL_BUFFER_SIZE (BUFFER_SIZE+LARGE_WRITEX_HDR_SIZE+SAFETY_MARGIN)\n \n+static char InBuffer[TOTAL_BUFFER_SIZE];\n+static char OutBuffer[TOTAL_BUFFER_SIZE];\n+\n /* \n  * Size of data we can send to client. Set\n  *  by the client for all protocols above CORE.\n@@ -209,11 +210,11 @@\n \n \tDEBUG(10,(\"push_deferred_open_smb_message: pushing message len %u mid %u \"\n \t\t  \"timeout time [%u.%06u]\\n\",\n-\t\t  (unsigned int) smb_len(current_inbuf)+4, (unsigned int)mid,\n+\t\t  (unsigned int) smb_len(InBuffer)+4, (unsigned int)mid,\n \t\t  (unsigned int)end_time.tv_sec,\n \t\t  (unsigned int)end_time.tv_usec));\n \n-\treturn push_queued_message(current_inbuf, smb_len(current_inbuf)+4,\n+\treturn push_queued_message(InBuffer, smb_len(InBuffer)+4,\n \t\t\t\t   request_time, end_time,\n \t\t\t\t   private_data, priv_len);\n }\n@@ -999,7 +1000,6 @@\n \t\t\treturn(ERROR_DOS(ERRSRV,ERRaccess));\n \t\t}\n \n-\t\tcurrent_inbuf = inbuf; /* In case we need to defer this message in open... */\n \t\toutsize = smb_messages[type].fn(conn, inbuf,outbuf,size,bufsize);\n \t}\n \n@@ -1484,49 +1484,8 @@\n \treturn OutBuffer;\n }\n \n-const int total_buffer_size = (BUFFER_SIZE + LARGE_WRITEX_HDR_SIZE + SAFETY_MARGIN);\n \n /****************************************************************************\n- Allocate a new InBuffer. Returns the new and old ones.\n-****************************************************************************/\n-\n-static char *NewInBuffer(char **old_inbuf)\n-{\n-\tchar *new_inbuf = (char *)SMB_MALLOC(total_buffer_size);\n-\tif (!new_inbuf) {\n-\t\treturn NULL;\n-\t}\n-\tif (old_inbuf) {\n-\t\t*old_inbuf = InBuffer;\n-\t}\n-\tInBuffer = new_inbuf;\n-#if defined(DEVELOPER)\n-\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, InBuffer, total_buffer_size);\n-#endif\n-\treturn InBuffer;\n-}\n-\n-/****************************************************************************\n- Allocate a new OutBuffer. Returns the new and old ones.\n-****************************************************************************/\n-\n-static char *NewOutBuffer(char **old_outbuf)\n-{\n-\tchar *new_outbuf = (char *)SMB_MALLOC(total_buffer_size);\n-\tif (!new_outbuf) {\n-\t\treturn NULL;\n-\t}\n-\tif (old_outbuf) {\n-\t\t*old_outbuf = OutBuffer;\n-\t}\n-\tOutBuffer = new_outbuf;\n-#if defined(DEVELOPER)\n-\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, OutBuffer, total_buffer_size);\n-#endif\n-\treturn OutBuffer;\n-}\n-\n-/****************************************************************************\n  Process commands from the client\n ****************************************************************************/\n \n@@ -1535,11 +1494,6 @@\n \ttime_t last_timeout_processing_time = time(NULL);\n \tunsigned int num_smbs = 0;\n \n-\t/* Allocate the primary Inbut/Output buffers. */\n-\n-\tif ((NewInBuffer(NULL) == NULL) || (NewOutBuffer(NULL) == NULL)) \n-\t\treturn;\n-\n \tmax_recv = MIN(lp_maxxmit(),BUFFER_SIZE);\n \n \twhile (True) {\n@@ -1566,7 +1520,8 @@\n \t\trun_events(smbd_event_context(), 0, NULL, NULL);\n \n #if defined(DEVELOPER)\n-\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, InBuffer, total_buffer_size);\n+\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,\n+\t\t\t       InBuffer, TOTAL_BUFFER_SIZE);\n #endif\n \n \t\twhile (!receive_message_or_smb(InBuffer,BUFFER_SIZE+LARGE_WRITEX_HDR_SIZE,select_timeout)) {\n@@ -1586,7 +1541,8 @@\n \t\t */ \n \t\tnum_echos = smb_echo_count;\n \n-\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, OutBuffer, total_buffer_size);\n+\t\tclobber_region(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,\n+\t\t\t       OutBuffer, TOTAL_BUFFER_SIZE);\n \n \t\tprocess_smb(InBuffer, OutBuffer);\n \n\n"}