{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 596: merged patch from ronnie to add winbind:ignore domains\n\toption. This is used for sites where you have some domains\n\tthat you should never touch in http://samba.org/~tridge/3_0-ctdb", "body": "------------------------------------------------------------\nrevno: 596\nrevision-id: tridge@samba.org-20070617005644-hzr9y3f2g28asx9y\nparent: tridge@samba.org-20070616180634-t7eoiva1rd4694p8\ncommitter: Andrew Tridgell \nbranch nick: s3-ctdb-tridge\ntimestamp: Sun 2007-06-17 10:56:44 +1000\nmessage:\n  merged patch from ronnie to add winbind:ignore domains option. This is used for sites where you have some domains that you should never touch\nmodified:\n  source/nsswitch/winbindd_util.c winbindd_util.c-20070210173807-1wjifrbwaz6xnmgl-754\n=== modified file 'source/nsswitch/winbindd_util.c'\n--- a/source/nsswitch/winbindd_util.c\t2007-04-24 23:09:33 +0000\n+++ b/source/nsswitch/winbindd_util.c\t2007-06-17 00:56:44 +0000\n@@ -101,7 +101,16 @@\n {\n \tstruct winbindd_domain *domain;\n \tconst char *alternative_name = NULL;\n+\tconst char **ignored_domains, **dom;\n \t\n+\tignored_domains = lp_parm_string_list(-1, \"winbind\", \"ignore domains\", NULL);\n+\tfor (dom=ignored_domains; *dom; dom++) {\n+\t\tif (gen_fnmatch(*dom, domain_name) != 0) {\n+\t\t\tDEBUG(2,(\"Ignoring domain '%s'\\n\", *dom));\n+\t\t\treturn NULL;\n+\t\t}\n+\t}\n+\n \t/* ignore alt_name if we are not in an AD domain */\n \t\n \tif ( (lp_security() == SEC_ADS) && alt_name && *alt_name) {\n@@ -280,7 +289,9 @@\n \t\t\tdomain = add_trusted_domain(p, alternate_name,\n \t\t\t\t\t\t    &cache_methods,\n \t\t\t\t\t\t    &sid);\n-\t\t\tsetup_domain_child(domain, &domain->child, NULL);\n+\t\t\tif (domain) {\n+\t\t\t\tsetup_domain_child(domain, &domain->child, NULL);\n+\t\t\t}\n \t\t}\n \t\tp=q;\n \t\tif (p != NULL)\n@@ -507,32 +518,38 @@\n \t\n \t\tdomain = add_trusted_domain( lp_workgroup(), lp_realm(),\n \t\t\t\t\t     &cache_methods, &our_sid);\n-\t\tdomain->primary = True;\n-\t\tsetup_domain_child(domain, &domain->child, NULL);\n+\t\tif (domain) {\n+\t\t\tdomain->primary = True;\n+\t\t\tsetup_domain_child(domain, &domain->child, NULL);\n \t\t\n-\t\t/* Even in the parent winbindd we'll need to\n-\t\t   talk to the DC, so try and see if we can\n-\t\t   contact it. Theoretically this isn't neccessary\n-\t\t   as the init_dc_connection() in init_child_recv()\n-\t\t   will do this, but we can start detecting the DC\n-\t\t   early here. */\n-\t\tset_domain_online_request(domain);\n+\t\t\t/* Even in the parent winbindd we'll need to\n+\t\t\t   talk to the DC, so try and see if we can\n+\t\t\t   contact it. Theoretically this isn't neccessary\n+\t\t\t   as the init_dc_connection() in init_child_recv()\n+\t\t\t   will do this, but we can start detecting the DC\n+\t\t\t   early here. */\n+\t\t\tset_domain_online_request(domain);\n+\t\t}\n \t}\n \n \t/* Local SAM */\n \n \tdomain = add_trusted_domain(get_global_sam_name(), NULL,\n \t\t\t\t    &passdb_methods, get_global_sam_sid());\n-\tif ( role != ROLE_DOMAIN_MEMBER ) {\n-\t\tdomain->primary = True;\n+\tif (domain) {\n+\t\tif ( role != ROLE_DOMAIN_MEMBER ) {\n+\t\t\tdomain->primary = True;\n+\t\t}\n+\t\tsetup_domain_child(domain, &domain->child, NULL);\n \t}\n-\tsetup_domain_child(domain, &domain->child, NULL);\n \n \t/* BUILTIN domain */\n \n \tdomain = add_trusted_domain(\"BUILTIN\", NULL, &passdb_methods,\n \t\t\t\t    &global_sid_Builtin);\n-\tsetup_domain_child(domain, &domain->child, NULL);\n+\tif (domain) {\n+\t\tsetup_domain_child(domain, &domain->child, NULL);\n+\t}\n \n \treturn True;\n }\n\n"}