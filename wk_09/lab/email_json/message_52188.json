{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r23572 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_25/source/lib SAMBA_3_0_26/source/lib", "body": "Author: jra\nDate: 2007-06-21 17:25:13 +0000 (Thu, 21 Jun 2007)\nNew Revision: 23572\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23572\n\nLog:\nEnsure we obey Unicode consortium restrictions. Code\nbased on patch from MORIYAMA Masayuki .\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/lib/iconv.c\n   branches/SAMBA_3_0_25/source/lib/iconv.c\n   branches/SAMBA_3_0_26/source/lib/iconv.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/iconv.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/iconv.c\t2007-06-21 17:05:59 UTC (rev 23571)\n+++ branches/SAMBA_3_0/source/lib/iconv.c\t2007-06-21 17:25:13 UTC (rev 23572)\n@@ -544,6 +544,8 @@\n \tuint8 *uc = (uint8 *)*outbuf;\n \n \twhile (in_left >= 1 && out_left >= 2) {\n+\t\tunsigned int codepoint;\n+\n \t\tif ((c[0] & 0x80) == 0) {\n \t\t\tuc[0] = c[0];\n \t\t\tuc[1] = 0;\n@@ -560,8 +562,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = (c[0]>>2) & 0x7;\n-\t\t\tuc[0] = (c[0]<<6) | (c[1]&0x3f);\n+\t\t\tcodepoint = (c[1]&0x3f) | ((c[0]&0x1f)<<6);\n+\t\t\tif (codepoint < 0x80) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 2;\n \t\t\tin_left  -= 2;\n \t\t\tout_left -= 2;\n@@ -576,8 +584,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = ((c[0]&0xF)<<4) | ((c[1]>>2)&0xF);\n-\t\t\tuc[0] = (c[1]<<6) | (c[2]&0x3f);\n+\t\t\tcodepoint = (c[2]&0x3f) | ((c[1]&0x3f)<<6) | ((c[0]&0xf)<<12);\n+\t\t\tif (codepoint < 0x800) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 3;\n \t\t\tin_left  -= 3;\n \t\t\tout_left -= 2;\n@@ -586,7 +600,6 @@\n \t\t}\n \n \t\tif ((c[0] & 0xf8) == 0xf0) {\n-\t\t\tunsigned int codepoint;\n \t\t\tif (in_left < 4 ||\n \t\t\t    (c[1] & 0xc0) != 0x80 || \n \t\t\t    (c[2] & 0xc0) != 0x80 ||\n@@ -599,16 +612,10 @@\n \t\t\t\t((c[2]&0x3f)<<6) | \n \t\t\t\t((c[1]&0x3f)<<12) |\n \t\t\t\t((c[0]&0x7)<<18);\n-\t\t\tif (codepoint < 0x10000) {\n-\t\t\t\t/* accept UTF-8 characters that are not\n-\t\t\t\t   minimally packed, but pack the result */\n-\t\t\t\tuc[0] = (codepoint & 0xFF);\n-\t\t\t\tuc[1] = (codepoint >> 8);\n-\t\t\t\tc += 4;\n-\t\t\t\tin_left -= 4;\n-\t\t\t\tout_left -= 2;\n-\t\t\t\tuc += 2;\n-\t\t\t\tcontinue;\n+\t\t\tif (codepoint < 0x10000 || codepoint > 0x10ffff) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n \t\t\t}\n \n \t\t\tcodepoint -= 0x10000;\n\nModified: branches/SAMBA_3_0_25/source/lib/iconv.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/lib/iconv.c\t2007-06-21 17:05:59 UTC (rev 23571)\n+++ branches/SAMBA_3_0_25/source/lib/iconv.c\t2007-06-21 17:25:13 UTC (rev 23572)\n@@ -544,6 +544,8 @@\n \tuint8 *uc = (uint8 *)*outbuf;\n \n \twhile (in_left >= 1 && out_left >= 2) {\n+\t\tunsigned int codepoint;\n+\n \t\tif ((c[0] & 0x80) == 0) {\n \t\t\tuc[0] = c[0];\n \t\t\tuc[1] = 0;\n@@ -560,8 +562,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = (c[0]>>2) & 0x7;\n-\t\t\tuc[0] = (c[0]<<6) | (c[1]&0x3f);\n+\t\t\tcodepoint = (c[1]&0x3f) | ((c[0]&0x1f)<<6);\n+\t\t\tif (codepoint < 0x80) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 2;\n \t\t\tin_left  -= 2;\n \t\t\tout_left -= 2;\n@@ -576,8 +584,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = ((c[0]&0xF)<<4) | ((c[1]>>2)&0xF);\n-\t\t\tuc[0] = (c[1]<<6) | (c[2]&0x3f);\n+\t\t\tcodepoint = (c[2]&0x3f) | ((c[1]&0x3f)<<6) | ((c[0]&0xf)<<12);\n+\t\t\tif (codepoint < 0x800) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 3;\n \t\t\tin_left  -= 3;\n \t\t\tout_left -= 2;\n@@ -586,7 +600,6 @@\n \t\t}\n \n \t\tif ((c[0] & 0xf8) == 0xf0) {\n-\t\t\tunsigned int codepoint;\n \t\t\tif (in_left < 4 ||\n \t\t\t    (c[1] & 0xc0) != 0x80 || \n \t\t\t    (c[2] & 0xc0) != 0x80 ||\n@@ -599,16 +612,10 @@\n \t\t\t\t((c[2]&0x3f)<<6) | \n \t\t\t\t((c[1]&0x3f)<<12) |\n \t\t\t\t((c[0]&0x7)<<18);\n-\t\t\tif (codepoint < 0x10000) {\n-\t\t\t\t/* accept UTF-8 characters that are not\n-\t\t\t\t   minimally packed, but pack the result */\n-\t\t\t\tuc[0] = (codepoint & 0xFF);\n-\t\t\t\tuc[1] = (codepoint >> 8);\n-\t\t\t\tc += 4;\n-\t\t\t\tin_left -= 4;\n-\t\t\t\tout_left -= 2;\n-\t\t\t\tuc += 2;\n-\t\t\t\tcontinue;\n+\t\t\tif (codepoint < 0x10000 || codepoint > 0x10ffff) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n \t\t\t}\n \n \t\t\tcodepoint -= 0x10000;\n\nModified: branches/SAMBA_3_0_26/source/lib/iconv.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/iconv.c\t2007-06-21 17:05:59 UTC (rev 23571)\n+++ branches/SAMBA_3_0_26/source/lib/iconv.c\t2007-06-21 17:25:13 UTC (rev 23572)\n@@ -544,6 +544,8 @@\n \tuint8 *uc = (uint8 *)*outbuf;\n \n \twhile (in_left >= 1 && out_left >= 2) {\n+\t\tunsigned int codepoint;\n+\n \t\tif ((c[0] & 0x80) == 0) {\n \t\t\tuc[0] = c[0];\n \t\t\tuc[1] = 0;\n@@ -560,8 +562,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = (c[0]>>2) & 0x7;\n-\t\t\tuc[0] = (c[0]<<6) | (c[1]&0x3f);\n+\t\t\tcodepoint = (c[1]&0x3f) | ((c[0]&0x1f)<<6);\n+\t\t\tif (codepoint < 0x80) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 2;\n \t\t\tin_left  -= 2;\n \t\t\tout_left -= 2;\n@@ -576,8 +584,14 @@\n \t\t\t\terrno = EILSEQ;\n \t\t\t\tgoto error;\n \t\t\t}\n-\t\t\tuc[1] = ((c[0]&0xF)<<4) | ((c[1]>>2)&0xF);\n-\t\t\tuc[0] = (c[1]<<6) | (c[2]&0x3f);\n+\t\t\tcodepoint = (c[2]&0x3f) | ((c[1]&0x3f)<<6) | ((c[0]&0xf)<<12);\n+\t\t\tif (codepoint < 0x800) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\tuc[1] = codepoint >> 8;\n+\t\t\tuc[0] = codepoint & 0xff;\n \t\t\tc  += 3;\n \t\t\tin_left  -= 3;\n \t\t\tout_left -= 2;\n@@ -586,7 +600,6 @@\n \t\t}\n \n \t\tif ((c[0] & 0xf8) == 0xf0) {\n-\t\t\tunsigned int codepoint;\n \t\t\tif (in_left < 4 ||\n \t\t\t    (c[1] & 0xc0) != 0x80 || \n \t\t\t    (c[2] & 0xc0) != 0x80 ||\n@@ -599,16 +612,10 @@\n \t\t\t\t((c[2]&0x3f)<<6) | \n \t\t\t\t((c[1]&0x3f)<<12) |\n \t\t\t\t((c[0]&0x7)<<18);\n-\t\t\tif (codepoint < 0x10000) {\n-\t\t\t\t/* accept UTF-8 characters that are not\n-\t\t\t\t   minimally packed, but pack the result */\n-\t\t\t\tuc[0] = (codepoint & 0xFF);\n-\t\t\t\tuc[1] = (codepoint >> 8);\n-\t\t\t\tc += 4;\n-\t\t\t\tin_left -= 4;\n-\t\t\t\tout_left -= 2;\n-\t\t\t\tuc += 2;\n-\t\t\t\tcontinue;\n+\t\t\tif (codepoint < 0x10000 || codepoint > 0x10ffff) {\n+\t\t\t\t/* don't accept UTF-8 characters that are not minimally packed */\n+\t\t\t\terrno = EILSEQ;\n+\t\t\t\tgoto error;\n \t\t\t}\n \n \t\t\tcodepoint -= 0x10000;\n\n"}