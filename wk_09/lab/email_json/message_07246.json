{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 119: add an explanation of how to use ctdb_lockwait() in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 119\nrevision-id: tridge@samba.org-20070416231452-7dfc1928b2b71d20\nparent: tridge@samba.org-20070416231052-ba2859722685ae37\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-04-17 09:14:52 +1000\nmessage:\n  add an explanation of how to use ctdb_lockwait()\nmodified:\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\n=== modified file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t2007-04-16 23:10:52 +0000\n+++ b/common/ctdb_lockwait.c\t2007-04-16 23:14:52 +0000\n@@ -59,7 +59,16 @@\n \treturn 0;\n }\n \n+/*\n+  setup a non-blocking chainlock on a tdb record. If this function\n+  returns NULL then it could not get the chainlock. Otherwise it\n+  returns a opaque handle, and will call callback() once it has\n+  managed to get the chainlock. You can cancel it by using talloc_free\n+  on the returned handle.\n \n+  It is the callers responsibility to unlock the chainlock once\n+  acquired\n+ */\n struct lockwait_handle *ctdb_lockwait(struct ctdb_db_context *ctdb_db,\n \t\t\t\t      TDB_DATA key,\n \t\t\t\t      void (*callback)(void *), void *private_data)\n\n"}