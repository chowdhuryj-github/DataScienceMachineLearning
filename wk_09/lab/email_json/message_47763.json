{"category": "ham", "to_address": "Perl List <beginners@perl.org>", "from_address": "Xavier Noria <fxn@hashref.com>", "subject": "Re: regexp problem", "body": "On Jun 14, 2007, at 12:10 PM, Martin Barth wrote:\n\n> On Thu, 14 Jun 2007 11:04:51 +0100 (WEST)\n> Jorge Almeida  wrote:\n>\n>> I'm missing something about Perl's regexp:\n>>\n>>    1 #!/usr/bin/perl -w\n>>    2 use strict;\n>>    3 my $s=;\n>>    4 $s=~s/\\D*//;\n>>    5 $s=~s/\\D*//;\n>>    6 print \"$s\\n\";\n>>\n>> When input is 'a123b', I get '123b', but I expected '123'. I know I\n>> can substitute line 4 by '$s=~s/\\D*//g;' and comment out line 5.  \n>> It will\n>> work then, but that is not the point. I could also substitute line  \n>> 5 by\n>> '$s=~s/\\D+//;' and it would also work...\n>>\n>\n> the problem is * in your regex. i guess the  \\D* matches on zero non\n> digits before \"123\". so nothing will be done.\n\nNot really.\n\nAlthough + is more concise because you want to delete non-empty  \nsequences of non-digits and do not care about empty sequences, * will  \ngo ahead as much as possible and would work fine. Jorge was just  \nmissing /g.\n\n-- fxn\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}