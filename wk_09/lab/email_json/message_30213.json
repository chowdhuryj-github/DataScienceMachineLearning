{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r22902 - in branches: SAMBA_3_0/source/nmbd\n\tSAMBA_3_0_26/source/nmbd", "body": "Author: vlendec\nDate: 2007-05-15 13:44:11 +0000 (Tue, 15 May 2007)\nNew Revision: 22902\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22902\n\nLog:\nAdd an event_context and a messaging_context to nmbd. Not used yet.\n\nModified:\n   branches/SAMBA_3_0/source/nmbd/nmbd.c\n   branches/SAMBA_3_0/source/nmbd/nmbd_packets.c\n   branches/SAMBA_3_0_26/source/nmbd/nmbd.c\n   branches/SAMBA_3_0_26/source/nmbd/nmbd_packets.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nmbd/nmbd.c\n===================================================================\n--- branches/SAMBA_3_0/source/nmbd/nmbd.c\t2007-05-15 13:42:53 UTC (rev 22901)\n+++ branches/SAMBA_3_0/source/nmbd/nmbd.c\t2007-05-15 13:44:11 UTC (rev 22902)\n@@ -40,6 +40,27 @@\n \n time_t StartupTime = 0;\n \n+struct event_context *nmbd_event_context(void)\n+{\n+\tstatic struct event_context *ctx;\n+\n+\tif (!ctx && !(ctx = event_context_init(NULL))) {\n+\t\tsmb_panic(\"Could not init nmbd event context\\n\");\n+\t}\n+\treturn ctx;\n+}\n+\n+struct messaging_context *nmbd_messaging_context(void)\n+{\n+\tstatic struct messaging_context *ctx;\n+\n+\tif (!ctx && !(ctx = messaging_init(NULL, server_id_self(),\n+\t\t\t\t\t   nmbd_event_context()))) {\n+\t\tsmb_panic(\"Could not init nmbd messaging context\\n\");\n+\t}\n+\treturn ctx;\n+}\n+\n /**************************************************************************** **\n  Handle a SIGTERM in band.\n  **************************************************************************** */\n@@ -732,6 +753,11 @@\n \t\tsetpgid( (pid_t)0, (pid_t)0 );\n #endif\n \n+\tmessage_init();\n+\tif (nmbd_messaging_context() == NULL) {\n+\t\treturn 1;\n+\t}\n+\n #ifndef SYNC_DNS\n \t/* Setup the async dns. We do it here so it doesn't have all the other\n \t\tstuff initialised and thus chewing memory and sockets */\n@@ -745,7 +771,6 @@\n \t}\n \n \tpidfile_create(\"nmbd\");\n-\tmessage_init();\n \tmessage_register(MSG_FORCE_ELECTION, nmbd_message_election, NULL);\n #if 0\n \t/* Until winsrepl is done. */\n\nModified: branches/SAMBA_3_0/source/nmbd/nmbd_packets.c\n===================================================================\n--- branches/SAMBA_3_0/source/nmbd/nmbd_packets.c\t2007-05-15 13:42:53 UTC (rev 22901)\n+++ branches/SAMBA_3_0/source/nmbd/nmbd_packets.c\t2007-05-15 13:44:11 UTC (rev 22902)\n@@ -1730,7 +1730,8 @@\n \tint i;\n \tstatic int maxfd = 0;\n \n-\tfd_set fds;\n+\tfd_set r_fds;\n+\tfd_set w_fds;\n \tint selrtn;\n \tstruct timeval timeout;\n #ifndef SYNC_DNS\n@@ -1745,12 +1746,13 @@\n \t\trescan_listen_set = False;\n \t}\n \n-\tmemcpy((char *)&fds, (char *)listen_set, sizeof(fd_set));\n+\tmemcpy((char *)&r_fds, (char *)listen_set, sizeof(fd_set));\n+\tFD_ZERO(&w_fds);\n \n #ifndef SYNC_DNS\n \tdns_fd = asyncdns_fd();\n \tif (dns_fd != -1) {\n-\t\tFD_SET(dns_fd, &fds);\n+\t\tFD_SET(dns_fd, &r_fds);\n \t\tmaxfd = MAX( maxfd, dns_fd);\n \t}\n #endif\n@@ -1765,11 +1767,24 @@\n \ttimeout.tv_sec = (run_election||num_response_packets) ? 1 : NMBD_SELECT_LOOP;\n \ttimeout.tv_usec = 0;\n \n+\t{\n+\t\tstruct timeval now = timeval_current();\n+\t\tevent_add_to_select_args(nmbd_event_context(), &now,\n+\t\t\t\t\t &r_fds, &w_fds, &timeout, &maxfd);\n+\t}\n+\n+\tif (timeval_is_zero(&timeout)) {\n+\t\t/* Process a timed event now... */\n+\t\tif (run_events(nmbd_event_context(), 0, NULL, NULL)) {\n+\t\t\treturn False;\n+\t\t}\n+\t}\n+\t\n \t/* Prepare for the select - allow certain signals. */\n \n \tBlockSignals(False, SIGTERM);\n \n-\tselrtn = sys_select(maxfd+1,&fds,NULL,NULL,&timeout);\n+\tselrtn = sys_select(maxfd+1,&r_fds,&w_fds,NULL,&timeout);\n \n \t/* We can only take signals when we are in the select - block them again here. */\n \n@@ -1779,8 +1794,12 @@\n \t\treturn False;\n \t}\n \n+\tif (run_events(nmbd_event_context(), selrtn, &r_fds, &w_fds)) {\n+\t\treturn False;\n+\t}\n+\n #ifndef SYNC_DNS\n-\tif (dns_fd != -1 && FD_ISSET(dns_fd,&fds)) {\n+\tif (dns_fd != -1 && FD_ISSET(dns_fd,&r_fds)) {\n \t\trun_dns_queue();\n \t}\n #endif\n@@ -1788,7 +1807,7 @@\n \tfor(i = 0; i < listen_number; i++) {\n \t\tif (i < (listen_number/2)) {\n \t\t\t/* Processing a 137 socket. */\n-\t\t\tif (FD_ISSET(sock_array[i],&fds)) {\n+\t\t\tif (FD_ISSET(sock_array[i],&r_fds)) {\n \t\t\t\tstruct packet_struct *packet = read_packet(sock_array[i], NMB_PACKET);\n \t\t\t\tif (packet) {\n \t\t\t\t\t/*\n@@ -1815,7 +1834,7 @@\n \t\t\t}\n \t\t} else {\n \t\t\t/* Processing a 138 socket. */\n-\t\t\t\tif (FD_ISSET(sock_array[i],&fds)) {\n+\t\t\t\tif (FD_ISSET(sock_array[i],&r_fds)) {\n \t\t\t\tstruct packet_struct *packet = read_packet(sock_array[i], DGRAM_PACKET);\n \t\t\t\tif (packet) {\n \t\t\t\t\t/*\n\nModified: branches/SAMBA_3_0_26/source/nmbd/nmbd.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nmbd/nmbd.c\t2007-05-15 13:42:53 UTC (rev 22901)\n+++ branches/SAMBA_3_0_26/source/nmbd/nmbd.c\t2007-05-15 13:44:11 UTC (rev 22902)\n@@ -49,6 +49,27 @@\n \n time_t StartupTime = 0;\n \n+struct event_context *nmbd_event_context(void)\n+{\n+\tstatic struct event_context *ctx;\n+\n+\tif (!ctx && !(ctx = event_context_init(NULL))) {\n+\t\tsmb_panic(\"Could not init nmbd event context\\n\");\n+\t}\n+\treturn ctx;\n+}\n+\n+struct messaging_context *nmbd_messaging_context(void)\n+{\n+\tstatic struct messaging_context *ctx;\n+\n+\tif (!ctx && !(ctx = messaging_init(NULL, server_id_self(),\n+\t\t\t\t\t   nmbd_event_context()))) {\n+\t\tsmb_panic(\"Could not init nmbd messaging context\\n\");\n+\t}\n+\treturn ctx;\n+}\n+\n /**************************************************************************** **\n  Handle a SIGTERM in band.\n  **************************************************************************** */\n@@ -731,6 +752,11 @@\n \t\tsetpgid( (pid_t)0, (pid_t)0 );\n #endif\n \n+\tmessage_init();\n+\tif (nmbd_messaging_context() == NULL) {\n+\t\treturn 1;\n+\t}\n+\n #ifndef SYNC_DNS\n \t/* Setup the async dns. We do it here so it doesn't have all the other\n \t\tstuff initialised and thus chewing memory and sockets */\n@@ -744,7 +770,6 @@\n \t}\n \n \tpidfile_create(\"nmbd\");\n-\tmessage_init();\n \tmessage_register(MSG_FORCE_ELECTION, nmbd_message_election, NULL);\n #if 0\n \t/* Until winsrepl is done. */\n\nModified: branches/SAMBA_3_0_26/source/nmbd/nmbd_packets.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nmbd/nmbd_packets.c\t2007-05-15 13:42:53 UTC (rev 22901)\n+++ branches/SAMBA_3_0_26/source/nmbd/nmbd_packets.c\t2007-05-15 13:44:11 UTC (rev 22902)\n@@ -1730,7 +1730,8 @@\n \tint i;\n \tstatic int maxfd = 0;\n \n-\tfd_set fds;\n+\tfd_set r_fds;\n+\tfd_set w_fds;\n \tint selrtn;\n \tstruct timeval timeout;\n #ifndef SYNC_DNS\n@@ -1745,12 +1746,13 @@\n \t\trescan_listen_set = False;\n \t}\n \n-\tmemcpy((char *)&fds, (char *)listen_set, sizeof(fd_set));\n+\tmemcpy((char *)&r_fds, (char *)listen_set, sizeof(fd_set));\n+\tFD_ZERO(&w_fds);\n \n #ifndef SYNC_DNS\n \tdns_fd = asyncdns_fd();\n \tif (dns_fd != -1) {\n-\t\tFD_SET(dns_fd, &fds);\n+\t\tFD_SET(dns_fd, &r_fds);\n \t\tmaxfd = MAX( maxfd, dns_fd);\n \t}\n #endif\n@@ -1765,11 +1767,24 @@\n \ttimeout.tv_sec = (run_election||num_response_packets) ? 1 : NMBD_SELECT_LOOP;\n \ttimeout.tv_usec = 0;\n \n+\t{\n+\t\tstruct timeval now = timeval_current();\n+\t\tevent_add_to_select_args(nmbd_event_context(), &now,\n+\t\t\t\t\t &r_fds, &w_fds, &timeout, &maxfd);\n+\t}\n+\n+\tif (timeval_is_zero(&timeout)) {\n+\t\t/* Process a timed event now... */\n+\t\tif (run_events(nmbd_event_context(), 0, NULL, NULL)) {\n+\t\t\treturn False;\n+\t\t}\n+\t}\n+\t\n \t/* Prepare for the select - allow certain signals. */\n \n \tBlockSignals(False, SIGTERM);\n \n-\tselrtn = sys_select(maxfd+1,&fds,NULL,NULL,&timeout);\n+\tselrtn = sys_select(maxfd+1,&r_fds,&w_fds,NULL,&timeout);\n \n \t/* We can only take signals when we are in the select - block them again here. */\n \n@@ -1779,8 +1794,12 @@\n \t\treturn False;\n \t}\n \n+\tif (run_events(nmbd_event_context(), selrtn, &r_fds, &w_fds)) {\n+\t\treturn False;\n+\t}\n+\n #ifndef SYNC_DNS\n-\tif (dns_fd != -1 && FD_ISSET(dns_fd,&fds)) {\n+\tif (dns_fd != -1 && FD_ISSET(dns_fd,&r_fds)) {\n \t\trun_dns_queue();\n \t}\n #endif\n@@ -1788,7 +1807,7 @@\n \tfor(i = 0; i < listen_number; i++) {\n \t\tif (i < (listen_number/2)) {\n \t\t\t/* Processing a 137 socket. */\n-\t\t\tif (FD_ISSET(sock_array[i],&fds)) {\n+\t\t\tif (FD_ISSET(sock_array[i],&r_fds)) {\n \t\t\t\tstruct packet_struct *packet = read_packet(sock_array[i], NMB_PACKET);\n \t\t\t\tif (packet) {\n \t\t\t\t\t/*\n@@ -1815,7 +1834,7 @@\n \t\t\t}\n \t\t} else {\n \t\t\t/* Processing a 138 socket. */\n-\t\t\t\tif (FD_ISSET(sock_array[i],&fds)) {\n+\t\t\t\tif (FD_ISSET(sock_array[i],&r_fds)) {\n \t\t\t\tstruct packet_struct *packet = read_packet(sock_array[i], DGRAM_PACKET);\n \t\t\t\tif (packet) {\n \t\t\t\t\t/*\n\n"}