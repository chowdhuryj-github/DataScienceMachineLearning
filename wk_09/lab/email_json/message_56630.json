{"category": "ham", "to_address": "\"Markus Loecher\" <loecher@eden.rutgers.edu>", "from_address": "\"Christophe Pallier\" <christophe@pallier.org>", "subject": "Re: [R] Matlab end operator", "body": "Hello Markus,\n\nOn 6/27/07, Markus Loecher  wrote:\n>\n> Dear list members,\n> I use both R and Matlab and find that each has its own strengths. Matlab\n> definitely has the edge when it comes to the interactivity of its graphs.\n\n\nI also use both. R definitely has the edge when it comes to do perform\nstatistical data analyses :)\n(and also when you consider the price...)\n\nIn addition I find the little operator end extremely useful in indexing\n> arrays. (as in x(1:end,) )\n\n\nYou mean 'x(1:end,1:end)' or 'x(:,:)'  (':' is equivalent to \"1:end\")\n\nWhen I go from R to Matlab, I tend to forget to type the ':' (\"a[,2]\" in R\nis \"a(:,2)\" in Matlab.)\n\nThe interest of 'end' is clearer when the starting index is larger than 1 as\nin, e.g., 'x(2:end)'\n\nYet note that in R, you can use negative indexes:\n\n  x[-1]   is the R equivalent of  Matlab's x(2:end)\n\n  x[-(1:(n-1))] is equivalent to x(n:end)\n\n\nI agree that R syntax may be a bit less \"elegant\" in this particular\nsituation (but try to write the equivalent of a[-2,] in Matlab)\nPersonally, I would stick to \"x[n:length(x)]\" (or \"a[n:nrow(a),]\" for a\nmatrix). Anyway this kind of code would probably appear inside a loop and I\nwould put the numbers of rows or columns in variables if there are needed\nmore than once.\n\nBest,\n\n-- \nChristophe Pallier\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}