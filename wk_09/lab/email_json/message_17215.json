{"category": "ham", "to_address": "Beginners@perl.org", "from_address": "Somu <som.ctc@gmail.com>", "subject": "Re: Math::BigFloat", "body": "Thanks. I got that corrected. Actually, in my code, $n wasnt a\nMath::BigFloat OBJECT.\n\nOn 4/25/07, Rob Dixon  wrote:\n> Somu wrote:\n> > On 4/25/07, Tom Phoenix  wrote:\n> >>\n> >> On 4/24/07, Somu  wrote:\n> >>>\n> >>> I'm unable to compare numbers using the module. Actually i can only\n> >>> use it to create numbers like 0 or inf or 1 or their negatives. But i\n> >>> dont know how to use their methods. Bcoz the examples in the doc\n> >>> aren't working. Can i get some simple examples?\n> >>\n> >> What are you doing that isn't working? \"Because\" if the documentation\n> >> examples don't work for you, why should this work?\n> >>\n> >> #!/usr/bin/perl\n> >>\n> >> use strict;\n> >> use warnings;\n> >>\n> >> use Math::BigFloat;\n> >>\n> >> my $$$$big = Math::BigFloat->new(200);\n> >> my $$$$other = Math::BigFloat->new(100);\n> >>\n> >> if ($$$$big > $$$$other) {\n> >> print \"It seems that $$$$big is bigger than $$$$other. \";\n> >> } else {\n> >> print \"Actually $$$$other is at least as large as $$$$big. \";\n> >> }\n> >\n> > Actually the following isnt working:\n> >\n> > use Math::BigFloat;\n> > $$n = 0;\n> > if ($$n->is_zero()) {print 'you entered zero'}\n>\n>This isn't working because 0 is an integer, not a Math::BigFloat object. You\n> can get Perl to represent all your /floating-point/ constants as Math::BigFloat\n> objects by changing the use line to\n>\n> use Math::BigFloat ':constant';\n>\n> which makes\n>\n> $$n = 0.0;\n>\n> if ($$n->is_zero) {print 'you entered zero'}\n>\n>work as you expected.\n>\n> HTH,\n>\n>Rob\n>\n>\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}