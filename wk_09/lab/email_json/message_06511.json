{"category": "ham", "to_address": "Volker.Lendecke@SerNet.DE", "from_address": "tridge@samba.org", "subject": "ctdb shortcut locking", "body": "Volker and Ronnie,\n\nI've just checked in some very strange code! Have a look at\ntests/lockwait.c in my bzr ctdb tree.\n\nBasically it shows how we can do event driven tdb, with basically zero\noverhead (at least for the common uncontended case).  This solves the\nproblem of how we can handle waiting on a tdb lock in the ctdb daemon.\n\nInternally, it uses fork()+lock on the contended path, but its wrapped\nin a little bit of magic that turns this into a event in our event\nsystem, so basically the caller does a non-blocking tdb_chainlock(),\nthen if it blocks they use the lockwait() code to trigger an event\nwhen the lock becomes available. When the callback happens the\ntdb_chainlock() can be retried.\n\nWhat I really like about this is we only pay a price in the contended\ncase, which I expect to be very rare. We also send no extra messages\nover the unix domain socket.\n\nWhat do you think?\n\nCheers, Tridge\n\n"}