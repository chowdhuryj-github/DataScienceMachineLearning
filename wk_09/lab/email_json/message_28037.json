{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 278: added _mark calls for tdb_lockall in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 278\nrevision-id: tridge@samba.org-20070512043310-2g9ayfn50um8sn81\nparent: tridge@samba.org-20070511072921-1fmloqo3r1uzqxeq\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-05-12 14:33:10 +1000\nmessage:\n  added _mark calls for tdb_lockall\nmodified:\n  lib/tdb/common/lock.c          lock.c-20070220022425-m1wibgjq7n5hahs6-7\n  lib/tdb/include/tdb.h          tdb.h-20070125040949-7t3f5zdl1q4z9hyv-101\n=== modified file 'lib/tdb/common/lock.c'\n--- a/lib/tdb/common/lock.c\t2007-05-10 07:43:08 +0000\n+++ b/lib/tdb/common/lock.c\t2007-05-12 04:33:10 +0000\n@@ -290,6 +290,10 @@\n /* lock/unlock entire database */\n static int _tdb_lockall(struct tdb_context *tdb, int ltype, int op)\n {\n+\tbool mark_lock = ((ltype & TDB_MARK_LOCK) == TDB_MARK_LOCK);\n+\n+\tltype &= ~TDB_MARK_LOCK;\n+\n \t/* There are no locks on read-only dbs */\n \tif (tdb->read_only || tdb->traverse_read)\n \t\treturn TDB_ERRCODE(TDB_ERR_LOCK, -1);\n@@ -309,7 +313,8 @@\n \t\treturn TDB_ERRCODE(TDB_ERR_LOCK, -1);\n \t}\n \n-\tif (tdb->methods->tdb_brlock(tdb, FREELIST_TOP, ltype, op,\n+\tif (!mark_lock &&\n+\t    tdb->methods->tdb_brlock(tdb, FREELIST_TOP, ltype, op,\n \t\t\t\t     0, 4*tdb->header.hash_size)) {\n \t\tif (op == F_SETLKW) {\n \t\t\tTDB_LOG((tdb, TDB_DEBUG_ERROR, \"tdb_lockall failed (%s)\\n\", strerror(errno)));\n@@ -328,6 +333,10 @@\n /* unlock entire db */\n static int _tdb_unlockall(struct tdb_context *tdb, int ltype)\n {\n+\tbool mark_lock = ((ltype & TDB_MARK_LOCK) == TDB_MARK_LOCK);\n+\n+\tltype &= ~TDB_MARK_LOCK;\n+\n \t/* There are no locks on read-only dbs */\n \tif (tdb->read_only || tdb->traverse_read) {\n \t\treturn TDB_ERRCODE(TDB_ERR_LOCK, -1);\n@@ -342,7 +351,8 @@\n \t\treturn 0;\n \t}\n \n-\tif (tdb->methods->tdb_brlock(tdb, FREELIST_TOP, F_UNLCK, F_SETLKW, \n+\tif (!mark_lock &&\n+\t    tdb->methods->tdb_brlock(tdb, FREELIST_TOP, F_UNLCK, F_SETLKW, \n \t\t\t\t     0, 4*tdb->header.hash_size)) {\n \t\tTDB_LOG((tdb, TDB_DEBUG_ERROR, \"tdb_unlockall failed (%s)\\n\", strerror(errno)));\n \t\treturn -1;\n@@ -360,6 +370,18 @@\n \treturn _tdb_lockall(tdb, F_WRLCK, F_SETLKW);\n }\n \n+/* lock entire database with write lock - mark only */\n+int tdb_lockall_mark(struct tdb_context *tdb)\n+{\n+\treturn _tdb_lockall(tdb, F_WRLCK | TDB_MARK_LOCK, F_SETLKW);\n+}\n+\n+/* unlock entire database with write lock - unmark only */\n+int tdb_lockall_unmark(struct tdb_context *tdb)\n+{\n+\treturn _tdb_unlockall(tdb, F_WRLCK | TDB_MARK_LOCK);\n+}\n+\n /* lock entire database with write lock - nonblocking varient */\n int tdb_lockall_nonblock(struct tdb_context *tdb)\n {\n\n=== modified file 'lib/tdb/include/tdb.h'\n--- a/lib/tdb/include/tdb.h\t2007-05-10 07:43:08 +0000\n+++ b/lib/tdb/include/tdb.h\t2007-05-12 04:33:10 +0000\n@@ -121,6 +121,8 @@\n int tdb_lockall_read(struct tdb_context *tdb);\n int tdb_lockall_read_nonblock(struct tdb_context *tdb);\n int tdb_unlockall_read(struct tdb_context *tdb);\n+int tdb_lockall_mark(struct tdb_context *tdb);\n+int tdb_lockall_unmark(struct tdb_context *tdb);\n const char *tdb_name(struct tdb_context *tdb);\n int tdb_fd(struct tdb_context *tdb);\n tdb_log_func tdb_log_fn(struct tdb_context *tdb);\n\n"}