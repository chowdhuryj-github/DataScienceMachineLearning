{"category": "ham", "to_address": "Owen <rcook@pcug.org.au>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: The module constants", "body": "On 5/3/07, Owen  wrote:\n> In todays listing of new CPAN modules, there was one called constants,\n> http://search.cpan.org/~hooo/constants-0.0027/ . The synopsis reads;\n>\n>         use constants;\n>\n> EXPORTS\n>         UNDEF = undef;\n>         NO = defined;\n>         YES = !NO;\n>\n> End of synopsis!\n>\n> Could someone enlighten me as why (and how) you would use this module?\n> TIA\n> Owen\n\nThis person thought it would be useful to have named values for true,\nfalse, and for some reason decided that he/she wanted to type undef in\nupper case (probably to match the way he/she is typing true and\nfalse).  You could use it like this:\n\nsub strings_equal {\n    croak \"bad args, expected more than one, got (@_)\" unless @_ > 1;\n    while (@_ > 1) {\n        my $s = shift;\n        return NO if $s ne $_[0];\n    }\n    return YES;\n}\n\nIt is, however, a bad idea.  YES is not the only true and NO is not\nthe only false.  If they are only being used in the manner above they\nare mostly harmless, but be careful of using them in too general a\ncontext.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}