{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 300: reading on the write side of a pipe isn't allowed - this\n\tcaused us to run without locking in the lockwait code in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 300\nrevision-id: tridge@samba.org-20070514234403-ghdhn9vpf6fyqnhq\nparent: tridge@samba.org-20070514234252-lkr0iynk4eys7ff1\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-05-15 09:44:03 +1000\nmessage:\n  reading on the write side of a pipe isn't allowed - this caused us to run without locking in the lockwait code\nmodified:\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\n=== modified file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t2007-05-14 04:01:33 +0000\n+++ b/common/ctdb_lockwait.c\t2007-05-14 23:44:03 +0000\n@@ -57,10 +57,16 @@\n \tctdb_latency(&h->ctdb->status.max_lockwait_latency, h->start_time);\n \th->ctdb->status.pending_lockwait_calls--;\n \n-\t/* the fde needs to go away when the context is gone - when\n-\t   the fde goes away this implicitly closes the pipe, which\n+\t/* the handle needs to go away when the context is gone - when\n+\t   the handle goes away this implicitly closes the pipe, which\n \t   kills the child holding the lock */\n-\ttalloc_steal(tmp_ctx, fde);\n+\ttalloc_steal(tmp_ctx, h);\n+\n+\tif (h->ctdb->flags & CTDB_FLAG_TORTURE) {\n+\t\tif (tdb_chainlock_nonblock(tdb, key) == 0) {\n+\t\t\tctdb_fatal(h->ctdb, \"got chain lock while lockwait child active\");\n+\t\t}\n+\t}\n \n \ttdb_chainlock_mark(tdb, key);\n \tcallback(p);\n@@ -96,6 +102,7 @@\n {\n \tstruct lockwait_handle *result;\n \tint ret;\n+\tpid_t parent = getpid();\n \n \tctdb_db->ctdb->status.lockwait_calls++;\n \tctdb_db->ctdb->status.pending_lockwait_calls++;\n@@ -134,9 +141,10 @@\n \t\tclose(result->fd[0]);\n \t\ttdb_chainlock(ctdb_db->ltdb->tdb, key);\n \t\twrite(result->fd[1], &c, 1);\n-\t\t/* this read will exit when the parent closes its end\n-\t\t   of the pipe, or the parent dies */\n-\t\tread(result->fd[1], &c, 1);\n+\t\t/* make sure we die when our parent dies */\n+\t\twhile (kill(parent, 0) == 0 || errno != ESRCH) {\n+\t\t\tsleep(5);\n+\t\t}\n \t\t_exit(0);\n \t}\n \n\n"}