{"category": "ham", "to_address": "Andrew Bartlett <abartlet@samba.org>", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Re: [SAMBA4] we should create just one test environment", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nAndrew Bartlett wrote:\n> On Mon, 2007-04-30 at 10:22 +0200, Jelmer Vernooij wrote:\n>> Andrew Bartlett wrote:\n>>>> Also, the current code makes it very easy to add support for other\n>>>> targets (Samba3, for example) that don't support all test environments\n>>>> (yet).\n>>>>\n>>>> Perhaps you would simply like to make sure that all test environments\n>>>> are set up in 'make testenv' ? \n>>> No, then the tests will constantly differ from the environment in which\n>>> they are normally run, even worse than the current situation.\n>> In that case, why not add an ENV= variable so you can run \"make testenv\n>> ENV=member\" ? Or perhaps we can simply add \"make testenv-dc\" and \"make\n>> testenv-member\"?\n>>\n>> We can print out the environment name for failed tests, if that would help.\n> I just think it's getting too complex.  It used to be very simple, and\n> it isn't any more.  \nThe only added complexity would be that there isn't just 'testenv' but\n'testenv-dc' and 'testenv-member', and there is just one test that uses\nthe latter at the moment. That makes it a little bit more complex, but\nthe alternative is a complex test environment.\n\nI also think the concept that a test has to run against a particular\nkind of server isn't particularly hard to grasp.\n\n>>> I'm afraid that the selftest setup is becoming too complex to reproduce\n>>> - I want to be able to easily reproduce any failure in 'make\n>>> testenv' (which you will recall is my primary work tool), without first\n>>> wondering 'oh, what environment did it declare, what environment did it\n>>> get, and what environment do I have now'.\n>> That will make other things more complex. For example, we'd need to\n>> change the environment variables to be $DC1_IP, $DC1_USERNAME,\n>> $DC2_PASSWORD, etc because the tests can be run against either of the\n>> dcs or domain member.\n> Well, the first point is that DC1 and DC2 *should* be sharing the same\n> username and passwords.  The member server will have additional local\n> users (to verify the local SAM), but the whole point of a member server\n> is to use the same passwords...\nWell, I was thinking of the case where two DCs were in different domains\nbut had a trust between them. So, in the case of two dc's in the same\ndomain, you would have a $DC_USERNAME and $DC_PASSWORD but also\npasswords and ips for various member servers.\n\n>> It also makes things like \"make test TESTS=SAMR\" slower as the\n>> provisioning is two or three times as slow.\n> Provisioning for an additional DC should not be particularly expensive.\n> I expect to do some work to allow two DCs to share a ldb (for one modal\n> of replication), and for the DRSUAPI replicated case, we just need to\n> setup a skeleton. \nProvisioning by itself is relatively slow. If I run \"make test\nTESTS=RPC-SAMR\" a lot of times in a row when I'm trying to fix something\nit does matter that provisioning takes twice as long.\n\nI also imagine we'll have a different environment that provides a\nNT4-style DC. Eventually we may end up with a dozen or more\nservers and that will cost us. It may work for just one dc and member\nbut won't scale.\n\n>>> It doesn't seem too much of a price to always have a simple network\n>>> running, that contains the DC (or 2), and member servers.  Then we can\n>>> be very consistent in how our tests run, and are debugged. \n>> It's not just the time it takes to set up the environment, also the fact\n>> that it makes it harder to support other targets (because of the\n>> complexity of the environment they need to support) and the inability to\n>> mix environments. \n> I really don't understand what you mean here.  \nAt the moment, it is very easy to create a test network that contains a\nSamba4 DC and a Samba3 member server or a Samba3 DC and a Samba4 member\nserver, etc.\n\nIf we'd need to set up the same environment for a different target\n(Windos or Samba 3), we'll have to replicate the exact same situation\nincluding all the various different dcs/members before we can run any of\nthe tests or we need to keep a list of targets against which a\nparticular test can run. In the current situation, we can simply skip\nall tests that require an environment that is not available.\n\nCheers,\n\nJelmer\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org\n\niQCVAwUBRjWxDAy0JeEGD2blAQKw9wP/T3JLvN2k/K36mhQsERxTCa2cmbAHI2Dp\nB28TrHM3yO8xaxKbB7F6LrOSeOqob6pG9A5ac3dTxlDadLCGnL2RgzA5EzN5h/Nj\nhxb6o1yLKUK4vmEYZfs5IQaX2G4HU6SttrQ/lIRo+gcLY6wrWaCJh3ElbF0iu/CX\n3R4ZSHL4YCs=\n=zOJQ\n-----END PGP SIGNATURE-----\n\n"}