{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r23273 - in branches/SAMBA_3_0_26/source: .\n\tinclude rpc_parse rpc_server", "body": "Author: jerry\nDate: 2007-05-31 17:33:47 +0000 (Thu, 31 May 2007)\nNew Revision: 23273\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23273\n\nLog:\nReplace hand written CloseEventlog() with pidl generated stub\nModified:\n   branches/SAMBA_3_0_26/source/Makefile.in\n   branches/SAMBA_3_0_26/source/configure.in\n   branches/SAMBA_3_0_26/source/include/includes.h\n   branches/SAMBA_3_0_26/source/include/rpc_client.h\n   branches/SAMBA_3_0_26/source/include/rpc_eventlog.h\n   branches/SAMBA_3_0_26/source/include/smb.h\n   branches/SAMBA_3_0_26/source/rpc_parse/parse_eventlog.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_pipe.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/Makefile.in\n===================================================================\n--- branches/SAMBA_3_0_26/source/Makefile.in\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/Makefile.in\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -233,7 +233,7 @@\n \n LIBNDR_GEN_OBJ = librpc/gen_ndr/ndr_wkssvc.o librpc/gen_ndr/ndr_notify.o \\\n \t\t librpc/gen_ndr/ndr_lsa.o librpc/gen_ndr/ndr_echo.o \\\n-\t\t librpc/gen_ndr/ndr_svcctl.o\n+\t\t librpc/gen_ndr/ndr_svcctl.o librpc/gen_ndr/ndr_eventlog.o\n \n RPC_PARSE_OBJ0 = rpc_parse/parse_prs.o rpc_parse/parse_misc.o\n \n@@ -338,6 +338,7 @@\n \n LIBMSRPC_GEN_OBJ = librpc/gen_ndr/cli_wkssvc.o librpc/gen_ndr/cli_lsa.o \\\n \t\t   librpc/gen_ndr/cli_echo.o librpc/gen_ndr/cli_svcctl.o \\\n+\t\t   librpc/gen_ndr/cli_eventlog.o \\\n \t\t   $(LIBNDR_GEN_OBJ) $(RPCCLIENT_NDR_OBJ)\n \n REGOBJS_OBJ = registry/reg_objects.o\n@@ -375,7 +376,8 @@\n \n RPC_SPOOLSS_OBJ = rpc_server/srv_spoolss.o rpc_server/srv_spoolss_nt.o\n \n-RPC_EVENTLOG_OBJ = rpc_server/srv_eventlog.o rpc_server/srv_eventlog_nt.o rpc_server/srv_eventlog_lib.o\n+RPC_EVENTLOG_OBJ = rpc_server/srv_eventlog.o rpc_server/srv_eventlog_nt.o \\\n+\t\t   rpc_server/srv_eventlog_lib.o librpc/gen_ndr/srv_eventlog.o\n \n RPC_PIPE_OBJ = rpc_server/srv_pipe_hnd.o \\\n                rpc_server/srv_pipe.o rpc_server/srv_lsa_hnd.o\n\nModified: branches/SAMBA_3_0_26/source/configure.in\n===================================================================\n--- branches/SAMBA_3_0_26/source/configure.in\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/configure.in\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -610,7 +610,7 @@\n \n dnl Add modules that have to be built by default here\n dnl These have to be built static:\n-default_static_modules=\"pdb_smbpasswd pdb_tdbsam rpc_lsa rpc_samr rpc_reg rpc_shutdown rpc_lsa_ds rpc_wkssvc rpc_svcctl2 rpc_ntsvcs rpc_net rpc_netdfs rpc_srvsvc rpc_spoolss rpc_eventlog rpc_rpcecho auth_sam auth_unix auth_winbind auth_server auth_domain auth_builtin vfs_default nss_info_template\"\n+default_static_modules=\"pdb_smbpasswd pdb_tdbsam rpc_lsa rpc_samr rpc_reg rpc_shutdown rpc_lsa_ds rpc_wkssvc rpc_svcctl2 rpc_ntsvcs rpc_net rpc_netdfs rpc_srvsvc rpc_spoolss rpc_eventlog2 rpc_rpcecho auth_sam auth_unix auth_winbind auth_server auth_domain auth_builtin vfs_default nss_info_template\"\n \n dnl These are preferably build shared, and static if dlopen() is not available\n default_shared_modules=\"vfs_recycle vfs_audit vfs_extd_audit vfs_full_audit vfs_netatalk vfs_fake_perms vfs_default_quota vfs_readonly vfs_cap vfs_expand_msdfs vfs_shadow_copy charset_CP850 charset_CP437 auth_script vfs_readahead\"\n@@ -6131,7 +6131,7 @@\n SMB_MODULE(rpc_netdfs, \\$(RPC_DFS_OBJ), \"bin/librpc_netdfs.$SHLIBEXT\", RPC)\n SMB_MODULE(rpc_srv, \\$(RPC_SVC_OBJ), \"bin/librpc_svc.$SHLIBEXT\", RPC)\n SMB_MODULE(rpc_spoolss, \\$(RPC_SPOOLSS_OBJ), \"bin/librpc_spoolss.$SHLIBEXT\", RPC)\n-SMB_MODULE(rpc_eventlog, \\$(RPC_EVENTLOG_OBJ), \"bin/librpc_eventlog.$SHLIBEXT\", RPC)\n+SMB_MODULE(rpc_eventlog2, \\$(RPC_EVENTLOG_OBJ), \"bin/librpc_eventlog2.$SHLIBEXT\", RPC)\n SMB_MODULE(rpc_samr, \\$(RPC_SAMR_OBJ), \"bin/librpc_samr.$SHLIBEXT\", RPC)\n SMB_MODULE(rpc_rpcecho, \\$(RPC_ECHO_OBJ), \"bin/librpc_rpcecho.$SHLIBEXT\", RPC)\n SMB_SUBSYSTEM(RPC,smbd/server.o)\n\nModified: branches/SAMBA_3_0_26/source/include/includes.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/includes.h\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/include/includes.h\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -786,6 +786,7 @@\n #include \"librpc/gen_ndr/srv_echo.h\"\n #include \"librpc/gen_ndr/srv_svcctl.h\"\n #include \"librpc/gen_ndr/srv_lsa.h\"\n+#include \"librpc/gen_ndr/srv_eventlog.h\"\n \n /***** automatically generated prototypes *****/\n #ifndef NO_PROTO_H\n\nModified: branches/SAMBA_3_0_26/source/include/rpc_client.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/rpc_client.h\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/include/rpc_client.h\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -27,6 +27,7 @@\n #include \"librpc/gen_ndr/cli_lsa.h\"\n #include \"librpc/gen_ndr/cli_svcctl.h\"\n #include \"librpc/gen_ndr/cli_wkssvc.h\"\n+#include \"librpc/gen_ndr/cli_eventlog.h\"\n \n /* macro to expand cookie-cutter code in cli_xxx() using rpc_api_pipe_req() */\n \n\nModified: branches/SAMBA_3_0_26/source/include/rpc_eventlog.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/rpc_eventlog.h\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/include/rpc_eventlog.h\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -31,21 +31,11 @@\n #define EVENTLOG_READEVENTLOG\t\t0x0a\n \n /* Eventlog read flags */\n+/* defined in librpc/gen_ndr/eventlog.h */\n \n-#define EVENTLOG_SEQUENTIAL_READ      0x0001\n-#define EVENTLOG_SEEK_READ            0x0002\n-#define EVENTLOG_FORWARDS_READ        0x0004\n-#define EVENTLOG_BACKWARDS_READ       0x0008\n-\n /* Event types */\n+/* defined in librpc/gen_ndr/eventlog.h */\n \n-#define EVENTLOG_SUCCESS              0x0000\n-#define EVENTLOG_ERROR_TYPE           0x0001\n-#define EVENTLOG_WARNING_TYPE         0x0002\n-#define EVENTLOG_INFORMATION_TYPE     0x0004\n-#define EVENTLOG_AUDIT_SUCCESS        0x0008\n-#define EVENTLOG_AUDIT_FAILURE        0x0010\n-\n /* Defines for TDB keys */\n #define  EVT_OLDEST_ENTRY  \"INFO/oldest_entry\"\n #define  EVT_NEXT_RECORD   \"INFO/next_record\"\n@@ -94,18 +84,6 @@\n \n typedef struct {\n \tPOLICY_HND handle;\n-} EVENTLOG_Q_CLOSE_EVENTLOG;\n-\n-typedef struct {\n-\tPOLICY_HND handle;\n-\tNTSTATUS status;\n-} EVENTLOG_R_CLOSE_EVENTLOG;\n-\n-\n-/***********************************/\n-\n-typedef struct {\n-\tPOLICY_HND handle;\n } EVENTLOG_Q_GET_NUM_RECORDS;\n \n typedef struct {\n\nModified: branches/SAMBA_3_0_26/source/include/smb.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/smb.h\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/include/smb.h\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -305,6 +305,7 @@\n #include \"librpc/gen_ndr/wkssvc.h\"\n #include \"librpc/gen_ndr/echo.h\"\n #include \"librpc/gen_ndr/svcctl.h\"\n+#include \"librpc/gen_ndr/eventlog.h\"\n \n struct lsa_dom_info {\n \tBOOL valid;\n\nModified: branches/SAMBA_3_0_26/source/rpc_parse/parse_eventlog.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_parse/parse_eventlog.c\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/rpc_parse/parse_eventlog.c\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -174,45 +174,6 @@\n \treturn True;\n }\n \n-BOOL eventlog_io_q_close_eventlog(const char *desc, EVENTLOG_Q_CLOSE_EVENTLOG *q_u,\n-\t\t\t\t  prs_struct *ps, int depth)\n-{\n-\tif(q_u == NULL)\n-\t\treturn False;\n-\n-\tprs_debug(ps, depth, desc, \"eventlog_io_q_close_eventlog\");\n-\tdepth++;\n-    \n-\tif(!(prs_align(ps)))\n-\t\treturn False;\n-\n-\tif(!(smb_io_pol_hnd(\"log handle\", &(q_u->handle), ps, depth)))\n-\t\treturn False;\n-\n-\treturn True;\n-}\n-\n-BOOL eventlog_io_r_close_eventlog(const char *desc, EVENTLOG_R_CLOSE_EVENTLOG *r_u,\n-\t\t\t\t  prs_struct *ps, int depth)\n-{\n-\tif(r_u == NULL)\n-\t\treturn False;\n-\n-\tprs_debug(ps, depth, desc, \"eventlog_io_r_close_eventlog\");\n-\tdepth++;\n-\n-\tif(!(prs_align(ps)))\n-\t\treturn False;\n-\n-\tif(!(smb_io_pol_hnd(\"log handle\", &(r_u->handle), ps, depth)))\n-\t\treturn False;\n-\n-\tif(!(prs_ntstatus(\"status code\", ps, depth, &r_u->status)))\n-\t\treturn False;\n-\n-\treturn True;\n-}\n-\n BOOL eventlog_io_q_read_eventlog(const char *desc, EVENTLOG_Q_READ_EVENTLOG *q_u,\n \t\t\t\t prs_struct *ps, int depth)\n {\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog.c\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog.c\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -1,7 +1,8 @@\n /* \n  *  Unix SMB/CIFS implementation.\n  *  RPC Pipe client / server routines\n- *  Copyright (C) Marcin Krzysztof Porwit    2005.\n+ *  Copyright (C) Marcin Krzysztof Porwit         2005.\n+ *  Copyright (C) Gerald Carter                   2005 - 2007\n  *  \n  *  This program is free software; you can redistribute it and/or modify\n  *  it under the terms of the GNU General Public License as published by\n@@ -23,6 +24,23 @@\n #undef DBGC_CLASS\n #define DBGC_CLASS DBGC_RPC_SRV\n \n+static BOOL proxy_eventlog_call(pipes_struct *p, uint8 opnum)\n+{\n+\tstruct api_struct *fns;\n+\tint n_fns;\n+\n+\teventlog_get_pipe_fns(&fns, &n_fns);\n+\n+\tif (opnum >= n_fns)\n+\t\treturn False;\n+\n+\tif (fns[opnum].opnum != opnum) {\n+\t\tsmb_panic(\"EVENTLOG function table not sorted\\n\");\n+\t}\n+\n+\treturn fns[opnum].fn(p);\n+}\n+\n static BOOL api_eventlog_open_eventlog(pipes_struct *p)\n {\n \tEVENTLOG_Q_OPEN_EVENTLOG q_u;\n@@ -50,27 +68,7 @@\n \n static BOOL api_eventlog_close_eventlog(pipes_struct *p)\n {\n-\tEVENTLOG_Q_CLOSE_EVENTLOG q_u;\n-\tEVENTLOG_R_CLOSE_EVENTLOG r_u;\n-\tprs_struct *data = &p->in_data.data;\n-\tprs_struct *rdata = &p->out_data.rdata;\n-\n-\tZERO_STRUCT(q_u);\n-\tZERO_STRUCT(r_u);\n-\n-\tif (!(eventlog_io_q_close_eventlog(\"\", &q_u, data, 0))) {\n-\t\tDEBUG(0, (\"eventlog_io_q_close_eventlog: unable to unmarshall EVENTLOG_Q_CLOSE_EVENTLOG.\\n\"));\n-\t\treturn False;\n-\t}\n-\n-\tr_u.status = _eventlog_close_eventlog(p, &q_u, &r_u);\n-\n-\tif (!(eventlog_io_r_close_eventlog(\"\", &r_u, rdata, 0))) {\n-\t\tDEBUG(0, (\"eventlog_io_r_close_eventlog: unable to marshall EVENTLOG_R_CLOSE_EVENTLOG.\\n\"));\n-\t\treturn False;\n-\t}\n-\n-\treturn True;\n+\treturn proxy_eventlog_call( p, DCERPC_EVENTLOG_CLOSEEVENTLOG );\t\n }\n \n static BOOL api_eventlog_get_num_records(pipes_struct *p)\n@@ -186,14 +184,14 @@\n \t{\"EVENTLOG_CLEAREVENTLOG\", \tEVENTLOG_CLEAREVENTLOG, \tapi_eventlog_clear_eventlog   }\n };\n \n-NTSTATUS rpc_eventlog_init(void)\n+NTSTATUS rpc_eventlog2_init(void)\n {\n \treturn rpc_pipe_register_commands(SMB_RPC_INTERFACE_VERSION, \n \t\t\"eventlog\", \"eventlog\", api_eventlog_cmds,\n \t\tsizeof(api_eventlog_cmds)/sizeof(struct api_struct));\n }\n \n-void eventlog_get_pipe_fns(struct api_struct **fns, int *n_fns)\n+void eventlog2_get_pipe_fns(struct api_struct **fns, int *n_fns)\n {\n \t*fns = api_eventlog_cmds;\n \t*n_fns = sizeof(api_eventlog_cmds) / sizeof(struct api_struct);\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -405,7 +405,7 @@\n \tuiRetention = 604800;\n \n \t/* the general idea is to internally open the registry \n-\t   key and retreive the values.  That way we can continue \n+\t   key and retrieve the values.  That way we can continue \n \t   to use the same fetch/store api that we use in \n \t   srv_reg_nt.c */\n \n@@ -659,11 +659,9 @@\n /********************************************************************\n  ********************************************************************/\n \n-NTSTATUS _eventlog_close_eventlog( pipes_struct * p,\n-\t\t\t\t EVENTLOG_Q_CLOSE_EVENTLOG * q_u,\n-\t\t\t\t EVENTLOG_R_CLOSE_EVENTLOG * r_u )\n+NTSTATUS _eventlog_CloseEventLog( pipes_struct * p, struct eventlog_CloseEventLog *r )\n {\n-\treturn elog_close( p, &q_u->handle );\n+\treturn elog_close( p, r->in.handle );\n }\n \n /********************************************************************\n@@ -802,3 +800,142 @@\n \n \treturn NT_STATUS_OK;\n }\n+\n+NTSTATUS _eventlog_ClearEventLogW(pipes_struct *p, struct eventlog_ClearEventLogW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_BackupEventLogW(pipes_struct *p, struct eventlog_BackupEventLogW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_DeregisterEventSource(pipes_struct *p, struct eventlog_DeregisterEventSource *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_GetNumRecords(pipes_struct *p, struct eventlog_GetNumRecords *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_GetOldestRecord(pipes_struct *p, struct eventlog_GetOldestRecord *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ChangeNotify(pipes_struct *p, struct eventlog_ChangeNotify *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_OpenEventLogW(pipes_struct *p, struct eventlog_OpenEventLogW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_RegisterEventSourceW(pipes_struct *p, struct eventlog_RegisterEventSourceW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_OpenBackupEventLogW(pipes_struct *p, struct eventlog_OpenBackupEventLogW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ReadEventLogW(pipes_struct *p, struct eventlog_ReadEventLogW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ReportEventW(pipes_struct *p, struct eventlog_ReportEventW *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ClearEventLogA(pipes_struct *p, struct eventlog_ClearEventLogA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_BackupEventLogA(pipes_struct *p, struct eventlog_BackupEventLogA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_OpenEventLogA(pipes_struct *p, struct eventlog_OpenEventLogA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_RegisterEventSourceA(pipes_struct *p, struct eventlog_RegisterEventSourceA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_OpenBackupEventLogA(pipes_struct *p, struct eventlog_OpenBackupEventLogA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ReadEventLogA(pipes_struct *p, struct eventlog_ReadEventLogA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_ReportEventA(pipes_struct *p, struct eventlog_ReportEventA *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_RegisterClusterSvc(pipes_struct *p, struct eventlog_RegisterClusterSvc *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_DeregisterClusterSvc(pipes_struct *p, struct eventlog_DeregisterClusterSvc *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_WriteClusterEvents(pipes_struct *p, struct eventlog_WriteClusterEvents *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_GetLogIntormation(pipes_struct *p, struct eventlog_GetLogIntormation *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n+NTSTATUS _eventlog_FlushEventLog(pipes_struct *p, struct eventlog_FlushEventLog *r)\n+{\n+\tp->rng_fault_state = True;\n+\treturn NT_STATUS_NOT_IMPLEMENTED;\n+}\n+\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_pipe.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_pipe.c\t2007-05-31 17:26:30 UTC (rev 23272)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_pipe.c\t2007-05-31 17:33:47 UTC (rev 23273)\n@@ -2369,7 +2369,7 @@\n \t\t\tsvcctl2_get_pipe_fns( &cmds, &n_cmds );\n \t\t\tbreak;\n \t        case PI_EVENTLOG:\n-\t\t\teventlog_get_pipe_fns( &cmds, &n_cmds );\n+\t\t\teventlog2_get_pipe_fns( &cmds, &n_cmds );\n \t\t\tbreak;\n \t\tcase PI_NTSVCS:\n \t\t\tntsvcs_get_pipe_fns( &cmds, &n_cmds );\n\n"}