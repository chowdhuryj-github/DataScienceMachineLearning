{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Paul Seamons <mail@seamons.com>", "subject": "Re: Referring to source code within Perldoc: the new A<> code", "body": "> > The solution is simple, you know, Mark. Why not just write up your own\n> > alternate S26, redesigning Pod 6 the way you think it should work, and\n> > then publish your proposal for consideration here?\n>\n> Couldn't most of this be figured out by making Pod6 extensible (or\n> whatever the right term is). Pod6 would be more of the syntax and basic\n> operation, but other people could have custom directives that their\n> Pod6 translators and formatters could then use. That is, not all of\n> this has to be in the spec if the spec has a way to make it possible\n> later. :)\n>\n> And, as far as writing a new S26, does this mean that this really isn't\n> open to discussion? That is, if we want something different than you\n> want we have to have competing specs and there won't be any compromise?\n\nMy feeling on the matter is that both camps are right.  I think that Damian is \nright that Pod6 should be completely independent.  I think that Mark is right \nthat we need a consistent way to output OO descriptions in pod.\n\nI think the problem is that we currently have the \"perldoc\" program which \nwould probably be better named as poddoc or simply pod.  I think perldoc is \ncurrently a bad and misleading name for the Plain Old Documentation \ngenerator.\n\nI think that perldoc should be the magic tool that does pod extraction (ala \npoddoc) and ALSO does some version of Mark's autoextraction of inlined \ndocumentation.  @Larry hasn't said anything about having \ninlined/introspectable documentation.  I think that it would be nice to have \nsomething standard and I think that Mark's proposal is pretty nice.  \nThe \"real\" perldoc program can have full access to the code.  This is \nactually a downside as well - if the code doesn't compile, then perldoc would \nnot be able to generate the code - but it could always show an error that the \ncode doesn't compile and then show what poddoc would show.\n\nThe outcome is that poddoc can be Pod6 \"pure\" and perldoc can be (as its name \nsuggests) documentation for Perl.\n\nJust my opinions.\n\nPaul Seamons\n \n\n"}