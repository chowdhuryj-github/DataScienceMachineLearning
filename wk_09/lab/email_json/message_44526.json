{"category": "ham", "to_address": "Michael Poole <mdpoole@troilus.org>", "from_address": "Kern Sibbald <kern@sibbald.com>", "subject": "Re: Bacula: GPL and OpenSSL", "body": "On Thursday 07 June 2007 19:00, Michael Poole wrote:\n> John Goerzen writes:\n> \n> > Kern approached me about this situation (see full correspondence below,\n> > forwarded with his permission).  He added that Bacula does not\n> > statically link with OpenSSL, that OpenSSL support can be disabled at\n> > build time, and that FSFE does not believe that an exception clause to\n> > the GPL is necessary to legally link to OpenSSL in the manner that\n> > Bacula is (dynamic linking).  Further, could we not consider OpenSSL to\n> > be a major component of the OS on which the executable runs, and thus\n> > fall under that exemption in the GPL anyway?\n> >\n> > I have not been able to pull up a succinct statement of why Debian\n> > believes this is a problem when FSFE doesn't, or what we ought to do.\n> > Can somebody please comment on the OpenSSL linking issue when OpenSSL is\n> > only dynamically linked?\n> \n> Debian generally distributes OpenSSL logically near the packages that\n> dynamically link against it, so the major system component option is\n> not available to Debian (\"... unless that component itself accompanies\n> the executable\").\n> \n> GPL section 3(a) also uses \"accompany\" in a way that Debian and others\n> interpret to include distribution in the same directory tree on a\n> particular server, so -- the usual line of reasoning goes -- it would\n> be inconsistent to interpret \"accompany\" one way at the start of\n> section 3 and a different way at the end of section 3.\n\nWell, the above is total Greek to me.  However, I must say that there is \nabsolutely no reason why Bacula would every accompany OpenSSL in any sense of \nthe the English meaning of accompany that I am aware of, nor is Bacula in the \nsame directory tree as any OpenSSL shared object unless you consider \neverything is under root thus everything on the server is in the same \ndirectory \"tree\".\n\nBy the way, just to be clear, I consider all this (not you guys but these \nlicense difficulties) to be a real pain.  As long as the code is Open Source \n(i.e. I can get it, see it and modify it), I have no problem with it being \nlinked with Bacula. \n\nI modified the Bacula GPL license at Debian's request to remove the issue you \nfind with OpenSSL, however, that created a much bigger problem for me -- it \nmade Bacula in violation of other peoples GPLed code that is used in Bacula.  \nAs a consequence, I removed all Bacula modifications to the GPL making Bacula \nclean -- it violates no one's license.  Each person, distributor, packager \ncan decide for himself whether or not to enable Bacula to use encryption.  At \nthe current time if encryption is turned on, Bacula expects an OpenSSL \ninterface.\n\nI much appreciate that Debian has for a long time packaged Bacula as part of \nthe Debian system.  If it were only a simple matter of keeping that clause \nrather than a question of violating other people's copyright, I would keep \nthe clause despite what Fedora/Red Hat think/want.  So, sorry if this causes \nyou problems, but I prefer to be in compliance.\n\nBest regards,\n\nKern\n\n\n-- \nTo UNSUBSCRIBE, email to debian-legal-REQUEST@lists.debian.org\nwith a subject of \"unsubscribe\". Trouble? Contact listmaster@lists.debian.org\n\n"}