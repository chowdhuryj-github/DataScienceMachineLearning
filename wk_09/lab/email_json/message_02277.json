{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22163 - in branches: SAMBA_3_0/source/rpc_parse\n\tSAMBA_3_0_25/source/rpc_parse", "body": "Author: jra\nDate: 2007-04-11 05:05:33 +0000 (Wed, 11 Apr 2007)\nNew Revision: 22163\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22163\n\nLog:\nPure reformatting. I hate 4 space tabstops :-).\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/rpc_parse/parse_prs.c\n   branches/SAMBA_3_0_25/source/rpc_parse/parse_prs.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/rpc_parse/parse_prs.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_parse/parse_prs.c\t2007-04-11 05:01:02 UTC (rev 22162)\n+++ branches/SAMBA_3_0/source/rpc_parse/parse_prs.c\t2007-04-11 05:05:33 UTC (rev 22163)\n@@ -1456,38 +1456,38 @@\n /* useful function to store a structure in rpc wire format */\n int tdb_prs_store(TDB_CONTEXT *tdb, TDB_DATA kbuf, prs_struct *ps)\n {\n-    TDB_DATA dbuf;\n-    dbuf.dptr = (uint8 *)ps->data_p;\n-    dbuf.dsize = prs_offset(ps);\n-    return tdb_trans_store(tdb, kbuf, dbuf, TDB_REPLACE);\n+\tTDB_DATA dbuf;\n+\tdbuf.dptr = (uint8 *)ps->data_p;\n+\tdbuf.dsize = prs_offset(ps);\n+\treturn tdb_trans_store(tdb, kbuf, dbuf, TDB_REPLACE);\n }\n \n int tdb_prs_store_bystring(TDB_CONTEXT *tdb, char *keystr, prs_struct *ps)\n {\n-    TDB_DATA kbuf = string_term_tdb_data(keystr);\n-    return tdb_prs_store(tdb, kbuf, ps);\n+\tTDB_DATA kbuf = string_term_tdb_data(keystr);\n+\treturn tdb_prs_store(tdb, kbuf, ps);\n }\n \n /* useful function to fetch a structure into rpc wire format */\n int tdb_prs_fetch(TDB_CONTEXT *tdb, TDB_DATA kbuf, prs_struct *ps, TALLOC_CTX *mem_ctx)\n {\n-    TDB_DATA dbuf;\n+\tTDB_DATA dbuf;\n \n-    prs_init(ps, 0, mem_ctx, UNMARSHALL);\n+\tprs_init(ps, 0, mem_ctx, UNMARSHALL);\n \n-    dbuf = tdb_fetch(tdb, kbuf);\n-    if (!dbuf.dptr)\n-\t    return -1;\n+\tdbuf = tdb_fetch(tdb, kbuf);\n+\tif (!dbuf.dptr)\n+\t\treturn -1;\n \n-    prs_give_memory(ps, (char *)dbuf.dptr, dbuf.dsize, True);\n+\tprs_give_memory(ps, (char *)dbuf.dptr, dbuf.dsize, True);\n \n-    return 0;\n+\treturn 0;\n } \n \n int tdb_prs_fetch_bystring(TDB_CONTEXT *tdb, char *keystr, prs_struct *ps, TALLOC_CTX *mem_ctx)\n {\n-    TDB_DATA kbuf = string_term_tdb_data(keystr);\n-    return tdb_prs_fetch(tdb, kbuf, ps, mem_ctx);\n+\tTDB_DATA kbuf = string_term_tdb_data(keystr);\n+\treturn tdb_prs_fetch(tdb, kbuf, ps, mem_ctx);\n }\n \n /*******************************************************************\n\nModified: branches/SAMBA_3_0_25/source/rpc_parse/parse_prs.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_parse/parse_prs.c\t2007-04-11 05:01:02 UTC (rev 22162)\n+++ branches/SAMBA_3_0_25/source/rpc_parse/parse_prs.c\t2007-04-11 05:05:33 UTC (rev 22163)\n@@ -1456,31 +1456,31 @@\n /* useful function to store a structure in rpc wire format */\n int tdb_prs_store(TDB_CONTEXT *tdb, char *keystr, prs_struct *ps)\n {\n-    TDB_DATA kbuf, dbuf;\n-    kbuf.dptr = keystr;\n-    kbuf.dsize = strlen(keystr)+1;\n-    dbuf.dptr = ps->data_p;\n-    dbuf.dsize = prs_offset(ps);\n-    return tdb_trans_store(tdb, kbuf, dbuf, TDB_REPLACE);\n+\tTDB_DATA kbuf, dbuf;\n+\tkbuf.dptr = keystr;\n+\tkbuf.dsize = strlen(keystr)+1;\n+\tdbuf.dptr = ps->data_p;\n+\tdbuf.dsize = prs_offset(ps);\n+\treturn tdb_trans_store(tdb, kbuf, dbuf, TDB_REPLACE);\n }\n \n /* useful function to fetch a structure into rpc wire format */\n int tdb_prs_fetch(TDB_CONTEXT *tdb, char *keystr, prs_struct *ps, TALLOC_CTX *mem_ctx)\n {\n-    TDB_DATA kbuf, dbuf;\n-    kbuf.dptr = keystr;\n-    kbuf.dsize = strlen(keystr)+1;\n+\tTDB_DATA kbuf, dbuf;\n+\tkbuf.dptr = keystr;\n+\tkbuf.dsize = strlen(keystr)+1;\n \n-    prs_init(ps, 0, mem_ctx, UNMARSHALL);\n+\tprs_init(ps, 0, mem_ctx, UNMARSHALL);\n \n-    dbuf = tdb_fetch(tdb, kbuf);\n-    if (!dbuf.dptr)\n-\t    return -1;\n+\tdbuf = tdb_fetch(tdb, kbuf);\n+\tif (!dbuf.dptr)\n+\t\treturn -1;\n \n-    prs_give_memory(ps, dbuf.dptr, dbuf.dsize, True);\n+\tprs_give_memory(ps, dbuf.dptr, dbuf.dsize, True);\n \n-    return 0;\n-} \n+\treturn 0;\n+}\n \n /*******************************************************************\n  hash a stream.\n\n"}