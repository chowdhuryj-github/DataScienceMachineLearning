{"category": "ham", "to_address": "Beginners List <beginners@perl.org>", "from_address": "\"Mumia W.\" <mumia.w.18.spam+nospam@earthlink.net>", "subject": "Re: $1 $2 var confusion", "body": "On 05/12/2007 07:00 PM, Rob Dixon wrote:\n> [...]\n> No, it has no effect on $1. I thought it would cause confusion! The \n> statement simply\n> assigns a list to @f. The first element of the list is undef, and the \n> rest is the\n> result of applying the regex to $email, so it's the same as\n> \n>  my @f = (undef);\n>  push @f, $email =~ /(.*)\\@(.*)/;\n> \n> and simply offsets the captured results by one. As I said, I can see no \n> reason to have\n> written it this way unless Mumia wanted $f[1] to correspond to $1 and \n> $f[2] to $2.\n> [...]\n\nThat was exactly my intention.\n\nI thought I had to choose between that and setting $[ . Which is worse? ;-)\n\nAnyway, I now think that a couple of scalars would have been better.\n\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}