{"category": "ham", "to_address": "sugar@laptop.org", "from_address": "Sjoerd Simons <sjoerd.simons@collabora.co.uk>", "subject": "Re: [sugar] Obtaining Buddy objects as contacts are encountered", "body": "On Thu, May 10, 2007 at 04:32:35PM +0100, Simon McVittie wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> At the moment the Presence Service API assumes we're subscribed to the\n> presence of every contact we'll ever encounter, which obviously can't scale to\n> a school.\n> \n> When child joins an activity we're in, the presence service needs to be able\n> to give us a Buddy object for them without making network round-trips -\n> otherwise the activity will have no way to identify them. We can't just ignore\n> them (omit them from the GUI) until we've made network round-trips to ask\n> the server about them, because they might start participating in the activity\n> before we get the server's reply, and it would be confusing to get messages\n> from an apparently nonexistent buddy (also, activity authors are\n> unlikely to handle this correctly).\n> \n> At the same time, we don't want to have two Buddy objects in the PS process\n> representing the same child, and have to do some sort of coalescing process\n> when we work out that they actually represent the same person; so from just\n> the information we immediately have when we first encounter someone,\n> we should be able to make the decision whether two contacts are in fact the\n> same.\n> \n> For the server case, the JID is constructed as follows:\n> \n> \thex(sha1(public key)) + '@' + configured server\n> \n> To avoid spoofing we need to require that the server will only create new\n> accounts (or almost equivalently, allow login to an account) if the client can\n> demonstrate knowledge of a private key for which the public key's hex SHA-1\n> is the username part of the desired JID.\n> \n> For the link-local (mesh) case, I believe the idea is that the public key\n> and other OLPC info is in the mDNS record, so by the time we can interact with\n> someone, we already have all relevant information about them? If so, and we\n> put the corresponding server-JID in the mDNS record, then we can again always\n> know which child we're talking to.\n\nCorrect. Well it could potentially happen that someone connects to you before\nyou resolved his/her mDNS record. But that window is neglibally small (Salut\ncurrently even refuses your connection if it can't link you to a known mDNS\nrecord)\n\n> Again, to avoid spoofing we need to require that the mDNS record demonstrates\n> knowledge of the private key; perhaps it could include a signature of the IP\n> address or IP:port or whatever, and a timestamp, made using the private key.\n\nYes. Although signing doesn't win you much as others can easily spoof your mDNS\nrecord as soon as they've seen it. If we make it mandatory to refresh your\nsignature every once in a while, the damage can be limited though (You can be\nonly spoofed for a limited timespan).\n\nIf we case we to make it even better, we will need signed records in avahi\nitself.  So avahi can sign each record it sends out.\n\nThe most important thing is that we need to prevent spoofing when we start \ninteracting with someone though. Spoofing that someone is on the network/in\nsome activities is bad, but a lot less harmless then interacting with someone\nthat isn't who he says he is.\n\nThis brings up a major issue though. What should happen if we see a presence\nwe've never seen before and thus don't know what the public key should be.\nShould we take a leap-of-faith and trust that person or we do some magic \nhandshake to determine his/her identity ?\n\nIn the same line of thinking. If we established someone is actualy\n@school.example.com. Who is actually authorative to say what human\nreadable presence information belongs to him (name, colors). Especially in\nlink-local you can just put any information you want in there.\n\n  Sjoerd\n-- \nThe truth of a thing is the feel of it, not the think of it.\n\t\t-- Stanley Kubrick\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}