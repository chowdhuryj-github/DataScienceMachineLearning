{"category": "ham", "to_address": "\"Feng, Ken\" <ken.feng@citi.com>", "from_address": "\"jim holtman\" <jholtman@gmail.com>", "subject": "Re: [R] How do I avoid a loop?", "body": "This should do it for you:\n\n> x <- c( TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE );\n> y <- rle(x)\n> unlist(lapply(seq(length(y$lengths)), function(.indx){\n+     if (y$values[.indx]) seq(y$lengths[.indx])\n+     else rep(0, y$lengths[.indx])\n+ }))\n[1] 1 2 3 0 0 1 2 0 1\n\n\n\nOn 6/19/07, Feng, Ken  wrote:\n>\n> Hi,\n>\n> I start with an array of booleans:\n>\n>        x <- c( TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE );\n>\n> I want to define an y <- f(x) such that:\n>\n>        y <- c( 1, 2, 3, 0, 0, 1, 2, 0, 1 );\n>\n> In other words, do a cumsum when I see a TRUE, but reset to 0 if I see a\n> FALSE.\n>\n> I know I can do this with a very slow and ugly loop or maybe use apply,\n> but I was hoping there are some R experts out there who can show me\n> a cleaner/more elegant solution?\n>\n> Thanks in advance.\n>\n> - Ken\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n\n-- \nJim Holtman\nCincinnati, OH\n+1 513 646 9390\n\nWhat is the problem you are trying to solve?\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}