{"category": "ham", "to_address": "Talbot Katz <topkatz@msn.com>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Restoring .Random.seed", "body": "On Thu, 31 May 2007, Talbot Katz wrote:\n\n> Hi.\n>\n> Suppose I have a function which does some random number generation within.\n> The random number generation inside the function changes the value of\n> .Random.seed in the calling environment.  If I want to restore the\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^\nThat is your misunderstanding.  From the help page\n\n      The object '.Random.seed' is only looked for in the user's\n      workspace.\n\nwhich seems plain enough.  So, you can do\n\nsave.seed <- get(\".Random.seed\", .GlobalEnv)\nassign(\".Randon.seed\", save.seed, .GlobalEnv)\n\nto save and restore, *provided* that random numbers have been used in the \nsession (or .Random.seed will not exist).\n\nHowever, the help recommends using set.seed(), and why not follow the \nadvice?\n\n> pre-function call .Random.seed, I can do:\n>\n> save.seed<-.Random.seed\n> result<-myfunction()\n> .Random.seed<-save.seed\n>\n> Is there a way to do the restoration inside the function?  I tried putting\n> the \"save.seed<-.Random.seed\" and \".Random.seed<-save.seed\" statements\n> inside the function, but that didn't work.\n\nAs documented on the help page.\n\n[...]\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}