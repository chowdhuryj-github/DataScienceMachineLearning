{"category": "ham", "to_address": "\"Gerald (Jerry) Carter\" <jerry@samba.org>", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: [PATCH] LOOKUP_NAME_EXPLICIT to avoid lockups between winbindd\n\tand nscd", "body": "On Fri, May 25, 2007 at 01:17:29PM -0500, Gerald (Jerry) Carter wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> Here's the problem I hit:\n> \n> getgrnam(\"foo\") -> nscd -> NSS -> winbindd ->\n>   winbindd_passdb.c:nam_to_sid() -> lookup_global_sam_name() ->\n>   getgrnam(\"foo\") -> nscd -> ....\n> \n> This is in the SAMBA_3_0 specifically but in theory could happen\n> SAMBA_3_0_25 (or 26) for an unknown group.\n> \n> The attached patch passes down enough state for the\n> name_to_sid() call to be able to determine the originating\n> winbindd cmd that came into the parent.  So we can avoid\n> making more NSS calls if the original call came in trough NSS\n> so we don't deadlock ?  But you should still service\n> lookupname() calls which are needed for example when\n> doing the token access checks for a \"valid groups\" from\n> smb.conf.\n> \n> I've got this in testing now.  The problem has shown up with the\n> DsProvider on OS X and with nscd on SOlaris and Linux.\n> \n> Comments?\n\nVery cunning plan (as Baldrick might say ! :-). Looks good,\nwell done.\n\nJeremy.\n\n"}