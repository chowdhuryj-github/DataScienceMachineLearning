{"category": "ham", "to_address": "Sergey Goriatchev <sergeyg@gmail.com>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Area() artefacts??", "body": "You seem to be be calculating a complex result and then taking the real \npart.  Do that inside fun(), and you can use integrate.\n\nDid you think to look at the function you were trying to integrate \nnumerically?\n\nx <- seq(-pi, pi, length=1000)\nplot(x, Re(fun(x, 65, 3, 0.5)), type = \"l\")\n\nNot a pretty sight, and no wonder you need a small tolerance.\nNumerical integration routines are designed for smooth functions, and the \ntolerance is related to how smooth.  I don't think the result is 'wrong', \nin fact a pretty good shot given that picture.\n\narea() (sic) is a support function for the first (1994) edition of MASS, \nas the help page shows.  I think you failed to consult it as the posting \nguide asked you to, for this was covered there.\n\n\nOn Sat, 12 May 2007, Sergey Goriatchev wrote:\n\n> Hello, everybody\n>\n> I run the following program, and depending on the size of eps I get\n> different results.\n> With eps=1e-05, the program calculates wrong values for x=65:67 and\n> others. The program runs fine with eps=1e-07. Why is this so?\n> Also, I am using area() instead of integrate() because I cannot make\n> integrate to work, especially with imaginary numbers. Maybe someone\n> can show me how to use integrate in this particular code? THanks in\n> advance!\n>\n> #Computes the p.m.f. via (10.53) of the number of i.i.d. Ber(p) trials\n> #required until m consecutive successes occur.\n> #Requires MASS package\n>\n> #==========================================================#\n> consecpmf <- function(xvec, m, p, eps=1e-05){\n> library(MASS)\n> f<-numeric()\n> for(j in seq(xvec)){\n> \tx <- xvec[j]\n> \tf[j] <- area(fun, -pi, pi, limit=1000, eps=eps, x, m, p)\n> }\n> f<-Re(f)\n> round(f,4)\n> }\n>\n> fun <- function(t,x,m,p){\n> I <- exp(-1i*t*x)*cf(t,m,p)/(2*pi)\n> I\n> }\n>\n> cf <- function(t,m,p){\n> q <- 1-p\n> if(m==1) {g <- p*exp(1i*t)/(1-q*exp(1i*t))} else\n> {kk <- exp(1i*t)*cf(t, m-1, p); g <- (p*kk)/(1-q*kk)}\n> g\n> }\n>\n> #===================TESTING================================#\n> consecpmf(seq(0,200),3,0.5)\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}