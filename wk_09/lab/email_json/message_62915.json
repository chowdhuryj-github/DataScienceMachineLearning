{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Monty <dale.schmitz@offutt.af.mil>", "subject": "Snippet explanation please", "body": "I'm reading \"Network Programming with Perl\" by Lincoln Stein, and I've\ncome across a snippet of code I'mnot quite following:\n\nopen (WHOFH, \"who |\") or die \"Can't open who: $!\";\n\nWhile () {\n    next unless /^(\\S+)/;\n    $who{$1}++;\n}\n\nIt's the 'next' line I'm unclear on.  I know that results: parse the\nfirst field from each output line of the 'who' command, but I'm\nwondering why this might have been done in this way.  It seems to me\nthat the 'next' line states \"get the next record unless the current\none startes with a non-whitespace character\".\n\nThe UNIX 'who' command output lines always start with non-whitespace\ncharacters, as far as I can see.  It seems just as sensible to leave\nthis line out.  Does anyone know additional value to doing this?\n\nAlso, the '$who{$1}++' lines has the same effect here as \"awk '{ print\n$1 }'\", and leads me to believe that $2, $3, etc. also exist, but that\ndoesn't seem to be the case as I've tried printing those variables.\nHow does the '$1' work in this case?\n\nThanks\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}