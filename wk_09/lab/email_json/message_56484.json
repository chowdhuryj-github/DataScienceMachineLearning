{"category": "ham", "to_address": "\"Amichai Teumim\" <amichai@teumim.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: regular expressions issue", "body": "On 6/27/07, Amichai Teumim  wrote:\n\n> If I use the regular expression with the grep command in\n> terminal I get only the IPs. Here in Perl I don't get any output.\n\nThe grep command uses grep's regular expressions, but Perl uses Perl's\nregular expressions. Alas, everybody's regular expressions are\ndifferent. Perl's are usually better, of course. But the syntax is\nalways different.\n\n> @input = `cat ~/ip.txt`;\n\nI hope that this is _supposed_ to be a quick-and-dirty program. This\nworks, although it's slower than using a filehandle would be, and it\nprobably uses more memory. Although if you're using the tilde to open\na file in the user's home directory, well, that's maybe the best way\nto do it.\n\n> /[[:digit:]]\\{1,3\\}\\.[[:digit:]]\\{1,3\\}\\.[[:digit:]]\\{1,3\\}\\.[[:digit:]]\\{1,3\\}/){\n\nI think in Perl that pattern might be this:\n\n  /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/\n\nBut do you really want to match 999.999.999.999? You don't have to.\nHave you heard of Regexp::Common? Regexp::Common::net seems to have\nwhat you want.\n\n    /^$RE{net}{IPv4}$/\n\n    http://search.cpan.org/~abigail/Regexp-Common-2.120/lib/Regexp/Common.pm\n    http://search.cpan.org/dist/Regexp-Common/lib/Regexp/Common/net.pm\n\nEven if you don't want to install the module to get just one pattern,\nyou could use the pattern that it supplies, which is sure to be at\nleast as good as anything you would write on your own.\n\nGood luck with it!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}