{"category": "ham", "to_address": "NeonGraal <scifigeeknz@gmail.com>", "from_address": "John Macdonald <john@perlwolf.com>", "subject": "Re: Generalizing ?? !!", "body": "On Mon, Jun 11, 2007 at 01:43:40AM -0000, NeonGraal wrote:\n> Surely if you defined !! to return \"undef but true\" and both operators\n> to be left associative then it all works.\n> \n>  1==0 ?? \"True\" !! \"False\" -> (undef) !! \"False\" which seems right to\n> me.\n> \n>  1==1 !! \"False\" ?? \"True\" -> (undef but true) ?? \"True\" also good.\n> \n> TTFN, Struan\n\nNope.\n\n$a = $b ?? $c !! $c;\n\nIf $b is true, you want a to have the value of $c, NOT \"$c but true\".\nLater code may want to use the value of $a in a boolean context.\nWhen the \"but true\" is added to make the short circuiting work, it\ncan have longer lasting effects that are not desired.\n\n(I know Larry already agreed with the principle of not mucking\naround with simple stuff, but I just wanted to provide a bit\nmore detail of how said mucking might be a problem.  We don't\nneed no stinking epicycles upon epicycles. :-)\n\n-- \n\n"}