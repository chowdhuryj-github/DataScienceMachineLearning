{"category": "ham", "to_address": "R-help@stat.math.ethz.ch", "from_address": "Robert A LaBudde <ral@lcfltd.com>", "subject": "Re: [R] [Not R question]: Better fit for order probit model", "body": "At 03:17 AM 6/16/2007, adschai wrote:\n>Thank you so much Robert. I haven't thought about the idea of \n>clumping categories together. One of the reason is because these \n>categories are bridge condition rating scores. They indeed represent \n>different meaning and serviceability conditions. They vary from 0-9. \n>I have about 300,000 data in which the first 5 labels, i.e. 0-4, are \n>bad condition bridge and there are only less than 1000 instances in \n>total. The worst case, is for example, score 0 (meaning the bridge \n>is not operatable), I have 60 instances. Score 1 I have about 100.\n>\n>I would appreciate if you could provide some opinion as to how you \n>would make the order probit fits better in this case? Thank you so \n>much in advance.\n\nYou certainly appear to have enough data to populate these \ncategories. Your problems in a getting a good fit may relate to other problems.\n\nYou need to supply more information in order to say more.\n\nWhat are the definitions of each category?\n\nIs the ordering consistent, or are there really two different scales, \none for bridge with essentially no problems, and another for those \nwith serious damage?\n\nWhat evidence do you have that your fit is poor?\n\nWhat model are you fitting?\n\nEtc.\n\n================================================================\nRobert A. LaBudde, PhD, PAS, Dpl. ACAFS  e-mail: ral@lcfltd.com\nLeast Cost Formulations, Ltd.            URL: http://lcfltd.com/\n824 Timberlake Drive                     Tel: 757-467-0954\nVirginia Beach, VA 23464-3239            Fax: 757-467-2947\n\n\"Vere scire est per causas scire\"\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}