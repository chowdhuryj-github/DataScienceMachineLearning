{"category": "ham", "to_address": "oryann9 <oryann9@yahoo.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: unit messages", "body": "On 5/1/07, oryann9  wrote:\nsnip\n> my $regexp  = qr/(host:\\w+)/is;\n> my $regexp1 = qr/(onlinejfs.*)/is;\n> my $regexp2 = qr/(jfs\\sversion.*)/is;\nsnip\n\nWhy are you creating these regexes so far from where they are used?\nIf you are going to do this at least give them meaningful names.\n\nsnip\n> open (JFS, \"+<$jfsFile\") or die \"file '$jfsFile' was not opened $!\";\nsnip\n\nuse the three argument version of open, if you don't you will\neventually be bitten by a file name that contains information that\nopen thinks is part of the mode:\n\nopen JFS, \"+<\", $jfsFile or die \"file '$jfsFile' was not opened $!\";\n\nAlso, you may consider using lexical varaibles instead of bareword file handles:\n\nopen my $jfs, \"<\", $jfsFile or die \"file '$jfsFile' was not opened $!\";\nwhile (<$jfs>) {\n\nThe benefit is $jfs is much easier to pass around (well, there are\nothers as well like auto-closing when the variable goes out of scope).\n\nsnip\n>         next if ! length $_;    ## skip line of length\nsnip\n\nit is easy to misread \"if !\" so use unless instead.  Also length works\non $_ if no argument is passed to it.\n\nnext unless length;\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}