{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: /s, /g and /m modifiers", "body": "Sharan Basappa wrote:\n\n> I have a script as follows  :\n> \n> $str = \"once upon a time\n>         once upon a time\";\n> @store = $str =~ m/(once)/g;\n\nThat could be simplified to:\n\n@store = $str =~ /once/g;\n\n> print @store ;\n> \n> This outputs \"onceonce\"\n> How come regex is searching beyond newline. I thought the search will\n> stop after first once.\n\nA newline in a string is just a character like any other character, there is\nnothing special about it.\n\n> When I replace /g with /m, the output I get is \"once\", but I thought /m\n> will tell regex at multiple lines for match.\n\n/g says to match as many times as possible.  /m says that ^ will match at\nthe beginning of a line instead of at the beginning of a string and $ will\nmatch at the end of a line instead of at the end of a string but you are\nnot using either ^ or $ in your pattern.\n\n> Also when I replace /g with /s, I still get output \"once\"\n\n/s says that the special character class . will match a newline which it\nnormally doesn't but you are not using . in your pattern.\n\n> Can someone demystify this for me ?\n> Is my assumption that regex will stop after encountering first newline is\n> applicable only when dot* type of regex is used ?\n\n$ perl -le'$_ = \"abc\\ndef\\nghi\\n\"; print \"*]${_}[*\" for /.+/g'\n*]abc[*\n*]def[*\n*]ghi[*\n$ perl -le'$_ = \"abc\\ndef\\nghi\\n\"; print \"*]${_}[*\" for /^.+/g'\n*]abc[*\n$ perl -le'$_ = \"abc\\ndef\\nghi\\n\"; print \"*]${_}[*\" for /^.+/mg'\n*]abc[*\n*]def[*\n*]ghi[*\n$ perl -le'$_ = \"abc\\ndef\\nghi\\n\"; print \"*]${_}[*\" for /^.+/sg'\n*]abc\ndef\nghi\n[*\n\n\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}