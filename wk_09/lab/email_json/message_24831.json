{"category": "ham", "to_address": "\"Stefan \\(metze\\) Metzmacher\" <metze@samba.org>", "from_address": "derrell@samba.org", "subject": "Re: svn commit: samba r22731 - in branches/SAMBA_3_0/source: . tests", "body": "\"Stefan (metze) Metzmacher\"  writes:\n\n> derrell@samba.org schrieb:\n>> Author: derrell\n>> Date: 2007-05-07 03:02:24 +0000 (Mon, 07 May 2007)\n>> New Revision: 22731\n>> \n>> WebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22731\n>> \n>> Log:\n>> \n>> - Fix bug #4594.\n>>   \n>>   configure.in determines if -Werror-implicit-function-declaration is\n>>   available, and if so it enables that flag if --enable-developer is\n>>   specified.  Since the configure tests themselves did not use that flag, it\n>>   was possible for a configure test to succeed, followed by a failed\n>>   compilation due to a facility being available but not having a proper\n>>   declaration in a header file.  (This bit me with readahead().)  This patch\n>>   ensures that if implicit function declarations will kill the build, the\n>>   feature being tested is deselected so the build will succeed.\n>> \n>>   The autoconf manual suggests using return instead of exit in configure\n>>   tests because the declaration for exit is often missing.  We require this\n>>   now, since we error if prototypes are missing.  See section 5.5.1 of\n>>   http://www.gnu.org/software/autoconf/manual/autoconf.html.  This patch makes\n>>   these changes, because in fact, an external declaration for exit is missing\n>>   here (and likely elsewhere).\n>> \n>>   I've verified that the features selected (here) with the original\n>>   configure.in and the new one are the same except for, in my case,\n>>   readahead.  I've also confirmed that the generated Makefile is identical.\n>> \n>>   These changes are not being applied to the 3.0.26 branch because it does not\n>>   exhibit the initial problem this patch is supposed to solve since it doesn't\n>>   attempt to use -Werror-implicit-function-declaration.\n>\n> Hi Derell,\n>\n> I don't think it's correct to use -Werror-implicit-function-declaration\n> within the configure checks. Because the configure result now may\n> differs between the normal and developer build.\n\nYes, that's exactly what I want (need) to do.  The configure tests must differ\nbetween the builds so that functions which are available during a\nnon-developer build will be used, whereas functions that will cause the\ncompile to barf during a developer build are excluded during a developer\nbuild.\n\n> The correct fix would be to use a AC_CHECK_DECL() or AC_HAVE_DECL()\n> for the specific function.\n\nThe problem is that these macros use whatever CFLAGS are defined.  If\n-Werror-implicit-function-declaration is not defined in CFLAGS during\nconfigure, configure will determine that a function is available when in fact,\nduring a compile with -Werror-implicit-function-declaration, the compile will\nfail.  I don't think it's appropriate for configure to decide a feature should\nbe used when using it causes the compile to barf.  This is exactly the case I\nencountered.  readahead() is available on my system, but is not declared in a\nheader file, similarly to exit().  Without that flag, a developer configure\nwill determine that readahead() is available but a compile will fail.  By\nconsistently testing for and using the warnings-are-errors flag, the problem\nis eliminated.  During a developer build, readahead() is found to _not_ exist\nso the compilation works fine.  During a production build, readahead() is\nfound to exist and the compilation works fine since it doesn't use the\nwarnings-are-errors flag.\n\nDerrell\n\n"}