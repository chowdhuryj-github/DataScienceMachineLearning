{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22588 - in branches: SAMBA_3_0/source/libmsrpc\n\tSAMBA_3_0/source/locking SAMBA_3_0/source/registry\n\tSAMBA_3_0/source/rpc_client SAMBA_3_0/source/rpc_parse\n\tSAMBA_3_0/source/rpc_server SAMBA_3_0/source/rpcclient\n\tSAMBA_3_0/source/utils SAMBA_3_0_25/source/libmsrpc\n\tSAMBA_3_0_25/source/locking SAMBA_3_0_25/source/registry\n\tSAMBA_3_0_25/source/rpc_client SAMBA_3_0_25/source/rpc_parse\n\tSAMBA_3_0_25/source/rpc_server SAMBA_3_0_25/source/rpcclient\n\tSAMBA_3_0_25/source/utils", "body": "Author: jra\nDate: 2007-04-30 01:34:28 +0000 (Mon, 30 Apr 2007)\nNew Revision: 22588\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22588\n\nLog:\nMake all uses of TALLOC_MEMDUP consistent.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\n   branches/SAMBA_3_0/source/locking/brlock.c\n   branches/SAMBA_3_0/source/registry/reg_objects.c\n   branches/SAMBA_3_0/source/rpc_client/cli_spoolss.c\n   branches/SAMBA_3_0/source/rpc_parse/parse_spoolss.c\n   branches/SAMBA_3_0/source/rpc_server/srv_spoolss_nt.c\n   branches/SAMBA_3_0/source/rpcclient/cmd_spoolss.c\n   branches/SAMBA_3_0/source/utils/net_rpc_printer.c\n   branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\n   branches/SAMBA_3_0_25/source/locking/brlock.c\n   branches/SAMBA_3_0_25/source/registry/reg_objects.c\n   branches/SAMBA_3_0_25/source/rpc_client/cli_spoolss.c\n   branches/SAMBA_3_0_25/source/rpc_parse/parse_spoolss.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\n   branches/SAMBA_3_0_25/source/rpcclient/cmd_spoolss.c\n   branches/SAMBA_3_0_25/source/utils/net_rpc_printer.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\n===================================================================\n--- branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -264,13 +264,16 @@\n \n \t\tdata->reg_binary.data_length = size;\n \n-\t\tdata->reg_binary.data =\n-\t\t\t( uint8 * ) TALLOC_MEMDUP( mem_ctx, buf.buffer,\n-\t\t\t\t\t\t   size );\n-\t\tif ( !data->reg_binary.data ) {\n-\t\t\tTALLOC_FREE( data );\n-\t\t\terrno = ENOMEM;\n-\t\t\tdata = NULL;\n+\t\tif (size) {\n+\t\t\tdata->reg_binary.data =\n+\t\t\t\t( uint8 * ) TALLOC_MEMDUP( mem_ctx, buf.buffer, size );\n+\t\t\tif ( !data->reg_binary.data ) {\n+\t\t\t\tTALLOC_FREE( data );\n+\t\t\t\terrno = ENOMEM;\n+\t\t\t\tdata = NULL;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdata->reg_binary.data = NULL;\n \t\t}\n \t\tbreak;\n \n\nModified: branches/SAMBA_3_0/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0/source/locking/brlock.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/locking/brlock.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1283,10 +1283,15 @@\n \t\t\tunsigned int num_locks_copy;\n \n \t\t\t/* Copy the current lock array. */\n-\t\t\tlocks_copy = (struct lock_struct *)TALLOC_MEMDUP(br_lck, locks, br_lck->num_locks * sizeof(struct lock_struct));\n-\t\t\tif (!locks_copy) {\n-\t\t\t\tsmb_panic(\"brl_close_fnum: talloc fail.\\n\");\n+\t\t\tif (br_lck->num_locks) {\n+\t\t\t\tlocks_copy = (struct lock_struct *)TALLOC_MEMDUP(br_lck, locks, br_lck->num_locks * sizeof(struct lock_struct));\n+\t\t\t\tif (!locks_copy) {\n+\t\t\t\t\tsmb_panic(\"brl_close_fnum: talloc fail.\\n\");\n+\t \t\t\t}\n+\t\t\t} else {\t\n+\t\t\t\tlocks_copy = NULL;\n \t\t\t}\n+\n \t\t\tnum_locks_copy = br_lck->num_locks;\n \n \t\t\tfor (i=0; i < num_locks_copy; i++) {\n\nModified: branches/SAMBA_3_0/source/registry/reg_objects.c\n===================================================================\n--- branches/SAMBA_3_0/source/registry/reg_objects.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/registry/reg_objects.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -310,8 +310,16 @@\n \t\n \tfstrcpy( ctr->values[ctr->num_values]->valuename, name );\n \tctr->values[ctr->num_values]->type = type;\n-\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n-\t\tctr, data_p, size );\n+\tif (size) {\n+\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n+\t\t\tctr, data_p, size );\n+\t\tif (!ctr->values[ctr->num_values]->data_p) {\n+\t\t\tctr->num_values = 0;\n+\t\t\treturn 0;\n+\t\t}\n+\t} else {\n+\t\tctr->values[ctr->num_values]->data_p = NULL;\n+\t}\n \tctr->values[ctr->num_values]->size = size;\n \tctr->num_values++;\n \n@@ -350,8 +358,16 @@\n \t\n \t\tfstrcpy( ctr->values[ctr->num_values]->valuename, val->valuename );\n \t\tctr->values[ctr->num_values]->type = val->type;\n-\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n-\t\t\tctr, val->data_p, val->size );\n+\t\tif (val->size) {\n+\t\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n+\t\t\t\tctr, val->data_p, val->size );\n+\t\t\tif (!ctr->values[ctr->num_values]->data_p) {\n+\t\t\t\tctr->num_values = 0;\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tctr->values[ctr->num_values]->data_p = NULL;\n+\t\t}\n \t\tctr->values[ctr->num_values]->size = val->size;\n \t\tctr->num_values++;\n \t}\n\nModified: branches/SAMBA_3_0/source/rpc_client/cli_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_client/cli_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/rpc_client/cli_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1609,7 +1609,11 @@\n \n \t/* Return output parameters */\n \n-\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\tif (out.needed) {\n+\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\t} else {\n+\t\tvalue->data_p = NULL;\n+\t}\n \tvalue->type = out.type;\n \tvalue->size = out.size;\n \n@@ -1662,7 +1666,11 @@\n \n \t/* Return output parameters */\n \n-\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\tif (out.needed) {\n+\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\t} else {\n+\t\tvalue->data_p = NULL;\n+\t}\n \tvalue->type = out.type;\n \tvalue->size = out.needed;\n \t\n@@ -1758,8 +1766,12 @@\n \tif (value) {\n \t\trpcstr_pull(value->valuename, out.value, sizeof(value->valuename), -1,\n \t\t\t    STR_TERMINATE);\n-\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data,\n+\t\tif (out.realdatasize) {\n+\t\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data,\n \t\t\t\t\t\t       out.realdatasize);\n+\t\t} else {\n+\t\t\tvalue->data_p = NULL;\n+\t\t}\n \t\tvalue->type = out.type;\n \t\tvalue->size = out.realdatasize;\n \t}\n\nModified: branches/SAMBA_3_0/source/rpc_parse/parse_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_parse/parse_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/rpc_parse/parse_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -5251,9 +5251,13 @@\n \n \tbuf5->buf_len = len;\n \tif (src) {\n-\t\tif((buf5->buffer=(uint16*)TALLOC_MEMDUP(mem_ctx, src, sizeof(uint16)*len)) == NULL) {\n-\t\t\tDEBUG(0,(\"make_spoolss_buffer5: Unable to malloc memory for buffer!\\n\"));\n-\t\t\treturn False;\n+\t\tif (len) {\n+\t\t\tif((buf5->buffer=(uint16*)TALLOC_MEMDUP(mem_ctx, src, sizeof(uint16)*len)) == NULL) {\n+\t\t\t\tDEBUG(0,(\"make_spoolss_buffer5: Unable to malloc memory for buffer!\\n\"));\n+\t\t\t\treturn False;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tbuf5->buffer = NULL;\n \t\t}\n \t} else {\n \t\tbuf5->buffer=NULL;\n\nModified: branches/SAMBA_3_0/source/rpc_server/srv_spoolss_nt.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1416,11 +1416,15 @@\n \t\t\treturn NULL;\n \t}\n \n-\td->dev_private = (uint8 *)TALLOC_MEMDUP(ctx, devmode->dev_private,\n+\tif (devmode->driverextra) {\n+\t\td->dev_private = (uint8 *)TALLOC_MEMDUP(ctx, devmode->dev_private,\n \t\t\t\t\t\tdevmode->driverextra);\n-\tif (!d->dev_private) {\n-\t\treturn NULL;\n-\t}\t\n+\t\tif (!d->dev_private) {\n+\t\t\treturn NULL;\n+\t\t}\t\n+\t} else {\n+\t\td->dev_private = NULL;\n+\t}\n \treturn d;\n }\n \n\nModified: branches/SAMBA_3_0/source/rpcclient/cmd_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpcclient/cmd_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/rpcclient/cmd_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -2027,15 +2027,23 @@\n \t\tUNISTR2 data;\n \t\tinit_unistr2(&data, argv[4], UNI_STR_TERMINATE);\n \t\tvalue.size = data.uni_str_len * 2;\n-\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer,\n+\t\tif (value.size) {\n+\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer,\n \t\t\t\t\t\t      value.size);\n+\t\t} else {\n+\t\t\tvalue.data_p = NULL;\n+\t\t}\n \t\tbreak;\n \t}\n \tcase REG_DWORD: {\n \t\tuint32 data = strtoul(argv[4], NULL, 10);\n \t\tvalue.size = sizeof(data);\n-\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, &data,\n+\t\tif (sizeof(data)) {\n+\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, &data,\n \t\t\t\t\t\t      sizeof(data));\n+\t\t} else {\n+\t\t\tvalue.data_p = NULL;\n+\t\t}\n \t\tbreak;\n \t}\n \tcase REG_BINARY: {\n\nModified: branches/SAMBA_3_0/source/utils/net_rpc_printer.c\n===================================================================\n--- branches/SAMBA_3_0/source/utils/net_rpc_printer.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0/source/utils/net_rpc_printer.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -2331,7 +2331,11 @@\n \n \t\t\t\t\tvalue.type = REG_SZ;\n \t\t\t\t\tvalue.size = data.uni_str_len * 2;\n-\t\t\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer, value.size);\n+\t\t\t\t\tif (value.size) {\n+\t\t\t\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer, value.size);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tvalue.data_p = NULL;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif (opt_verbose) \n \t\t\t\t\t\tdisplay_reg_value(subkey, value);\n\nModified: branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -264,13 +264,16 @@\n \n \t\tdata->reg_binary.data_length = size;\n \n-\t\tdata->reg_binary.data =\n-\t\t\t( uint8 * ) TALLOC_MEMDUP( mem_ctx, buf.buffer,\n-\t\t\t\t\t\t   size );\n-\t\tif ( !data->reg_binary.data ) {\n-\t\t\tTALLOC_FREE( data );\n-\t\t\terrno = ENOMEM;\n-\t\t\tdata = NULL;\n+\t\tif (size) {\n+\t\t\tdata->reg_binary.data =\n+\t\t\t\t( uint8 * ) TALLOC_MEMDUP( mem_ctx, buf.buffer, size );\n+\t\t\tif ( !data->reg_binary.data ) {\n+\t\t\t\tTALLOC_FREE( data );\n+\t\t\t\terrno = ENOMEM;\n+\t\t\t\tdata = NULL;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdata->reg_binary.data = NULL;\n \t\t}\n \t\tbreak;\n \n\nModified: branches/SAMBA_3_0_25/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/locking/brlock.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/locking/brlock.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1283,10 +1283,15 @@\n \t\t\tunsigned int num_locks_copy;\n \n \t\t\t/* Copy the current lock array. */\n-\t\t\tlocks_copy = (struct lock_struct *)TALLOC_MEMDUP(br_lck, locks, br_lck->num_locks * sizeof(struct lock_struct));\n-\t\t\tif (!locks_copy) {\n-\t\t\t\tsmb_panic(\"brl_close_fnum: talloc fail.\\n\");\n+\t\t\tif (br_lck->num_locks) {\n+\t\t\t\tlocks_copy = (struct lock_struct *)TALLOC_MEMDUP(br_lck, locks, br_lck->num_locks * sizeof(struct lock_struct));\n+\t\t\t\tif (!locks_copy) {\n+\t\t\t\t\tsmb_panic(\"brl_close_fnum: talloc fail.\\n\");\n+\t \t\t\t}\n+\t\t\t} else {\t\n+\t\t\t\tlocks_copy = NULL;\n \t\t\t}\n+\n \t\t\tnum_locks_copy = br_lck->num_locks;\n \n \t\t\tfor (i=0; i < num_locks_copy; i++) {\n\nModified: branches/SAMBA_3_0_25/source/registry/reg_objects.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/registry/reg_objects.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/registry/reg_objects.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -308,8 +308,16 @@\n \t\n \tfstrcpy( ctr->values[ctr->num_values]->valuename, name );\n \tctr->values[ctr->num_values]->type = type;\n-\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n-\t\tctr, data_p, size );\n+\tif (size) {\n+\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n+\t\t\tctr, data_p, size );\n+\t\tif (!ctr->values[ctr->num_values]->data_p) {\n+\t\t\tctr->num_values = 0;\n+\t\t\treturn 0;\n+\t\t}\n+\t} else {\n+\t\tctr->values[ctr->num_values]->data_p = NULL;\n+\t}\n \tctr->values[ctr->num_values]->size = size;\n \tctr->num_values++;\n \n@@ -348,8 +356,16 @@\n \t\n \t\tfstrcpy( ctr->values[ctr->num_values]->valuename, val->valuename );\n \t\tctr->values[ctr->num_values]->type = val->type;\n-\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n-\t\t\tctr, val->data_p, val->size );\n+\t\tif (val->size) {\n+\t\t\tctr->values[ctr->num_values]->data_p = (uint8 *)TALLOC_MEMDUP(\n+\t\t\t\tctr, val->data_p, val->size );\n+\t\t\tif (!ctr->values[ctr->num_values]->data_p) {\n+\t\t\t\tctr->num_values = 0;\n+\t\t\t\treturn 0;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tctr->values[ctr->num_values]->data_p = NULL;\n+\t\t}\n \t\tctr->values[ctr->num_values]->size = val->size;\n \t\tctr->num_values++;\n \t}\n\nModified: branches/SAMBA_3_0_25/source/rpc_client/cli_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_client/cli_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/rpc_client/cli_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1609,7 +1609,11 @@\n \n \t/* Return output parameters */\n \n-\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\tif (out.needed) {\n+\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\t} else {\n+\t\tvalue->data_p = NULL;\n+\t}\n \tvalue->type = out.type;\n \tvalue->size = out.size;\n \n@@ -1662,7 +1666,11 @@\n \n \t/* Return output parameters */\n \n-\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\tif (out.needed) {\n+\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data, out.needed);\n+\t} else {\n+\t\tvalue->data_p = NULL;\n+\t}\n \tvalue->type = out.type;\n \tvalue->size = out.needed;\n \t\n@@ -1758,8 +1766,12 @@\n \tif (value) {\n \t\trpcstr_pull(value->valuename, out.value, sizeof(value->valuename), -1,\n \t\t\t    STR_TERMINATE);\n-\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data,\n+\t\tif (out.realdatasize) {\n+\t\t\tvalue->data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, out.data,\n \t\t\t\t\t\t       out.realdatasize);\n+\t\t} else {\n+\t\t\tvalue->data_p = NULL;\n+\t\t}\n \t\tvalue->type = out.type;\n \t\tvalue->size = out.realdatasize;\n \t}\n\nModified: branches/SAMBA_3_0_25/source/rpc_parse/parse_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_parse/parse_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/rpc_parse/parse_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -5255,9 +5255,13 @@\n \n \tbuf5->buf_len = len;\n \tif (src) {\n-\t\tif((buf5->buffer=(uint16*)TALLOC_MEMDUP(mem_ctx, src, sizeof(uint16)*len)) == NULL) {\n-\t\t\tDEBUG(0,(\"make_spoolss_buffer5: Unable to malloc memory for buffer!\\n\"));\n-\t\t\treturn False;\n+\t\tif (len) {\n+\t\t\tif((buf5->buffer=(uint16*)TALLOC_MEMDUP(mem_ctx, src, sizeof(uint16)*len)) == NULL) {\n+\t\t\t\tDEBUG(0,(\"make_spoolss_buffer5: Unable to malloc memory for buffer!\\n\"));\n+\t\t\t\treturn False;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tbuf5->buffer = NULL;\n \t\t}\n \t} else {\n \t\tbuf5->buffer=NULL;\n\nModified: branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/rpc_server/srv_spoolss_nt.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -1408,11 +1408,15 @@\n \t\t\treturn NULL;\n \t}\n \n-\td->dev_private = (uint8 *)TALLOC_MEMDUP(ctx, devmode->dev_private,\n+\tif (devmode->driverextra) {\n+\t\td->dev_private = (uint8 *)TALLOC_MEMDUP(ctx, devmode->dev_private,\n \t\t\t\t\t\tdevmode->driverextra);\n-\tif (!d->dev_private) {\n-\t\treturn NULL;\n-\t}\t\n+\t\tif (!d->dev_private) {\n+\t\t\treturn NULL;\n+\t\t}\t\n+\t} else {\n+\t\td->dev_private = NULL;\n+\t}\n \treturn d;\n }\n \n\nModified: branches/SAMBA_3_0_25/source/rpcclient/cmd_spoolss.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpcclient/cmd_spoolss.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/rpcclient/cmd_spoolss.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -2022,15 +2022,23 @@\n \t\tUNISTR2 data;\n \t\tinit_unistr2(&data, argv[4], UNI_STR_TERMINATE);\n \t\tvalue.size = data.uni_str_len * 2;\n-\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer,\n+\t\tif (value.size) {\n+\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, data.buffer,\n \t\t\t\t\t\t      value.size);\n+\t\t} else {\n+\t\t\tvalue.data_p = NULL;\n+\t\t}\n \t\tbreak;\n \t}\n \tcase REG_DWORD: {\n \t\tuint32 data = strtoul(argv[4], NULL, 10);\n \t\tvalue.size = sizeof(data);\n-\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, &data,\n+\t\tif (sizeof(data)) {\n+\t\t\tvalue.data_p = (uint8 *)TALLOC_MEMDUP(mem_ctx, &data,\n \t\t\t\t\t\t      sizeof(data));\n+\t\t} else {\n+\t\t\tvalue.data_p = NULL;\n+\t\t}\n \t\tbreak;\n \t}\n \tcase REG_BINARY: {\n\nModified: branches/SAMBA_3_0_25/source/utils/net_rpc_printer.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/utils/net_rpc_printer.c\t2007-04-30 01:17:34 UTC (rev 22587)\n+++ branches/SAMBA_3_0_25/source/utils/net_rpc_printer.c\t2007-04-30 01:34:28 UTC (rev 22588)\n@@ -2327,7 +2327,11 @@\n \n \t\t\t\t\tvalue.type = REG_SZ;\n \t\t\t\t\tvalue.size = data.uni_str_len * 2;\n-\t\t\t\t\tvalue.data_p = TALLOC_MEMDUP(mem_ctx, data.buffer, value.size);\n+\t\t\t\t\tif (value.size) {\n+\t\t\t\t\t\tvalue.data_p = TALLOC_MEMDUP(mem_ctx, data.buffer, value.size);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tvalue.data_p = NULL;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif (opt_verbose) \n \t\t\t\t\t\tdisplay_reg_value(subkey, value);\n\n"}