{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22992 - in\n\tbranches/SAMBA_4_0/source/dsdb/schema: .", "body": "Author: metze\nDate: 2007-05-18 08:13:06 +0000 (Fri, 18 May 2007)\nNew Revision: 22992\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22992\n\nLog:\nadd a function to attach the dsdb_schema to a ldb_context\nloaded from ldif files. The first file should contain\nthe info's about the 'prefixMap' attribute in the first ldif chunk.\nThe 2nd file should contain all attributes and classes.\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/dsdb/schema/schema_init.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/dsdb/schema/schema_init.c\n===================================================================\n--- branches/SAMBA_4_0/source/dsdb/schema/schema_init.c\t2007-05-18 08:09:51 UTC (rev 22991)\n+++ branches/SAMBA_4_0/source/dsdb/schema/schema_init.c\t2007-05-18 08:13:06 UTC (rev 22992)\n@@ -368,7 +368,7 @@\n {\n \tWERROR status;\n \n-\tGET_STRING_LDB(msg, \"cn\", mem_ctx, attr, cn, True);\n+\tGET_STRING_LDB(msg, \"cn\", mem_ctx, attr, cn, False);\n \tGET_STRING_LDB(msg, \"lDAPDisplayName\", mem_ctx, attr, lDAPDisplayName, True);\n \tGET_STRING_LDB(msg, \"attributeID\", mem_ctx, attr, attributeID_oid, True);\n \tif (schema->num_prefixes == 0) {\n@@ -440,7 +440,7 @@\n {\n \tWERROR status;\n \n-\tGET_STRING_LDB(msg, \"cn\", mem_ctx, obj, cn, True);\n+\tGET_STRING_LDB(msg, \"cn\", mem_ctx, obj, cn, False);\n \tGET_STRING_LDB(msg, \"lDAPDisplayName\", mem_ctx, obj, lDAPDisplayName, True);\n \tGET_STRING_LDB(msg, \"governsID\", mem_ctx, obj, governsID_oid, True);\n \tif (schema->num_prefixes == 0) {\n@@ -981,3 +981,125 @@\n \n \treturn schema;\n }\n+\n+WERROR dsdb_attach_schema_from_ldif_file(struct ldb_context *ldb, const char *pf, const char *df)\n+{\n+\tstruct ldb_ldif *ldif;\n+\tstruct ldb_message *msg;\n+\tTALLOC_CTX *mem_ctx;\n+\tWERROR status;\n+\tint ret;\n+\tstruct dsdb_schema *schema;\n+\tconst struct ldb_val *prefix_val;\n+\tconst struct ldb_val *info_val;\n+\tstruct ldb_val info_val_default;\n+\n+\tmem_ctx = talloc_new(ldb);\n+\tif (!mem_ctx) {\n+\t\tgoto nomem;\n+\t}\n+\n+\tschema = talloc_zero(mem_ctx, struct dsdb_schema);\n+\tif (!schema) {\n+\t\tgoto nomem;\n+\t}\n+\n+\t/*\n+\t * load the prefixMap attribute from pf\n+\t */\n+\tldif = ldb_ldif_read_string(ldb, &pf);\n+\tif (!ldif) {\n+\t\tstatus = WERR_INVALID_PARAM;\n+\t\tgoto failed;\n+\t}\n+\ttalloc_steal(mem_ctx, ldif);\n+\n+\tmsg = ldb_msg_canonicalize(ldb, ldif->msg);\n+\tif (!msg) {\n+\t\tgoto nomem;\n+\t}\n+\n+\tprefix_val = ldb_msg_find_ldb_val(msg, \"prefixMap\");\n+\tif (!prefix_val) {\n+\t    \tstatus = WERR_INVALID_PARAM;\n+\t\tgoto failed;\n+\t}\n+\n+\tinfo_val = ldb_msg_find_ldb_val(msg, \"schemaInfo\");\n+\tif (!info_val) {\n+\t\tinfo_val_default = strhex_to_data_blob(\"FF0000000000000000000000000000000000000000\");\n+\t\tif (!info_val_default.data) {\n+\t\t\tgoto nomem;\n+\t\t}\n+\t\ttalloc_steal(mem_ctx, info_val_default.data);\n+\t\tinfo_val = &info_val_default;\n+\t}\n+\n+\tstatus = dsdb_load_oid_mappings_ldb(schema, prefix_val, info_val);\n+\tif (!W_ERROR_IS_OK(status)) {\n+\t\tgoto failed;\n+\t}\n+\n+\t/*\n+\t * load the attribute and class definitions outof df\n+\t */\n+\twhile ((ldif = ldb_ldif_read_string(ldb, &df))) {\n+\t\tbool is_sa;\n+\t\tbool is_sc;\n+\n+\t\ttalloc_steal(mem_ctx, ldif);\n+\n+\t\tmsg = ldb_msg_canonicalize(ldb, ldif->msg);\n+\t\tif (!msg) {\n+\t\t\tgoto nomem;\n+\t\t}\n+\n+\t\tis_sa = ldb_msg_check_string_attribute(msg, \"objectClass\", \"attributeSchema\");\n+\t\tis_sc = ldb_msg_check_string_attribute(msg, \"objectClass\", \"classSchema\");\n+\n+\t\tif (is_sa) {\n+\t\t\tstruct dsdb_attribute *sa;\n+\n+\t\t\tsa = talloc_zero(schema, struct dsdb_attribute);\n+\t\t\tif (!sa) {\n+\t\t\t\tgoto nomem;\n+\t\t\t}\n+\n+\t\t\tstatus = dsdb_attribute_from_ldb(schema, msg, sa, sa);\n+\t\t\tif (!W_ERROR_IS_OK(status)) {\n+\t\t\t\tgoto failed;\n+\t\t\t}\n+\n+\t\t\tDLIST_ADD_END(schema->attributes, sa, struct dsdb_attribute *);\n+\t\t} else if (is_sc) {\n+\t\t\tstruct dsdb_class *sc;\n+\n+\t\t\tsc = talloc_zero(schema, struct dsdb_class);\n+\t\t\tif (!sc) {\n+\t\t\t\tgoto nomem;\n+\t\t\t}\n+\n+\t\t\tstatus = dsdb_class_from_ldb(schema, msg, sc, sc);\n+\t\t\tif (!W_ERROR_IS_OK(status)) {\n+\t\t\t\tgoto failed;\n+\t\t\t}\n+\n+\t\t\tDLIST_ADD_END(schema->classes, sc, struct dsdb_class *);\n+\t\t}\n+\t}\n+\n+\tret = dsdb_set_schema(ldb, schema);\n+\tif (ret != LDB_SUCCESS) {\n+\t\tstatus = WERR_FOOBAR;\n+\t\tgoto failed;\n+\t}\n+\n+\tgoto done;\n+\n+nomem:\n+\tstatus = WERR_NOMEM;\n+failed:\n+done:\n+\ttalloc_free(mem_ctx);\n+\treturn status;\n+}\n\n"}