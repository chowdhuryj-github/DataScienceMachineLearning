{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22337 - in\n\tbranches/SAMBA_4_0/source/script/tests: .", "body": "Author: metze\nDate: 2007-04-18 14:02:26 +0000 (Wed, 18 Apr 2007)\nNew Revision: 22337\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22337\n\nLog:\nprint out the smbd log output after each test\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/script/tests/Samba3.pm\n   branches/SAMBA_4_0/source/script/tests/Samba4.pm\n   branches/SAMBA_4_0/source/script/tests/selftest.pl\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/script/tests/Samba3.pm\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/Samba3.pm\t2007-04-18 13:28:04 UTC (rev 22336)\n+++ branches/SAMBA_4_0/source/script/tests/Samba3.pm\t2007-04-18 14:02:26 UTC (rev 22337)\n@@ -39,6 +39,14 @@\n \treturn 0;\n }\n \n+sub getlog_env($$)\n+{\n+\tmy ($self, $envvars) = @_;\n+\n+\t# TODO...\n+\treturn \"\";\n+}\n+\n sub setup_env($$$)\n {\n \tmy ($self, $envname, $path) = @_;\n@@ -292,6 +300,8 @@\n \tprint \"wait for smbd\\n\";\n \tsystem($self->binpath(\"smbclient\") .\" $envvars->{CONFIGURATION} -L $envvars->{SERVER_IP} -U% -p 139 | head -2\");\n \tsystem($self->binpath(\"smbclient\") .\" $envvars->{CONFIGURATION} -L $envvars->{SERVER_IP} -U% -p 139 | head -2\");\n+\n+\tprint $self->getlog_env($envvars);\n }\n \n 1;\n\nModified: branches/SAMBA_4_0/source/script/tests/Samba4.pm\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/Samba4.pm\t2007-04-18 13:28:04 UTC (rev 22336)\n+++ branches/SAMBA_4_0/source/script/tests/Samba4.pm\t2007-04-18 14:02:26 UTC (rev 22337)\n@@ -141,6 +141,8 @@\n \tsystem(\"bin/nmblookup $testenv_vars->{CONFIGURATION} -U $testenv_vars->{SERVER} $testenv_vars->{NETBIOSNAME}\");\n \tsystem(\"bin/nmblookup $testenv_vars->{CONFIGURATION} $testenv_vars->{NETBIOSNAME}\");\n \tsystem(\"bin/nmblookup $testenv_vars->{CONFIGURATION} -U $testenv_vars->{SERVER} $testenv_vars->{NETBIOSNAME}\");\n+\n+\tprint $self->getlog_env($testenv_vars);\n }\n \n sub write_ldb_file($$$)\n@@ -596,6 +598,7 @@\n \n \t$ret->{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n \t$ret->{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n+\t$ret->{SMBD_TEST_LOG_POS} = 0;\n \treturn $ret;\n }\n \n@@ -612,6 +615,7 @@\n \n \t$ret->{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n \t$ret->{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n+\t$ret->{SMBD_TEST_LOG_POS} = 0;\n \treturn $ret;\n }\n \n@@ -651,10 +655,30 @@\n \treturn $failed;\n }\n \n+sub getlog_env($$)\n+{\n+\tmy ($self, $envvars) = @_;\n+\tmy $title = \"SMBD LOG of: $envvars->{NETBIOSNAME}\\n\";\n+\tmy $out = $title;\n+\n+\topen(LOG, \"<$envvars->{SMBD_TEST_LOG}\");\n+\n+\tseek(LOG, $envvars->{SMBD_TEST_LOG_POS}, SEEK_SET);\n+\twhile () {\n+\t\t$out .= $_;\n+\t}\n+\t$envvars->{SMBD_TEST_LOG_POS} = tell(LOG);\n+\tclose(LOG);\n+\n+\treturn \"\" if $out eq $title;\n+ \n+\treturn $out;\n+}\n+\n sub setup_env($$$)\n {\n \tmy ($self, $envname, $path) = @_;\n-\t\n+\n \tif ($envname eq \"dc\") {\n \t\treturn $self->setup_dc(\"$path/dc\");\n \t} elsif ($envname eq \"member\") {\n\nModified: branches/SAMBA_4_0/source/script/tests/selftest.pl\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-18 13:28:04 UTC (rev 22336)\n+++ branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-18 14:02:26 UTC (rev 22337)\n@@ -174,6 +174,8 @@\n \treturn 0;\n }\n \n+sub getlog_env($);\n+\n my $test_output = {};\n \n sub buildfarm_start_msg($)\n@@ -212,6 +214,8 @@\n \t\t$out .= $test_output->{$state->{NAME}};\n \t}\n \n+\t$out .= getlog_env($state->{ENVNAME});\n+\n \t$out .= \"==========================================\\n\";\n \tif ($ret == $expected_ret) {\n \t\t$out .= \"TEST PASSED: $state->{NAME}\\n\";\n@@ -269,6 +273,8 @@\n \tif ($ret != $expected_ret and ($opt_immediate or $opt_one) and not $opt_verbose) {\n \t\tprint $test_output->{$state->{NAME}}.\"\\n\";\n \t}\n+\n+\tprint getlog_env($state->{ENVNAME});\n }\n \n my $plain_msg_ops = {\n@@ -277,10 +283,11 @@\n \tend_msg\t\t=> \\&plain_end_msg\n };\n \n-sub run_test($$$$$)\n+sub run_test($$$$$$)\n {\n-\tmy ($name, $cmd, $i, $totalsuites, $msg_ops) = @_;\n+\tmy ($envname, $name, $cmd, $i, $totalsuites, $msg_ops) = @_;\n \tmy $msg_state = {\n+\t\tENVNAME\t=> $envname,\n \t\tNAME\t=> $name,\n \t\tCMD\t=> $cmd,\n \t\tINDEX\t=> $i,\n@@ -644,6 +651,13 @@\n \treturn $testenv_vars;\n }\n \n+sub getlog_env($)\n+{\n+\tmy ($envname) = @_;\n+\treturn \"\" if ($envname eq \"none\");\n+\treturn $target->getlog_env($running_envs{$envname});\n+}\n+\n sub teardown_env($)\n {\n \tmy ($envname) = @_;\n@@ -690,9 +704,9 @@\n \t\tSocketWrapper::setup_pcap($pcap_file) if ($opt_socket_wrapper_pcap);\n \t\tmy $result;\n \t\tif ($from_build_farm) {\n-\t\t\t$result = run_test($name, $cmd, $i, $suitestotal, $buildfarm_msg_ops);\n+\t\t\t$result = run_test($envname, $name, $cmd, $i, $suitestotal, $buildfarm_msg_ops);\n \t\t} else {\n-\t\t\t$result = run_test($name, $cmd, $i, $suitestotal, $plain_msg_ops);\n+\t\t\t$result = run_test($envname, $name, $cmd, $i, $suitestotal, $plain_msg_ops);\n \t\t}\n \n \t\tif ($opt_socket_wrapper_pcap and $result and \n\n"}