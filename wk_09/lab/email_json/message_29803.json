{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Thomas Wittek <mail@gedankenkonstrukt.de>", "subject": "Re: Is Perl 6 too late?", "body": "Austin Hastings:\n> A similar trade-off exists with the statement terminating semicolon. In\n> this case, it involves the number of statements per line:\n> \n> A language that terminates statements can ignore whitespace, allowing\n> multiple statements per line and statements that span multiple lines.\n\nStill possible with optional semicolons (as you say later):\n\n a = 1\n b = \\\n     2\n c = 3; d = 4\n\n> The vast majority of languages have opted to terminate statements.\n\nMost of the younger scripting languages didn't.\n\n> Probably the best argument is that encountering a\n> semicolon (or full stop, in COBOL) is a positive indicator rather than a\n> negative one. \"I see a semicolon. I know the statement is over.\" as\n> opposed to \"I don't see a continuation marker, so it's likely that the\n> statement is over, although it could be tabbed way off to the right or\n> something.\"\n\nYour semicolon could also be tabbed way off, so you can't be sure there\neither.\n\"I see no semicolon, so it's likely that the statement continues on the\nnext line\".\n\n> So line termination doesn't gain a punctuation character\n\nNo problem I think.\n\n> and causes the ends of lines to be uncertain.\n\nIt's exactly as certain as with semicolon termination. See above.\n\n> It does reduce typing, for the small crowd of people that wouldn't\n> just use them anyway because they use them in every other language.\n\n> I think the lack of value here outweights the \"savings\" of one character\n> per line.\n\nBut even if the advantage of line termination is low (some characters\nsaved, some people might say it looks cleaner), I cannot see any\nadvantage of semicolon termination.\n\n-- \nThomas Wittek\nhttp://gedankenkonstrukt.de/\nJabber: streawkceur@jabber.i-pobox.net\n\n"}