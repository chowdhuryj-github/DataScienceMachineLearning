{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "Re: What should file test operators return?", "body": "In article , Brandon\nS. Allbery KF8NH  wrote:\n\n\n> File tests are supposed to return something which:\n> - behaves as a Bool\n> - stringifies as a filename\n> - numifies as a file size or as a time, if appropriate\n> - propagates a stat object (obviating perl5's magic _)\n> \n> Current Pugs only does the first three, sort of:  the size and time  \n> operators return numeric, the others string, all behave appropriately  \n> if used as booleans.\n\nI'm not sure Pugs does that right. The file named \"0\" (zero) seems to\nbehave inappropriately. In this example, \"foo\" and \"0\" are real files,\nand \"not there\" is not a file that exists:\n\npugs> \"foo\" ~~ :e\n\"foo\"\npugs> true \"foo\" ~~ :e\nBool::True\n\npugs> \"not there\" ~~ :e\nBool::False\npugs> true \"not there\" ~~ :e\nBool::False \n\npugs> \"0\" ~~ :e\n\"0\"\npugs> true \"0\" ~~ :e\nBool::False\n\nAgain, I don't really mind whatever the answer is as long as I can\ndocument it. :)\n\n"}