{"category": "ham", "to_address": "Beginners List <beginners@perl.org>", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: Database insertion, escape issue", "body": "From: \"Mumia W.\" \n> On 06/11/2007 06:52 PM, Northstardomus wrote:\n> > [...]\n> >         print \"Inserting into Database , @values.\";\n> \n> Use the \"quotemeta\" function to escape special characters\n> that may be in the values.\n\nPlease don't!\n \n> \tmy @values_copy = @values;\n> \t@values = map quotemeta($_), @values;\n> \n> \n> >         $dbh->do(\"INSERT INTO area_status (areaID, survey_date,\n> > update_time,\n> > \n> > status ) VALUES ('$values[0]', '$values[1]', '$values[2]',\n> > '$values[3]')\");\n> >         $dbh->disconnect();\n> >     }\n> > }\n> > \n> > \n> \n> Read \"perldoc -f quotemeta\"\n\nPlease do!\n\nThe quotemeta() should NOT be used to escape data for the database. \nIt was not designed for that and it knows nothing about your \ndatabase. So it will most likely escape too much (it doesn't look too \nprofessional to display the text with backslashes scattered \neverywhere) and/or it may escape something in a different way than \nthe database expects.\n\nEither use the DATABASE SPECIFIC $dbh->quote() or even better use \n$dbh->prepare() and placeholders. That's by far the safest and most \nefficient solution.\n\nJenda\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}