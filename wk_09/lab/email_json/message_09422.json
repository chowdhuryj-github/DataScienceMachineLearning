{"category": "ham", "to_address": "Alek Storm <alek.storm@gmail.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: [perl #42430] [PATCH] make :vtable imply :method", "body": "Alek Storm wrote:\n>  \n> I understand entirely how both features work.  I should, as I \n> implemented large sections of the code dealing with vtable overriding.  \n> Perhaps you should check the code, because they are *not* stored \n> separately from each other.  In the current revision, :vtable and \n> :method used together stores the sub as a vtable entry and as a visible \n> method.  Adding :anon detaches it from the namespace.  For the new PDD15 \n> implementation, once #42406 and #42407 are committed, I plan to rework \n> how they're stored internally, but that isn't relevant to our discussion \n> of the interface.\n\nYes, that's how they're implemented now. Currently, in order to use the \ncommon feature of overriding the vtable entry without polluting the \nnamespace you have to specify \":vtable :method :anon\". Which is huge \nprogress over what we had before (you used to override a vtable by \ncreating a .sub prefixed with \"__\").\n\nI'm talking about how they will be implemented for PDD15. Methods and \nvtables will be stored separately, because it will be quite common to \nhave vtable entries with no corresponding method, and methods with no \ncorresponding vtable entry. The interface is intended to reflect the \nsame fact.\n\nAllison\n\n"}