{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "\"Mehmet Yavuz Selim Soyturk\" <mehmet.yavuz.selim@gmail.com>", "subject": "Re: [perl #42974] [BUG] Hungry Alligator Eats Integer; Developer Registers Complaint", "body": "On 5/17/07, via RT Jerry Gay  wrote:\n> # New Ticket Created by  Jerry Gay\n> # Please include the string:  [perl #42974]\n> # in the subject line of all future correspondence about this issue.\n> # \n>\n>\n> it looks like the register alligator is eating integers in this code:\n>\n> .const int TESTS = 2\n>\n> .sub 'main' :main\n>     load_bytecode 'Test/More.pir'\n>     .local pmc exp, test_ns\n>     test_ns = get_namespace ['Test::More']\n>     exp     = new 'Exporter'\n>     exp.'source'(test_ns)\n>     exp.'import'('plan ok is diag isa_ok' :named('globals'))\n>\n>     plan(TESTS)\n>\n>     .local pmc attrs\n>     attrs = new 'Hash'\n>\n>     .local pmc red, green, blue\n>     attrs['name'] = 'Red'\n>     red           = new 'Role', attrs\n>\n>     attrs['name'] = 'Green'\n>     green         = new 'Role', attrs\n>\n>     attrs['name'] = 'Blue'\n>     blue          = new 'Role', attrs\n>\n>     green.'add_role'( blue )\n>\n>     .local pmc color\n>     color = new 'Class'\n>\n>     $S0 = 'Red'\n>     $I0 = color.'does'($S0)\n>     is($I0, 0, 'does not Red')\n>\n>     color.'add_role'( red )\n>     $I0 = color.'does'($S0)\n>     is($I0, 1, 'does Red')\n> .end\n>\n>\n> which produces:\n>\n> 1..2\n> ok 1 - does not Red\n> not ok 2 - does Red\n> # Received: -888\n> # Expected: 1\n>\n>\n> either something's fishy in the PCCRETURN code, or the register\n> allocator. the -888 is a dead giveaway that an integer register has\n> been eaten. it's possible it's isolated in code called from the\n> 'add_role' method in the Class PMC... this bug is preventing me from\n> testing that code.\n>\n> ~jerry\n>\n\nThe following patch solves that issue.\n\n--- src/pmc/class.pmc   (revision 18568)\n+++ src/pmc/class.pmc   (working copy)\n@@ -1111,8 +1111,9 @@\n             PMC    *role     = VTABLE_get_pmc_keyed_int(interp, role_list, i);\n             (STRING *r_name) = PCCINVOKE(interp, role, \"name\");\n\n-            if (string_compare(interp, role_name, r_name))\n+            if (string_compare(interp, role_name, r_name) == 0) {\n                 PCCRETURN(INTVAL 1);\n+            }\n         }\n\n         PCCRETURN(INTVAL 0);\n\n\n-- \nMehmet\n\n"}