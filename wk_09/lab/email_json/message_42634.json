{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 466: remove an unused function in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 466\nrevision-id: tridge@samba.org-20070605051724-z3962fd9tv3i8pw2\nparent: tridge@samba.org-20070604135456-kgsjednglc6u2pqi\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-06-05 15:17:24 +1000\nmessage:\n  remove an unused function\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-06-04 07:23:55 +0000\n+++ b/common/ctdb_daemon.c\t2007-06-05 05:17:24 +0000\n@@ -588,66 +588,6 @@\n \treturn 0;\n }\n \n-/*\n-  start the protocol going\n-*/\n-int ctdb_start(struct ctdb_context *ctdb)\n-{\n-\tpid_t pid;\n-\tstatic int fd[2];\n-\tint res;\n-\tstruct fd_event *fde;\n-\tconst char *domain_socket_name;\n-\n-\t/* get rid of any old sockets */\n-\tunlink(ctdb->daemon.name);\n-\n-\t/* create a unix domain stream socket to listen to */\n-\tres = ux_socket_bind(ctdb);\n-\tif (res!=0) {\n-\t\tDEBUG(0,(__location__ \" Failed to open CTDB unix domain socket\\n\"));\n-\t\texit(10);\n-\t}\n-\n-\tres = pipe(&fd[0]);\n-\tif (res) {\n-\t\tDEBUG(0,(__location__ \" Failed to open pipe for CTDB\\n\"));\n-\t\texit(1);\n-\t}\n-\tpid = fork();\n-\tif (pid==-1) {\n-\t\tDEBUG(0,(__location__ \" Failed to fork CTDB daemon\\n\"));\n-\t\texit(1);\n-\t}\n-\n-\tif (pid) {\n-\t\tclose(fd[0]);\n-\t\tclose(ctdb->daemon.sd);\n-\t\tctdb->daemon.sd = -1;\n-\t\tctdb->vnn = ctdb_ctrl_getvnn(ctdb, timeval_zero(), CTDB_CURRENT_NODE);\n-\t\tif (ctdb->vnn == (uint32_t)-1) {\n-\t\t\tDEBUG(0,(__location__ \" Failed to get ctdb vnn\\n\"));\n-\t\t\treturn -1;\n-\t\t}\n-\t\treturn 0;\n-\t}\n-\n-\tblock_signal(SIGPIPE);\n-\n-\t/* ensure the socket is deleted on exit of the daemon */\n-\tdomain_socket_name = talloc_strdup(talloc_autofree_context(), ctdb->daemon.name);\n-\ttalloc_set_destructor(domain_socket_name, unlink_destructor);\t\n-\t\n-\tclose(fd[1]);\n-\n-\tctdb->ev = event_context_init(NULL);\n-\tfde = event_add_fd(ctdb->ev, ctdb, fd[0], EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_read_from_parent, &fd[0]);\n-\tfde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_accept_client, ctdb);\n-\tctdb_main_loop(ctdb);\n-\n-\treturn 0;\n-}\n-\n \n /*\n   start the protocol going as a daemon\n\n"}