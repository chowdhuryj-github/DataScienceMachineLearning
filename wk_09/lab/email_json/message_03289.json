{"category": "ham", "to_address": "Rodrigo Tavares <digolinopage@yahoo.com.br>", "from_address": "yaron@kahanovitch.com", "subject": "Re: Using regular expressions with delimitaters", "body": "Hi\n\nThe \"8.1.8\" =~ /[\\d $versao \\s]/ will always return true because the square parenthesis ([]) matches the string against one of the chars inside. In this case the \\d (digit) matches because you have a digit inside.\n\nIn your code you wrote  \"8.1.8\" =~ /$version/. This takes the $version a treat it as a regular expression.\nI don't think that this is what you want. You actually want something like $version =~ /8\\.1\\.8/.\n\nYaron Kahanovitch\n----- Original Message -----\nFrom: \"Rodrigo Tavares\" \nTo: beginners@perl.org\nSent: Wednesday, April 11, 2007 4:30:58 PM (GMT+0200) Auto-Detected\nSubject: Using regular expressions with delimitaters\n\nHello,\n\nI need to use the delimiter \" \" , (one blank space).\nI read perdoc, i try to use this : \n\nif ( \"8.1.8\" =~ /[\\d $versao \\s]/)\n\nBut the expression is always true.\nWhere is the error ?\n\nmy code :\n\n#!/usr/bin/perl\n$version=`/usr/local/pgsql/bin/pg_ctl --version`;\nprint $version;\n\nif ( \"8.1.8\" =~ /$version/)\n {\n  print \"$version\\n\";\n }\nelse\n {\n  print \"Wrong version !\\n\";\n }\n\nOutput, about program:\n\npg_ctl (PostgreSQL) 8.1.8\nWrong version\n\nBest regards,\n\nRodrigo Faria\n\n__________________________________________________\nFale com seus amigos  de gra\u00e7a com o novo Yahoo! Messenger \nhttp://br.messenger.yahoo.com/ \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}