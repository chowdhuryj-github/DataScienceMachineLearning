{"category": "ham", "to_address": "Mark Glines <mark@glines.org>", "from_address": "Nicholas Clark <nick@ccl4.org>", "subject": "Re: Removing #pragma", "body": "On Tue, Jun 12, 2007 at 01:13:44PM -0700, Mark Glines wrote:\n> On Tue, 12 Jun 2007 11:39:35 -0700\n> Allison Randal  wrote:\n\n> > Do we have any proof that it does speed up compilation with msvc? \n> > Littering our code with \"optimizations\" for odd compilers is also an \n> > unhealthy precedent.\n\n> I just came up with an artificial benchmark and found that gcc-3.4.6\n> runs slightly faster with #pragma once protecting a header that includes\n> lots of other headers. (a chain of 200 other headers, in my test.)  By\n> \"slightly\", I mean \"compare a 0.86 second average to a 0.92 second\n> average, for 10 runs each\".\n> \n> For a more realistic benchmark, parrot r18883 compiles in 3m29.363s,\n> parrot r18884 compiles in 3m29.190s.  So, for gcc-3.4.6 at least, I\n> think the difference might be lost in the noise.\n\nOr better yet, lose it by using ccache.\n\n> On the other hand, will #pragma once allow us to get rid of all of\n> those ugly header guard macros?  If so, I would argue to keep it for\n> maintenance reasons, regardless of any performance benefits.\n\nNo, because you cannot rely on it working.\n\nNicholas Clark\n\n"}