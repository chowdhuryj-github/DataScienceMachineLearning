{"category": "ham", "to_address": "howa <howachen@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: Compile perl into binary code for speed increase?", "body": "On 6/23/07, howa  wrote:\n\n> Are there any method to compile the perl script for performance\n> increase,\n\nCertainly, dozens. Fortunately for everyone involved, all of these\nmethods are applied automatically every time you run your program, so\nevery Perl program always runs at top speed.\n\n> sth similar to mod_perl?\n>\n> but my script is run from command line...\n\nYou're probably noticing how mod_perl can keep a program running, so\nthat there's no start-up overhead for each new request. But something\nthat's run from the command line _is_ a new program, so it's going to\nhave _some_ start-up overhead. But since your actual /usr/bin/perl\nbinary is probably already loaded into memory for some other task on\nyour system, a Perl program's start-up overhead is typically less than\na custom binary's. (That's right; if you translated your Perl code to\nC and compiled it, your start-up overhead would probably get worse.)\n\nBut before you start worrying about how bad start-up overhead is,\nthere are lots of other reasons that your program may seem slow;\nfixing just one of them at random is like painting racing stripes onto\nthe shopping trolley in order to get the groceries faster.\n\nStart by getting your program to work properly; don't optimize before\nyou know what you're doing. But when the program is done, just slow,\nyou need to profile it know where to start optimizing. Here's an\narticle to get you started:\n\n    http://www.perl.com/pub/a/2004/06/25/profiling.html\n\nGood luck with it!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}