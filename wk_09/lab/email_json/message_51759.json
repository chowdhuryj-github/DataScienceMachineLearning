{"category": "ham", "to_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "from_address": "Bob Rogers <rogers-perl6@rgrjr.dyndns.org>", "subject": "Re: pdd15 - How do I add a class method?", "body": "   From: \"Patrick R. Michaud\" \n   Date: Wed, 20 Jun 2007 21:02:54 -0500\n\n   On Wed, Jun 20, 2007 at 09:41:00PM -0400, Bob Rogers wrote:\n   >    From: Jonathan Worthington \n   >    Date: Thu, 21 Jun 2007 00:05:00 +0100\n   > \n   >    Hi,\n   > \n   >    Patrick R. Michaud wrote:\n   >    > My first question is \"How do I add a class method?\" -- i.e.,\n   >    > a method that operates on a class instance as opposed\n   >    > to an object instance of that class . . .\n   > \n   > A method that operates on a class instance would be an instance method\n   > of the class metaclass, wouldn't it?  But I think you meant \"on a\n   > *particular* class [metaclass] instance\", am I right?\n\n   Yes, I believe this is a better phrasing.  If I want to define a\n   new method or or override an existing method on a metaclass instance\n   [a class], then how do I do that?\n\nAFAICS, there isn't currently a good way to do that.  (Depending, of\ncourse, on whether you think Jonathan's suggestion qualifies.  ;-)\nNor does PDD15 seem to cover this; it actually says very little about\nmetaclasses, beyond just the fact that they exist (and even then only\nmentions class metaclasses).\n\n   The particular instance I'm looking at is a C class for\n   Perl 6, where I want the get_string vtable function for the\n   C metaclass instance is different from get_string of \n   a C class object.\n\nTo me, the phrases \"C metaclass instance\" and \"C class object\"\nsound like the same thing.  Did you mean \"C object\" in the second\ncase?  If so, then get_string on the class metaclass would just affect\nthe way the class stringifies, and not any of the instances, but I don't\nget the point of that.  So I'm sure I must be misunderstanding you.  Do\nyou have an example?  Maybe the perl6 code you mention?\n\n\t\t\t\t\t-- Bob\n\n"}