{"category": "ham", "to_address": "John Phillips <john2943@gmail.com>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Linear model predictions, differences in class", "body": "tapply gives an array: you want to use as.vector() on its result.\n\nOn Tue, 19 Jun 2007, John Phillips wrote:\n\n> Hi,\n>\n> I am using R to fit statistical models to data were the observations are\n> means of the original data.  R is used to calculate the mean before fitting\n> the model.  My problem is: When R calculates the means using tapply, the\n> class of the means differs from the class of the original data, which gives\n> me trouble when I want to use the original data to calculate model\n> predictions.  Here is a simple example that demonstrates the problem:\n>\n>> data.in<-read.table('example.dat',header=TRUE)\n>>\n>> #Here are the data:\n>> data.in\n>  location    x      y\n> 1        A  17.2  28.46\n> 2        A 91.7 143.33\n> 3        A 93.6 148.05\n> 4        B 95.8 150.28\n> 5        B 54.9  89.49\n> 6        B 51.1  82.51\n> 7        C 53.9  88.46\n> 8        C 40.3  63.62\n> 9        C 38.5  64.46\n> >\n>> attach(data.in)\n>>\n>> #Calculate means by variable \"location\":\n>> data.mn<-data.frame(xm = tapply(x,location,mean), ym =\n> tapply(y,location,mean))\n>> detach(data.in)\n>>\n>> #Here are the means:\n>> data.mn\n>        xm       ym\n> A 67.50000 106.6133\n> B 67.26667 107.4267\n> C 44.23333   72.1800\n>>\n>> #Fit the model:\n>> mod1<-lm(ym ~ xm, data.mn)\n>>\n>> mod1\n>\n> Call:\n> lm(formula = ym ~ xm, data = data.mn)\n>\n> Coefficients:\n> (Intercept)           xm\n>      5.633        1.505\n>\n>> #R will make \"predictions\" using the data.mn data frame:\n>> predict(mod1,newdata =  data.mn)\n>        A         B         C\n> 107.19260 106.84153  72.18587\n>>\n>> #But, even if new variables are created in the original data\n>> #with names that match those names used in the regression:\n> > data.in$xm<-data.in$x\n>> data.in$ym<-data.in$y\n>> data.in\n>  location    x      y   xm     ym\n> 1        A 17.2  28.46 17.2  28.46\n> 2        A 91.7 143.33 91.7 143.33\n> 3        A 93.6 148.05 93.6 148.05\n> 4        B 95.8 150.28 95.8 150.28\n> 5        B 54.9  89.49 54.9  89.49\n> 6        B 51.1  82.51 51.1  82.51\n> 7        C 53.9  88.46 53.9  88.46\n> 8        C 40.3  63.62 40.3   63.62\n> 9        C 38.5  64.46 38.5  64.46\n>>\n>> #R will not use data.in to make predictions:\n>> predict(mod1,newdata = data.in)\n> Error: variable 'xm' was fitted with class \"other\" but class \"numeric\" was\n> supplied\n>>\n>> data.in$xm\n> [1] 17.2 91.7 93.6 95.8 54.9 51.1 53.9 40.3 38.5\n>> data.mn$xm\n>       A        B        C\n> 67.50000 67.26667 44.23333\n>>\n>\n> Is there a way to make these variables have the same class?  Or, is there\n> something other than \"tapply\" that will work better for this?\n>\n> Thanks!\n>\n> \t[[alternative HTML version deleted]]\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}