{"category": "ham", "to_address": "Jeremy Allison <jra@samba.org>", "from_address": "James Peach <jpeach@samba.org>", "subject": "Re: should get_nt_acl_no_snum really avoid VFS modules?", "body": "On 17/05/2007, at 5:15 PM, Jeremy Allison wrote:\n\n> On Thu, May 17, 2007 at 03:17:57PM -0700, James Peach wrote:\n>> Hi Jeremy,\n>>\n>> I just bumped into the get_nt_acl_no_snum() function, and it seems\n>> that this always calls the POSIX ACL implementation.\n>>\n>> Since there's no guarantee that the file it is checking access to is\n>> on a POSIX filesystem or that the platform even supports POSIX ACLs,\n>> shouldn't this call SMB_VFS_GET_NT_ACL instead of get_nt_acl()?\n>\n> This is a local api for local people, there's nothing for\n> you here ! :-).\n>\n> Seriously it's designed for smbd internal use, knowing it's\n> accessing a local filesystem.... So I think it's just expecting\n> a \"standard\" unix permset to be mapped into an NT ACL.\n\nHmm, so it doesn't really want to do what it actually does then?\n\n> It doesn't matter if the path doesn't support POSIX ACLs\n> as it'll translate mode_t into an NT ACL.\n\nBut if there is a non-Posix ACL, then whoever calls this probably has  \na reasonable expectation that the ACL actually does something.\n\nI think that this should either explicitly look only at the mode bits  \nor go through the SMB_VFS_GET_NT_ACL path. Do yo have a preference?\n\n>> And shouldn't it use the dirname of the path it is checking for the\n>> fake connectpath, rather than '/', since they could be different\n>> filesystem types? And even that is a bit wonky, because it probably\n>> assumes that the global ACLs module is appropriate for this path,\n>> which might not be true.\n>>\n>> If you give me a hint, I'll code up a patch :)\n>\n> Hmmmm. Is it causing you grief at the moment ?\n\nNot yet, though I guess it's possible that one day someone will call  \nthat code :) I was looking into ACL support and this looked weird.\n\n--\nJames Peach | jpeach@samba.org\n\n\n"}