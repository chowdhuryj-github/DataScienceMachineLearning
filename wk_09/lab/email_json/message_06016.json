{"category": "ham", "to_address": "Andrew Shitov <andy@shitov.ru>", "from_address": "Will Coleda <will@coleda.com>", "subject": "Re: Executing Perl 6 code using PIR backend", "body": "\nOn Apr 15, 2007, at 11:36 AM, Andrew Shitov wrote:\n\n> Hi perlers,\n>\n\n< SNIP of Pugs stuff>\n\n>\n> OK, trying to use parrot for executing PIR-code:\n>\n>    parrot test.pir\n>\n> Plenty of errors this time:\n>\n>     error:imcc:syntax error, unexpected DOT\n>         in file 'h.pir' line 7\n>     error:imcc:syntax error, unexpected DOT\n>         in file 'h.pir' line 180\n>     error:imcc:syntax error, unexpected DOT\n>         in file 'h.pir' line 194\n>     . . .\n>\n> All these 'unexpected DOT' messages correspond to staments in PIR- \n> source with\n> 'new' instruction such as\n>\n>    $P8 = new .PerlArray\n>\n>\n> Would anyone tell me how to deal and live with it? :-)\n\nAll of the Perl* PMC types were changed into dynamically loaded PMCs  \n- they're not available at runtime without jumping through some  \nhoops. (These were designed for a more perl5-ian set of requirements,  \nand weren't going to be used by the perl6-on-parrot effort.);\n\nMost of the Perl types have builtin parrot analogues, however:\n\nPerlArray -> ResizablePMCArray\nPerlHash -> Hash\nPerlString -> String\nPerlInt -> Integer\nPerlNum -> Float\nPerlUndef -> Undef\nPerlEnv -> Env\n\nPerlScalar is kind of a base class for the string/int/num types, I'm  \nnot sure if there's a direct analogue in core parrot.\n\nThe old perl PMC stuff is still in the parrot repository for the  \nmoment in languages/perl5/.\n\nHope this helps, though I'm out of touch enough with Pugs that I  \ndon't know if this is related to something in pugs-land that needs  \nupdating.\n\n--\nWill \"Coke\" Coleda\nwill@coleda.com\n\n\n"}