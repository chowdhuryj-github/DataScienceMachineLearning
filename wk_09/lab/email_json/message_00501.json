{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "chao gai <chaogai@duineveld.demon.nl>", "subject": "Re: [R] R:Maximum likelihood estimation using BHHH and BFGS", "body": "Joey,\n\nFirst of all, it is bad habit to call your data c. It can be done, but it may \nconfuse you later on. Let's call it consdata.\nMy only experience is with optim.\nIn that case I would change fn a bit. I let scoping take care of consdata. \nAlternatively, pass it as last parameter:\n\nfn<-function(psi,alpha) {\ns1<-sum(for(i in 1:n){(consdata[i]-(psi^(-1/alpha)*(lag(consdata[i],-1))))^2*\n(lag(consdata[i],-1)^((-2)*(alpha+1)))})\ns2<- sum(for(m in 1:n){log(lag(consdata[m],-1)^(((2)*alpha)+2))})\nconstant-(74*s1)-(1/2)*s2\n}\n\noptim(c(1,0),fn, method=\"BFGS\")\n\nAlternatively, in case you want to pass the data explicitly, use the ... to \npass the data\n fn < function(psi,alpha,consdata) {}\noptim(c(1,0),fn, method=\"BFGS\",consdata=consdata)\n\nKees\n\n\nOn Monday 09 April 2007 04:59, joey repice wrote:\n> Dear R users,\n>\n> I am new to R. I would like to find *maximum likelihood estimators for psi\n> and alpha* based on the following *log likelihood function*, c is\n> consumption data comprising 148 entries:\n>\n> fn<-function(c,psi,alpha)\n>\n> {\n>\n> s1<-sum(for(i in 1:n){(c[i]-(psi^(-1/alpha)*(lag(c[i],-1))))^2*\n>\n> (lag(c[i],-1)^((-2)*(alpha+1))\n>\n> )});\n>\n> s2<- sum(for(m in 1:n){log(lag(c[m],-1)^(((2)*alpha)+2))});\n>\n> constant-(74*s1)-(1/2)*s2}\n>\n>\n>\n> In particular I want to use the BHHH and the BFGS algorithms. I have found\n> the following packages that can be used for the task:  *mle{stats4},\n> optim{stats}, maxBHHH{micEcon}, maxBFGS{micEcon}*. I have documented some\n> of my attempts below ((a) package name (b) usage (c) my attempt and\n> corresponding error). In all humility I apologise for any bad coding, and\n> ask if anyone can *direct me in finding these estimators*.\n>\n>\n>\n> Yours sincerely.\n>\n>\n>\n>\n>\n> *(1a)  mle{stats4}\n>\n> (b)  Usage:\n>\n>      mle(minuslogl, start = formals(minuslogl), method = \"BFGS\",\n>\n>      fixed = list(), ...)\n>\n> (For this I use the negative of the log-likelihood function,bn)*\n>\n> *(c)  >mle(start=list(psi=1,alpha=0),fn, method=\"BFGS\",fixed=list(c=c))*\n>\n> Error in optim(start, f, method = method, hessian = TRUE, ...) :\n>\n>         non-finite finite-difference value [1]\n>\n>\n>\n> *(2a)  optim{stats}\n>\n>\n>\n> (b)  optim(par, fn, gr = NULL,\n>\n>       method = c(\"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\"),*\n>\n> *\n>\n>       lower = -Inf, upper = Inf,\n>\n>       control = list(), hessian = FALSE, ...)\n>\n>\n>\n> (c)  > optim(c(c,1,0),fn, method=\"BFGS\", control=list(c=c))*\n>\n> Error: argument \"psi\" is missing, with no default\n>\n>\n>\n> *(3a)     maxBHHH{micEcon}\n>\n> (b)     Usage: maxBHHH(fn, grad = NULL, hess=NULL, theta, print.level\n> = 0, iterlim = 100,   ...)*\n>\n> * *\n>\n> *(c) > maxBHHH(fn(c,psi,alpha),theta=list(psi=1,alpha=0))*\n>\n>  Error in psi^(-1/alpha) * (lag(c[i], -1)) :\n>\n>         time-series/vector length mismatch\n>\n>\n>\n> (4a)  maxBFGS{micEcon}\n>\n>\n>\n> (b)  Usage: maxBFGS(fn, grad = NULL, theta, print.level = 0, iterlim = 200,\n>\n>      tol = 1e-06, ... )\n>\n> *(ci) >  maxBFGS(fn(c,psi,alpha),theta=list(psi=1,alpha=0))*\n>\n> Error in psi^(-1/alpha) * (lag(c[i], -1)) :\n>\n>         time-series/vector length mismatch\n>\n>\n>\n> *(cii)> maxBFGS(fn,theta=list(psi=1,alpha=0))*\n>\n> Error: argument \"psi\" is missing, with no default\n>\n> \t[[alternative HTML version deleted]]\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html and provide commented, minimal,\n> self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}