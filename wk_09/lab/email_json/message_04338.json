{"category": "ham", "to_address": "brian.d.foy@gmail.com", "from_address": "\"Damian Conway\" <damian@conway.org>", "subject": "Re: What should file test operators return?", "body": "On 13/04/07, Moritz Lenz  wrote:\n\n> If you want a boolean, use\n> ? $fn ~~ :x\n> or something.\n\nDefinitely \"or something\". Unary ? has the wrong precedence there.\nYou could write:\n\n    for @files -> $file {\n        printf \"%-70s  %s  %s  %s\\n\",\n            $file,\n            true $file ~~ :r,\n            true $file ~~ :w,\n            true $file ~~ :x;\n    }\n\nwhich could, of course be hyperoperated:\n\n    for @files -> $file {\n        printf \"%-70s  %s  %s  %s\\n\",\n            $file,\n            true<<  $file <<~~<< (:r, :w, :x);\n    }\n\n\nMaybe there also needs to be a \"boolean\" conversion for printf\n(perhaps %t for true?):\n\n    for @files -> $file {\n        printf \"%-70s  %t  %t  %t\\n\",\n            $file,\n            $file ~~ :r,\n            $file ~~ :w,\n            $file ~~ :x;\n    }\n\nWhich leads to:\n\n    for @files -> $file {\n        printf \"%-70s  %t  %t  %t\\n\",\n            $file,\n            $file <<~~<< (:r, :w, :x);\n    }\n\n\nDamian\n\n"}