{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #42795\": ;", "from_address": "\"Mark Glines via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #42795] [PATCH] NULL function pointer should be a pointer ", "body": "Hi,\n\nSome warnings are being emitted by both msvc and gcc, which I think were\ncaused by this patch.\n\nmsvc:\n\n[10:15] < particle> src\\ops\\core_ops.c(14190) : warning C4047:\n'initializing' : 'op_func_t' differs\n[10:15] < particle> in levels of indirection from 'op_func_t * '\n\ngcc:\n\nsrc/ops/core_ops.c:14190: warning: initialization from incompatible\npointer type\n\nThe line in question is trying to NULL-terminate an array of\nop_func_t's.  The issue is that op_func_t is *already* a pointer type,\nand this patch changed a \"function pointer\" into a \"pointer to a\nfunction pointer\".\n\nHere's how op_func_t is declared:\n\ntypedef opcode_t *(*op_func_t)(opcode_t *, Interp *);\n\n\nSteve, does the patch you submitted fix anything for you?  (In other\nwords, will it break anything to revert this?)\n\nMark\n\n"}