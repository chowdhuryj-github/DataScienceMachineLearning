{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 522: support up takeover in testing when root in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 522\nrevision-id: tridge@samba.org-20070609114706-yyeee2n33bdie2jb\nparent: tridge@samba.org-20070609114642-748hfwtukybwnilg\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-06-09 21:47:06 +1000\nmessage:\n  support up takeover in testing when root\nmodified:\n  takeover/ctdb_takeover.c       ctdb_takeover.c-20070525071636-a5n1ihghjtppy08r-2\n  tests/events                   events-20070601105359-jc8p0xp6iq7phful-1\n  tests/start_daemons.sh         start_daemons.sh-20070604074603-fbb8x90srun04xn0-1\n=== modified file 'takeover/ctdb_takeover.c'\n--- a/takeover/ctdb_takeover.c\t2007-06-07 12:26:27 +0000\n+++ b/takeover/ctdb_takeover.c\t2007-06-09 11:47:06 +0000\n@@ -65,7 +65,7 @@\n \n \tret = ctdb_sys_send_arp(&arp->sin, arp->ctdb->takeover.interface);\n \tif (ret != 0) {\n-\t\tDEBUG(0,(__location__ \"sending of arp failed (%s)\\n\", strerror(errno)));\n+\t\tDEBUG(0,(__location__ \" sending of arp failed (%s)\\n\", strerror(errno)));\n \t}\n \n \tfor (tcp=arp->tcp_list;tcp;tcp=tcp->next) {\n\n=== modified file 'tests/events'\n--- a/tests/events\t2007-06-06 01:13:24 +0000\n+++ b/tests/events\t2007-06-09 11:47:06 +0000\n@@ -15,15 +15,44 @@\n \t;;\n \t\n      takeip)\n+\tif [ $# != 3 ]; then\n+\t   echo \"must supply interface, IP and maskbits\"\n+\t   exit 1\n+\tfi\n+\tiface=$1\n+\tip=$2\n+\tmaskbits=$3\n+\n+\t[ `id -u` = 0 ] && {\n+\t    /sbin/ip addr add $ip/$maskbits dev $iface || {\n+\t\techo \"`/bin/date` Failed to add $ip/$maskbits on dev $iface\"\n+\t\texit 1\n+\t    }\n+\t}\n+\texit 0;\n+\t;;\n+\n+\n+     ##################################################\n+     # called when ctdbd wants to release an IP address\n+     releaseip)\n+\tif [ $# != 3 ]; then\n+\t   echo \"`/bin/date` must supply interface, IP and maskbits\"\n+\t   exit 1\n+\tfi\n+\tiface=$1\n+\tip=$2\n+\tmaskbits=$3\n+\t[ `id -u` = 0 ] && {\n+\t    /sbin/ip addr del $ip/$maskbits dev $iface || {\n+\t\techo \"`/bin/date` Failed to del $ip on dev $iface\"\n+\t\texit 1\n+\t    }\n+\t}\n \techo \"`date` ctdb takeip event for $1 $2 $3\"\n \texit 0\n \t;;\n \n-     releaseip)\n-\techo \"`date` ctdb releaseip event for $1 $2 $3\"\n-\texit 0\n-\t;;\n-\n      recovered)\n \techo \"`date` ctdb recovered event\"\n \texit 0\n\n=== modified file 'tests/start_daemons.sh'\n--- a/tests/start_daemons.sh\t2007-06-04 09:53:19 +0000\n+++ b/tests/start_daemons.sh\t2007-06-09 11:47:06 +0000\n@@ -5,9 +5,14 @@\n \n killall -q ctdbd\n \n+CTDB_OPTIONS=\"--reclock=rec.lock --nlist $NODES --event-script=tests/events --logfile=-  --dbdir=test.db\"\n+if [ `id -u` -eq 0 ]; then\n+    CTDB_OPTIONS=\"$CTDB_OPTIONS --public-addresses=tests/public_addresses --public-interface=lo\"\n+fi\n+\n echo \"Starting $NUMNODES ctdb daemons\"\n for i in `seq 1 $NUMNODES`; do\n-    $VALGRIND bin/ctdbd --reclock=rec.lock --nlist $NODES --event-script=tests/events --logfile=- --socket=sock.$i --dbdir=test.db || exit 1\n+    $VALGRIND bin/ctdbd --socket=sock.$i $CTDB_OPTIONS || exit 1\n done\n ln -sf $PWD/sock.1 /tmp/ctdb.socket || exit 1\n \n\n"}