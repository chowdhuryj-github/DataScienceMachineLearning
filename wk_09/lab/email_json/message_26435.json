{"category": "ham", "to_address": "\"Gav Wood\" <news@gavofyork.fastmail.fm>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] xyplot with grid?", "body": "You can do it via panel= or after the fact with trellis.focus...trellis.unfocus.\nThe following illstrates both.  The panel= function adds a vertical line\nat 3 and after the fact we add a vertical line at 6.\n\npnl <- function(...) {\n   panel.abline(v = 3)\n   panel.xyplot(...)\n}\n\nxyplot(x~y,data.frame(x=1:9,y=1:9,z=sort(rep(c('A','B','C'),3))),\n    groups=z,auto.key=list(columns=3), panel = pnl)\n\ntrellis.focus(\"panel\", 1, 1)\npanel.abline(v = 6)\ntrellis.unfocus()\n\n\n\nOn 5/9/07, Gav Wood  wrote:\n> Gabor Grothendieck wrote:\n> > Add the argument\n> >\n> >    type = c(\"p\", \"g\")\n> >\n> > to your xyplot call.\n>\n> So what's the easiest way to place a line at x=3 (ala \"abline(v=3)\") to\n> the graph? After calling the xyplot call, the panel.* functions seem to\n> work only in device coordinates.\n>\n> Thanks for the help,\n>\n> Gav\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}