{"category": "ham", "to_address": "debian-legal@lists.debian.org", "from_address": "John Goerzen <jgoerzen@complete.org>", "subject": "Bacula: GPL and OpenSSL", "body": "Hi legal folks,\n\nKern Sibbald, author of Bacula, contacted me today regarding its\nlicense.\n\nSome years ago, Jose Luis Tallon -- then the maintainer of Bacula --\nasked Kern to add a clause to the Bacula license that would explicitly\npermit linking with OpenSSL.  Kern did.  Kern also subsequently assigned\ncopyright to FSF Europe (FSFE).\n\nRecently, Fedora developers noticed that there were a few files in the\nBacula source tree that were not copyrighted by Kern or FSFE.  Since\nKern did not have written permission from these developers to relicense\nBacula with the OpenSSL exemption, Fedora believed the license as\nwritten was problematic.\n\nKern approached me about this situation (see full correspondence below,\nforwarded with his permission).  He added that Bacula does not\nstatically link with OpenSSL, that OpenSSL support can be disabled at\nbuild time, and that FSFE does not believe that an exception clause to\nthe GPL is necessary to legally link to OpenSSL in the manner that\nBacula is (dynamic linking).  Further, could we not consider OpenSSL to\nbe a major component of the OS on which the executable runs, and thus\nfall under that exemption in the GPL anyway?\n\nI have not been able to pull up a succinct statement of why Debian\nbelieves this is a problem when FSFE doesn't, or what we ought to do.\nCan somebody please comment on the OpenSSL linking issue when OpenSSL is\nonly dynamically linked?\n\nKern believes that he must remove the explicit OpenSSL exemption from\nthe license in order to be fully GPL-compliant, and it appears that FSFE\nagrees.\n\nThanks,\n\n-- John\n\n----- Forwarded message from Kern Sibbald  -----\n\nFrom: Kern Sibbald \nDate: Thu, 7 Jun 2007 16:05:37 +0200\nTo: John Goerzen \nSubject: Bacula license\n\nHello John,\n\nI hope things are going well for you.\n\nThere is an interesting issue that has come up with the Bacula license mainly \nbecause of a request by Debian for me to add a specific clause that reads:\n\nLinking:\nBacula may be linked with any libraries permitted under the GPL,\nor with any non-GPLed libraries, including OpenSSL, that are\nrequired for its proper functioning, providing the source code of\nthose non-GPLed libraries is non-proprietary and freely\navailable to the public.\n\nNow, this was added because Debian asked me to add it because of the fact that \nBacula uses OpenSSL.  However, in researching the issue a bit further, I \nrealize that Bacula does not link OpenSSL into the Bacula binary because the \nOpenSSL (like glibc) is a shared object.  Thus, no non-GPLed code is being \nmixed with GPLed code, and hence there is no need for the above clause.\n\nMy question to you is:  will there be any problems with Bacula in the Debian \ndistribution if I remove this clause and make the Bacula code simply pure GPL \nv2?\n\nBest regards,\n\nKern\n\nPS: Here is an email that I sent to the Bacula list a while ago, that explains \nin more detail the licensing problem.\n\n==============================================\nFYI An annoying GPL catch-22 concerning Bacula\nDate: Today 11:38:01\nFrom: Kern Sibbald \nTo: \"bacula-users\" \nCC: \"bacula-devel\" \n\n \nHello,\n\nFor non-English speakers, a \"catch-22\" in English means a situation in which \nthere is no way out.\n\nThe following annoying and frustrating issue has come up with regard to the \nBacula source code:\n\nAs you probably know, Bacula is released with a modified GNU GPL licence.  The \nBacula license modifies the GPL to permit Bacula to link to OpenSSL. This was \nnecessary because using MySQL libraries requires OpenSSL.  This modification \nwas suggested by Debian to bring Bacula in compliance with their procedures.  \n\nThe problem comes from including pure GNU GPL code, which is not compatible \nwith the OpenSSL license, inside Bacula itself (there are something like 8 \nsuch files).  This works in the same way that Debian would not allow Bacula \nas pure GNU GPL to link with OpenSSL.  If Bacula uses any pure GNU GPL code \nthen that code cannot be subject to the GNU GPL modifications, and that code \ntechnically cannot linked and distributed with Bacula because of OpenSSL.\n\nI suspect that a lot of GPL projects are in a similar situation, but they do \nnot explicitly point out the exception as Bacula does.  The real bummer here \nis that this issue was flagged by someone involved in the Fedora packaging\nprocess.  From what I understand (I may be wrong here), Fedora and hence Red \nHat will not use Bacula because it uses some pure GPL code and OpenSSL \ntogether raising potential license problems -- after the problems with SCO \nand threats from Microsoft, their license concerns are quite understandable.\n\nThis is not a show-stopping issue because at least for the moment, no author \nof pure GNU GPL code is lodging a complaint.  In addition as I mentioned in a \nprevious email, this issue could potentially be resolved by GPL v3 (due at \nthe end of the month, if I remember right) because it is compatible with the \nApache license, which is apparently what OpenSSL uses.\n\nIn the mean time, until this problem is resolved, I've freezed all inclusion \nof new GPL code (copyrighted by others) in Bacula.  \n\nThe really complicated aspect of the above is that if you build a program such \nas Bacula using all your own code, and you use OpenSSL then in linking it, \nyou just happen to drag some GPL'ed code from some library directly into your \nbinary (most libararies are shared objects so do not become part of your \nbinary), as is the case with the statically linked Bacula used in the rescue \npackage, you are in violation of the GPL if you distribute such a binary.  \n\nIt seems that the only solution is that if you use GPL code, you must use \n*all* GPL compatible code (not so easy), and if you don't use it, you \nshouldn't even use the system libraries if there is any chance they could be \naccidentally linked into your program.\n\n\nBest regards,\n\nKern\n\n\n----- End forwarded message -----\n----- Forwarded message from Kern Sibbald  -----\n\nFrom: Kern Sibbald \nDate: Thu, 7 Jun 2007 17:34:52 +0200\nTo: John Goerzen \nSubject: Re: Bacula license\n\nOn Thursday 07 June 2007 16:34, John Goerzen wrote:\n> On Thu, Jun 07, 2007 at 04:05:37PM +0200, Kern Sibbald wrote:\n> > Hello John,\n> > \n> > I hope things are going well for you.\n> \n> Hi Kern,\n> \n> > Now, this was added because Debian asked me to add it because of the fact \nthat \n> > Bacula uses OpenSSL.  However, in researching the issue a bit further, I \n> > realize that Bacula does not link OpenSSL into the Bacula binary because \nthe \n> > OpenSSL (like glibc) is a shared object.  Thus, no non-GPLed code is being \n> > mixed with GPLed code, and hence there is no need for the above clause.\n> \n> I remember, though somewhat vaguely, when all of this came up.  I\n> believe that the FSF considers dynamic linking to be linking that falls\n> under the relevant clauses of the GPL.  So I believe that the notice is\n> still necessary.\n\nI've been in conversation with FSFE, and from what they tell me, the GPL \nprevents distribution of non-GPLed code not loading it in dynamic modules, \nwhich is done quite frequently.  Bacula does not distribute any OpenSSL code, \nand there is no OpenSSL code mixed with the Bacula binaries, therefore \naccording to FSFE there is no problem.\n\n> \n> > My question to you is:  will there be any problems with Bacula in the \nDebian \n> > distribution if I remove this clause and make the Bacula code simply pure \nGPL \n> > v2?\n> \n> I believe that this would cause us to have to stop distributing Bacula,\n> because we can't do so in a way that meets the requirements of all\n> licenses.\n\nI've modified the license so that there are no changes to the GPL.  If Debian \nwants to be so strict as not allow dynamic linking to OpenSSL, which \naccording to FSFE is not prohibited, then my suggestion would be for Debian \nto build and distribute a Bacula without the openssl option.  That should in \nthe strictest sense solve the problem -- it would be a pity for the Debian \nusers if they could not have encryption.\n\n> \n> [ snip ]\n> \n> > I suspect that a lot of GPL projects are in a similar situation, but they \ndo \n> > not explicitly point out the exception as Bacula does.  The real bummer \nhere \n> > is that this issue was flagged by someone involved in the Fedora packaging\n> > process.  From what I understand (I may be wrong here), Fedora and hence \nRed \n> > Hat will not use Bacula because it uses some pure GPL code and OpenSSL \n> > together raising potential license problems -- after the problems with SCO \n> > and threats from Microsoft, their license concerns are quite \nunderstandable.\n> \n> This sounds like Fedora raised the same question that Debian did?  Is\n> your workaround clause not acceptable to them for some reason?\n\nThe Fedora problem was that there are something like 8 files included in \nBacula that are GPL and copyrighted by other people.  Hence there is a \nconflict if I modify the GPL for the Bacula code.  I.e. the solution found \nfor Debian was technically not workable.\n\nPersonally, I really don't care if OpenSSL or any other program is linked in \nto it providing the source is available, and I feel these license details are \na real pain in the neck for Open Source developers such as myself.  \n\nI believe that the current license as in the SVN, which has no modifications \nto the GPL is perfectly fine.  \n\n> \n> You might also want to seek advice on debian-legal@lists.debian.org.\n> They are (usually) very helpful and are happy to help upstream authors\n> over there.  I do skim the list, and would be happy to help if there is\n> a need for that.\n\nBest regards,\n\nKern\n\n> \n> -- John\n> \n\n\n----- End forwarded message -----\n\n\n-- \nTo UNSUBSCRIBE, email to debian-legal-REQUEST@lists.debian.org\nwith a subject of \"unsubscribe\". Trouble? Contact listmaster@lists.debian.org\n\n"}