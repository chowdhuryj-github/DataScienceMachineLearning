{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "\"Nicholas Lewin-Koh\" <nikko@hailmail.net>", "subject": "[R] complex contrasts and logistic regression", "body": "Hi,\nI am doing a retrospective analysis on a cohort from a designed trial,\nand I am fitting\nthe model\n\nfit<-glmD(survived ~ Covariate*Therapy + confounder,myDat,X=TRUE,\nY=TRUE, family=binomial()) \n\nMy covariate has three levels (\"A\",\"B\" and \"C\") and therapy has two\n(treated and control), confounder is a continuous variable.\nAlso patients were randomized to treatment in the trial, but Covariate\nis something that is measured\nposthoc and can vary in the population.\n \nI am trying to wrap my head around how to calculate a few quantities\nfrom the model\nand get reasonable confidence intervals for them, namely I would like to\ntest\n\nH0: gamma=0, where gamma is the regression coefficient of the odds\nratios of surviving\n             under treatment vs control at each level of Covariate\n             (adjusted for the confounder)\n\nand I would like to get the odds of surviving at each level of Covariate\nunder treatment and control\nfor each level of covariate adjusted for the confounder. I have looked\nat contrast in the Design \nlibrary but I don't think it gives me the right quantity, for instance \n\ncontrast(fit,list(covariate=\"A\", Therapy=\"Treated\",\nconfounder=median(myDat$confounder), X=TRUE)\n( \"A\" is the baseline level of Covariate) \n\ngives me beta0 + beta_Treated + beta_confounder*68  \n\nIs this correctly interpreted as the conditional odds of dying? \nAs to the 1st contrast I am not sure how to get it, would it be using\ntype = 'average' with some weights \nin contrast? The answers are probably staring me in the face, i am just\nnot seeing them today.\n\nNicholas\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}