{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22555 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_25/source/lib", "body": "Author: jra\nDate: 2007-04-28 14:33:46 +0000 (Sat, 28 Apr 2007)\nNew Revision: 22555\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22555\n\nLog:\nEnsure our paranoid malloc functions return NULL on\nsize == 0 so we have a known behavior.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/lib/util.c\n   branches/SAMBA_3_0_25/source/lib/util.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/util.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/util.c\t2007-04-28 13:52:49 UTC (rev 22554)\n+++ branches/SAMBA_3_0/source/lib/util.c\t2007-04-28 14:33:46 UTC (rev 22555)\n@@ -942,6 +942,9 @@\n \n void *malloc_(size_t size)\n {\n+\tif (size == 0) {\n+\t\treturn NULL;\n+\t}\n #undef malloc\n \treturn malloc(size);\n #define malloc(s) __ERROR_DONT_USE_MALLOC_DIRECTLY\n@@ -953,6 +956,9 @@\n \n static void *calloc_(size_t count, size_t size)\n {\n+\tif (size == 0 || count == 0) {\n+\t\treturn NULL;\n+\t}\n #undef calloc\n \treturn calloc(count, size);\n #define calloc(n,s) __ERROR_DONT_USE_CALLOC_DIRECTLY\n@@ -981,6 +987,9 @@\n \t\treturn NULL;\n \t}\n \n+\tif (el_size == 0 || count == 0) {\n+\t\treturn NULL;\n+\t}\n #if defined(PARANOID_MALLOC_CHECKER)\n \treturn malloc_(el_size*count);\n #else\n@@ -1010,6 +1019,9 @@\n \tif (nmemb >= MAX_ALLOC_SIZE/size) {\n \t\treturn NULL;\n \t}\n+\tif (size == 0 || nmemb == 0) {\n+\t\treturn NULL;\n+\t}\n #if defined(PARANOID_MALLOC_CHECKER)\n \treturn calloc_(nmemb, size);\n #else\n\nModified: branches/SAMBA_3_0_25/source/lib/util.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/lib/util.c\t2007-04-28 13:52:49 UTC (rev 22554)\n+++ branches/SAMBA_3_0_25/source/lib/util.c\t2007-04-28 14:33:46 UTC (rev 22555)\n@@ -921,6 +921,9 @@\n \n void *malloc_(size_t size)\n {\n+\tif (size == 0) {\n+\t\treturn NULL;\n+\t}\n #undef malloc\n \treturn malloc(size);\n #define malloc(s) __ERROR_DONT_USE_MALLOC_DIRECTLY\n@@ -932,6 +935,9 @@\n \n static void *calloc_(size_t count, size_t size)\n {\n+\tif (size == 0 || count == 0) {\n+\t\treturn NULL;\n+\t}\n #undef calloc\n \treturn calloc(count, size);\n #define calloc(n,s) __ERROR_DONT_USE_CALLOC_DIRECTLY\n@@ -960,6 +966,9 @@\n \t\treturn NULL;\n \t}\n \n+\tif (el_size == 0 || count == 0) {\n+\t\treturn NULL;\n+\t}\n #if defined(PARANOID_MALLOC_CHECKER)\n \treturn malloc_(el_size*count);\n #else\n@@ -989,6 +998,9 @@\n \tif (nmemb >= MAX_ALLOC_SIZE/size) {\n \t\treturn NULL;\n \t}\n+\tif (size == 0 || nmemb == 0) {\n+\t\treturn NULL;\n+\t}\n #if defined(PARANOID_MALLOC_CHECKER)\n \treturn calloc_(nmemb, size);\n #else\n\n"}