{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "larry@cvs.develooper.com", "subject": "[svn:perl6-synopsis] r14400 - doc/trunk/design/syn", "body": "Author: larry\nDate: Mon May 21 16:29:46 2007\nNew Revision: 14400\n\nModified:\n   doc/trunk/design/syn/S02.pod\n   doc/trunk/design/syn/S06.pod\n\nLog:\nKeep syntactic categories in sync with Perl-6.0.0-STD.pm\n\n\nModified: doc/trunk/design/syn/S02.pod\n==============================================================================\n--- doc/trunk/design/syn/S02.pod\t(original)\n+++ doc/trunk/design/syn/S02.pod\tMon May 21 16:29:46 2007\n@@ -14,7 +14,7 @@\n   Date: 10 Aug 2004\n   Last Modified: 21 May 2007\n   Number: 2\n-  Version: 106\n+  Version: 107\n \n This document summarizes Apocalypse 2, which covers small-scale\n lexical items and typological issues.  (These Synopses also contain\n@@ -2954,33 +2954,46 @@\n \n Here are the current grammatical categories:\n \n-    term:<...>                                  $x = {...}\n-    quote:                                  qX/foo/\n-    prefix:                                  !$x (and $x.'!')\n-    infix:<+>                                   $x + $y\n-    postfix:<++>                                $x++\n+    category:                           prefix:<+>\n     circumfix:<[ ]>                             [ @x ]\n+    dotty:<.=>                                  $obj.=method\n+    infix_circumfix_meta_operator:{'\u00bb','\u00ab'}     @a \u00bb+\u00ab @b\n+    infix_postfix_meta_operator:<=>             $x += 2;\n+    infix_prefix_meta_operator:              $x !~~ 2;\n+    infix:<+>                                   $x + $y\n+    package_declarator:                   role Foo;\n     postcircumfix:<[ ]>                         $x[$y] or $x.[$y]\n-    regex_metachar:<,>                          /,/\n+    postfix_prefix_meta_operator:{'\u00bb'}          @array \u00bb++\n+    postfix:<++>                                $x++\n+    prefix_circumfix_meta_operator:{'[',']'}    [*]\n+    prefix_postfix_meta_operator:{'\u00ab'}          -\u00ab @magnitudes\n+    prefix:                                  !$x (and $x.'!')\n+    q_backslash:<\\\\>                            '\\\\'\n+    qq_backslash:                            \"\\n\"\n+    quote_mod:                               q:x/ ls /\n+    quote:                                  qq/foo/\n+    regex_assertion:                         //\n     regex_backslash:                         /\\w/ and /\\W/\n-    regex_assertion:<*>                         /<*stuff>/\n-    regex_mod_internal:                  m:/ ... :perl5 ... /\n-    regex_mod_external:                    m:nth(3)/ ... /\n-    trait_verb:                        has $.tail handles \n-    trait_auxiliary:                     my $x shall conform\n+    regex_metachar:<.>                          /.*/\n+    regex_mod_internal:                     m:/ ... :P5 ... /\n+    routine_declarator:                    sub foo {...}\n     scope_declarator:                      has $.x;\n+    sigil:<%>                                   %hash\n+    special_variable:<$!>                       $!\n+    statement_control:                      if $condition { 1 } else { 2 }\n+    statement_mod_cond:                     .say if $condition\n+    statement_mod_loop:                    .say for 1..10\n     statement_prefix:                   gather for @foo { .take }\n-    statement_control:                      if $condition {...} else {...}\n-    statement_mod_cond:                     ... if $condition\n-    statement_mod_loop:                    ... for 1..10\n-    infix_prefix_meta_operator:              $x !~~ 2;\n-    infix_postfix_meta_operator:<=>             $x += 2;\n-    postfix_prefix_meta_operator:{'\u00bb'}          @array \u00bb++\n-    prefix_postfix_meta_operator:{'\u00ab'}          -\u00ab @magnitudes\n-    infix_circumfix_meta_operator:{'\u00bb','\u00ab'}     @a \u00bb+\u00ab @b\n-    prefix_circumfix_meta_operator:{'[',']'}    [*]\n+    term:                                  $x = { !!! }\n+    trait_auxiliary:                      my $x does Freezable\n+    trait_verb:                        has $.tail handles \n+    twigil:                                  $?LINE\n+    type_declarator:                    subset Nybble of Int where ^16\n+    version:                                 v4.3.*\n \n Any category containing \"circumfix\" requires two token arguments, supplied\n-in slice notation.\n+in slice notation.  Note that many of these names do not represent real\n+operators, and you wouldn't be able to call them even though you can name\n+them.\n \n =for vim:set expandtab sw=4:\n\nModified: doc/trunk/design/syn/S06.pod\n==============================================================================\n--- doc/trunk/design/syn/S06.pod\t(original)\n+++ doc/trunk/design/syn/S06.pod\tMon May 21 16:29:46 2007\n@@ -13,9 +13,9 @@\n \n   Maintainer: Larry Wall \n   Date: 21 Mar 2003\n-  Last Modified: 14 May 2007\n+  Last Modified: 21 May 2007\n   Number: 6\n-  Version: 83\n+  Version: 84\n \n \n This document summarizes Apocalypse 6, which covers subroutines and the\n@@ -1493,30 +1493,42 @@\n or associativity because they are parsed specially.  Nevertheless,\n C may be useful for cloning other traits of these operators.)\n \n-    term:<*>\n-    quote:\n-    prefix:<++>\n-    infix:<+>\n-    postfix:<++>\n+    category:\n     circumfix:<( )>\n+    dotty:<.>\n+    infix:<+>\n+    infix_circumfix_meta_operator:{'\u00bb','\u00ab'}\n+    infix_postfix_meta_operator:<=>\n+    infix_prefix_meta_operator:\n+    package_declarator:\n     postcircumfix:<( )>\n-    regex_metachar:<.>\n-    regex_backslash:\n+    postfix:<++>\n+    postfix_prefix_meta_operator:{'\u00bb'}\n+    prefix:<++>\n+    prefix_circumfix_meta_operator:{'[',']'} \n+    prefix_postfix_meta_operator:{'\u00ab'}\n+    q_backslash:<\\\\>\n+    qq_backslash:\n+    quote_mod:\n+    quote:\n     regex_assertion:\n+    regex_backslash:\n+    regex_metachar:<.>\n     regex_mod_internal:\n-    regex_mod_external:\n-    trait_verb:\n-    trait_auxiliary:\n+    routine_declarator:\n     scope_declarator:\n-    statement_prefix:\n+    sigil:<$>\n+    special_variable:<$!>\n     statement_control:\n-    statement_modifier:\n-    infix_prefix_meta_operator:\n-    infix_postfix_meta_operator:<=>\n-    postfix_prefix_meta_operator:{'\u00bb'}\n-    prefix_postfix_meta_operator:{'\u00ab'}\n-    infix_circumfix_meta_operator:{'\u00bb','\u00ab'}\n-    prefix_circumfix_meta_operator:{'[',']'} \n+    statement_mod_cond:\n+    statement_mod_loop:\n+    statement_prefix:\n+    term:<*>\n+    trait_auxiliary:\n+    trait_verb:\n+    twigil:\n+    type_declarator:\n+    version:\n \n The existing operator may be specified either as a function name\n or as a string slice equivalent to the one that would be used in\n\n"}