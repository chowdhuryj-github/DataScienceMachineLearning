{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "particle@cvs.develooper.com", "subject": "[svn:parrot-pdd] r18382 - in trunk: docs/pdds src/pmc t/pmc", "body": "Author: particle\nDate: Tue May  1 16:41:53 2007\nNew Revision: 18382\n\nModified:\n   trunk/docs/pdds/pdd21_namespaces.pod\n\nChanges in other areas also in this revision:\nModified:\n   trunk/src/pmc/namespace.pmc\n   trunk/t/pmc/namespace.t\n\nLog:\n[pmc]: added functionality to NameSpace PMC 'export_to' method\n~ can now accept a hash argument, which allows an object to be exported with a different name\n~ updated spec, implementation, and tests\n\nModified: trunk/docs/pdds/pdd21_namespaces.pod\n==============================================================================\n--- trunk/docs/pdds/pdd21_namespaces.pod\t(original)\n+++ trunk/docs/pdds/pdd21_namespaces.pod\tTue May  1 16:41:53 2007\n@@ -214,9 +214,14 @@\n     $P1.export_to($P2, $P3)\n \n Export items from the namespace $P1 into the namespace $P2.  The items to\n-export are named in the array $P3; a null $P3 requests the 'default' set of\n-items.  The interpretation of the array in $P3 always follows the conventions\n-of the source (exporting) namespace.\n+export are named in $P3, which may be an array of strings, a hash, or null.\n+If $P3 is an array of strings, interpretation of items in an array follows\n+the conventions of the source (exporting) namespace.\n+If $P3 is a hash, the keys correspond to the names in the source namespace,\n+and the values correspond to the names in the destination namespace.\n+if a hash value is null or an empty string, the name in the hash key is used.\n+A null $P3 requests the 'default' set of items.\n+Any other type passed in $P3 throws an exception.\n \n The base Parrot namespace export_to() function interprets item names as\n literals -- no wildcards or other special meaning.  There is no default list\n\n"}