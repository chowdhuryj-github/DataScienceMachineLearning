{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Smylers <Smylers@stripey.com>", "subject": "Re: = at Start of Line ([svn:perl6-synopsis] r14421 - doc/trunk/design/syn)", "body": "brian d foy writes:\n\n> In article\n> <832f158a0706141722o5f68cf09l724d4f4520ee146@mail.gmail.com>, Damian\n> Conway  wrote:\n> \n> > No. It's Pod. *Any* line that begins with '=begin' always starts a Pod\n> > block. Always.\n> \n> As you know, one of the biggest complaints about Perl is that you have\n> to have a lot of special rules knowledge to figure some things out.\n\nIndeed.  What's much nicer is to be able to state that a given rule\n\"always\" applies.\n\nLike Damian has just done here.\n\nSaying that C<=> at the start of a line always means Pod is much simpler\nthan having a list of exceptions of places where it doesn't.\n\n> Also, doesn't this then limit Pod to Perl 6 (which I thought was not\n> the goal)?\n\nI reckon the complete opposite.\n\n> I doubt other languages will want to deal with this situation.\n\nWith these new Pod rules it's possible to entirely remove Pod from a\nfile without knowing _anything_ about the host language.  (It could\nstraightforwardly be done as an editor macro, for example.)  That\npermits Pod to be used to document just about anything; all you need to\nallow it is a filter that strips off all Pod before you do anything else\nwith the file.\n\nIf Pod were to take notice of the host language's context throughout the\nfile then this would not be possible: every language which wished to\nhave Pod support would require its own Pod parser embedded within the\nlanguge parser.  _That_ is orders of magnitude more complex than the\nsimplicity of filtering off all Pod first, and strikes me as something\nother languages are much less likely to be bothered to do.\n\nSmylers\n\n"}