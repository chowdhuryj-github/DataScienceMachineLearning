{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: Problems referencing variable value in another loop", "body": "shadkeene@hotmail.com wrote:\n> Hi,\n> I was able to parse different data in the same loop...however, now I'd\n> like to extract data from two files, using two while loops after\n> opening each .txt file...then do arithmetic with the data I\n> extracted...all in the same script. The problem is that when I\n> reference a variable in the second while loop that I initialized in\n> the first while loop, the script doesn't recognize it. To be more\n> clear, there is a number value for $SLPdataSFO[6] that I extracted in\n> the first while loop, and I'd like to subtract that value from\n> $SLPdataSAC[6], which I extracted in the second while loop. I tried to\n> make it a global variable at the beginning by using \"our @SLPdataSFO =\n> ();\" to make it a global variable, but no luck there. Any ideas?\n> Thanks for your help....the error I receive is as follows with the\n> script after that.\n> Shad\n> \n> \n> Global symbol \"@SLPdataSFO\" requires explicit package name at c:\\perl-\n> scripts\\BarkerRegParser.cgi line 54.\n> Execution of c:\\perl-scripts\\BarkerRegParser.cgi aborted due to\n> compilation errors.\n> \n> \n> #!/perl/bin/perl -w\n> use CGI qw(:standard);\n> use CGI::Carp qw(warningsToBrowser fatalsToBrowser);\n> use Fcntl qw(:flock :seek);\n> use strict;\n> \n> print header;\n> print start_html(\"Gradients\");\n> \n> open(FH, \"C:/perl-scripts/Data/BarkerSFOtest.txt\") #open barker SFO\n> extrapolated NAM data .txt file\n> or &dienice(\"couldn't open output file: $!\");\n> \n> print \"PW\";\n> \n> while (my $line = ) { #reads through each line of model data\n> \n> if ($line =~ m/^ Mean/) { #finds line with sealevel pressure\n> print \"$line\";\n> my $SFOdataSLP = $line; #places $line into new string called $data SLP\n> my @SLPdataSFO = split(/\\s+/, $SFOdataSLP); #splits $data SLP string\n> into individual elements between whitespace\n> print \"$SLPdataSFO[6]\";\n> print \"$SLPdataSFO[4]\";\n> my $SLPchgSFO = $SLPdataSFO[6] -= $SLPdataSFO[4]; #subtracts 12hr SLP\n> from 0hr SLP\n> print \"$SLPchgSFO\";\n> my $roundf = sprintf(\"%1.1f\", $SLPchgSFO);\n> print \"$roundf\";\n> }\n> \n> elsif ($line =~ m/^ Precip/) { #if line isn't Precip Water line, then\n> will skip to next line\n> print \"$line\";\n> my $dataPW = $line;\n> my @PWdata = split(/\\s+/, $dataPW);\n> print \"$PWdata[6]\";\n> }\n> }\n> close (FH);\n> \n> open(FH, \"C:/perl-scripts/Data/BarkerSACtest.txt\") #open barker SFO\n> extrapolated NAM data .txt file\n> or &dienice(\"couldn't open output file: $!\");\n> \n> while (my $line = ) { #reads through each line of model data\n> \n> if ($line =~ m/^ Mean/) { #finds line with mean sealevel pressure\n> print \"$line\";\n> my $SACdataSLP = $line; #places $line into new string called\n> $SACdataSLP\n> my @SLPdataSAC = split(/\\s+/, $SACdataSLP); #splits $SACdataSLP string\n> into individual elements between whitespace\n> my $SACSFOgrad12 = $SLPdataSFO[6] -= $SLPdataSAC[6]; #subtracts SFO\n> from SAC 12-hr fcst sealevel pressure\n> print \"$SACSFOgrad12\";\n> }\n> }\n> \n> close (FH);\n> print end_html;\n> \n> sub dienice {\n> my($errmsg) = @_;\n> print \"Error\\n\";\n> print \"$errmsg\\n\";\n> print end_html;\n> exit;\n> }\n\nI assume your files contain just one example of each of the data lines that you're\ninterested in? In which case you're doing far more work inside the loop than is\nappropriate. Consider something like the code below, which uses the while loops\nsimply to search for the data required and then processes it separately. There are\nbetter ways to do this, but not without going a long way from your original code.\n\nHTH,\n\nRob\n\n\n\nmy ($SFOdataSLP, $dataPW);\n\nopen FH, \"C:/perl-scripts/Data/BarkerSFOtest.txt\" #open barker SFO extrapolated NAM data .txt file\nor dienice(\"couldn't open output file: $!\");\n\nwhile () {\n  $SFOdataSLP = $_ if /^ Mean/;\n  $dataPW = $_ if /^ Precip/;\n}\nclose FH;\n\nprint \"$SFOdataSLP\";\n\nmy @SLPdataSFO = split /\\s+/, $SFOdataSLP;\nprint \"$SLPdataSFO[6]\";\nprint \"$SLPdataSFO[4]\";\n\nmy $SLPchgSFO = $SLPdataSFO[6] - $SLPdataSFO[4]; #subtracts 12hr SLP from 0hr SLP\nprint \"$SLPchgSFO\";\n\nmy $roundf = sprintf(\"%1.1f\", $SLPchgSFO);\nprint \"$roundf\";\n\nprint \"$dataPW\";\n\nmy @PWdata = split /\\s+/, $dataPW;\nprint \"$PWdata[6]\";\n\n\n\nmy $SACdataSLP;\n\nopen FH, \"C:/perl-scripts/Data/BarkerSACtest.txt\" #open barker SFO extrapolated NAM data .txt file\nor dienice(\"couldn't open output file: $!\");\n\nwhile () {\n  $SACdataSLP = $_ if /^ Mean/;\n}\nclose FH;\n\nprint \"$SACdataSLP\";\n\nmy @SLPdataSAC = split /\\s+/, $SACdataSLP;\nmy $SACSFOgrad12 = $SLPdataSFO[6] -= $SLPdataSAC[6]; #subtracts SFO from SAC 12-hr fcst sealevel pressure\nprint \"$SACSFOgrad12\";\n\n\nprint end_html;\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}