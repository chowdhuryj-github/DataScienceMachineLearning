{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "gd@samba.org", "subject": "svn commit: samba r22461 - in branches/SAMBA_3_0/source/nsswitch: .", "body": "Author: gd\nDate: 2007-04-22 15:25:54 +0000 (Sun, 22 Apr 2007)\nNew Revision: 22461\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22461\n\nLog:\nUse ranged LDAP queries in lookup_usergroups_member() and start to optinmize\nlookup_groupmem(). In the later, at least try to avoid those massive LDAP\ndn_lookups by looking in the cache before.\n\nGuenther\n\nModified:\n   branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-04-22 15:15:00 UTC (rev 22460)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-04-22 15:25:54 UTC (rev 22461)\n@@ -609,14 +609,16 @@\n {\n \tADS_STATUS rc;\n \tNTSTATUS status = NT_STATUS_UNSUCCESSFUL;\n-\tint count;\n \tLDAPMessage *res = NULL;\n \tADS_STRUCT *ads;\n \tconst char *attrs[] = {\"memberOf\", NULL};\n \tsize_t num_groups = 0;\n \tDOM_SID *group_sids = NULL;\n \tint i;\n+\tchar **strings;\n+\tsize_t num_strings = 0;\n \n+\n \tDEBUG(3,(\"ads: lookup_usergroups_memberof\\n\"));\n \n \tads = ads_cached_connection(domain);\n@@ -626,22 +628,16 @@\n \t\tgoto done;\n \t}\n \n-\trc = ads_search_retry_extended_dn(ads, &res, user_dn, attrs, \n-\t\t\t\t\t  ADS_EXTENDED_DN_HEX_STRING);\n-\t\n-\tif (!ADS_ERR_OK(rc) || !res) {\n+\trc = ads_search_retry_extended_dn_ranged(ads, mem_ctx, user_dn, attrs, \n+\t\t\t\t\t\t ADS_EXTENDED_DN_HEX_STRING, \n+\t\t\t\t\t\t &strings, &num_strings);\n+\n+\tif (!ADS_ERR_OK(rc)) {\n \t\tDEBUG(1,(\"lookup_usergroups_memberof ads_search member=%s: %s\\n\", \n \t\t\tuser_dn, ads_errstr(rc)));\n \t\treturn ads_ntstatus(rc);\n \t}\n \t\n-\tcount = ads_count_replies(ads, res);\n-\n-\tif (count == 0) {\n-\t\tstatus = NT_STATUS_NO_SUCH_USER;\n-\t\tgoto done;\n-\t}\n-\t\n \t*user_sids = NULL;\n \tnum_groups = 0;\n \n@@ -651,16 +647,32 @@\n \t\tgoto done;\n \t}\n \n-\tcount = ads_pull_sids_from_extendeddn(ads, mem_ctx, res, \"memberOf\", \n-\t\t\t\t\t      ADS_EXTENDED_DN_HEX_STRING, \n-\t\t\t\t\t      &group_sids);\n-\tif (count == 0) {\n+\tgroup_sids = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_strings + 1);\n+\tif (!group_sids) {\n+\t\tTALLOC_FREE(strings);\n+\t\tstatus = NT_STATUS_NO_MEMORY;\n+\t\tgoto done;\n+\t}\n+\n+\tfor (i=0; iname, \n \t\t  sid_string_static(group_sid)));\n@@ -886,77 +893,19 @@\n \tmembers = NULL;\n \tnum_members = 0;\n \n-\tif ((attrs = TALLOC_ARRAY(mem_ctx, const char *, 3)) == NULL) {\n-\t\tstatus = NT_STATUS_NO_MEMORY;\n-\t\tgoto done;\n-\t}\n-\t\t\n-\tattrs[1] = talloc_strdup(mem_ctx, \"usnChanged\");\n-\tattrs[2] = NULL;\n-\t\t\n-\tdo {\n-\t\tif (num_members == 0) \n-\t\t\tattrs[0] = talloc_strdup(mem_ctx, \"member\");\n+\targs.control = ADS_EXTENDED_DN_OID;\n+\targs.val = ADS_EXTENDED_DN_HEX_STRING;\n+\targs.critical = True;\n \n-\t\tDEBUG(10, (\"Searching for attrs[0] = %s, attrs[1] = %s\\n\", attrs[0], attrs[1]));\n+\trc = ads_ranged_search(ads, mem_ctx, LDAP_SCOPE_SUBTREE, ads->config.bind_path, \n+\t\t\t       ldap_exp, &args, \"member\", &members, &num_members);\n \n-\t\trc = ads_search_retry(ads, &res, ldap_exp, attrs);\n-\n-\t\tif (!ADS_ERR_OK(rc) || !res) {\n-\t\t\tDEBUG(1,(\"ads: lookup_groupmem ads_search: %s\\n\",\n-\t\t\t\t ads_errstr(rc)));\n-\t\t\tstatus = ads_ntstatus(rc);\n-\t\t\tgoto done;\n-\t\t}\n-\n-\t\tcount = ads_count_replies(ads, res);\n-\t\tif (count == 0)\n-\t\t\tbreak;\n-\n-\t\tif (num_members == 0) {\n-\t\t\tif (!ads_pull_uint32(ads, res, \"usnChanged\", &first_usn)) {\n-\t\t\t\tDEBUG(1, (\"ads: lookup_groupmem could not pull usnChanged!\\n\"));\n-\t\t\t\tgoto done;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (!ads_pull_uint32(ads, res, \"usnChanged\", &current_usn)) {\n-\t\t\tDEBUG(1, (\"ads: lookup_groupmem could not pull usnChanged!\\n\"));\n-\t\t\tgoto done;\n-\t\t}\n-\n-\t\tif (first_usn != current_usn) {\n-\t\t\tDEBUG(5, (\"ads: lookup_groupmem USN on this record changed\"\n-\t\t\t\t  \" - restarting search\\n\"));\n-\t\t\tif (num_retries < 5) {\n-\t\t\t\tnum_retries++;\n-\t\t\t\tnum_members = 0;\n-\t\t\t\tads_msgfree(ads, res);\n-\t\t\t\tres = NULL;\n-\t\t\t\tcontinue;\n-\t\t\t} else {\n-\t\t\t\tDEBUG(5, (\"ads: lookup_groupmem USN on this record changed\"\n-\t\t\t\t\t  \" - restarted search too many times, aborting!\\n\"));\n-\t\t\t\tstatus = NT_STATUS_UNSUCCESSFUL;\n-\t\t\t\tgoto done;\n-\t\t\t}\n-\t\t}\n-\n-\t\tmembers = ads_pull_strings_range(ads, mem_ctx, res,\n-\t\t\t\t\t\t \"member\",\n-\t\t\t\t\t\t members,\n-\t\t\t\t\t\t &attrs[0],\n-\t\t\t\t\t\t &num_members,\n-\t\t\t\t\t\t &more_values);\n-\n-\t\tads_msgfree(ads, res);\n-\t\tres = NULL;\n-\n-\t\tif ((members == NULL) || (num_members == 0))\n-\t\t\tbreak;\n-\n-\t} while (more_values);\n-\t\t\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tDEBUG(0,(\"ads_ranged_search failed with: %s\\n\", ads_errstr(rc)));\n+\t\tstatus = NT_STATUS_UNSUCCESSFUL;\n+\t\tgoto done;\n+\t} \n+\t\n \t/* now we need to turn a list of members into rids, names and name types \n \t   the problem is that the members are in the form of distinguised names\n \t*/\n@@ -975,19 +924,46 @@\n  \n \tfor (i=0;i<num_members;i++) {\n \t\tuint32 name_type;\n-\t\tchar *name;\n+\t\tchar *name, *domain_name, *dn;\n \t\tDOM_SID sid;\n \n-\t\tif (dn_lookup(ads, mem_ctx, members[i], &name, &name_type, &sid)) {\n-\t\t    (*names)[*num_names] = name;\n-\t\t    (*name_types)[*num_names] = name_type;\n-\t\t    sid_copy(&(*sid_mem)[*num_names], &sid);\n-\t\t    (*num_names)++;\n+\t\tif ((!ads_get_sid_from_extended_dn(mem_ctx, members[i], ADS_EXTENDED_DN_HEX_STRING, &sid)) ||\n+\t\t    (!ads_get_dn_from_extended_dn(mem_ctx, members[i], &dn)))\n+\t\t{\n+\t\t\tstatus = NT_STATUS_INVALID_PARAMETER;\n+\t\t\tgoto done;\n \t\t}\n+\n+\t\tif (lookup_cached_sid(mem_ctx, &sid, &domain_name, &name, &name_type)) {\n+\n+\t\t\tDEBUG(10,(\"ads: lookup_groupmem: got sid %s from cache\\n\", \n+\t\t\t\tsid_string_static(&sid)));\n+\n+\t\t\t(*names)[*num_names] = CONST_DISCARD(char *,name);\n+\t\t\t(*name_types)[*num_names] = name_type;\n+\t\t\tsid_copy(&(*sid_mem)[*num_names], &sid);\n+\n+\t\t\t(*num_names)++;\n+\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (dn_lookup(ads, mem_ctx, dn, &name, &name_type, &sid)) {\n+\n+\t\t\tDEBUG(10,(\"ads: lookup_groupmem: got sid %s from dn_lookup\\n\", \n+\t\t\t\tsid_string_static(&sid)));\n+\t\t\t\n+\t\t\t(*names)[*num_names] = name;\n+\t\t\t(*name_types)[*num_names] = name_type;\n+\t\t\tsid_copy(&(*sid_mem)[*num_names], &sid);\n+\t\t\t\n+\t\t\t(*num_names)++;\n+\n+\t\t}\n \t}\t\n \n \tstatus = NT_STATUS_OK;\n-\tDEBUG(3,(\"ads lookup_groupmem for sid=%s\\n\", sid_to_string(sid_string, group_sid)));\n+\tDEBUG(3,(\"ads lookup_groupmem for sid=%s succeeded\\n\", sid_to_string(sid_string, group_sid)));\n done:\n \n \tif (res) \n\n"}