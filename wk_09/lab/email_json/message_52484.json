{"category": "ham", "to_address": "Larry Wall <larry@wall.org>", "from_address": "Damian Conway <damian@conway.org>", "subject": "Re: Referring to source code within Perldoc: the new A<> code", "body": "Hi Larry.\n\nYou wrote:\n\n> : Please can you explain the reasoning for choosing antecedent, rather\n> : than successor?\n> \n> I think having to pick either one or the other is likely a design smell.\n> Maybe it would be better to have predeclared extractors than to have a\n> search strategy baked half-heartedly into A<>.\n\nI'm very keen to improve the A<> mechanism, but I'm not clever enough to work \nout what you mean by \"predeclared extractors\" in this context. To help me, \ncould you show us how something like:\n\n      method foo (Int bar) {...}\n\n      =para\n      The A method take the following argument list: A<(..)>\n\n\nwould look under such an alternative scheme?\n\nDamian\n\n"}