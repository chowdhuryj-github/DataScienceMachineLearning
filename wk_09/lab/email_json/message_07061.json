{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22281 - in\n\tbranches/SAMBA_3_0_25/source/lib/replace/test: .", "body": "Author: metze\nDate: 2007-04-16 19:57:11 +0000 (Mon, 16 Apr 2007)\nNew Revision: 22281\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22281\n\nLog:\nmerge from samba4:\n\nadd a lot more detailed strtoll() and strtoull() tests\n\nmetze\nModified:\n   branches/SAMBA_3_0_25/source/lib/replace/test/testsuite.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_25/source/lib/replace/test/testsuite.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/lib/replace/test/testsuite.c\t2007-04-16 19:56:42 UTC (rev 22280)\n+++ branches/SAMBA_3_0_25/source/lib/replace/test/testsuite.c\t2007-04-16 19:57:11 UTC (rev 22281)\n@@ -476,76 +476,274 @@\n \treturn true;\n }\n \n+#define TEST_STRTO_X(type,fmt,func,str,base,res,diff,rrnoo) do {\\\n+\ttype _v; \\\n+\tchar _s[64]; \\\n+\tchar *_p = NULL;\\\n+\tchar *_ep = NULL; \\\n+\tstrlcpy(_s, str, sizeof(_s));\\\n+\tif (diff >= 0) { \\\n+\t\t_ep = &_s[diff]; \\\n+\t} \\\n+\terrno = 0; \\\n+\t_v = func(_s, &_p, base); \\\n+\tif (errno != rrnoo) { \\\n+\t\tprintf(\"failure: %s [\\n\" \\\n+\t\t       \"\\t%s\\n\" \\\n+\t\t       \"\\t%s(\\\"%s\\\",%d,%d): \" fmt \" (=/!)= \" fmt \"\\n\" \\\n+\t\t       \"\\terrno: %d != %d\\n\" \\\n+\t\t       \"]\\n\", \\\n+\t\t        __STRING(func), __location__, __STRING(func), \\\n+\t\t       str, diff, base, res, _v, rrnoo, errno); \\\n+\t\treturn false; \\\n+\t} else if (_v != res) { \\\n+\t\tprintf(\"failure: %s [\\n\" \\\n+\t\t       \"\\t%s\\n\" \\\n+\t\t       \"\\t%s(\\\"%s\\\",%d,%d): \" fmt \" != \" fmt \"\\n\" \\\n+\t\t       \"]\\n\", \\\n+\t\t       __STRING(func), __location__, __STRING(func), \\\n+\t\t       str, diff, base, res, _v); \\\n+\t\treturn false; \\\n+\t} else if (_p != _ep) { \\\n+\t\tprintf(\"failure: %s [\\n\" \\\n+\t\t       \"\\t%s\\n\" \\\n+\t\t       \"\\t%s(\\\"%s\\\",%d,%d): \" fmt \" (=/!)= \" fmt \"\\n\" \\\n+\t\t       \"\\tptr: %p - %p = %d != %d\\n\" \\\n+\t\t       \"]\\n\", \\\n+\t\t       __STRING(func), __location__, __STRING(func), \\\n+\t\t       str, diff, base, res, _v, _ep, _p, diff - (_ep - _p), diff); \\\n+\t\treturn false; \\\n+\t} \\\n+} while (0)\n+\n static int test_strtoll(void)\n {\n-\tint64_t v;\n-\n \tprintf(\"test: strtoll\\n\");\n \n-\tv = strtoll(\"15\", NULL, 10);\n-\tif (v != 15) {\n-\t\tprintf(\"failure: strtoll [\\n\"\n-\t\t       \"strtoll failed: %lld != 15\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+#define TEST_STRTOLL(str,base,res,diff,errnoo) TEST_STRTO_X(int64_t, \"%lld\", strtoll,str,base,res,diff,errnoo)\n \n-\tv = strtoll(\"10\", NULL, 16);\n-\tif (v != 16) {\n-\t\tprintf(\"failure: strtoll [\\n\"\n-\t\t       \"strtoll hex failed: %lld != 16\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+\tTEST_STRTOLL(\"15\",\t10,\t15LL,\t2, 0);\n+\tTEST_STRTOLL(\"  15\",\t10,\t15LL,\t4, 0);\n+\tTEST_STRTOLL(\"15\",\t0,\t15LL,\t2, 0);\n+\tTEST_STRTOLL(\" 15 \",\t0,\t15LL,\t3, 0);\n+\tTEST_STRTOLL(\"+15\",\t10,\t15LL,\t3, 0);\n+\tTEST_STRTOLL(\"  +15\",\t10,\t15LL,\t5, 0);\n+\tTEST_STRTOLL(\"+15\",\t0,\t15LL,\t3, 0);\n+\tTEST_STRTOLL(\" +15 \",\t0,\t15LL,\t4, 0);\n+\tTEST_STRTOLL(\"-15\",\t10,\t-15LL,\t3, 0);\n+\tTEST_STRTOLL(\"  -15\",\t10,\t-15LL,\t5, 0);\n+\tTEST_STRTOLL(\"-15\",\t0,\t-15LL,\t3, 0);\n+\tTEST_STRTOLL(\" -15 \",\t0,\t-15LL,\t4, 0);\n+\tTEST_STRTOLL(\"015\",\t10,\t15LL,\t3, 0);\n+\tTEST_STRTOLL(\"  015\",\t10,\t15LL,\t5, 0);\n+\tTEST_STRTOLL(\"015\",\t0,\t13LL,\t3, 0);\n+\tTEST_STRTOLL(\"  015\",\t0,\t13LL,\t5, 0);\n+\tTEST_STRTOLL(\"0x15\",\t10,\t0LL,\t1, 0);\n+\tTEST_STRTOLL(\"  0x15\",\t10,\t0LL,\t3, 0);\n+\tTEST_STRTOLL(\"0x15\",\t0,\t21LL,\t4, 0);\n+\tTEST_STRTOLL(\"  0x15\",\t0,\t21LL,\t6, 0);\n \n-\tv = strtoll(\"11\", NULL, 2);\n-\tif (v != 3) {\n-\t\tprintf(\"failure: strtoll [\\n\"\n-\t\t       \"strtoll binary failed: %lld != 3\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+\tTEST_STRTOLL(\"10\",\t16,\t16LL,\t2, 0);\n+\tTEST_STRTOLL(\"  10 \",\t16,\t16LL,\t4, 0);\n+\tTEST_STRTOLL(\"0x10\",\t16,\t16LL,\t4, 0);\n+\tTEST_STRTOLL(\"0x10\",\t0,\t16LL,\t4, 0);\n+\tTEST_STRTOLL(\" 0x10 \",\t0,\t16LL,\t5, 0);\n+\tTEST_STRTOLL(\"+10\",\t16,\t16LL,\t3, 0);\n+\tTEST_STRTOLL(\"  +10 \",\t16,\t16LL,\t5, 0);\n+\tTEST_STRTOLL(\"+0x10\",\t16,\t16LL,\t5, 0);\n+\tTEST_STRTOLL(\"+0x10\",\t0,\t16LL,\t5, 0);\n+\tTEST_STRTOLL(\" +0x10 \",\t0,\t16LL,\t6, 0);\n+\tTEST_STRTOLL(\"-10\",\t16,\t-16LL,\t3, 0);\n+\tTEST_STRTOLL(\"  -10 \",\t16,\t-16LL,\t5, 0);\n+\tTEST_STRTOLL(\"-0x10\",\t16,\t-16LL,\t5, 0);\n+\tTEST_STRTOLL(\"-0x10\",\t0,\t-16LL,\t5, 0);\n+\tTEST_STRTOLL(\" -0x10 \",\t0,\t-16LL,\t6, 0);\n+\tTEST_STRTOLL(\"010\",\t16,\t16LL,\t3, 0);\n+\tTEST_STRTOLL(\"  010 \",\t16,\t16LL,\t5, 0);\n+\tTEST_STRTOLL(\"-010\",\t16,\t-16LL,\t4, 0);\n \n+\tTEST_STRTOLL(\"11\",\t8,\t9LL,\t2, 0);\n+\tTEST_STRTOLL(\"011\",\t8,\t9LL,\t3, 0);\n+\tTEST_STRTOLL(\"011\",\t0,\t9LL,\t3, 0);\n+\tTEST_STRTOLL(\"-11\",\t8,\t-9LL,\t3, 0);\n+\tTEST_STRTOLL(\"-011\",\t8,\t-9LL,\t4, 0);\n+\tTEST_STRTOLL(\"-011\",\t0,\t-9LL,\t4, 0);\n+\n+\tTEST_STRTOLL(\"011\",\t8,\t9LL,\t3, 0);\n+\tTEST_STRTOLL(\"011\",\t0,\t9LL,\t3, 0);\n+\tTEST_STRTOLL(\"-11\",\t8,\t-9LL,\t3, 0);\n+\tTEST_STRTOLL(\"-011\",\t8,\t-9LL,\t4, 0);\n+\tTEST_STRTOLL(\"-011\",\t0,\t-9LL,\t4, 0);\n+\n+\tTEST_STRTOLL(\"Text\",\t0,\t0LL,\t0, 0);\n+\n+\tTEST_STRTOLL(\"9223372036854775807\",\t10,\t9223372036854775807LL,\t19, 0);\n+\tTEST_STRTOLL(\"9223372036854775807\",\t0,\t9223372036854775807LL,\t19, 0);\n+\tTEST_STRTOLL(\"9223372036854775808\",\t0,\t9223372036854775807LL,\t19, ERANGE);\n+\tTEST_STRTOLL(\"9223372036854775808\",\t10,\t9223372036854775807LL,\t19, ERANGE);\n+\tTEST_STRTOLL(\"0x7FFFFFFFFFFFFFFF\",\t0,\t9223372036854775807LL,\t18, 0);\n+\tTEST_STRTOLL(\"0x7FFFFFFFFFFFFFFF\",\t16,\t9223372036854775807LL,\t18, 0);\n+\tTEST_STRTOLL(\"7FFFFFFFFFFFFFFF\",\t16,\t9223372036854775807LL,\t16, 0);\n+\tTEST_STRTOLL(\"0x8000000000000000\",\t0,\t9223372036854775807LL,\t18, ERANGE);\n+\tTEST_STRTOLL(\"0x8000000000000000\",\t16,\t9223372036854775807LL,\t18, ERANGE);\n+\tTEST_STRTOLL(\"80000000000000000\",\t16,\t9223372036854775807LL,\t17, ERANGE);\n+\tTEST_STRTOLL(\"0777777777777777777777\",\t0,\t9223372036854775807LL,\t22, 0);\n+\tTEST_STRTOLL(\"0777777777777777777777\",\t8,\t9223372036854775807LL,\t22, 0);\n+\tTEST_STRTOLL(\"777777777777777777777\",\t8,\t9223372036854775807LL,\t21, 0);\n+\tTEST_STRTOLL(\"01000000000000000000000\",\t0,\t9223372036854775807LL,\t23, ERANGE);\n+\tTEST_STRTOLL(\"01000000000000000000000\",\t8,\t9223372036854775807LL,\t23, ERANGE);\n+\tTEST_STRTOLL(\"1000000000000000000000\",\t8,\t9223372036854775807LL,\t22, ERANGE);\n+\n+\tTEST_STRTOLL(\"-9223372036854775808\",\t10,\t-9223372036854775807LL -1,\t20, 0);\n+\tTEST_STRTOLL(\"-9223372036854775808\",\t0,\t-9223372036854775807LL -1,\t20, 0);\n+\tTEST_STRTOLL(\"-9223372036854775809\",\t0,\t-9223372036854775807LL -1,\t20, ERANGE);\n+\tTEST_STRTOLL(\"-9223372036854775809\",\t10,\t-9223372036854775807LL -1,\t20, ERANGE);\n+\tTEST_STRTOLL(\"-0x8000000000000000\",\t0,\t-9223372036854775807LL -1,\t19, 0);\n+\tTEST_STRTOLL(\"-0x8000000000000000\",\t16,\t-9223372036854775807LL -1,\t19, 0);\n+\tTEST_STRTOLL(\"-8000000000000000\",\t16,\t-9223372036854775807LL -1,\t17, 0);\n+\tTEST_STRTOLL(\"-0x8000000000000001\",\t0,\t-9223372036854775807LL -1,\t19, ERANGE);\n+\tTEST_STRTOLL(\"-0x8000000000000001\",\t16,\t-9223372036854775807LL -1,\t19, ERANGE);\n+\tTEST_STRTOLL(\"-80000000000000001\",\t16,\t-9223372036854775807LL -1,\t18, ERANGE);\n+\tTEST_STRTOLL(\"-01000000000000000000000\",0,\t-9223372036854775807LL -1,\t24, 0);\n+\tTEST_STRTOLL(\"-01000000000000000000000\",8,\t-9223372036854775807LL -1,\t24, 0);\n+\tTEST_STRTOLL(\"-1000000000000000000000\",\t8,\t-9223372036854775807LL -1,\t23, 0);\n+\tTEST_STRTOLL(\"-01000000000000000000001\",0,\t-9223372036854775807LL -1,\t24, ERANGE);\n+\tTEST_STRTOLL(\"-01000000000000000000001\",8,\t-9223372036854775807LL -1,\t24, ERANGE);\n+\tTEST_STRTOLL(\"-1000000000000000000001\",\t8,\t-9223372036854775807LL -1,\t23, ERANGE);\n+\n \tprintf(\"success: strtoll\\n\");\n \treturn true;\n }\n \n static int test_strtoull(void)\n {\n-\tuint64_t v;\n-\n \tprintf(\"test: strtoull\\n\");\n \n-\tv = strtoull(\"15\", NULL, 10);\n-\tif (v != 15) {\n-\t\tprintf(\"failure: strtoull [\\n\"\n-\t\t       \"strtoull failed: %llu != 15\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+#define TEST_STRTOULL(str,base,res,diff,errnoo) TEST_STRTO_X(uint64_t,\"%llu\",strtoull,str,base,res,diff,errnoo)\n \n-\tv = strtoull(\"10\", NULL, 16);\n-\tif (v != 16) {\n-\t\tprintf(\"failure: strtoull [\\n\"\n-\t\t       \"strtoull hex failed: %llu != 16\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+\tTEST_STRTOULL(\"15\",\t10,\t15LLU,\t2, 0);\n+\tTEST_STRTOULL(\"  15\",\t10,\t15LLU,\t4, 0);\n+\tTEST_STRTOULL(\"15\",\t0,\t15LLU,\t2, 0);\n+\tTEST_STRTOULL(\" 15 \",\t0,\t15LLU,\t3, 0);\n+\tTEST_STRTOULL(\"+15\",\t10,\t15LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  +15\",\t10,\t15LLU,\t5, 0);\n+\tTEST_STRTOULL(\"+15\",\t0,\t15LLU,\t3, 0);\n+\tTEST_STRTOULL(\" +15 \",\t0,\t15LLU,\t4, 0);\n+\tTEST_STRTOULL(\"-15\",\t10,\t18446744073709551601LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  -15\",\t10,\t18446744073709551601LLU,\t5, 0);\n+\tTEST_STRTOULL(\"-15\",\t0,\t18446744073709551601LLU,\t3, 0);\n+\tTEST_STRTOULL(\" -15 \",\t0,\t18446744073709551601LLU,\t4, 0);\n+\tTEST_STRTOULL(\"015\",\t10,\t15LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  015\",\t10,\t15LLU,\t5, 0);\n+\tTEST_STRTOULL(\"015\",\t0,\t13LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  015\",\t0,\t13LLU,\t5, 0);\n+\tTEST_STRTOULL(\"0x15\",\t10,\t0LLU,\t1, 0);\n+\tTEST_STRTOULL(\"  0x15\",\t10,\t0LLU,\t3, 0);\n+\tTEST_STRTOULL(\"0x15\",\t0,\t21LLU,\t4, 0);\n+\tTEST_STRTOULL(\"  0x15\",\t0,\t21LLU,\t6, 0);\n \n-\tv = strtoull(\"11\", NULL, 2);\n-\tif (v != 3) {\n-\t\tprintf(\"failure: strtoull [\\n\"\n-\t\t       \"strtoull binary failed: %llu != 3\\n\"\n-\t\t       \"]\\n\",\n-\t\t       v);\n-\t\treturn false;\n-\t}\n+\tTEST_STRTOULL(\"10\",\t16,\t16LLU,\t2, 0);\n+\tTEST_STRTOULL(\"  10 \",\t16,\t16LLU,\t4, 0);\n+\tTEST_STRTOULL(\"0x10\",\t16,\t16LLU,\t4, 0);\n+\tTEST_STRTOULL(\"0x10\",\t0,\t16LLU,\t4, 0);\n+\tTEST_STRTOULL(\" 0x10 \",\t0,\t16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"+10\",\t16,\t16LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  +10 \",\t16,\t16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"+0x10\",\t16,\t16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"+0x10\",\t0,\t16LLU,\t5, 0);\n+\tTEST_STRTOULL(\" +0x10 \",\t0,\t16LLU,\t6, 0);\n+\tTEST_STRTOULL(\"-10\",\t16,\t-16LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  -10 \",\t16,\t-16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"-0x10\",\t16,\t-16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"-0x10\",\t0,\t-16LLU,\t5, 0);\n+\tTEST_STRTOULL(\" -0x10 \",\t0,\t-16LLU,\t6, 0);\n+\tTEST_STRTOULL(\"010\",\t16,\t16LLU,\t3, 0);\n+\tTEST_STRTOULL(\"  010 \",\t16,\t16LLU,\t5, 0);\n+\tTEST_STRTOULL(\"-010\",\t16,\t-16LLU,\t4, 0);\n \n+\tTEST_STRTOULL(\"11\",\t8,\t9LLU,\t2, 0);\n+\tTEST_STRTOULL(\"011\",\t8,\t9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"011\",\t0,\t9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"-11\",\t8,\t-9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"-011\",\t8,\t-9LLU,\t4, 0);\n+\tTEST_STRTOULL(\"-011\",\t0,\t-9LLU,\t4, 0);\n+\n+\tTEST_STRTOULL(\"011\",\t8,\t9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"011\",\t0,\t9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"-11\",\t8,\t-9LLU,\t3, 0);\n+\tTEST_STRTOULL(\"-011\",\t8,\t-9LLU,\t4, 0);\n+\tTEST_STRTOULL(\"-011\",\t0,\t-9LLU,\t4, 0);\n+\n+\tTEST_STRTOULL(\"Text\",\t0,\t0LLU,\t0, 0);\n+\n+\tTEST_STRTOULL(\"9223372036854775807\",\t10,\t9223372036854775807LLU,\t19, 0);\n+\tTEST_STRTOULL(\"9223372036854775807\",\t0,\t9223372036854775807LLU,\t19, 0);\n+\tTEST_STRTOULL(\"9223372036854775808\",\t0,\t9223372036854775808LLU,\t19, 0);\n+\tTEST_STRTOULL(\"9223372036854775808\",\t10,\t9223372036854775808LLU,\t19, 0);\n+\tTEST_STRTOULL(\"0x7FFFFFFFFFFFFFFF\",\t0,\t9223372036854775807LLU,\t18, 0);\n+\tTEST_STRTOULL(\"0x7FFFFFFFFFFFFFFF\",\t16,\t9223372036854775807LLU,\t18, 0);\n+\tTEST_STRTOULL(\"7FFFFFFFFFFFFFFF\",\t16,\t9223372036854775807LLU,\t16, 0);\n+\tTEST_STRTOULL(\"0x8000000000000000\",\t0,\t9223372036854775808LLU,\t18, 0);\n+\tTEST_STRTOULL(\"0x8000000000000000\",\t16,\t9223372036854775808LLU,\t18, 0);\n+\tTEST_STRTOULL(\"8000000000000000\",\t16,\t9223372036854775808LLU,\t16, 0);\n+\tTEST_STRTOULL(\"0777777777777777777777\",\t0,\t9223372036854775807LLU,\t22, 0);\n+\tTEST_STRTOULL(\"0777777777777777777777\",\t8,\t9223372036854775807LLU,\t22, 0);\n+\tTEST_STRTOULL(\"777777777777777777777\",\t8,\t9223372036854775807LLU,\t21, 0);\n+\tTEST_STRTOULL(\"01000000000000000000000\",0,\t9223372036854775808LLU,\t23, 0);\n+\tTEST_STRTOULL(\"01000000000000000000000\",8,\t9223372036854775808LLU,\t23, 0);\n+\tTEST_STRTOULL(\"1000000000000000000000\",\t8,\t9223372036854775808LLU,\t22, 0);\n+\n+\tTEST_STRTOULL(\"-9223372036854775808\",\t10,\t9223372036854775808LLU,\t20, 0);\n+\tTEST_STRTOULL(\"-9223372036854775808\",\t0,\t9223372036854775808LLU,\t20, 0);\n+\tTEST_STRTOULL(\"-9223372036854775809\",\t0,\t9223372036854775807LLU,\t20, 0);\n+\tTEST_STRTOULL(\"-9223372036854775809\",\t10,\t9223372036854775807LLU,\t20, 0);\n+\tTEST_STRTOULL(\"-0x8000000000000000\",\t0,\t9223372036854775808LLU,\t19, 0);\n+\tTEST_STRTOULL(\"-0x8000000000000000\",\t16,\t9223372036854775808LLU,\t19, 0);\n+\tTEST_STRTOULL(\"-8000000000000000\",\t16,\t9223372036854775808LLU,\t17, 0);\n+\tTEST_STRTOULL(\"-0x8000000000000001\",\t0,\t9223372036854775807LLU,\t19, 0);\n+\tTEST_STRTOULL(\"-0x8000000000000001\",\t16,\t9223372036854775807LLU,\t19, 0);\n+\tTEST_STRTOULL(\"-8000000000000001\",\t16,\t9223372036854775807LLU,\t17, 0);\n+\tTEST_STRTOULL(\"-01000000000000000000000\",0,\t9223372036854775808LLU,\t24, 0);\n+\tTEST_STRTOULL(\"-01000000000000000000000\",8,\t9223372036854775808LLU,\t24, 0);\n+\tTEST_STRTOULL(\"-1000000000000000000000\",8,\t9223372036854775808LLU,\t23, 0);\n+\tTEST_STRTOULL(\"-01000000000000000000001\",0,\t9223372036854775807LLU,\t24, 0);\n+\tTEST_STRTOULL(\"-01000000000000000000001\",8,\t9223372036854775807LLU,\t24, 0);\n+\tTEST_STRTOULL(\"-1000000000000000000001\",8,\t9223372036854775807LLU,\t23, 0);\n+\n+\tTEST_STRTOULL(\"18446744073709551615\",\t0,\t18446744073709551615LLU,\t20, 0);\n+\tTEST_STRTOULL(\"18446744073709551615\",\t10,\t18446744073709551615LLU,\t20, 0);\n+\tTEST_STRTOULL(\"18446744073709551616\",\t0,\t18446744073709551615LLU,\t20, ERANGE);\n+\tTEST_STRTOULL(\"18446744073709551616\",\t10,\t18446744073709551615LLU,\t20, ERANGE);\n+\tTEST_STRTOULL(\"0xFFFFFFFFFFFFFFFF\",\t0,\t18446744073709551615LLU,\t18, 0);\n+\tTEST_STRTOULL(\"0xFFFFFFFFFFFFFFFF\",\t16,\t18446744073709551615LLU,\t18, 0);\n+\tTEST_STRTOULL(\"FFFFFFFFFFFFFFFF\",\t16,\t18446744073709551615LLU,\t16, 0);\n+\tTEST_STRTOULL(\"0x10000000000000000\",\t0,\t18446744073709551615LLU,\t19, ERANGE);\n+\tTEST_STRTOULL(\"0x10000000000000000\",\t16,\t18446744073709551615LLU,\t19, ERANGE);\n+\tTEST_STRTOULL(\"10000000000000000\",\t16,\t18446744073709551615LLU,\t17, ERANGE);\n+\tTEST_STRTOULL(\"01777777777777777777777\",0,\t18446744073709551615LLU,\t23, 0);\n+\tTEST_STRTOULL(\"01777777777777777777777\",8,\t18446744073709551615LLU,\t23, 0);\n+\tTEST_STRTOULL(\"1777777777777777777777\",\t8,\t18446744073709551615LLU,\t22, 0);\n+\tTEST_STRTOULL(\"02000000000000000000000\",0,\t18446744073709551615LLU,\t23, ERANGE);\n+\tTEST_STRTOULL(\"02000000000000000000000\",8,\t18446744073709551615LLU,\t23, ERANGE);\n+\tTEST_STRTOULL(\"2000000000000000000000\",\t8,\t18446744073709551615LLU,\t22, ERANGE);\n+\n+\tTEST_STRTOULL(\"-18446744073709551615\",\t0,\t1LLU,\t\t\t\t21, 0);\n+\tTEST_STRTOULL(\"-18446744073709551615\",\t10,\t1LLU,\t\t\t\t21, 0);\n+\tTEST_STRTOULL(\"-18446744073709551616\",\t0,\t18446744073709551615LLU,\t21, ERANGE);\n+\tTEST_STRTOULL(\"-18446744073709551616\",\t10,\t18446744073709551615LLU,\t21, ERANGE);\n+\tTEST_STRTOULL(\"-0xFFFFFFFFFFFFFFFF\",\t0,\t1LLU,\t\t\t\t19, 0);\n+\tTEST_STRTOULL(\"-0xFFFFFFFFFFFFFFFF\",\t16,\t1LLU,\t\t\t\t19, 0);\n+\tTEST_STRTOULL(\"-FFFFFFFFFFFFFFFF\",\t16,\t1LLU,\t\t\t\t17, 0);\n+\tTEST_STRTOULL(\"-0x10000000000000000\",\t0,\t18446744073709551615LLU,\t20, ERANGE);\n+\tTEST_STRTOULL(\"-0x10000000000000000\",\t16,\t18446744073709551615LLU,\t20, ERANGE);\n+\tTEST_STRTOULL(\"-10000000000000000\",\t16,\t18446744073709551615LLU,\t18, ERANGE);\n+\tTEST_STRTOULL(\"-01777777777777777777777\",0,\t1LLU,\t\t\t\t24, 0);\n+\tTEST_STRTOULL(\"-01777777777777777777777\",8,\t1LLU,\t\t\t\t24, 0);\n+\tTEST_STRTOULL(\"-1777777777777777777777\",8,\t1LLU,\t\t\t\t23, 0);\n+\tTEST_STRTOULL(\"-02000000000000000000000\",0,\t18446744073709551615LLU,\t24, ERANGE);\n+\tTEST_STRTOULL(\"-02000000000000000000000\",8,\t18446744073709551615LLU,\t24, ERANGE);\n+\tTEST_STRTOULL(\"-2000000000000000000000\",8,\t18446744073709551615LLU,\t23, ERANGE);\n+\n \tprintf(\"success: strtuoll\\n\");\n \treturn true;\n }\n\n"}