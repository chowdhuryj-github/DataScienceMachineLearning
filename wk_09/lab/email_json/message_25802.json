{"category": "ham", "to_address": "Klaas-Jan Stol <parrotcode@gmail.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: PIR syntax methods ambiguity", "body": "Klaas-Jan Stol wrote:\n> hi,\n> IIRC (currently no pc around to check, but I realized this issue when\n> reading on objects pdd), calling a method in PIR can be done as follows:\n> \n> $P0.'someMethod'()\n> \n> but also:\n> \n> .local string meth  /* or maybe a pmc ?*/\n> meth = 'someMethod'\n> $P0.meth()\n\nThis is a long-standing IMCC issue and also affects subs. The PMC \nvariant also works:\n\n.local pmc meth\nmeth = # fetch the method object\n$P0.meth()\n\n> However, this looks like as if the object in $P0 has a method called \n> 'meth',\n> just as a class object has methods like 'inspect', and 'roles'. This is \n> imho\n> a bit unfortunate, it makes this syntax a bit ambiguous.\n> It gets tricky if you have some variable that goes by the same name, like\n> 'inspect', or 'roles'.\n\nAn annoyance I've been caught by before.\n\n> So, I would suggest to disallow arbitrary objects holding methods for this\n> syntax; only allow for strings as method names, or barenames if they are\n> known to be methods on the PMC.\n\nThat doesn't quite get around the problem, because you still have the \nambiguity, \"sometimes it's one thing and sometimes it's another\". And if \nbarenames are allowed for the methods that are defined, what if you \nwrite some code passing in a named variable containing a string method \nname, and then update the object to have a method of that same name?\n\n\n\nWe could entirely disallow barenames, so it's always either a quoted \nstring or a variable.\n\nBut even that doesn't solve the problem, because currently if the method \nname is a string PMC:\n\n   $P0 = new String\n   $P0 = \"hello\"\n   object.$P0()\n\nIt tries to treat the PMC as a method object and gives you the error \n\"invoke() not implemented in class 'String'\".\n\nWe need more distinctions in the PIR syntactic sugar. On the drive home \nfrom the last Portland Perl Mongers meeting I was kicking around \nsomething a little Perl 6-ish.\n\n   object.method() # bareword methodname\n   object~method() # string variable name (string or PMC)\n   object!method() # invoke PMC method object\n\nBut those differences are really hard to see. So, this lingers on as an \nunresolved question.\n\nAllison\n\n"}