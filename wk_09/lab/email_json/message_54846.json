{"category": "ham", "to_address": "simo <idra@samba.org>", "from_address": "\"Gerald (Jerry) Carter\" <jerry@samba.org>", "subject": "Re: Short HOWTO on using git for Samba development", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nsimo wrote:\n\n>> Using a DSCM forces individual developers to pull others\n>> trees (which can be automated via cron jobs).  But by the\n>> time the patches end up in the stable tree, they should\n>> be well tested and ready to go.\n> \n> The only downside of this is forgetting, missing parts.\n> Your local tree works, but the patch you send does not as \n> some of the premises are missing. But I guess this happen\n> seldom enough it is not a good reason to hold up using\n> a possibly better model.\n\nI think in some ways that this encourages looser couplings\nwhich is a good thing.  But if you are working closely\nwith another developer, you just pull changes from each\nother's tree.  The patch is finally proposed for upstream\nmerge when it is \"released\" by the developers.  Meaning that\nyou or who ever your are working with have tested it\nin the upstream tree and all checks out ok.\n\nI'll point out that with more of the maintainer model, I\nbelieve you'll see less upstream churn that will break\nlocal work.  Upstream will change of course, but not\non the daily basis it has now.  And the DSCM model forces\nfor public discussion of changes to be merged as all\nmerge requests must go through the public mailing lists.\n\n>> The other advantage of using something like git is that\n>> branch maintenance is reduced as individuals no longer\n>> have to checkin to multiple branches.  The SAMBA_3_0_*\n>> branches we have in svn will simply go away.  Of course,\n>> the patch release model doesn't go away, but the responsibility\n>> shifts.\n> \n> Uhmm how this is true? I mean, in some case the code need to be\n> different between 2 trees, who will adjust the patches \n> to apply cleanly ?\n\nIt's not automatic of course and requires coordination.\nBut the upstream trees become more stable due to the lack of\nneed for an experiemental upstream branch such as SAMBA_3_0.\nIn some ways, the upstream trees should always be stable.\nPatches for a release will have to be backported where as\nmost of the time now, major portions of the SAMBA_3_0\nand SAMBA_3_0_26 are identical and the multiple checkins\nis just a \"svn diff && (cd ,../other/tree && patch -p0)\"\n\n>>> This work flow model is ok if a few people work on a \n>>> very isolated part of a tree, or on some experimental\n>>> features, but if you need to collaborate it may\n>>> make things more annoying.\n>> I don't see any change here.  Instead of \"svn commit && svn up\",\n>> you have \"git commit && git pull\".  This would also allow for\n>> more of a maintainer model than we have now as well.\n> \n> Ahh so more people can commit on the same tree?\n> I didn't understand this, if that works then I guess we \n> could end up with the best mix between centralized and\n> distributed development, sounds interesting.\n\nSee comments above.  I really would like to see us move\naway from the central repository and break the distinction\nbetween those with svn commit access and those without.\n\n>> Anyways, I'm not proposing any changes at this time.  I plan\n>> to spend the next couple ofmonths using git for daily\n>> development.  If things go well, there's a string possibility\n>> I will bring it up for discussion around the CIFS workshop\n>> in Sept.\n> \n> Ok, but to really test the D in DSCM we need to be more \n> than one and test how the exchange of patches between\n> individual trees works. I will try it as well.\n\n\nThanks.\n\n\n\ncheers, jerry\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org\n\niD8DBQFGf+BuIR7qMdg1EfYRAtD8AKC7/vgx0qJQ/d2daUS1pjP2akK+DwCg3gEl\nbLOGO5Q3Mr8eSdoC0DrzDMM=\n=YU1a\n-----END PGP SIGNATURE-----\n\n"}