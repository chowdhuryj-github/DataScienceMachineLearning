{"category": "ham", "to_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "from_address": "Uwe Ligges <ligges@statistik.uni-dortmund.de>", "subject": "Re: [R] S4 object slot of type 'call'", "body": "\n\nProf Brian Ripley wrote:\n> On Mon, 28 May 2007, Uwe Ligges wrote:\n> \n>>\n>>\n>> Roberto Brunelli wrote:\n>>> I'm using an S4 object with a slot of type 'call': I would like to be \n>>> able to initialize\n>>> it with something like NULL or NA (indicating that there is no \n>>> information in the slot)\n>>> but the value should comply with the fact that it must be of type call.\n>>>\n>>> Is there any simple way to obtain this?\n>>\n>>\n>> This looks fine:\n>>\n>>\n>> > setClass(\"testCall\", representation = representation(call = \"call\"))\n>> [1] \"testCall\"\n>> > test <- new(\"testCall\")\n>> >\n>> > test\n>> An object of class \"testCall\"\n>> Slot \"call\":\n>> ``()\n>>\n>>\n>>\n>> Although, I found a bug while playing around:\n>>\n>> cl <- call(\"round\", 10.5)\n>> cl[] <- NULL\n>> cl\n>> ## CRASH using R-2.5.0 on Windows XP\n> \n> Yes, well, what did you think that would do?\n> \n> A call is a pairlist (a LANGSXP).  [] on a pairlist converts it to a \n> vector list, subsets, and for a LANGSXP converts back.  So you have\n> a 0-length call, and lots of code assumes that a LANGSXP has length at \n> least one, including deparse (used in printing).\n\nSure. While starting to think about the topic I typed the above -- and \nthen I thought it makes sense to report about the crash.\n\n\n> cl <- call(\"round\")\n> cl[1] <- list(NULL)\n> \n> might be what you were trying to get.\n\nYes, it is, thank you.\n\nUwe\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}