{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Mark Overmeer <mark@overmeer.net>", "subject": "Re: [svn:perl6-synopsis] r14421 - doc/trunk/design/syn", "body": "* Jonathan Scott Duff (duff@pobox.com) [070616 20:15]:\n> You mention OOP.  For Perl 5 we have a standard, if very general,\n> syntax and \"open\" semantics that have allowed people to implement OOP\n> in a variety of ways.  This was all well and good for a while until we\n> realized that there should be some more reasonable defaults (in both\n> syntax and semantics) for common operations in OOP.\n\nOOP in Perl5 has a mechanism, but not a standard in the use of those\nfeatures.  Full OO languages all choose a direction, but there are\nserious culture differences.  Perl uses them all.  There are many ways\nhow to instantiate an object, which is lot of fun as programmer but a\nhassle for \"the average\" programmer.  Within one program, you may very\nwell need to use different instantiation techniques...  Of course, this\ncould have been forseen (perl is not the first language which implements\nOO), and some advice on the convention to use could have avoided wild\ncollection of approaches we see now.\n\nThis is also why \"Perl Best Practices\" is a good book [shameless plug]\nalthough I would have welcomed it 11 years earlier.\n\n> I think it's the same thing with POD6. It's \"open\" enough that many\n> documentation systems can be built from it (man pages, books, magazines,\n> wikis, etc.) For some of those documentation systems we'll have nice\n> conventions and other conventions will grow as needed. If we find that\n> convention isn't enough in specific areas, ...\n\nWithout any doubt, there are thousands of documentation systems around.\nAt least ten percent of them are considered \"the best ever made\" by\nits developer or developer community.  Just by simple math, the chance\nthat the system developed really is the best is less than one percent.\n\nGladly, there are many areas of application for documentation systems,\nand there is a large variety in taste by the users.  So per user/usage,\na different doc-system can be the best.  Still, its a muddy terrain.\n\nPOD6 has the unique opportunity to become \"the best documentation system\"\nfor a specific large group of users: Perl programmers.  Tenth of thousands\nof people will use POD6 in their Perl6 programs, every day.\n\nIMO, any argument that POD6 is good because it can be used to write books\nor express complex mathematical expressions is really frightning me.\nDamian is correctly avoiding this, in his argument.  Is this another area\nwhere our community is trying to incorporate every thinkable feature in\nsome design?  And in the process, producing such a complex design that\nit deserves an extra volume in \"Programming Perl 6\"? (Next to the 1000\npage volumes for each of basic syntax, grammars, and OO).\n\nIMO, the needs for POD6 are much simpler: a way to document the features\nof the related Perl6 code, and smooth that into (parts of) manual pages.\nIf you write a book, than use pod6-to-docbook or pod6-to-pod, or whatever,\nto get some fragments in your some documentation system which is\nspecialized in books.\n\nEvery single complication added to the doc syntax will make it not\nto understand for a large percentage of the primar target community,\nas every teacher can tell you from experience.\n\n> Also, I don't think that documentation is being treated as\n> second-class at all.  It's being treated as first-class but different.\n\nIt's treated second-class in the Perl6 sense: the tools are not an\nintegral part of the Perl6 environemnt.\n\nWhen I create a program, it starts with a goal.  To reach that goal,\nI have to write some code, some docs, some tests.  For me, it is all\npart of the program.  I do not see one to be of more importance than\nthe other: all three are first-class sitizens in my program.   And what\nI really wish for is that those three work together in een KISS way;\nto achieve my goal in no time so I can drink (more) beer.  Yeh, on the\nsubject of tests,... :-b\n-- \n               MarkOv\n\n------------------------------------------------------------------------\n       Mark Overmeer MSc                                MARKOV Solutions\n       Mark@Overmeer.net                          solutions@overmeer.net\nhttp://Mark.Overmeer.net                   http://solutions.overmeer.net\n\n"}