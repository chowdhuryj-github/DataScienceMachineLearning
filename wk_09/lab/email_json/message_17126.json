{"category": "ham", "to_address": "\"charlie farinella\" <cfarinella@appropriatesolutions.com>", "from_address": "\"Tom Phoenix\" <rootbeer@redcat.com>", "subject": "Re: How can I respond to Net::FTP timeouts?", "body": "On 4/26/07, charlie farinella  wrote:\n\n> I have a script which uses Net::FTP to upload a backup file each night.\n> It sends me an email each night if it succeeds and a different email if\n> any of the methods fail.  This all works, but sometimes the ftp\n> connection times out and my script hangs without sending anything.\n>\n> I don't know how to catch the timeout and send the failure message when\n> that happens.\n\nI've never needed to do this, but I think you want to catch it with an\neval block. The code inside the block can timeout and die, but the\nmain program can continue after the block.\n\n> my $ftp = Net::FTP->new( \"hostname\", Debug => 1, Timeout => 240 )\n>   or send_fail(), die;\n>\n> $ftp->login( \"login info\" ) or send_fail(), die;\n> $ftp->put( \"filename\" ) or send_fail(), die;\n> $ftp->quit or send_fail(), die;\n>\n> $send_success;\n\nI think I'd structure it something like this untested code:\n\n  eval {\n    my $ftp = Net::FTP->new( \"hostname\", Debug => 1, Timeout => 240 )\n      or die \"making new FTP connection failed: $!\";\n\n    $ftp->login( \"login info\" ) or die \"ftp login failed\";\n    $ftp->put( \"filename\" ) or die \"ftp put failed\";\n    $ftp->quit or die \"ftp quit failed\";\n\n    send_success();\n  };  # end of eval block\n  if ($@) {\n    send_fail($@);  # include block's dying words\n    die;  # propagate error, possibly timeout\n  }\n\nHope this helps!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}