{"category": "ham", "to_address": "R-help <r-help@stat.math.ethz.ch>", "from_address": "Ranjan Maitra <maitra@iastate.edu>", "subject": "Re: [R] displaying intensity through opacity on an image (ONE\n\tSOLUTION)", "body": "Dear list, \n\nI did not get any response yet, but after looking around R and other things, I came up with something that works.\n\nBasically, I use the rgb() function in R [though I could also use the hsv() function] to help me with the colormap.\n\nAnyway, doing a help on rgb gives:\n\n\n     This function creates \"colors\" corresponding to the given\n     intensities (between 0 and 'max') of the red, green and blue\n     primudles.\n\n     An alpha transparency value can also be specified (0 means fully\n     transparent and 'max' means opaque). If 'alpha' is not specified,\n     an opaque colour is generated.\n\n     The names argument may be used to provide names for the colors.\n\n     The values returned by these functions can be used with a 'col='\n     specification in graphics functions or in 'par'.\n\nand later on.....\n\n     Semi-transparent colors ('0 < alpha < 1') are supported only on a\n     few devices: at the time of writing only on the 'pdf' and (on\n     MacOS X) 'quartz' devices.\n\nThe hsv() function has a similar point on semi-transparent colors.\n\n\nOk, looks promising: I don't use a Mac, and my potential journal does not accept .pdf, only .tiff or .eps, but we are not totally lost here.\n\nSo, I tried the following silly example in R:\n\n\n> pdf()\n\n> image( matrix(rep(1:5,5), nr = 5), col = gray(0:16/16)) \n\n> image( matrix(1:25, nr = 5), col = rgb(rep(1, 15), g=0, b=0, alpha =\n  rep(1:15)/15), add = T) # red with different opacities \n\n> q()\n\n(we are out of R).\n\nAnd then look at the pdf file created: by default it is Rplots.pdf.\n\nOK, now we can use gimp, simply to convert this to .eps. Alternatively on linux, the command pdftops and then psto epsi on it would also work.\n\nYippee! Isn't R wonderful??\n\nHope this helps: though others may have known about this before, I certainly did not know how to do this in R.\n\nBest wishes,\nRanjan\n\n\n\n\n\n\n\nOn Thu, 17 May 2007 19:16:18 -0500 Ranjan Maitra  wrote:\n\n> Dear colleagues,\n> \n> I have an image which I can display in the greyscale using image. On this image, for some pixels, which I know, I want to display their activity based on a third measure. One way to do that would be to color these differently, and use an opacity measure to display the third measure. An example of what I am trying to do is at:\n> \n> http://www.public.iastate.edu/~maitra/papers/mrm02.pdf\n> \n> page 26, for instance. There are two different kinds of voxels, given by greens and red. At the low end, there is transparency on the red scale and at the upper end there is opacity in the red and the green. \n> \n> A simpler example involving only one kind of voxels is on page 24 of the same paper. Either way, that figure was done using Matlab, but I was wondering how do i do this using R.\n> \n> Any suggestions, please?\n> \n> Many thanks and best wishes,\n> Ranjan \n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}