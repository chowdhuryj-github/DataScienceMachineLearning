{"category": "ham", "to_address": "r-announce@stat.math.ethz.ch", "from_address": "Peter Dalgaard <P.Dalgaard@biostat.ku.dk>", "subject": "[R] R 2.5.0 is released", "body": "I've rolled up R-2.5.0.tar.gz a short while ago. This is a development release which contains a number of new features. In particular:\n  - Object name completion by integration of package 'rcompletion' by     Deepayan Sarkar  - New recommended package 'codetools' by Luke Tierney  - New Rscript front-end, which enables shell-like R scripting\nalso, a number of mostly minor bugs have been fixed. See the full listof changes below.\nYou can get it (some time this evening) from\nhttp://cran.r-project.org/src/base/R-2/R-2.5.0.tar.gz\nor wait for it to be mirrored at a CRAN site nearer to you. In case of impatience, try http://www.biostat.ku.dk/~pd/R-release\nBinaries for various platforms will appear in due course.         For the R Core Team\n        Peter Dalgaard\nThese are the md5sums for the freshly created files, in case you wishto check that they are uncorrupted:a8efde35b940278de19730d326f58449  AUTHORSeb723b61539feef013de476e68b5c50a  COPYINGa6f89e2100d9b6cdffcea4f398e37343  COPYING.LIBaa6d06dd154bbde39b4d35f26068675d  FAQ70447ae7f2c35233d3065b004aa4f331  INSTALLb12ff4c900a49f0d7786d80e249934c9  NEWS88bbd6781faedc788a1cbd434194480c  ONEWS4f004de59e24a52d0f500063b4603bcb  OONEWSb9088663fc539c059acfaf19d6d90a69  R-2.5.0.tar.gzb9088663fc539c059acfaf19d6d90a69  R-latest.tar.gz433182754c05c2cf7a04ad0da474a1d0  README020479f381d5f9038dcb18708997f5da  RESOURCES4eaf8a3e428694523edc16feb0140206  THANKS\nThis is the relevant part of the NEWS file:\n\n\t\tCHANGES IN R VERSION 2.5.0\n\nUSER-VISIBLE CHANGES\n    o\tapropos(x) and find(x) now both only work for character 'x',\tand hence drop all non-standard evaluation behaviour.\n    o\tData frames can have 'automatic' row names which are not\tconverted to dimnames by as.matrix().  (Consequently, e.g.,\tt(.)  for such data frames has NULL column names.)  This\tchange leads to memory reductions in several places, but can\tbreak code which assumes character dimnames for data frames\tderived from matrices.\n\tNo existing R object is regarded as having 'automatic' row\tnames, and it may be beneficial to recreate such objects via\tread.table() or data.frame().\n    o\tUsing $ on an atomic vector now raises a warning, as does use\ton an S4 class for which a method has not been defined.\n    o\tThe Unix-alike readline terminal interface now does\tcommand-completion for R objects, incorporating the\tfunctionality formerly in package 'rcompletion' by Deepayan\tSarkar.  This can be disabled by setting the environment\tvariable R_COMPLETION=FALSE when starting R (e.g. in\t~/.Renviron).  (Note that when this is enabled, filename\tcompletion no longer works for file paths containing R\toperators such as '+' and '-'.)\n\nNEW FEATURES\n    o\tabbreviate() no longer has an 8191 byte limit on the size of\tstrings it can handle.\n    o\tabs(x) now returns integer for integer or logical arguments.\n    o\tapropos() has a new argument 'ignore.case' which defaults to\tTRUE, potentially matching more than previously, thanks to a\tsuggestion by Seth Falcon.\n    o\targs(), str() and print() now give the argument lists of primitive\tfunctions.\n    o\tas.matrix() gains the '...' argument that several packages have\tassumed it always had (and S-PLUS has).\n    o\tManipulation of integers as roman numerals via as.roman() in\tpackage utils.\n    o\tattr() no longer treats name = NA_character_ as meaning\tname = \"NA\".\n    o\tbinom.test() now allows a 'fuzz' for calculated integer values\tin its x and n arguments.\n    o\tboxplot(*, notch = TRUE) now warns when notches are outside\thinges; related to PR#7690.\n    o\tNew function callCC() providing a downward-only version of\tScheme's call with current continuation.\n    o\tcapabilities() now has a \"profmem\" entry indicating whether\tR has been compiled with memory profiling.\n    o\tcolnames<-() and rownames<-() now handle data frames explicitly,\tso calling colnames<- on a data frame no longer alters the\trepresentation of the row names.\n    o\tcommandArgs() has a new 'trailingOnly' argument to be used in\tconjunction with --args.\n    o\tcontour() now passes graphical parameters in '...' to axis()\tand box().\n    o\tNew data set 'crimtab' on Student(1908)'s 3000 criminals.\n    o\tcut.default() has a new argument 'ordered_result'.\n    o\t.deparseOpts() has two new options: \"keepNA\" to ensure that\tdifferent types (logical, integer, double, character and\tcomplex) of NAs are distinguished, and \"S_compatible\" to\tsuppress the use of R-specific features such as 123L and to\tdeparse integer values of a double vector with a trailing\tdecimal point.\n\tThe 'keepInteger' option now uses the suffix 'L' rather than\tas.integer() where possible (unless all entries are NA or\t\"S_compatible\" is also set).\n\tOther deparse options can now be added to \"all\" (which has not\tfor some time actually switched on all options).\n\tInteger sequences m:n are now deparsed in that form.\n    o\tdeparse() and dput() now include \"keepInteger\" and \"keepNA\" in\ttheir defaults for the 'control' argument.\n    o   detach() now takes another argument, unload, which indicates        whether or not to unload the package and then only cleans        up the S4 methods if the package successfully unloads.\n    o\tThere are new constants NA_integer_, NA_real_, NA_complex_ and\tNA_character_ to denote NAs of those types, and they will be\tused in deparsing in place of as.integer(NA) etc unless\t.deparseOpts() includes \"S_compatible\".\n    o\tdev.print() now recognizes 'screen devices' as all those with\tan enabled display list, rather than a hard-coded set.\n    o\tObjects of class \"difftime\" are now handled more flexibly. The\tunits of such objects can now be accessed via a units()\tfunction, which also has a replacement form, and there are\tconversion methods to and from numeric, which also allow the\tspecification of units.\t Objects of this class can also be\tstored in data frames now.  A format() method has been added,\tand the print method was revised.\n    o\tNew function environmentName() to give the print name of\tenvironments such as \"namespace:base\".\tThis is now used by str().\n    o\tNew function env.profile() provides R level access to summary\tstatistics on environments.  In a related patch, new.env()\tnow allows the user to specify an initial size for a hashed\tenvironment.\n    o\tfile() can read the X11 clipboard selection as \"X11_clipboard\"\ton suitable X11-using systems.\n    o\tfile(\"stdin\") is now recognized, and refers to the process's\t'stdin' file stream whereas stdin() refers to the console.\tThese may differ, for example for a GUI console, an embedded\tapplication of R or if --file= has been used.\n    o\tfile_test() is now also available in package utils.\t(It is now private in package tools.)\n    o\tfile.show() gains an 'encoding' argument.\n    o\tNew functions formatUL() and formatOL() in package utils for\tformatting unordered (itemize) and ordered (enumerate) lists.\n    o\tThe statistics reported when gcinfo(TRUE) are now of the amounts\tused (in Mb) and not of the amounts free (which are not really\trelevant when there are no hard limits, only gc trigger points).\n    o\tNew function get_all_vars() to retrieve all the\t(untransformed) variables that the default method of\tmodel.frame() would use to create the model frame.\n    o\tinteraction() has a new argument 'lex.order'.\n    o   initialize() (in methods) now tries to be smarter about        updating the new instance in place, thereby reducing        copying.\n    o\tinstall.packages(dependencies = NA) is a new default, which is\tto install essential dependencies when installing from\trepositories to a single library.  As a result of this change,\tupdate.packages() will install any new dependencies of the\tpackages it is updating (alongside the package in the same\tlibrary tree).\n\tIf 'lib' is not specified or is specified of length one and\tthe chosen location is not a writable directory,\tinstall.packages() offers to create a personal library\tdirectory for you if one does not already exist, and to\tinstall there.\n    o\tis.atomic, is.call, is.character, is.complex, is.double (== is.real),\tis.environment, is.expression, is.function, is.integer,\tis.list, is.logical, is.null, is.object, is.pairlist,\tis.recursive, is.single and is.symbol (== is.name) are no\tlonger internally S3 generic, nor can S4 methods be written\tfor them.\n\tThe \"factor\" methods of is.integer and is.numeric have been\treplaced by internal code.\n    o\tAdded is.raw() for completeness.\n    o\tl10n_info() also reports if the current locale is Latin-1.\n    o\tlevels<-(), names() and names<-() now dispatch internally for\tefficiency and so no longer have S3 default methods.\n    o\t.libPaths() now does both tilde and glob expansion.\n    o\tFunctions lm(), glm() loess(), xtabs() and the default method\tof model.frame() coerce their 'formula'\targument (if supplied)\tto a formula.\n    o\tmax(), min() and range() now work with character vectors.\n    o\tmessage() has a new argument 'appendLF' to handle messages\twith and without newlines.  There is a new message class\tpackageStartupMessage() that can be suppressed separately.\n    o\tA new function, method.skeleton() writes a skeleton version of        a call to setMethod() to a file, with correct arguments and        format, given the name of the function and the method signature.\n    o\tmode<- and storage.mode<- do slightly less copying.\n    o\tnls.control(* , printEval = FALSE, warnOnly = FALSE) are two new\toptions to help better analyze (non-)convergence of nls(),\tthanks to Kate Mullen.\n\tnls() and summary(nls()) now contain more information and also\tprint information about convergence.\n    o\toptions(device = ) now accepts a function object as well as\tthe name of a function.\n    o\tpdf() supports new values for 'paper' of \"US\" (same as\t\"letter\"), \"a4r\" and \"USr\" (the latter two meaning rotated to\tlandscape).  postscript() also accepts paper = \"US\".\n    o\tpersp() now respects the graphical pars 'cex.axis', 'cex.lab',\t'font.axis' and 'font.lab'.\n    o\tNew faster internal functions pmax.int() and pmin.int() for\tinputs which are atomic vectors without classes (called by\tpmax/pmin where applicable).\n\tpmin/pmax are now more likely to work with classed objects:\tthey work with POSIXlt datetimes, for example.\n    o\tpostscript() now by default writes grey colors (including black\tand white) via 'setgray', which gives more widely acceptable\toutput.\t There are options to write pure RGB, CMYK or gray via\tthe new argument 'colormodel'.\n    o\trbind.data.frame() now ignores all zero-row inputs, as well as\tzero-column inputs (which it used to do, undocumented).\t This\tis because read.table() can create zero-row data frames with\tNULL columns, and those cannot be extended.\n    o\treadChar() and writeChar() can now work with a raw vector.\n    o\tread.table(), write.table() and allies have been moved to package\tutils.\n    o\trgb() now accepts the red, green and blue components in a\tsingle matrix or data frame.\n    o\tNew utility function RShowDoc() in package 'utils' to find and\tdisplay manuals and other documentation files.\n    o\tNew .row_names_info() utility function finds the number of rows\tefficiently for data frames; consequently, dim.data.frame()\thas become very fast for large data frames with 'automatic'\trow names.\n    o\tRSiteSearch() now also allows to search postings of the 'R-devel'\tmailing list.\n    o\tscreeplot() is now (S3) generic with a default method, thanks\tto a patch from Gavin Simpson.\n    o\tExperimental 'verbose' argument for selectMethod().  Might be\treplaced later by a better interface for method selection\tinspection.\n    o\tAdded links to source files to the parsing routines, so that\tsource() can now echo the original source and comments (rather\tthan deparsing).  This affects example() and Sweave() as well.\n    o\tstack() and unstack() have been moved to package utils.\n    o\tstrptime() now sets the \"tzone\" attribute on the result if\ttz != \"\".\n    o\tstr.default() typically prints fewer entries of logical vectors.\n    o\tThe RweaveLatex driver for Sweave() now supports two new\toptions: expand=FALSE, to show chunk references in the output,\tand concordance=TRUE, to output the concordance between input\tand output lines.\n    o\tsystem() now takes the same set of arguments on all platforms,\twith those which are not applicable being ignored with a\twarning.  Unix-alikes gain 'input' and 'wait', and Windows\tgains 'ignore.stderr'.\n    o\tsystem.time() and proc.time() now return an object of class\t\"proc_time\" with a print() method that returns a POSIX-like\tformat with names.\n    o\tSys.getenv() has a new argument 'unset' to allow unset and set\tto \"\" to be distinguished (if the OS does).  The results of\tSys.getenv() are now sorted (by name).\n    o\tNew function Sys.glob(), a wrapper for the POSIX.2 function\tglob(3) to do wildcard expansion (on systems which have it,\tplus an emulation on Windows).\n    o\tSys.setenv() is a new (and preferred) synonym for Sys.putenv().\tThe internal C code uses the POSIX-preferred 'setenv' rather\tthan 'putenv' where the former is available.\n    o\tNew function Sys.unsetenv() to remove environment variables\t(on systems where unsetenv is implemented or putenv can remove\tvariables, such as on Windows).\n    o\ttext(), mtext(), strheight(), strwidth(), legend(), axis(),\ttitle(), pie(), grid.text() and textGrob() all attempt to\tcoerce non-language annotation objects (in the sense of is.object)\tto character vectors.  This is principally intended to cover\tfactors and POSIXt and Date objects, and is done via the\tnew utility function as.graphicsAnnot() in package grDevices.\n    o\ttcltk:tk_select.list() now chooses the width to fit the widest item.\n    o\t{re,un}tracemem() are now primitives for efficiency and so\tmigrate from 'utils' to 'base'.\n    o\tunion(), interect(), setdiff() and setequal() now coerce their\targuments to be vectors (and they were documented only to\tapply to vectors).\n    o\tuniroot() now works if the zero occurs at one of the ends of\tthe interval (suggestion of Tamas Papp).\n    o\tThere is a new function View() for viewing matrix-like\tobjects in a spreadsheet, which can be left up whilst R is\trunning.\n    o\tNew function withVisible() allows R level access to the\tvisibility flag.\n    o\tzip.file.extract() has been moved to package utils.\n\n    o\tA few more cases of subassignment work, e.g. [] <- \tand [] <- , with suitable coercion of the LHS.\n    o\tThere is a warning if \\ is used unnecessarily in a string when\tbeing parsed, e.g. \"\\.\" where probably \"\\\\.\" was intended.\t(\"\\.\" is valid, but the same as \".\".)  Thanks to Bill Dunlap\tfor the suggestion.\n    o\tIntroduced the suffix L for integer literals to create\tinteger rather than numeric values, e.g. 100L, 0x10L, 1e2L.\n    o\tSet the parser to give verbose error messages in case of\tsyntax errors.\n    o\tThe class \"LinearMethodsList\" has been extended and will be\tused to create list versions of methods, derived from the\tmethods tables (environments).\tThe older recursive\t\"MethodsList\" class will be deprecated (by the release of\t2.5.0 if possible).\n    o\tThere are more flexible ways to specify the default library\tsearch path.  In addition to R_LIBS and .Library, there are\t.Library.site (defaults to R_HOME/site-library) and\tR_LIBS_USER (defaults to a platform- and version-specific\tdirectory in ~/R).  See ?.libPaths for details.\n    o\tLAPACK has been updated to version 3.1.0.  This should cause\tonly small changes to the output, but do remember that the sign\tof eigenvectors (and principal components) is indeterminate.\n    o\tPCRE has been updated to version 7.0.\n    o\tSeveral functions handle row names more efficiently:\n\t- read.table() and read.DIF() make use of integer row names\t  where appropriate, and avoid at least one copy in assigning\t  them.\n\t- data.frame() and the standard as.data.frame() methods avoid\t  generating long dummy row names and then discarding them.\n\t- expand.grid() and merge() generate compact 'automatic' row\t  names.\n\t- data.matrix() and as.matrix.data.frame() have a new argument\t  'rownames.force' that by default drops 'automatic' row names.\n    o\t[i, j] is substantially more memory-efficient when\tonly a small part of the data frame is selected, especially\twhen (part of) a single column is selected.\n    o\tCommand-line R (and Rterm.exe under Windows) accepts the options\t'-f filename', '--file=filename' and '-e expression' to follow\tother script interpreters.  These imply --no-save unless\t--save is specified.\n    o\tInvalid bytes in character strings in an MBCS now deparse/print\tin the form \"\\xc1\" rather than \"\", which means they can be\tparsed/scanned.\n    o\tPrinting functions (without source attributes) and expressions\tnow preserves integers (using the L suffix) and NAs (using\tNA_real_ etc where necessary).\n    o\tThe 'internal' objects .helpForCall, .tryHelp and topicName are\tno longer exported from 'utils'.\n    o\tThe internal regex code has been upgraded to glibc 2.5 (from 2.3.6).\n    o\tText help now attempts to display files which have an \\encoding\tsection in the specified encoding via file.show().\n    o\tR now attempts to keep track of character strings which are\tknown to be in Latin-1 or UTF-8 and print or plot them\tappropriately in other locales.\t This is primarily intended\tto make it possible to use data in Western European languages\tin both Latin-1 and UTF-8 locales.  Currently scan(),\tread.table(), readLines(), parse() and source() allow\tencodings to be declared, and console input in suitable\tlocales is also recognized.\n\tNew function Encoding() can read or set the declared encodings\tfor a character vector.\n    o\tThere have been numerous performance improvements to the data\teditor on both Windows and X11.\t In particular, resizing the\twindow works much better on X11.\n\nDEPRECATED & DEFUNCT\n    o\tsymbol.C() and symbol.For() are defunct, and have been replaced\tby wrappers that give a warning.\n    o\tCalling a builtin function with an empty argument is now always\tan error.\n    o\tThe autoloading of ts() is defunct.\n    o\tThe undocumented reserved word GLOBAL.ENV has been removed.\t(It was yet another way to get the value of the symbol\t.GlobalEnv.)\n    o\tThe deprecated behaviour of structure() in adding a class when\tspecifying with \"tsp\" or \"levels\" attributes is now defunct.\n    o\tunix() is now finally defunct, having been deprecated for\tat least seven years.\n    o\tSys.putenv() is now deprecated in favour of Sys.setenv(),\tfollowing the POSIX recommendation.\n    o\tBuilding R with --without-iconv is deprecated.\n    o\tUsing $ on an atomic vector is deprecated (it was previously\tvalid and documented to return NULL).\n    o\tThe use of storage.mode<- for other than standard types (and        in particular for value \"single\") is deprecated: use mode<-\tinstead.\n\nINSTALLATION\n    o\tA suitable iconv (e.g. from glibc or GNU libiconv) is\trequired.  For 2.5.x only you can build R without it by\tconfiguring using --without-iconv.\n    o\tThere is support again for building on AIX (tested on 5.2 and 5.3)\tthanks to Ei-ji Nakama.\n    o\tAutoconf 2.60 or later is used to create 'configure'.  This\tmakes a number of small changes, and incorporates the changes\tto the detection of a C99-compliant C compiler backported for\t2.4.1.\n    o\tDetection of a Java development environment was added such that\tpackages don't need to provide their own Java detection. Newly\tadded make variables are JAVAC, JAVAH, JAR and JAVA_CPPFLAGS.\n\tR CMD javareconf was updated to look for the corresponding\tJava tools as well.\n\tIn addition, Java detection honors user-supplied environment\tvariables JAVA_CPPFLAGS, JAVA_LIBS and JAVA_LD_LIBRARY_PATH.\n    o\tAdded workaround for reported non-POSIX sh on OSF1.  (PR#9375)\n    o\t'make install-strip' now works, stripping the executables and\talso the shared libraries and modules on platforms where\t'libtool' knows how to do so.\n    o\tBuilding R as a shared library and standalone nmath now\tinstalls pkg-config files 'libR.pc' and 'libRmath.pc' respectively.\n    o\tAdded test for insufficiently complete implementation of sigaction.\n\nC-LEVEL FACILITIES\n    o\tFunctions str2type, type2char and type2str are now available in\tRinternals.h.\n    o\tAdded support for Objective C in R and packages (if available).\n    o\tR_ParseVector() has a new 4th argument 'SEXP srcfile' allowing\tsource references to be attached to the returned expression list.\n    o\tAdded ptr_R_WriteConsoleEx callback which allows consoles to\tdistinguish between regular output and errors/warnings.\tTo ensure backward compatibility it is only used if\tptr_R_WriteConsole is set to NULL.\n\nUTILITIES\n    o\tAdditional Sweave() internal functions are exported to help\twriting new drivers, and RweaveLatexRuncode() is now created\tusing a helper function (all from a patch submitted by Seth\tFalcon).\n    o\tThe following additional flags are accessible from R CMD config:\tOBJC, OBJCFLAGS, JAR, JAVA, JAVAC, JAVAH, JAVA_HOME, JAVA_LIBS\tand JAVA_CPPFLAGS.\n    o\tR CMD build now takes the package name from the DESCRIPTION\tfile and not from the directory.  (PR#9266)\n    o\tcheckS3methods() (and hence R CMD check) now checks agreement\twith primitive internal generics, and checks for additional\targuments in methods where the generic does not have a '...'\targument.\n\tcodoc() now knows the argument lists of primitive functions.\n    o\tR CMD INSTALL and R CMD REMOVE now use as the default library\t(if -l is not specified) the first library that would be used\tif R were run in the current environment (and they run R to\tfind it).\n    o\tThere is a new front-end Rscript which can be used for #!\tscripts and similar tasks.  See help(\"Rscript\") and 'An\tIntroduction to R' for further details.\n    o\tR CMD BATCH (not Windows) no longer prepends\t'invisible(options(echo = TRUE))' to the input script.  This\twas the default unless --slave is specified and the latter is\tno longer overridden.\n\tOn all OSes it makes use of the -f argument to R, so\tfile(\"stdin\") can be used from BATCH scripts.\n\tOn all OSes it reports proc.time() at the end of the script\tunless q() is called with options to inhibit this.\n    o\tR CMD INSTALL now prepends the installation directory (if\tspecified) to the library search path.\n    o\tPackage installation now re-encodes R files and the NAMESPACE\tfile if the DESCRIPTION file specifies an encoding, and sets\tthe encoding used for reading files in preparing for\tLazyData.  This will help if a package needs to be used in\t(say) both latin1 and UTF-8 locales on different systems.\n    o\tR CMD check now reports on non-ASCII strings in datasets.\t(These are a portability issue, which can be alleviated by\tmarking their encoding: see 'Writing R Extensions'.)\n    o\tRdiff now converts CRLF endings in the target file, and\tconverts UTF-8 single quotes in either to ASCII quotes.\n    o\tNew recommended package 'codetools' by Luke Tierney provides\tcode-analysis tools.  This can optionally be used by 'R CMD\tcheck' to detect problems, especially symbols which are not\tvisible.\n    o\tR CMD config now knows about LIBnn .\n    o\tNew recommended package 'rcompgen' by Deepayan Sarkar\tprovides support for command-line completion under the Unix\tterminal interface (provided readline is enabled) and the\tWindows Rgui and Rterm front ends.\n\nBUG FIXES\n    o\tgc() can now report quantities of 'Vcells' in excess of 16Gb on\t64-bit systems (rather than reporting NA).\n    o\tAssigning class \"factor\" to an object now requires it has\tinteger (and not say double) codes.\n    o\tstructure() ensures that objects with added class \"factor\" have\tinteger codes.\n    o\tThe \"formula\" and \"outer\" attributes of datasets 'ChickWeight',\t'CO2', 'DNase', 'Indometh', 'Loblolly', 'Orange' and 'Theoph'\tnow have an empty environment and not the environment used to\tdump the datasets in the package.\n    o\tDataset 'Seatbelts' now correctly has class c(\"mts\", \"ts\").\n    o\tstr() now labels classes on data frames more coherently.\n    o\tSeveral 'special' primitives and .Internals could return\tinvisibly if the evaluation of an argument led to the\tvisibility flag being turned off.  These included\tas.character(), as.vector(), call(), dim(), dimnames(),\tlapply(), rep(), seq() and seq_along().  Others (e.g. dput()\tand print.default()) could return visibly when this was not\tintended.\n    o\tSeveral primitives such as dim() were not checking the number\tof arguments supplied before method dispatch.\n    o\tTracing of primitive functions has been corrected.  It should\tnow be the case that tracing either works or is not allowed\tfor all primitive functions. (Problems remain if you make a\tprimitive into a generic when it is being traced.  To be fixed\tlater.)\n    o\tmax.col() now omits infinite values in determining the\trelative tolerance.\n    o\tR CMD Sweave and R CMD Stangle now respond to --help and --version\tlike other utilities.\n    o\t.libPaths() adds only existing directories (as it was\tdocumented to, but could add non-directories).\n    o\tsetIs() and setClassUnion() failed to find some existing\tsubclasses and produced spurious warnings, now fixed.\n    o\tdata.frame() ignored 'row.names' for 0-column data frames, and\tno longer treats an explicit row.names=NULL differently from\tthe default value.\n    o\tidentical() looked at the internal structure of the\t'row.names' attribute, and not the value visible at R level.\n    o\tabline(reg) now also correctly works with intercept-only lm\tmodels, and abline() warns more when it's called illogically.\n    o\twarning() was truncating messages at\tgetOption(\"warning.length\") - 1 (not as documented), with no\tindication.  It now appends '[... truncated]'.\n    o\tStangle/Sweave were throwing spurious warnings if options\t'result' or 'strip.white' were unset.\n    o\tall.equal() was ignoring 'check.attributes' for list and\texpression targets, and checking only attributes on raw vectors.\tLogical vectors were being compared as if they were numeric,\t(with a mean difference being quoted).\n    o\tCalculating the number of significant digits in a number was\titself subject to rounding errors for digits >= 16.  The\tcalculation has been changed to err on the side of slightly\ttoo few significant digits (but still at least 15) rather than\tfar too many.  (An example is print(1.001, digits=16).)\n    o\tunlink() on Unix-alikes failed for paths containing spaces.\n    o\tsubstr() and friends treated NA 'start' or 'stop' incorrectly.\n    o\tmerge(x, y, all.y = TRUE) would sometimes incorrectly return\tlogical columns for columns only in y when there were no\tcommon rows.\n    o\tread.table(fn, col.names=) on an empty file returned NULL\tcolumns, rather than logical(0) columns (which is what results\tfrom reading a file with just a header).\n    o\tgrid.[xy]axis(label=logical(0)) failed.\n    o\texpression() was unnecessarily duplicating arguments.\n    o\tas.expression() returned a single-element expression\tvector, which was not compatible with S: it now copies lists\telement-by-element.\n    o\tsupsmu(periodic = TRUE) could segfault.  (PR#9502, detection\tand patch by Bill Dunlap.)\n    o\tpmax/pmin called with only logical arguments did not coerce to\tnumeric, although they were documented to do so (as max/min\tdo).\n    o\tmethods() did not know that cbind() and rbind() are internally\tgeneric.\n    o\tdim(x) <- NULL removed the names of x, but this was always\tundocumented.  It is not clear that it is desirable but it is\tS-compatible and relied on, so is now documented.\n    o\twhich(x, arr.ind = TRUE) did not return a matrix (as\tdocumented) if 'x' was an array of length 0.\n    o\tC-level duplicate() truncated CHARSXPs with embedded nuls.\n    o\tPartial matching of attributes was not working as documented\tin some cases if there were more than two partial matches or\tif \"names\" was involved.\n    o\tdata(package=character(0)) was not looking in ./data as\tdocumented.\n    o\tsummary.mlm() failed if some response names were \"\" (as can\teasily happen if cbind() is used).\n    o\tThe postscript() and pdf() drivers shared an encoding list\tbut used slightly different formats.  This caused problems if\tboth were used with the same non-default encoding in the same\tsession.  (PR#9517)\n    o\tThe data editor was not allowing Inf, NA and NaN to be entered\tin numerical columns.  It was intended to differentiate\tbetween empty cells and NAs, but did not do so: it now does\tso for strings.\n    o\tsupsmu() could segfault if all cases had non-finite values.\t(PR#9519)\n    o\tplnorm(x, lower.tail=FALSE) was returning the wrong tail for\tx <= 0.  (PR#9520)\n    o\twhich.min() would not report a minimum of +Inf, and\tanalogously for which.max().  (PR#9522)\n    o\t'R CMD check' could fail with an unhelpful error when checking\tRd files for errors if there was only one file and that had a\tserious error.  (PR#9459)\n    o\ttry() has been reimplemented using tryCatch() to solve two\tproblems with the original implementation: (i) try() would run\tnon-NULL options(\"error\") expressions for errors within a try, and\t(ii) try() would catch user interrupts.\n    o\tstr(obj) could fail when obj contained a dendrogram.\n    o\tUsing [, ] <- NULL failed (PR#9565)\n    o\tchoose(n, k) could return non-integer values for integer n and\tsmall k on some platforms.\n    o\tnclass.scott(x) and nclass.FD(x) no longer return NaN when var(x)\tor IQR(x) (respectively) is zero.\n\thist() now allows breaks = 1 (which the above patch will\treturn), but not breaks = Inf (which gave an obscure error).\n    o\tstrptime(\"%j\") now also works for the first days of Feb-Dec.\t(PR#9577)\n    o\twrite.table() now recovers better if 'file' is an unopened\tconnection.  (It used to open it for both the column names and\tthe data.)\n    o\tFixed bug in mosaicplot(sort=) introduced by undocumented\tchange in R 2.4.1 (changeset r39655).\n    o\tcontr.treatment(n=0) failed with a spurious error message.\t(It remains an error.)\n    o\tas.numeric() was incorrectly documented: it is identical to\tas.double.\n    o\tjitter(rep(-1, 3)) gave NaNs. (PR#9580)\n    o\tmax.col() was not random for a row of zeroes. (PR#9542)\n    o\tansari.test(conf.int=TRUE, exact=FALSE) failed.\n    o\ttrace() now works on S3 registered methods, by modifying the\tversion in the S3 methods table.\n    o\trep(length=1, each=0) segfaulted.\n    o\tpostscript() could overflow a buffer if used with a long\t'command' argument.\n    o\tThe internal computations to copy complete attribute lists did\tnot copy the flag marking S4 objects, so the copies no longer\tbehaved like S4 objects.\n    o\tThe C code of nlminb() was altering a variable without\tduplicating it.  (This did not affect nlminb() but would have\tif the code was called from a different wrapper.)\n    o\tsmooth(kind = \"3RS3R\") (the current default) used .C(DUP =\tFALSE) but altered its input argument.  (This was masked by\tduplication in as.double.)\n    o\tThe signature for the predefined S4 method for as.character()\twas missing '...' .\n    o\treadBin() could read beyond the end of the vector\twhen size-changing was involved.\n    o\tThe C entry point PrintValue (designed to emulate auto-printing)\twould not find show() for use on S4 objects, and did not have\tthe same search path (for show(), print() and print() methods)\tas auto-printing.  Also, auto-printing and print() of S4\tobjects would fail to find 'show' if the methods namespace was\tloaded but the package was not attached (or otherwise not in\tthe search path).\n    o\tprint() (and auto-printing) now recognize S4 objects even when\t'methods' is not loaded, and print a short summary rather than\tdump the internal structure.\n    o\tSweave and Stangle had problems due to partial matching of code\tchunk names when run with split=TRUE.\n    o\tinstall.packages() on a source package now ensures that\tR CMD INSTALL sees the same library search path as\tinstall.packages() did when computing dependencies.\n    o\tdensity() now ensures its 'y' values are non-negative. (PR#8876)\n    o\tis.finite() and is.infinite() (and many other primitives)\tare not internally generic and so do not support S4 methods,\twhich can no longer be set. (PR#7951)\n    o\tnls(algorithm = \"port\") now accepts a list 'start' argument,\tas for the other methods (and as documented).\n    o\tStandard errors from the \"ar\" method of predict() could be\twrong for the last p predictions for models near\tnon-stationarity. (PR#9614)\n\n\n\n--    O__  ---- Peter Dalgaard             \u00d8ster Farimagsgade 5, Entr.B  c/ /'_ --- Dept. of Biostatistics     PO Box 2099, 1014 Cph. K (*) \\(*) -- University of Copenhagen   Denmark          Ph:  (+45) 35327918~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)                  FAX: (+45) 35327907\n_______________________________________________R-announce@stat.math.ethz.ch mailing listhttps://stat.ethz.ch/mailman/listinfo/r-announce\n______________________________________________R-help@stat.math.ethz.ch mailing listhttps://stat.ethz.ch/mailman/listinfo/r-helpPLEASE do read the posting guide http://www.R-project.org/posting-guide.htmland provide commented, minimal, self-contained, reproducible code.\n\n"}