{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r23141 - in branches/SAMBA_4_0/source/winbind: .", "body": "Author: abartlet\nDate: 2007-05-25 11:59:52 +0000 (Fri, 25 May 2007)\nNew Revision: 23141\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23141\n\nLog:\nUse the finddcs() library call rather than a winbind-specific version.\n\n(I created finddcs() from the winbind code a while back, so this\nfinishes that work)\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/winbind/wb_dom_info.c\n   branches/SAMBA_4_0/source/winbind/wb_init_domain.c\n   branches/SAMBA_4_0/source/winbind/wb_server.h\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/winbind/wb_dom_info.c\n===================================================================\n--- branches/SAMBA_4_0/source/winbind/wb_dom_info.c\t2007-05-25 11:39:43 UTC (rev 23140)\n+++ branches/SAMBA_4_0/source/winbind/wb_dom_info.c\t2007-05-25 11:59:52 UTC (rev 23141)\n@@ -30,16 +30,14 @@\n #include \"librpc/gen_ndr/ndr_irpc.h\"\n #include \"librpc/gen_ndr/samr.h\"\n #include \"lib/messaging/irpc.h\"\n+#include \"libcli/finddcs.h\"\n \n struct get_dom_info_state {\n \tstruct composite_context *ctx;\n-\tstruct wbsrv_service *service;\n-\tstruct nbtd_getdcname r;\n \tstruct wb_dom_info *info;\n };\n \n static void get_dom_info_recv_addrs(struct composite_context *ctx);\n-static void get_dom_info_recv_dcname(struct irpc_request *ireq);\n \n struct composite_context *wb_get_dom_info_send(TALLOC_CTX *mem_ctx,\n \t\t\t\t\t       struct wbsrv_service *service,\n@@ -48,8 +46,7 @@\n {\n \tstruct composite_context *result, *ctx;\n \tstruct get_dom_info_state *state;\n-\tstruct nbt_name name;\n-\n+\tstruct dom_sid *dup_sid;\n \tresult = composite_create(mem_ctx, service->task->event_ctx);\n \tif (result == NULL) goto failed;\n \n@@ -58,24 +55,18 @@\n \tstate->ctx = result;\n \tresult->private_data = state;\n \n-\tstate->service = service;\n-\n \tstate->info = talloc_zero(state, struct wb_dom_info);\n \tif (state->info == NULL) goto failed;\n \n-\tstate->info->name = talloc_strdup(state->info, domain_name);\n-\tif (state->info->name == NULL) goto failed;\n-\tstate->info->sid = dom_sid_dup(state->info, sid);\n-\tif (state->info->sid == NULL) goto failed;\n+\tdup_sid = dom_sid_dup(state, sid);\n+\tif (dup_sid == NULL) goto failed;\n \n-\tmake_nbt_name(&name, state->info->name, NBT_NAME_LOGON);\n-\n-\tctx = resolve_name_send(&name, result->event_ctx,\n-\t\t\t\tlp_name_resolve_order());\n+\tctx = finddcs_send(mem_ctx, domain_name, NBT_NAME_LOGON, \n+\t\t\t   dup_sid, lp_name_resolve_order(), service->task->event_ctx, \n+\t\t\t   service->task->msg_ctx);\n \tif (ctx == NULL) goto failed;\n \n-\tctx->async.fn = get_dom_info_recv_addrs;\n-\tctx->async.private_data = state;\n+\tcomposite_continue(state->ctx, ctx, get_dom_info_recv_addrs, state);\n \treturn result;\n \n  failed:\n@@ -88,48 +79,12 @@\n \tstruct get_dom_info_state *state =\n \t\ttalloc_get_type(ctx->async.private_data,\n \t\t\t\tstruct get_dom_info_state);\n-\tstruct server_id *nbt_servers;\n-\tstruct irpc_request *ireq;\n \n-\tstate->ctx->status = resolve_name_recv(ctx, state->info,\n-\t\t\t\t\t       &state->info->dc_address);\n+\tstate->ctx->status = finddcs_recv(ctx, state->info,\n+\t\t\t\t\t  &state->info->num_dcs,\n+\t\t\t\t\t  &state->info->dcs);\n \tif (!composite_is_ok(state->ctx)) return;\n \n-\tnbt_servers = irpc_servers_byname(state->service->task->msg_ctx,\n-\t\t\t\t\t  state, \"nbt_server\");\n-\tif ((nbt_servers == NULL) || (nbt_servers[0].id == 0)) {\n-\t\tcomposite_error(state->ctx, NT_STATUS_NO_LOGON_SERVERS);\n-\t\treturn;\n-\t}\n-\n-\tstate->r.in.domainname = state->info->name;\n-\tstate->r.in.ip_address = state->info->dc_address;\n-\tstate->r.in.my_computername = lp_netbios_name();\n-\tstate->r.in.my_accountname = talloc_asprintf(state, \"%s$\",\n-\t\t\t\t\t\t     lp_netbios_name());\n-\tif (composite_nomem(state->r.in.my_accountname, state->ctx)) return;\n-\tstate->r.in.account_control = ACB_WSTRUST;\n-\tstate->r.in.domain_sid = dom_sid_dup(state, state->info->sid);\n-\tif (composite_nomem(state->r.in.domain_sid, state->ctx)) return;\n-\n-\tireq = irpc_call_send(state->service->task->msg_ctx, nbt_servers[0],\n-\t\t\t      &dcerpc_table_irpc, DCERPC_NBTD_GETDCNAME,\n-\t\t\t      &state->r, state);\n-\tcomposite_continue_irpc(state->ctx, ireq, get_dom_info_recv_dcname,\n-\t\t\t\tstate);\n-}\n-\n-static void get_dom_info_recv_dcname(struct irpc_request *ireq)\n-{\n-\tstruct get_dom_info_state *state =\n-\t\ttalloc_get_type(ireq->async.private,\n-\t\t\t\tstruct get_dom_info_state);\n-\n-\n-\tstate->ctx->status = irpc_call_recv(ireq);\n-\tif (!composite_is_ok(state->ctx)) return;\n-\n-\tstate->info->dc_name = talloc_steal(state->info, state->r.out.dcname);\n \tcomposite_done(state->ctx);\n }\n \n\nModified: branches/SAMBA_4_0/source/winbind/wb_init_domain.c\n===================================================================\n--- branches/SAMBA_4_0/source/winbind/wb_init_domain.c\t2007-05-25 11:39:43 UTC (rev 23140)\n+++ branches/SAMBA_4_0/source/winbind/wb_init_domain.c\t2007-05-25 11:59:52 UTC (rev 23141)\n@@ -31,6 +31,7 @@\n #include \"librpc/gen_ndr/ndr_netlogon.h\"\n #include \"librpc/gen_ndr/ndr_lsa_c.h\"\n #include \"librpc/gen_ndr/ndr_samr_c.h\"\n+#include \"libcli/libcli.h\"\n \n #include \"libcli/auth/credentials.h\"\n #include \"libcli/security/security.h\"\n@@ -83,9 +84,10 @@\n {\n \tstruct dcerpc_binding *binding;\n \tNTSTATUS status;\n+\n \t/* Make a binding string */\n \t{\n-\t\tchar *s = talloc_asprintf(state, \"ncacn_np:%s\", state->domain->info->dc_name);\n+\t\tchar *s = talloc_asprintf(state, \"ncacn_np:%s\", state->domain->dc_name);\n \t\tif (s == NULL) return NULL;\n \t\tstatus = dcerpc_parse_binding(state, s, &binding);\n \t\ttalloc_free(s);\n@@ -95,8 +97,8 @@\n \t}\n \n \t/* Alter binding to contain hostname, but also address (so we don't look it up twice) */\n-\tbinding->target_hostname = state->domain->info->dc_name;\n-\tbinding->host = state->domain->info->dc_address;\n+\tbinding->target_hostname = state->domain->dc_name;\n+\tbinding->host = state->domain->dc_address;\n \n \t/* This shouldn't make a network call, as the mappings for named pipes are well known */\n \tstatus = dcerpc_epm_map_binding(binding, binding, table, state->service->task->event_ctx);\n@@ -130,6 +132,17 @@\n \tstate->domain->info = talloc_reference(state->domain, dom_info);\n \tif (state->domain->info == NULL) goto failed;\n \n+\t/* Caller should check, but to be safe: */\n+\tif (dom_info->num_dcs < 1) {\n+\t\tgoto failed;\n+\t}\n+\t\n+\t/* For now, we just pick the first.  The next step will be to\n+\t * walk the entire list.  Also need to fix finddcs() to return\n+\t * the entire list */\n+\tstate->domain->dc_name = dom_info->dcs[0].name;\n+\tstate->domain->dc_address = dom_info->dcs[0].address;\n+\n \t/* Create a credentials structure */\n \tstate->domain->schannel_creds = cli_credentials_init(state->domain);\n \tif (state->domain->schannel_creds == NULL) goto failed;\n@@ -377,7 +390,7 @@\n \tcomposite_nomem(state->domain->ldap_conn, state->ctx);\n \n \tldap_url = talloc_asprintf(state, \"ldap://%s/\",\n-\t\t\t\t   state->domain->info->dc_address);\n+\t\t\t\t   state->domain->dc_address);\n \tcomposite_nomem(ldap_url, state->ctx);\n \n \tctx = ldap_connect_send(state->domain->ldap_conn, ldap_url);\n@@ -394,7 +407,7 @@\n \tif (NT_STATUS_IS_OK(state->ctx->status)) {\n \t\tstate->domain->ldap_conn->host =\n \t\t\ttalloc_strdup(state->domain->ldap_conn,\n-\t\t\t\t      state->domain->info->dc_name);\n+\t\t\t\t      state->domain->dc_name);\n \t\tstate->ctx->status =\n \t\t\tldap_bind_sasl(state->domain->ldap_conn,\n \t\t\t\t       state->domain->schannel_creds);\n\nModified: branches/SAMBA_4_0/source/winbind/wb_server.h\n===================================================================\n--- branches/SAMBA_4_0/source/winbind/wb_server.h\t2007-05-25 11:39:43 UTC (rev 23140)\n+++ branches/SAMBA_4_0/source/winbind/wb_server.h\t2007-05-25 11:59:52 UTC (rev 23141)\n@@ -49,9 +49,8 @@\n \tconst char *dns_name;\n \tconst struct dom_sid *sid;\n \n-\tconst char *dc_name;\n-\tconst char *dc_dns_name;\n-\tconst char *dc_address;\n+\tint num_dcs;\n+\tstruct nbt_dc_name *dcs;\n };\n \n struct wbsrv_domain {\n@@ -59,6 +58,10 @@\n \n \tstruct wb_dom_info *info;\n \n+\t/* Details for the server we are currently talking to */\n+\tconst char *dc_address;\n+\tconst char *dc_name;\n+\n \tstruct dcerpc_pipe *lsa_pipe;\n \tstruct policy_handle *lsa_policy_handle;\n \tstruct dcerpc_binding *lsa_binding;\n\n"}