{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Dr.Ruud\" <rvtol+news@isolution.nl>", "subject": "Re: the Database is not updated", "body": "Aruna Goke schreef:\n\n\nMissing:\n\n#!/usr/bin/perl\n  use strict;\n  use warnings;\n\n\n> open FH, '<', $fn or die \"The File $fn Could not be opened: $! \\n\";\n> while()\n> {\n> #split the file into variables\n\nIt is not about the file but about the (or each) row.\nMaybe something more like:\n\n     # each row contains comma separated values, split them up into an\narray\n\n>    @x[0,1,2,3,4,5,6]=split/,/;\n\nThere are several ways to rewrite this. I think I would go for:\n\n     my @x = (split /,/)[0..6];\n\nor if I would know that after element 6 there are not multi-megabytes of\ndata:\n\n     my @x = split /,/, $_, 8;  # put the remainder in $x[7]\n\nor even just\n\n     my @x = split /,/;\n\n> $x[6]=~s/\\s//gm;\n> $sth->execute($x[2], $x[5], $x[4], $x[6]) or die \"Error executing\n> <<$sth->{Statement}>> with values @x[2,5,4,6]: $DBI::errstr\";\n> }\n\nThat needs reformatting, to make your code easier to read. Whitespace is\ncheap.\n\n      $x[6] = ~s/^[[:blank:]]+//;  # ltrim\n\n      $sth->execute( @x[ 2, 5, 4, 6 ] )\n          or die \"Error executing <<$sth->{Statement}>>\"\n               . \" with values '@x[2, 5, 4, 6]': $DBI::errstr\";\n  }\n\n-- \nAffijn, Ruud\n\n\"Gewoon is een tijger.\"\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}