{"category": "ham", "to_address": "\"yitzle\" <yitzle@users.sourceforge.net>", "from_address": "\"Johnson, Reginald \\(GTI\\)\" <reggie_johnson@ml.com>", "subject": "RE: Return value from subroutine", "body": "Yes, that solves my problem. I could've looked at the hold day and would\nnot have caught it.\nI guess a hash would be more efficient, but since that's not an issue\nfor me at this time I'll stick with what I got.\nThanks!\n\n-----Original Message-----\nFrom: anexpert@gmail.com [mailto:anexpert@gmail.com] On Behalf Of yitzle\nSent: Wednesday, April 18, 2007 10:24 AM\nTo: Johnson, Reginald (GTI)\nCc: beginners@perl.org\nSubject: Re: Return value from subroutine\n\n\n>                                 return = \"Audit Volume\";\nYou have\nreturn = \"thingy\";\nYou want\nreturn \"thingy\";\n\n\n>                         if ($_ eq /AVI/) {\n>                                 return = \"Audit Volume\";\n>                         }\n>                         elsif (/BKP/) {\n>                                 return = \"BACKUP\";\n>                         }\n\n\nCan be shortened to:\n\nreturn \"Audit Volume\" if ( /^AVI$/ );\nreturn \"BACKUP\" if ( /^BKP$/ );\n\n(I wonder if \" if(eq /AVI/)\" would work...)\n\nYou may want to consider setting up a hash and just accessing the\nelement.\n\n(code untested)\n%lookup = {\n   BKP => \"BACKUP,\n   AVI => \"Audit Volume\"\n};\n\nThen replace the $temp_proc variable with $lookup {\"AVI\"}\n--------------------------------------------------------\n\nIf you are not an intended recipient of this e-mail, please notify the sender, delete it and do not read, act upon, print, disclose, copy, retain or redistribute it. Click here for important additional terms relating to this e-mail.     http://www.ml.com/email_terms/\n--------------------------------------------------------\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}