{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 233: nicer command parsing in ctdb_control in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 233\nrevision-id: tridge@samba.org-20070502033455-ouk4wh3sa9nmzdjv\nparent: tridge@samba.org-20070502032903-a3t17i17j9qsq4uq\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Wed 2007-05-02 13:34:55 +1000\nmessage:\n  nicer command parsing in ctdb_control\nmodified:\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-05-02 03:29:03 +0000\n+++ b/tools/ctdb_control.c\t2007-05-02 03:34:55 +0000\n@@ -839,10 +839,33 @@\n \tint opt;\n \tconst char **extra_argv;\n \tint extra_argc = 0;\n-\tint ret;\n+\tint ret, i;\n \tpoptContext pc;\n \tstruct event_context *ev;\n \tconst char *control;\n+\tstatic struct {\n+\t\tconst char *name;\n+\t\tint (*fn)(struct ctdb_context *, int, const char **);\n+\t} commands[] = {\n+\t\t{ \"process-exists\", control_process_exists },\n+\t\t{ \"status\", control_status },\n+\t\t{ \"statusreset\", control_status_reset },\n+\t\t{ \"getvnnmap\", control_getvnnmap },\n+\t\t{ \"getdbmap\", control_getdbmap },\n+\t\t{ \"getnodemap\", control_getnodemap },\n+\t\t{ \"catdb\", control_catdb },\n+\t\t{ \"cpdb\", control_cpdb },\n+\t\t{ \"setvnnmap\", control_setvnnmap },\n+\t\t{ \"setdmaster\", control_setdmaster },\n+\t\t{ \"cleardb\", control_cleardb },\n+\t\t{ \"getrecmode\", control_getrecmode },\n+\t\t{ \"setrecmode\", control_setrecmode },\n+\t\t{ \"ping\", control_ping },\n+\t\t{ \"debug\", control_debug },\n+\t\t{ \"debuglevel\", control_debuglevel },\n+\t\t{ \"recover\", control_recover },\n+\t\t{ \"attach\", control_attach },\n+\t};\n \n \tpc = poptGetContext(argv[0], argc, argv, popt_options, POPT_CONTEXT_KEEP_FIRST);\n \n@@ -877,43 +900,14 @@\n \t\texit(1);\n \t}\n \n-\tif (strcmp(control, \"process-exists\") == 0) {\n-\t\tret = control_process_exists(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"status\") == 0) {\n-\t\tret = control_status(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"statusreset\") == 0) {\n-\t\tret = control_status_reset(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"getvnnmap\") == 0) {\n-\t\tret = control_getvnnmap(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"getdbmap\") == 0) {\n-\t\tret = control_getdbmap(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"getnodemap\") == 0) {\n-\t\tret = control_getnodemap(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"catdb\") == 0) {\n-\t\tret = control_catdb(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"cpdb\") == 0) {\n-\t\tret = control_cpdb(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"setvnnmap\") == 0) {\n-\t\tret = control_setvnnmap(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"setdmaster\") == 0) {\n-\t\tret = control_setdmaster(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"cleardb\") == 0) {\n-\t\tret = control_cleardb(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"getrecmode\") == 0) {\n-\t\tret = control_getrecmode(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"setrecmode\") == 0) {\n-\t\tret = control_setrecmode(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"ping\") == 0) {\n-\t\tret = control_ping(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"debug\") == 0) {\n-\t\tret = control_debug(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"debuglevel\") == 0) {\n-\t\tret = control_debuglevel(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"recover\") == 0) {\n-\t\tret = control_recover(ctdb, extra_argc-1, extra_argv+1);\n-\t} else if (strcmp(control, \"attach\") == 0) {\n-\t\tret = control_attach(ctdb, extra_argc-1, extra_argv+1);\n-\t} else {\n+\tfor (i=0;i<ARRAY_SIZE(commands);i++) {\n+\t\tif (strcmp(control, commands[i].name) == 0) {\n+\t\t\tret = commands[i].fn(ctdb, extra_argc-1, extra_argv+1);\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+\tif (i == ARRAY_SIZE(commands)) {\n \t\tprintf(\"Unknown control '%s'\\n\", control);\n \t\texit(1);\n \t}\n\n"}