{"category": "ham", "to_address": "Peter Dalgaard <p.dalgaard@biostat.ku.dk>", "from_address": "Michael Frumin <michael@frumin.net>", "subject": "Re: [R] Lookups in R", "body": "i wish it were that simple.  unfortunately the logic i have to do on \neach transaction is substantially more complicated, and involves \nreferencing the existing values of the user table through a number of \nconditions.\n\nany other thoughts on how to get better-than-linear performance time?  \nis there a recommended binary searching/sorting (i.e. BTree) module that \nI could use to maintain my own index?\n\nthanks,\nmike\n\nPeter Dalgaard wrote:\n> mfrumin wrote:\n>> Hey all; I'm a beginner++ user of R, trying to use it to do some \n>> processing\n>> of data sets of over 1M rows, and running into a snafu.  imagine that my\n>> input is a huge table of transactions, each linked to a specif user \n>> id.  as\n>> I run through the transactions, I need to update a separate table for \n>> the\n>> users, but I am finding that the traditional ways of doing a table \n>> lookup\n>> are way too slow to support this kind of operation.\n>>\n>> i.e:\n>>\n>> for(i in 1:1000000) {\n>>    userid = transactions$userid[i];\n>>    amt = transactions$amounts[i];\n>>    users[users$id == userid,'amt'] += amt;\n>> }\n>>\n>> I assume this is a linear lookup through the users table (in which \n>> there are\n>> 10's of thousands of rows), when really what I need is O(constant \n>> time), or\n>> at worst O(log(# users)).\n>>\n>> is there any way to manage a list of ID's (be they numeric, string, \n>> etc) and\n>> have them efficiently mapped to some other table index?\n>>\n>> I see the CRAN package for SQLite hashes, but that seems to be going \n>> a bit\n>> too far.\n>>   \n> Sometimes you need a bit of lateral thinking. I suspect that you could \n> do it like this:\n>\n> tbl <- with(transactions, tapply(amount, userid, sum))\n> users$amt <- users$amt + tbl[users$id]\n>\n> one catch is that there could be users with no transactions, in which \n> case you may need to replace userid by factor(userid, \n> levels=users$id). None of this is tested, of course.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}