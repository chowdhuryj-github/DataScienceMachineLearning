{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22675 - in branches: SAMBA_3_0/source/modules\n\tSAMBA_3_0/source/nsswitch SAMBA_3_0/source/rpc_client\n\tSAMBA_3_0/source/rpc_server SAMBA_3_0_25/source/modules\n\tSAMBA_3_0_25/source/nsswitch SAMBA_3_0_25/source/rpc_client\n\tSAMBA_3_0_25/source/rpc_server SAMBA_3_0_26/source/modules\n\tSAMBA_3_0_26/source/nsswitch SAMBA_3_0_26/source/rpc_client\n\tSAMBA_3_0_26/source/rpc_server", "body": "Author: jra\nDate: 2007-05-04 22:01:26 +0000 (Fri, 04 May 2007)\nNew Revision: 22675\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22675\n\nLog:\nSimo's patch for 0 size allocation. Still need\nto examine parse_misc.c fix.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/modules/vfs_afsacl.c\n   branches/SAMBA_3_0/source/nsswitch/idmap.c\n   branches/SAMBA_3_0/source/nsswitch/winbindd_async.c\n   branches/SAMBA_3_0/source/rpc_client/cli_svcctl.c\n   branches/SAMBA_3_0/source/rpc_server/srv_lsa_nt.c\n   branches/SAMBA_3_0_25/source/modules/vfs_afsacl.c\n   branches/SAMBA_3_0_25/source/nsswitch/idmap.c\n   branches/SAMBA_3_0_25/source/nsswitch/winbindd_async.c\n   branches/SAMBA_3_0_25/source/rpc_client/cli_svcctl.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_lsa_nt.c\n   branches/SAMBA_3_0_26/source/modules/vfs_afsacl.c\n   branches/SAMBA_3_0_26/source/nsswitch/idmap.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_async.c\n   branches/SAMBA_3_0_26/source/rpc_client/cli_svcctl.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_lsa_nt.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/modules/vfs_afsacl.c\n===================================================================\n--- branches/SAMBA_3_0/source/modules/vfs_afsacl.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0/source/modules/vfs_afsacl.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -616,7 +616,7 @@\n \tuid_to_sid(&owner_sid, sbuf.st_uid);\n \tgid_to_sid(&group_sid, sbuf.st_gid);\n \n-\tif (num_aces) {\n+\tif (afs_acl->num_aces) {\n \t\tnt_ace_list = TALLOC_ARRAY(mem_ctx, SEC_ACE, afs_acl->num_aces);\n \n \t\tif (nt_ace_list == NULL)\n\nModified: branches/SAMBA_3_0/source/nsswitch/idmap.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/idmap.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0/source/nsswitch/idmap.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -1025,17 +1025,16 @@\n \tDEBUG(10, (\"Query backends to map sids->ids\\n\"));\n \n \t/* split list per domain */\n-\n-\tif (num_domains) {\n-\t\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(dom_ids);\n-\t\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(counters);\n-\t} else {\n-\t\tdom_ids = NULL;\n-\t\tcounters = NULL;\n+\tif (num_domains == 0) {\n+\t\tDEBUG(1, (\"No domains available?\\n\"));\n+\t\treturn NT_STATUS_UNSUCCESSFUL;\n \t}\n \n+\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n+\tIDMAP_CHECK_ALLOC(dom_ids);\n+\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\tIDMAP_CHECK_ALLOC(counters);\n+\n \t/* partition the requests by domain */\n \n \tfor (i = 0; ids[i]; i++) {\n\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_async.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_async.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_async.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -273,6 +273,11 @@\n \n \tDEBUG(3, (\"[%5lu]: sids to unix ids\\n\", (unsigned long)state->pid));\n \n+\tif (state->request.extra_len == 0) {\n+\t\tDEBUG(0, (\"Invalid buffer size!\\n\"));\n+\t\treturn WINBINDD_ERROR;\n+\t}\n+\n \tsids = (DOM_SID *)state->request.extra_data.data;\n \tnum = state->request.extra_len / sizeof(DOM_SID);\n \n\nModified: branches/SAMBA_3_0/source/rpc_client/cli_svcctl.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_client/cli_svcctl.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0/source/rpc_client/cli_svcctl.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -209,8 +209,12 @@\n \t\treturn out.status;\n \t\t\n \t/* pull out the data */\n-\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n-\t\treturn WERR_NOMEM;\n+\tif (out.returned) {\n+\t\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n+\t\t\treturn WERR_NOMEM;\n+\t} else {\n+\t\tservices = NULL;\n+\t}\n \t\t\n \tfor ( i=0; imem_ctx, LSA_TRANS_NAME_ENUM2);\n \tsids = TALLOC_ARRAY(p->mem_ctx, const DOM_SID *, num_sids);\n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n@@ -845,12 +849,10 @@\n \t\treturn status;\n \t}\n \n-\tif (num_sids > 0) {\n-\t\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n-\t\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n-\t\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n-\t\t\treturn NT_STATUS_NO_MEMORY;\n-\t\t}\n+\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n+\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n+\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n \tfor (i=0; inum_aces) {\n \t\tnt_ace_list = TALLOC_ARRAY(mem_ctx, SEC_ACE, afs_acl->num_aces);\n \n \t\tif (nt_ace_list == NULL)\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/idmap.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/idmap.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_25/source/nsswitch/idmap.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -1025,17 +1025,16 @@\n \tDEBUG(10, (\"Query backends to map sids->ids\\n\"));\n \n \t/* split list per domain */\n-\n-\tif (num_domains) {\n-\t\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(dom_ids);\n-\t\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(counters);\n-\t} else {\n-\t\tdom_ids = NULL;\n-\t\tcounters = NULL;\n+\tif (num_domains == 0) {\n+\t\tDEBUG(1, (\"No domains available?\\n\"));\n+\t\treturn NT_STATUS_UNSUCCESSFUL;\n \t}\n \n+\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n+\tIDMAP_CHECK_ALLOC(dom_ids);\n+\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\tIDMAP_CHECK_ALLOC(counters);\n+\n \t/* partition the requests by domain */\n \n \tfor (i = 0; ids[i]; i++) {\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/winbindd_async.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/winbindd_async.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_25/source/nsswitch/winbindd_async.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -273,6 +273,11 @@\n \n \tDEBUG(3, (\"[%5lu]: sids to unix ids\\n\", (unsigned long)state->pid));\n \n+\tif (state->request.extra_len == 0) {\n+\t\tDEBUG(0, (\"Invalid buffer size!\\n\"));\n+\t\treturn WINBINDD_ERROR;\n+\t}\n+\n \tsids = (DOM_SID *)state->request.extra_data.data;\n \tnum = state->request.extra_len / sizeof(DOM_SID);\n \n\nModified: branches/SAMBA_3_0_25/source/rpc_client/cli_svcctl.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_client/cli_svcctl.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_25/source/rpc_client/cli_svcctl.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -209,8 +209,12 @@\n \t\treturn out.status;\n \t\t\n \t/* pull out the data */\n-\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n-\t\treturn WERR_NOMEM;\n+\tif (out.returned) {\n+\t\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n+\t\t\treturn WERR_NOMEM;\n+\t} else {\n+\t\tservices = NULL;\n+\t}\n \t\t\n \tfor ( i=0; imem_ctx, LSA_TRANS_NAME_ENUM2);\n \tsids = TALLOC_ARRAY(p->mem_ctx, const DOM_SID *, num_sids);\n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n@@ -846,12 +850,10 @@\n \t\treturn status;\n \t}\n \n-\tif (num_sids > 0) {\n-\t\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n-\t\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n-\t\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n-\t\t\treturn NT_STATUS_NO_MEMORY;\n-\t\t}\n+\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n+\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n+\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n \tfor (i=0; inum_aces) {\n \t\tnt_ace_list = TALLOC_ARRAY(mem_ctx, SEC_ACE, afs_acl->num_aces);\n \n \t\tif (nt_ace_list == NULL)\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/idmap.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/idmap.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_26/source/nsswitch/idmap.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -1025,17 +1025,16 @@\n \tDEBUG(10, (\"Query backends to map sids->ids\\n\"));\n \n \t/* split list per domain */\n-\n-\tif (num_domains) {\n-\t\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(dom_ids);\n-\t\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n-\t\tIDMAP_CHECK_ALLOC(counters);\n-\t} else {\n-\t\tdom_ids = NULL;\n-\t\tcounters = NULL;\n+\tif (num_domains == 0) {\n+\t\tDEBUG(1, (\"No domains available?\\n\"));\n+\t\treturn NT_STATUS_UNSUCCESSFUL;\n \t}\n \n+\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n+\tIDMAP_CHECK_ALLOC(dom_ids);\n+\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\tIDMAP_CHECK_ALLOC(counters);\n+\n \t/* partition the requests by domain */\n \n \tfor (i = 0; ids[i]; i++) {\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_async.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_async.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_async.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -273,6 +273,11 @@\n \n \tDEBUG(3, (\"[%5lu]: sids to unix ids\\n\", (unsigned long)state->pid));\n \n+\tif (state->request.extra_len == 0) {\n+\t\tDEBUG(0, (\"Invalid buffer size!\\n\"));\n+\t\treturn WINBINDD_ERROR;\n+\t}\n+\n \tsids = (DOM_SID *)state->request.extra_data.data;\n \tnum = state->request.extra_len / sizeof(DOM_SID);\n \n\nModified: branches/SAMBA_3_0_26/source/rpc_client/cli_svcctl.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_client/cli_svcctl.c\t2007-05-04 19:44:30 UTC (rev 22674)\n+++ branches/SAMBA_3_0_26/source/rpc_client/cli_svcctl.c\t2007-05-04 22:01:26 UTC (rev 22675)\n@@ -209,8 +209,12 @@\n \t\treturn out.status;\n \t\t\n \t/* pull out the data */\n-\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n-\t\treturn WERR_NOMEM;\n+\tif (out.returned) {\n+\t\tif ( !(services = TALLOC_ARRAY( mem_ctx, ENUM_SERVICES_STATUS, out.returned )) ) \n+\t\t\treturn WERR_NOMEM;\n+\t} else {\n+\t\tservices = NULL;\n+\t}\n \t\t\n \tfor ( i=0; imem_ctx, LSA_TRANS_NAME_ENUM2);\n \tsids = TALLOC_ARRAY(p->mem_ctx, const DOM_SID *, num_sids);\n \tref = TALLOC_ZERO_P(p->mem_ctx, DOM_R_REF);\n@@ -846,12 +850,10 @@\n \t\treturn status;\n \t}\n \n-\tif (num_sids > 0) {\n-\t\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n-\t\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n-\t\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n-\t\t\treturn NT_STATUS_NO_MEMORY;\n-\t\t}\n+\tnames->name = TALLOC_ARRAY(names, LSA_TRANS_NAME2, num_sids);\n+\tnames->uni_name = TALLOC_ARRAY(names, UNISTR2, num_sids);\n+\tif ((names->name == NULL) || (names->uni_name == NULL)) {\n+\t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n \tfor (i=0; i<MAX_REF_DOMAINS; i++) {\n\n"}