{"category": "ham", "to_address": "\"R-Help List\" <r-help@stat.math.ethz.ch>", "from_address": "\"David L. Van Brunt, Ph.D.\" <dlvanbrunt@gmail.com>", "subject": "[R] randomForest gives different results for formula call v. x,\n\ty methods. Why?", "body": "Just out of curiosity, I took the default \"iris\" example in the RF\nhelpfile...\nbut seeing the admonition against using the formula interface for large data\nsets, I wanted to play around a bit to see how the various options affected\nthe output. Found something interesting I couldn't find documentation for...\n\nJust like the example...\n> set.seed(12) # to be sure I have reproducibility\n\n> form.rf<-randomForest(Species ~ ., data=iris)\n> form.rf\n\nCall:\n randomForest(formula = Species ~ ., data = iris)\n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 4.67%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         50          0         0        0.00\nversicolor      0         47         3        0.06\nvirginica       0          4        46        0.08\n\n> long.rf<-randomForest(x=iris[,1:4],y=iris[,5])\n> long.rf\nCall:\n randomForest(x = iris[, 1:4], y = iris[, 5])\n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 4%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         50          0         0        0.00\nversicolor      0         47         3        0.06\nvirginica       0          3        47        0.06\n\n\n(Now, if I had non-contiguous columns for predictors, I'd have to call it\nthis way....)\n\n> long2.rf<-randomForest(x=iris[,c(1:4)],y=iris[,5])\n> long2.rf\n\nCall:\n randomForest(x = iris[, c(1:4)], y = iris[, 5])\n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 5.33%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         50          0         0        0.00\nversicolor      0         47         3        0.06\nvirginica       0          5        45        0.10\n\n\nAny idea why these two should give different results? I can only figure that\nthe seed, even though it's set, somehow gets altered by the use of a\nformula....\n> long3.rf<-randomForest(x=iris[,c(1,2,3,4)],y=iris[,5])\n> long3.rf\n\nCall:\n randomForest(x = iris[, c(1, 2, 3, 4)], y = iris[, 5])\n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 4.67%\nConfusion matrix:\n           setosa versicolor virginica class.error\nsetosa         50          0         0        0.00\nversicolor      0         47         3        0.06\nvirginica       0          4        46        0.08\n\n\nEither that or I'm calling it wrong in the long example, or else there's a\nbug. Not a life threatening situation, but I am curious as to the mechanics\nof this. I use that sort of column identification all the time and it seems\nto work OK, but here I get different results (form.rf v. long.rf or long2.rf)\nor not (form.rf v. long3.rf)  depending how I call the function. Any\ninsights?\n\n\n-- \n---------------------------------------\nDavid L. Van Brunt, Ph.D.\nmailto:dlvanbrunt@gmail.com\n\n\"If Tyranny and Oppression come to this land, it will be in the guise of\nfighting a foreign enemy.\"\n--James Madison\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}