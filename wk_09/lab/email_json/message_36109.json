{"category": "ham", "to_address": "Ravi Varadhan <rvaradhan@jhmi.edu>", "from_address": "Deepankar Basu <basu.15@osu.edu>", "subject": "Re: [R] Problem with numerical integration\n\tand\toptimization\twith\tBFGS", "body": "Ravi,\n\nThanks a lot for your detailed suggestions. I will certainly look at the\nlinks that you have sent and the package \"mnormt\". For the moment, I\nhave managed to analytically integrate the expression using \"pnorm\"\nalong the lines suggested by Prof. Ripley yesterday. \n\nFor instance, my first integral becomes the following:\n\nf1 <- function(w1,w0) {\n\n       a <- 1/(2*(1-rho2^2)*sigep^2)  \n       b <- (rho2*(w1-w0+delta))/((1-rho2^2)*sigep*sigeta)\n       c <- ((w1-w0+delta)^2)/(2*(1-rho2^2)*sigeta^2)\n       d <- muep\n       k <- 2*pi*sigep*sigeta*(sqrt(1-rho2^2))\n\n       b1 <- ((-2*a*d - b)^2)/(4*a) - a*d^2 - b*d - c\n       b21 <- sqrt(a)*(w1-rho1*w0) + (-2*a*d - b)/(2*sqrt(a))\n       b22 <- sqrt(a)*(-w1+rho1*w0) + (-2*a*d - b)/(2*sqrt(a))\n       b31 <- 2*pnorm(b21*sqrt(2)) - 1  # ERROR FUNCTION  \n       b32 <- 2*pnorm(b22*sqrt(2)) - 1  # ERROR FUNCTION\n       b33 <- as.numeric(w1-rho1*w0>=0)*(b31-b32)       \n   \n       return(sqrt(pi)*(1/(2*k*sqrt(a)))*exp(b1)*b33)\n  }\n\n for (i in 2:n) {\n\n out1 <- f1(y[i],y[i-1])\n     \n}\n\nI have worked out similar expressions for the other two integrals also. \n\nDeepankar\n\nOn Fri, 2007-05-25 at 09:56 -0400, Ravi Varadhan wrote:\n> Deepankar,\n> \n> If the problem seems to be in the evaluation of numerical quadrature part,\n> you might want to try quadrature methods that are better suited to\n> integrands with strong peaks.  The traditional Gaussian quadrature methods,\n> even their adaptive versions such as Gauss-Kronrod, are not best suited for\n> integrating because they do not explicitly account for the \"peakedness\" of\n> the integrand, and hence can be inefficient and inaccurate. See the article\n> below:\n> http://citeseer.ist.psu.edu/cache/papers/cs/18996/http:zSzzSzwww.sci.wsu.edu\n> zSzmathzSzfacultyzSzgenzzSzpaperszSzmvn.pdf/genz92numerical.pdf\n> \n> Alan Genz has worked on this problem a lot and has a number of computational\n> tools available. I used some of them when I was working on computing Bayes\n> factors for binomial regression models with different link functions.  If\n> you are interested, check the following:\n> \n> http://www.math.wsu.edu/faculty/genz/software/software.html.\n> \n> For your immediate needs, there is an R package called \"mnormt\" that has a\n> function for computing integrals under a multivariate normal (and\n> multivariate t) densities, which is actually based on Genz's Fortran\n> routines.  You could try that.\n> \n> Ravi.\n> \n> \n> ----------------------------------------------------------------------------\n> -------\n> \n> Ravi Varadhan, Ph.D.\n> \n> Assistant Professor, The Center on Aging and Health\n> \n> Division of Geriatric Medicine and Gerontology \n> \n> Johns Hopkins University\n> \n> Ph: (410) 502-2619\n> \n> Fax: (410) 614-9625\n> \n> Email: rvaradhan@jhmi.edu\n> \n> Webpage:  http://www.jhsph.edu/agingandhealth/People/Faculty/Varadhan.html\n> \n>  \n> \n> ----------------------------------------------------------------------------\n> --------\n> \n> \n> -----Original Message-----\n> From: r-help-bounces@stat.math.ethz.ch\n> [mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of Deepankar Basu\n> Sent: Friday, May 25, 2007 12:02 AM\n> To: Prof Brian Ripley\n> Cc: r-help@stat.math.ethz.ch\n> Subject: Re: [R] Problem with numerical integration and optimization with\n> BFGS\n> \n> Prof. Ripley,\n> \n> The code that I provided with my question of course does not contain\n> code for the derivatives; but I am supplying analytical derivatives in\n> my full program. I did not include that code with my question because\n> that would have added about 200 more lines of code without adding any\n> new information relevant for my question. The problem that I had pointed\n> to occurs whether I provide analytical derivatives or not to the\n> optimization routine. And the problem was that when I use the \"BFGS\"\n> method in optim, I get an error message saying that the integrals are\n> probably divergent; I know, on the other hand, that the integrals are\n> convergent. The same problem does not arise when I instead use the\n> Nelder-Mead method in optim.\n> \n> Your suggestion that the expression can be analytically integrated\n> (which will involve \"pnorm\") might be correct though I do not see how to\n> do that. The integrands are the bivariate normal density functions with\n> one variable replaced by known quantities while I integrate over the\n> second. \n> \n> For instance, the first integral is as follows: the integrand is the\n> bivariate normal density function (with general covariance matrix) where\n> the second variable has been replaced by \n> y[i] - rho1*y[i-1] + delta \n> and I integrate over the first variable; the range of integration is\n> lower=-y[i]+rho1*y[i-1]\n> upper=y[i]-rho1*y[i-1]\n> \n> The other two integrals are very similar. It would be of great help if\n> you could point out how to integrate the expressions analytically using\n> \"pnorm\".\n> \n> Thanks.\n> Deepankar\n> \n> \n> On Fri, 2007-05-25 at 04:22 +0100, Prof Brian Ripley wrote:\n> > You are trying to use a derivative-based optimization method without \n> > supplying derivatives.  This will use numerical approoximations to the \n> > derivatives, and your objective function will not be suitable as it is \n> > internally using adaptive numerical quadrature and hence is probably not \n> > close enough to a differentiable function (it may well have steps).\n> > \n> > I believe you can integrate analytically (the answer will involve pnorm), \n> > and that you can also find analytical derivatives.\n> > \n> > Using (each of) numerical optimization and integration is a craft, and it \n> > seems you need to know more about it.  The references on ?optim are too \n> > advanced I guess, so you could start with Chapter 16 of MASS and its \n> > references.\n> > \n> > On Thu, 24 May 2007, Deepankar Basu wrote:\n> > \n> > > Hi R users,\n> > >\n> > > I have a couple of questions about some problems that I am facing with\n> > > regard to numerical integration and optimization of likelihood\n> > > functions. Let me provide a little background information: I am trying\n> > > to do maximum likelihood estimation of an econometric model that I have\n> > > developed recently. I estimate the parameters of the model using the\n> > > monthly US unemployment rate series obtained from the Federal Reserve\n> > > Bank of St. Louis. (The data is freely available from their web-based\n> > > database called FRED-II).\n> > >\n> > > For my model, the likelihood function for each observation is the sum of\n> > > three integrals. The integrand in each of these integrals is of the\n> > > following form:\n> > >\n> > > A*exp(B+C*x-D*x^2)\n> > >\n> > > where A, B, C and D are constants, exp() is the exponential function and\n> > > x is the variable of integration. The constants A and D are always\n> > > positive; B is always negative, while there is no a priori knowledge\n> > > about the sign of C. All the constants are finite.\n> > >\n> > > Of the three integrals, one has finite limits while the other two have\n> > > the following limits:\n> > >\n> > > lower = -Inf\n> > > upper = some finite number (details can be found in the code below)\n> > \n> > Try integrating that analytically by change of variable to a normal CDF.\n> > \n> > \n> > > My problem is the following: when I try to maximize the log-likelihood\n> > > function using \"optim\" with method \"BFGS\", I get the following error\n> > > message (about the second integral):\n> > >\n> > >> out <- optim(alpha.start, LLK, gr=NULL, method=\"BFGS\", y=urate$y)\n> > > Error in integrate(f3, lower = -Inf, upper = upr2) :\n> > >        the integral is probably divergent\n> > >\n> > > Since I know that all the three integrals are convergent, I do not\n> > > understand why I am getting this error message. My first question: can\n> > > someone explain what mistake I am making?\n> > >\n> > > What is even more intriguing is that when I use the default method\n> > > (Nelder-Mead) in \"optim\" instead of BFGS, I do not get any such error\n> > > message. Since both methods (Nelder-Mead and BFGS) will need to evaluate\n> > > the integrals, my second question is: why this difference?\n> > >\n> > > Below, I am providing the code that I use. Any help will be greatly\n> > > appreciated.\n> > >\n> > >\n> > > Deepankar\n> > >\n> > >\n> > > ************ CODE START *******************\n> > >\n> > >\n> > >\n> > > #############################\n> > > # COMPUTING THE LOGLIKELIHOOD\n> > > # USING NUMERICAL INTEGRALS\n> > > #############################\n> > >\n> > > LLK <- function(alpha, y) {\n> > >\n> > >  n <- length(y)\n> > >  lglik <- numeric(n) # TO BE SUMMED LATER TO GET THE LOGLIKELIHOOD\n> > >\n> > >           lambda <- numeric(n-1)    # GENERATING *lstar*\n> > >           for (i in 1:(n-1)) {      # TO USE IN THE\n> > >           lambda[i] <- y[i+1]/y[i]  # RE-PARAMETRIZATION BELOW\n> > >           }\n> > >           lstar <- (min(lambda)-0.01)\n> > >\n> > >\n> > > # NOTE RE-PARAMETRIZATION\n> > > # THESE RESTRICTIONS EMERGE FROM THE MODEL\n> > >\n> > >  muep <- alpha[1]                                      # NO RESTRICTION\n> > >  sigep <-  0.01 + exp(alpha[2])                        # greater than\n> > > 0.01\n> > >  sigeta <- 0.01 + exp(alpha[3])                        # greater than\n> > > 0.01\n> > >  rho2 <- 0.8*sin(alpha[4])                             # between -0.8\n> > > and 0.8\n> > >  rho1 <- lstar*abs(alpha[5])/(1+abs(alpha[5]))         # between 0 and\n> > > lstar\n> > >  delta <- 0.01 + exp(alpha[6])                         # greater than\n> > > 0.01\n> > >\n> > >\n> > > ##########################################\n> > > # THE THREE FUNCTIONS TO INTEGRATE\n> > > # FOR COMPUTING THE LOGLIKELIHOOD\n> > > ##########################################\n> > >\n> > >  denom <- 2*pi*sigep*sigeta*(sqrt(1-rho2^2)) # A CONSTANT TO BE USED\n> > >                                              # FOR DEFINING THE\n> > >                                              # THREE FUNCTIONS\n> > >\n> > >\n> > >  f1 <- function(z1) {  # FIRST FUNCTION\n> > >\n> > >       b11 <- ((z1-muep)^2)/((-2)*(1-rho2^2)*(sigep^2))\n> > >       b12 <-\n> > > (rho2*(z1-muep)*(y[i]-y[i-1]+delta))/((1-rho2^2)*sigep*sigeta)\n> > >       b13 <- ((y[i]-y[i-1]+delta)^2)/((-2)*(1-rho2^2)*(sigeta^2))\n> > >\n> > >     return((exp(b11+b12+b13))/denom)\n> > >  }\n> > >\n> > >  f3 <- function(z3) { # SECOND FUNCTION\n> > >\n> > >       b31 <- ((y[i]-rho1*y[i-1]-muep)^2)/((-2)*(1-rho2^2)*(sigep^2))\n> > >       b32 <-\n> > > (rho2*(y[i]-rho1*y[i-1]-muep)*z3)/((1-rho2^2)*sigep*sigeta)\n> > >       b33 <- ((z3)^2)/((-2)*(1-rho2^2)*(sigeta^2))\n> > >\n> > >     return((exp(b31+b32+b33))/denom)\n> > >  }\n> > >\n> > >  f5 <- function(z5) { # THIRD FUNCTION\n> > >\n> > >       b51 <- ((-y[i]+rho1*y[i-1]-muep)^2)/((-2)*(1-rho2^2)*sigep^2)\n> > >       b52 <-\n> > > (rho2*(-y[i]+rho1*y[i-1]-muep)*(z5))/((1-rho2^2)*sigep*sigeta)\n> > >       b53 <- ((z5)^2)/((-2)*(1-rho2^2)*(sigeta^2))\n> > >\n> > >     return((exp(b51+b52+b53))/denom)\n> > >  }\n> > >\n> > >\n> > >  for (i in 2:n) {   # START FOR LOOP\n> > >\n> > >        upr1 <- (y[i]-rho1*y[i-1])\n> > >        upr2 <- (y[i]-y[i-1]+delta)\n> > >\n> > >     # INTEGRATING THE THREE FUNCTIONS\n> > >      out1 <- integrate(f1, lower = (-1)*upr1, upper = upr1)\n> > >      out3 <- integrate(f3, lower = -Inf, upper = upr2)\n> > >      out5 <- integrate(f5, lower= -Inf, upper = upr2)\n> > >\n> > >       pdf <- (out1$val + out3$val + out5$val)\n> > >\n> > >     lglik[i] <- log(pdf) # LOGLIKELIHOOD FOR OBSERVATION i\n> > >\n> > >     }               # END FOR LOOP\n> > >\n> > > return(-sum(lglik)) # RETURNING NEGATIVE OF THE LOGLIKELIHOOD\n> > >                     # BECAUSE optim DOES MINIMIZATION BY DEFAULT\n> > > }\n> > >\n> > > ***************** CODE ENDS *********************************\n> > >\n> > > Then I use:\n> > >\n> > >> urate <- read.table(\"~/Desktop/UNRATE1.txt\", header=TRUE) # DATA\n> > >> alpha.start <- c(0.5, -1, -1, 0, 1, -1) # STARTING VALUES\n> > >> out <- optim(alpha.start, LLK, gr=NULL, y=urate$y) # THIS GIVES NO\n> > > ERROR\n> > >\n> > > or\n> > >\n> > >> out <- optim(alpha.start, LLK, gr=NULL, method=\"BFGS\", y=urate$y)\n> > > Error in integrate(f3, lower = -Inf, upper = upr2) :\n> > >        the integral is probably divergent\n> > >\n> > > ______________________________________________\n> > > R-help@stat.math.ethz.ch mailing list\n> > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> > > and provide commented, minimal, self-contained, reproducible code.\n> > >\n> >\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}