{"category": "ham", "to_address": "\"Felix Wave\" <felix-wave@vr-web.de>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] Get the difference of values to their own median value", "body": "Use ave.  Also its easier to use read.table to read it in and then\nconvert it to a matrix if that's what you want.\n\nInput <- \"29 4.5 1.505713\n29 4.6 1.580402\n29 4.7 1.656875\n29 4.8 1.735054\n30 0 0\n30 0.1 0.00096108\n30 0.2 0.00323831\n29 4.5 1.495148\n29 4.6 1.568961\n29 4.7 1.644467\n30 0 0\n30 0.1 0.00093699\n30 0.2 0.00319411\n30 0.3 0.00676619\"\n\ncn <- c(\"x\", \"y\", \"z\")\n# replace next line with this:\n#  INPUT <- as.matrix(read.table(\"dat.dat\", col.names = cn))\nINPUT <- as.matrix(read.table(textConnection(Input), col.names = cn))\n\nINPUT[,3] - ave(INPUT[,3], INPUT[,1], INPUT[,2], FUN = median)\n\n\n\nOn 5/2/07, Felix Wave  wrote:\n> Hello,\n> I've got a matrix (mail end) with the colnames x, y, z. In this matrix\n> are different measurements. x and y are risign coordinates.\n>\n> With the following line I got the median value of z for all \"x\" AND \"y\" witch\n> are the same (not every measurment in my list hast the same number of\n> \"x\" and \"y\" values. Sometimes lines are missing.\n> >MEDIAN  <- na.omit( aggregate(INPUT[,3], by=list(INPUT[,2],INPUT[,1] ), FUN=median ) )\n>\n>\n> To see the failin of my measurments I want to get the difference between\n> every measurment and the detected median values.\n> The aim would be to have a list with different colums (for every measurment)\n> with the difference between measurment 1,2,3, ..., x and the median.\n>\n> Has anybody an idea?\n>\n> I though I could split the measurment list. The beginning of every measurment\n> can be found with\n> >START     <- grep(\" 0 0.0 0.00000000\", INPUT)\n> But not every measurment has the same length and I don't have always the\n> same number of measurments.\n>\n>\n>\n> I hope you can help me.\n>\n> Thank's a lot.\n> Felix\n>\n>\n>\n>\n> ###############\n> ## My R Code ##\n> ###############\n> INPUT           <- readLines(dat.dat)\n> INPUT           <- gsub(\"^ \", \"\", INPUT)\n> INPUT           <- t( sapply( strsplit(INPUT, split=\" \"), as.numeric ) )\n> colnames(INPUT) <- c(\"x\", \"y\", \"z\" )\n>\n>\n>\n>\n>\n>\n> #############\n> ## dat.dat ##\n> #############\n> 29 4.5 1.505713\n> 29 4.6 1.580402\n> 29 4.7 1.656875\n> 29 4.8 1.735054\n> 30 0 0\n> 30 0.1 0.00096108\n> 30 0.2 0.00323831\n> 29 4.5 1.495148\n> 29 4.6 1.568961\n> 29 4.7 1.644467\n> 30 0 0\n> 30 0.1 0.00093699\n> 30 0.2 0.00319411\n> 30 0.3 0.00676619\"\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}