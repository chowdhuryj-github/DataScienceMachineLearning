{"category": "ham", "to_address": "Bert Freudenberg <bert@freudenbergs.de>", "from_address": "Marco Pesenti Gritti <mpg@redhat.com>", "subject": "Re: [sugar] #1560 NORM Trial-2: Activity launch not detected", "body": "Bert Freudenberg wrote:\n> On Jun 4, 2007, at 16:41 , Marco Pesenti Gritti wrote:\n>\n>> Bert Freudenberg wrote:\n>>> On Jun 3, 2007, at 18:01 , Zarro Boogs per Child wrote:\n>>>\n>>>> #1560: Activity launch not detected\n>>>> ---------------------+------------------------------------------------------ \n>>>>\n>>>>   Reporter:  bert    |       Owner:  dcbw\n>>>>       Type:  defect  |      Status:  reopened\n>>>>   Priority:  normal  |   Milestone:  Trial-2\n>>>>  Component:  sugar   |     Version:\n>>>> Resolution:          |    Keywords:\n>>>>   Verified:  0       |\n>>>> ---------------------+------------------------------------------------------ \n>>>>\n>>>> Comment (by marco):\n>>>>\n>>>>  This should be fixed again in the latest git. Activity id and \n>>>> bundle id\n>>>>  should now be provided by two properties of the toplevel X window.\n>>>>\n>>>>  _SUGAR_ACTIVITY_ID (utf8 string)\n>>>>  _SUGAR_BUNDLE_ID (utf8 string)\n>>>>\n>>>>  sugar/lib/sugar-x11-util.c has the code which we use to set those\n>>>>  properties for python activities.\n>>>\n>>> This only complicates matters. Not only for Etoys (which does not \n>>> have a way to set X properties currently), but I see you had to \n>>> resort to C code even for Python activities. I'd much prefer if the \n>>> only thing Sugar cares about an activity X-wise is its window ID \n>>> (and we're working on a way to make that accessible in Squeak). \n>>> Everything else should be handled by DBus, and this is how it \n>>> actually was before your refactoring. If anything I'd shift \n>>> communication *towards\" DBus, not away from it towards X by \n>>> introducing arbitrary and unnecessary properties.\n>>\n>> [ CCing Dan, since he wrote the original startup notification and  \n>> I'm interested in his opinion ]\n>>\n>> We decided a while ago to use X  for window management and I don't \n>> see a reason to revisit that decision. Etoys should respect the \n>> multiple windows semantic (which I know you are working on, thanks).\n>>\n>> To reassure you, we are not going to use X as an IPC (as people have \n>> done in the past), since that gets unbelievably ugly: that's where \n>> dbus has his role in the shell -> activity instance communication.\n>\n> That's good to hear. However, the X properties required now are more \n> complex than before. In the case of Squeak, at window creation time I \n> have no way of knowing the dbus activity id yet.\n>\n>>> Besides, it does not address the original problem - that if an \n>>> activity X window is opened and detected by the Sugar shell, but it \n>>> has not created its DBus service yet, the shell will mistake it for \n>>> a raw X app (creating a\n>>> \"raw\" icon in the donut next to the still flashing activity icon).\n>>\n>> If there is a _SUGAR_ACTIVITY_ID property the window is an activity, \n>> otherwise it's a raw X window. So I think it actually solves the \n>> problem.\n>>\n>> The shell must know the activity and the bundle id as soon as an \n>> activity window is displayed, otherwise it can't represent it \n>> properly in the home. Relying on the dbus service for this was very \n>> fragile and introduced races which was hard or impossible to solve \n>> properly.\n>\n> To show the icon it's sufficient to know the bundle id. Actually, you \n> don't even really need that, because the icon is already showing \n> (flashing). You just need to know if this is an activity window or \n> not. And if it is, then sooner or later the dbus service will appear \n> telling you if that window belongs to this activity.\n>\n\nYou are probably misunderstanding how startup notification works.\n\n1 Before an activity is started from the panel it informs the shell that \nan activity with a certain $ID is going to startup -> The shell display \na pulsing icon.\n2 When the window finally appear, sugar needs to get its activity id so \nthat it can transform the notification icon in a normal one (stop the \npulsing, map it to the window xid etc).\n\n> It's practically the same whether you announce the dbus service via X \n> props, or you send the XID via dbus. Supporting both makes activity \n> developer's live easier.\n>\n\nUsing X props the operation is atomic. The window appears *and* you know \nhis activity_id at the same time. And that obviously avoid the races.\n\n>> Window management should work using X communication. Mixing dbus and \n>> X there just introduce races and confusion. If we was going down the \n>> \"dbus for window management\" route then I'd agree with you, but we \n>> aren't.\n>\n>>> This can easily be fixed up later by detecting the DBus service \n>>> creation and removing the raw icon - this is how my fix worked.\n>>\n>> Now, that's really a bad hack. I don't want to show a random icon on \n>> the screen and than replace it when the DBUS service appear... it \n>> just suck.\n>\n> That icon would not even be visible because it is hidden by the X \n> window that just appeared. It is noble to try preventing to create \n> that icon unnecessarily, but if I had a say in designing Sugar, I'd \n> opt for robustness, making it simpler for external developers, not \n> harder.\n>\n\nRobustness is exactly the reason I chose to use the X properties. It \nmakes it slightly harder to setup a non-python Sugar activity but it's a \nmuch cleaner and robust approach.\n\n> In fact, if I launch an activity from the Sugar frame, it's reasonable \n> to assume that the next X window opened actually belongs to that \n> activity. So you don't really need to show that raw icon, at least \n> until the activity launch is finished.\n>\n\nHuh. You are really not opting for robustness here!\n\n>> The startup phase is completed when the window appear on the screen, \n>> not when the dbus service appear. That's also exactly how startup \n>> notification is implemented in GNOME btw.\n>\n> Which isn't really relevant to Sugar, is it?\n\nIt's relevant that the Sugar approach to startup notification has been \nalready used successfully in another based on  the same platform.\n\nMarco\n_______________________________________________\nSugar mailing list\nSugar@lists.laptop.org\nhttp://lists.laptop.org/listinfo/sugar\n\n"}