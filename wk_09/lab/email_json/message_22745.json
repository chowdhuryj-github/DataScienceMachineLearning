{"category": "ham", "to_address": "Volker.Lendecke@SerNet.DE", "from_address": "tridge@samba.org", "subject": "Re: initial test version of CTDB clustered Samba available", "body": "Volker,\n\n > Why did you remove the \"return False;\" after the first\n > sys_read()? Now we do two reads when select indicated\n > readability. Sure, it is very unlikely we block for a long\n > time there, but the idea was that this routine would not\n > block.\n\nthat's why I asked you to look at my changes :-)\n\nThe existing routine could not work on a socket that is expected to\nget EOF. The caller has no way to know if ctdbd_socket_readable()\nreturning False means \"no more data coming\" or \"no more just yet\". So\nwe would spin forever in a traverse.\n\nTaking out the return False was a workaround for this. To make it\nnon-blocking again the function will have to change in some other\nway. I thought I'd let you choose what approach you want.\n\n> Just found a real bug: The while loop in line 1600 expects the data\n> portion of the message to come in one sys_read call,\n> ctdbd_socket_readable returns False if the second sys_read does not\n> return the full message. I could imagine that for large records and\n> under high load this is not always the case.\n>\n> Do you want me to fix it?\n\nsure, thanks!\n\nAlso, I've now converted notify in s3 to use ctdb. I am still not\npropogating the seqnum between nodes, so it should only work fully on\none node, but it isn't working. I also tested with clustering\ndisabled, and it still fails, so I suspect something deeper is wrong\nwith notify.\n\nCheers, Tridge\n\n"}