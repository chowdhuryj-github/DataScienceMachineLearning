{"category": "ham", "to_address": "\"Bernhard Schmalhofer\" <Bernhard.Schmalhofer@gmx.de>", "from_address": "\"Paul Cochrane\" <paultcochrane@gmail.com>", "subject": "Re: [perl #43413] [TODO] Pass options to policies from perlcritic.t command line", "body": "On 28/06/07, Bernhard Schmalhofer  wrote:\n> Paul Cochrane (via RT) schrieb:\n> > # New Ticket Created by  Paul Cochrane\n> > # Please include the string:  [perl #43413]\n> > # in the subject line of all future correspondence about this issue.\n> > # \n> >\n> >\n> > Hi,\n> >\n> > In perlcritic.t i'd like to find a way to pass options to perlcritic\n> > policies from the command line.  Options are passed as anonymous\n> > hashes.  Basically, we want to be able to do something like:\n> >\n> > perl t/codingstd/perlcritic.t --list\n> > --policy=CodeLayout::ProhibitHardTabs=>{'allow_leading_tabs'=>0}\n> >\n> > and it to give the output:\n> >\n> > CodeLayout::ProhibitHardTabs => \\{\n> >    'allow_leading_tabs' => 0\n> >  }\n> >\n> Isn't that reimplementing 'perlcritic' ?\n> If somebody wants to work on satisfying a new policy one can set up a\n> my_perlcriticrc file and call\n>\n>    perlcritic --profile my_perlcriticrc\n\nThis is actually intended at satisfying currently used policies within\nperlcritic.t.  There are two policies which take arguments, and it'd\nbe nice to be able to run these policies individually with the\narguments as specified in perlcritic.t, because just using\nCodeLayout::ProhibitHardTabs allows leading hard tabs.\n\nHrm, having had to explain this ticket I think I've found a better\nsolution.  We just want to specify the policy to run at the command\nline, and then any standard options which perlcritic.t would want to\nuse for that policy should then be set; such options shouldn't be set\nby the user on the command line.\n\n> Another question. Can we simplify perlcritic.t by using Test::Perl::Critic?\n\nI don't know.  Would you be able to explain how this would simplify\nthe internals of perlcritic.t?  I don't have much experience with\nT::P::C.\n\nPaul\n\n"}