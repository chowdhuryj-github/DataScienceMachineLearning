{"category": "ham", "to_address": "Jeremy Allison <jra@samba.org>", "from_address": "derrell@samba.org", "subject": "Re: readahead() which is Linux-only vs. posix_fadvise()", "body": "Jeremy Allison  writes:\n\n> On Wed, May 09, 2007 at 09:35:29PM -0400, derrell@samba.org wrote:\n>> \n>> The only place that readahead() is used, I think, is in vfs_readahead.c.\n>> It might make sense for the maintainer of this module to look into using\n>> posix_fadvise() instead of readahead().\n>\n> Did you look at the code here :-) ? I'm guessing not....\n\nClearly I hadn't noticed that further down it tries posix_fadvise().  Thanks\nfor pointing it out.  Based on the fact that there's possibly no reliable\ndeclaration for readahead() and that there is a POSIX-compliant alternative,\nwould it make sense to swap the order... try to use posix_fadvise() first, and\nif it doesn't exist, then look for readahead()?  (Also, since Linux provides\nposix_fadvise(), maybe there's no reason for readahead() at all?)\n\nDerrell\n\n\n> #if defined(HAVE_LINUX_READAHEAD)\n>                 int err = readahead(fromfd, offset, (size_t)rhd->len);\n>                 DEBUG(10,(\"readahead_sendfile: readahead on fd %u,\n> offset %llu, len %u returned %d\\n\",\n>                         (unsigned int)fromfd,\n>                         (unsigned long long)offset,\n>                         (unsigned int)rhd->len,\n>                         err ));\n> #elif defined(HAVE_POSIX_FADVISE)\n>                 int err = posix_fadvise(fromfd, offset, (off_t)rhd->len,\n> POSIX_FADV_WILLNEED);\n>                 DEBUG(10,(\"readahead_sendfile: posix_fadvise on fd %u,\n> offset %llu, len %u returned %d\\n\",\n>                         (unsigned int)fromfd,\n>                         (unsigned long long)offset,\n>                         (unsigned int)rhd->len,\n>                         err ));\n> #else\n>                 if (!rhd->didmsg) {\n>                         DEBUG(0,(\"readahead_sendfile: no readahead on\n> this platform\\n\"));\n>                         rhd->didmsg = True;\n>                 }\n> #endif\n>\n\n-- \n\n"}