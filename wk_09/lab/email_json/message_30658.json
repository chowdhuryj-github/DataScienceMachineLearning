{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22924 - in branches: SAMBA_3_0/source/libsmb\n\tSAMBA_3_0_26/source/libsmb", "body": "Author: jra\nDate: 2007-05-16 01:34:22 +0000 (Wed, 16 May 2007)\nNew Revision: 22924\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22924\n\nLog:\nFix the build by correctly processing readX\nerrors in the direct read case.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/libsmb/clientgen.c\n   branches/SAMBA_3_0_26/source/libsmb/clientgen.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/libsmb/clientgen.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/clientgen.c\t2007-05-16 01:13:25 UTC (rev 22923)\n+++ branches/SAMBA_3_0/source/libsmb/clientgen.c\t2007-05-16 01:34:22 UTC (rev 22924)\n@@ -249,30 +249,34 @@\n \t\t}\n \t}\n \n-\t/* Check it's a non-chained readX reply. */\n-\tif (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||\n-\t\t(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||\n-\t\t(CVAL(cli->inbuf,smb_com) != SMBreadX)) {\n+\t/* If it's not the above size it probably was an error packet. */\n+\n+\tif ((len == (smb_size - 4) + 24) && !cli_is_error(cli)) {\n+\t\t/* Check it's a non-chained readX reply. */\n+\t\tif (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||\n+\t\t\t(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||\n+\t\t\t(CVAL(cli->inbuf,smb_com) != SMBreadX)) {\n+\t\t\t/* \n+\t\t\t * We're not coping here with asnyc replies to\n+\t\t\t * other calls. Punt here - we need async client\n+\t\t\t * libs for this.\n+\t\t\t */\n+\t\t\tgoto read_err;\n+\t\t}\n+\n \t\t/* \n-\t\t * We're not coping here with asnyc replies to\n-\t\t * other calls. Punt here - we need async client\n-\t\t * libs for this.\n+\t\t * We know it's a readX reply - ensure we've read the\n+\t\t * padding bytes also.\n \t\t */\n-\t\tgoto read_err;\n-\t}\n \n-\t/* \n-\t * We know it's a readX reply - ensure we've read the\n-\t * padding bytes also.\n-\t */\n-\n-\toffset = SVAL(cli->inbuf,smb_vwv6);\n-\tif (offset > len) {\n-\t\tssize_t ret;\n-\t\tsize_t padbytes = offset - len;\n-\t\tret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);\n-                if (ret != padbytes) {\n-\t\t\tgoto read_err;\n+\t\toffset = SVAL(cli->inbuf,smb_vwv6);\n+\t\tif (offset > len) {\n+\t\t\tssize_t ret;\n+\t\t\tsize_t padbytes = offset - len;\n+\t\t\tret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);\n+\t\t\tif (ret != padbytes) {\n+\t\t\t\tgoto read_err;\n+\t\t\t}\n \t\t}\n \t}\n \n\nModified: branches/SAMBA_3_0_26/source/libsmb/clientgen.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/libsmb/clientgen.c\t2007-05-16 01:13:25 UTC (rev 22923)\n+++ branches/SAMBA_3_0_26/source/libsmb/clientgen.c\t2007-05-16 01:34:22 UTC (rev 22924)\n@@ -207,30 +207,34 @@\n \t\t}\n \t}\n \n-\t/* Check it's a non-chained readX reply. */\n-\tif (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||\n-\t\t(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||\n-\t\t(CVAL(cli->inbuf,smb_com) != SMBreadX)) {\n+\t/* If it's not the above size it probably was an error packet. */\n+\n+\tif ((len == (smb_size - 4) + 24) && !cli_is_error(cli)) {\n+\t\t/* Check it's a non-chained readX reply. */\n+\t\tif (!(CVAL(cli->inbuf, smb_flg) & FLAG_REPLY) ||\n+\t\t\t(CVAL(cli->inbuf,smb_vwv0) != 0xFF) ||\n+\t\t\t(CVAL(cli->inbuf,smb_com) != SMBreadX)) {\n+\t\t\t/* \n+\t\t\t * We're not coping here with asnyc replies to\n+\t\t\t * other calls. Punt here - we need async client\n+\t\t\t * libs for this.\n+\t\t\t */\n+\t\t\tgoto read_err;\n+\t\t}\n+\n \t\t/* \n-\t\t * We're not coping here with asnyc replies to\n-\t\t * other calls. Punt here - we need async client\n-\t\t * libs for this.\n+\t\t * We know it's a readX reply - ensure we've read the\n+\t\t * padding bytes also.\n \t\t */\n-\t\tgoto read_err;\n-\t}\n \n-\t/* \n-\t * We know it's a readX reply - ensure we've read the\n-\t * padding bytes also.\n-\t */\n-\n-\toffset = SVAL(cli->inbuf,smb_vwv6);\n-\tif (offset > len) {\n-\t\tssize_t ret;\n-\t\tsize_t padbytes = offset - len;\n-\t\tret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);\n-                if (ret != padbytes) {\n-\t\t\tgoto read_err;\n+\t\toffset = SVAL(cli->inbuf,smb_vwv6);\n+\t\tif (offset > len) {\n+\t\t\tssize_t ret;\n+\t\t\tsize_t padbytes = offset - len;\n+\t\t\tret = cli_receive_smb_data(cli,smb_buf(cli->inbuf),padbytes);\n+\t\t\tif (ret != padbytes) {\n+\t\t\t\tgoto read_err;\n+\t\t\t}\n \t\t}\n \t}\n \n\n"}