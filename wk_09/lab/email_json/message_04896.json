{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "File test operators as Pairs", "body": "So far (eep!), the documentation talks about file test operators as\nworking with pairs, which will be a weird thing to explain, I guess.\nI'm wondering if this matters to the mere user at all, and if we should\neven talk about them in terms of \"pairs\". I don't want a different set\nof terms in the docs and Llama6. Even if the current Pugs is different\nthan what the final answer will be, as long as I know the final answer\nI'll be fine. :)\n\nFor a directory that exists, using the adverbial form or the fat arrow\nform work for true or false things:\n\n\n   pugs> 'doc' ~~ :d\n   \"doc\"\n   pugs> \"doc\" ~~ d => 1\n   \"doc\"\n   pugs> \"doc\" ~~ d => 0\n   Bool::False\n\n\nThe fat arrow doesn't seem to work as I expected with :s though. I\nfigured that the value of the pair would be the thing to match the \nanswer of the test. I expect these all to be expressions of the same\ngoal (even if they return different things right now):\n\n\n   pugs> \"doc\" ~~ :s  # just to show you where I am\n   136\n\n   pugs> ( \"doc\" ~~ :s ) == 136\n   Bool::True\n   pugs> ( \"doc\" ~~ :s ) ~~ 136\n   Bool::True\n   pugs> \"doc\" ~~ s => 136   # perhaps accidentally fine\n   136\n\n\nSo, if I wanted to see if the file had a size of 93 bytes, I'd use 93\nas the value of the pair, but that doesn't work. It just returns true\nagain:\n\n\n   pugs> \"doc\" ~~ s => 93  # I want this to fail (return Bool:I:False)\n   136\n\n\nSimilarly, if that last form should work, I might want to do something\nsimilar with the file age tests. I want a file 5 days old (let's ignore\nfractional days right now):\n\n\n   \"doc\" ~~ M => 5;\n\n\nWhich then makes me think I'd want to do something a bit wacky to see\nif the modtime is greater than 5:\n\n\n   \"doc\" ~~ M => any( 5 ..* );\n\n\nBut, if file tests aren't really meant to be like this and the user\nshouldn't ever think like this, do I call it a \"pair\"? That's the\nquestion I'll have to answer to the newbie reading LLama6, even though\nI personally am fine with the term. :)\n\n"}