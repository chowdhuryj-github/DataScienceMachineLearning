{"category": "ham", "to_address": "Spielas Bates <bates@stat.wisc.edu>", "from_address": "Peter Dalgaard <p.dalgaard@biostat.ku.dk>", "subject": "Re: [R] Tools For Preparing Data For Analysis", "body": "Spielas Bates wrote:\n> Frank Harrell indicated that it is possible to do a lot of difficult\n> data transformation within R itself if you try hard enough but that\n> sometimes means working against the S language and its \"whole object\"\n> view to accomplish what you want and it can require knowledge of\n> subtle aspects of the S language.\n>   \nActually, I think Frank's point was subtly different: It is *because* of \nthe differences in view that it sometimes seems difficult to find the \nway to do something in R that  is apparently straightforward in SAS. \nI.e. the solutions exist and are often elegant, but may require some \nlateral thinking.\n\nCase in point: Finding the first or the last observation for each \nsubject when there are multiple records for each subject. The SAS way \nwould be a datastep with IF-THEN-DELETE, and a RETAIN statement so that \nyou can compare the subject ID with the one from the previous record, \nworking with data that are sorted appropriately.\n\nYou can do the same thing in R with a for loop, but there are better \nways e.g.\nsubset(df,!duplicated(ID)), and subset(df, rev(!duplicated(rev(ID))), or \nmaybe\ndo.call(\"rbind\",lapply(split(df,df$ID), head, 1)), resp. tail. Or \nsomething involving aggregate(). (The latter approaches generalize \nbetter to other within-subject functionals like cumulative doses, etc.).\n\nThe hardest cases that I know of are the ones where you need to turn one \nrecord into many, such as occurs in survival analysis with \ntime-dependent, piecewise constant covariates. This may require \n\"transposing the problem\", i.e. for each  interval you find out which \nsubjects contribute and with what, whereas the SAS way would be a \nwithin-subject loop over intervals containing an OUTPUT statement.\n\nAlso, there are some really weird data formats, where e.g. the input \nformat is different in different records. Back in the 80's where \npunched-card input was still common, it was quite popular to have one \ncard with background information on a patient plus several cards \ndetailing visits, and you'd get a stack of cards containing both kinds. \nIn R you would most likely split on the card type using grep() and then \nread the two kinds separately and merge() them later.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}