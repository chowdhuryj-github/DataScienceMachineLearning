{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Re: Alternatives to highly nested hashes", "body": "It looks like an object is what I want.  Am I correct?  Suppose I need to work\nwith a bit of data that actually has 11 attributes.  This would be an object of\nanother type.  However, I need to manipulate pieces of it differently.  So I'm\nguessing I would create an object thusly:\n\nsub objectname {\n    my %hashOfAttribs {\n\tattrib1 => undef,\n\tattrib2 => undef,\n\tattrib3 => undef\n    }\n}\n\nI would then create an instance of that object\n\nmy $instance = new objectname();\n\nI'm not certain though, how to populate the elements.  would it actually be\nmy $instance = new objectname(attrib1 => value, attrib2 => value, attrib3 =>\nvalue)?  Or would I create the instance as above and then populate it by some\nother means?  For instance\n$instance->hashOfAttribs {\n    attrib1 => value,\n    attrib2 => value,\n    attrib3 => value\n};\n\nAm I at least on the right track?\n\nMathew\nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}