{"category": "ham", "to_address": "ccleland@optonline.net, ugulumbe@yahoo.co.uk", "from_address": "rolf@math.unb.ca", "subject": "Re: [R] Too slow to execute!", "body": "Chuck Cleland wrote:\n\n        \n\n> Why use a loop here at all?  It seems like this would do it pretty fast:\n> \n> Re <- rnorm(n = 2e+06, mean = - 1)\n> \n> > system.time(Re <- rnorm(n = 2e+06, mean = - 1))\n> [1] 0.77 0.01 0.78   NA   NA\n> \n>   I'm not sure what you expect Re to be (a list with 100000 vectors of\n> length 20?), but you could reshape one long vector into a matrix or\n> whatever you might need.  For example:\n> \n> Re.mat <- matrix(Re, ncol=20)\n\n        \n\n        Ummmmmm, not that it really matters, but doesn't the\n        original construction (x-2*10)/20, give variates with\n        mean = -1 and standard deviation = 1/20 = 0.05?\n\n        (One wonders why ``(x-2*10)/20'' rather than ``(x-20)/20'',\n        even if one allows for doing the operation in this\n        convoluted way.)\n\n        It might be added that ``Re'' is not a good name for\n        an object since it is the name of a function (which\n        returns the real part of complex numbers).\n\n                                cheers,\n\n                                        Rolf Turner\n                                        rolf@math.unb.ca\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}