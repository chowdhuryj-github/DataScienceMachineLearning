{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: [perl #42792] GC bug added in r18323", "body": "Joshua Isom (via RT) wrote:\n> \n> My current svn repository uses a patch that I sent to the list about a \n> week ago, in which the pge tests would run with gc on if the file \n> DEVELOPING existed.  Since I updated to over 18323, \n> t/compilers/pge/p5regex/p5rx.t segfaults after test 553.  The \n> current_cont in the interp's ctx is null, and results in a segfault \n> inside of set_returns.  It doesn't happen on my darwin-ppc system, so I \n> don't know how specific it is, and if rebooting will fix it(as often \n> happens with the gc bugs in my experience).  But it is failing on my \n> freebsd-amd64 system.  Since odds are r18323 just exposed a bug instead \n> of adding one, maybe other people will get the crash as well.  You will \n> have to remove -G in t/compilers/pge/p5regex.t/p5rx.t to get it to \n> fail, as with -G it succeeds(and with -t too).\n\nI can't duplicate the error on darwin-intel or ubuntu-x86. Could be \nspecific to FreeBSD (which might help us pin it down further).\n\n> I've learned a lot lately about how to use gdb, and all I've come to \n> learn is that if \n> interp->ctx.state->current_cont->obj.u._ptrs._struct_val is null, \n> parrot isn't happy, of course that's with macro expansion, and that \n> getting the level of debugging information I'd like to be able to write \n> little tools to process an analyze it better isn't easy.\n\nCould you send us a stack trace? (gdb command bt) Also, if you haven't \nalready, try a make realclean (we've made some significant fundamental \nchanges recently).\n\nThanks!\nAllison\n\n"}