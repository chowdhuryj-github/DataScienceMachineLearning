{"category": "ham", "to_address": "R-help <r-help@stat.math.ethz.ch>", "from_address": "\"Paul Smith\" <phhs80@gmail.com>", "subject": "Re: [R] Fine tunning rgenoud", "body": "On 7/4/07, RAVI VARADHAN  wrote:\n> My point is that it might be better to try multiple (feasible) starting values for constrOptim to ensure that you have a good local minimum, since it appears that constrOptim converges to a boundary solution where the gradient is non-zero.  That is why my code could be useful.\n\nThanks, Ravi. I have used your function, which works pretty fine.\nHowever, constrOptim returns solutions markedly different, depending\non the starting values. That is true that I am expecting a solution in\nthe boundary, but should not constrOptim find boundary solutions\ncorrectly? The set of solution that I got is below.\n\nPaul\n\n--------------------------------\n\n2.67682495728743e-08\t0.676401684216637\t5.18627076390355e-09\t0.00206463986063195\t0.87185968612836\t4.32039325909089e-11\t0.999999999996234\n3.71711020733097e-08\t0.539853580957444\t1.82592937615235e-08\t0.00206941041763503\t0.93305250393447\t2.08076621230984e-11\t0.999999999995774\n1.55648443014316e-08\t0.356047772992972\t8.61341165816411e-09\t0.00207149128044574\t0.939531540703735\t2.55211186629222e-12\t0.999999999999424\n2.20685747493755e-07\t0.575689534431218\t5.30976753476747e-08\t0.00210500604605837\t0.588947341576757\t3.1310360048386e-10\t0.999999999998789\n1.92961662926727e-08\t0.773588030510204\t1.04841835042200e-08\t0.00206723852358352\t0.816755014708394\t3.89478290348532e-11\t0.999999999997794\n0.000279824051289082\t0.000310992385522886\t1.01467522935252e-06\t3.11645639181419e-05\t0.00249801538651552\t3.0978819115532e-05\t7.11821104872585e-06\n2.81901448690893e-07\t0.381718731525906\t4.72860507882539e-08\t0.00206807672109157\t0.769178513763055\t1.39278079797628e-09\t0.999999999967123\n5.58938545019597e-05\t0.00171253668169328\t4.54005998518212e-09\t0.00165663757292733\t0.00247994862102590\t6.20992250482468e-06\t0.419169641865998\n1.03300938985890e-08\t0.438357835603591\t6.89854079723234e-09\t0.00206693286138396\t0.977554885433201\t1.17209206267609e-10\t0.99999999996921\n7.63336821363444e-05\t0.00177141538041517\t1.88050423143828e-10\t0.00169507950991094\t0.00249739505142207\t8.4814984916537e-06\t0.470929220605509\n9.16005846107533e-09\t0.682179815036755\t1.63255733785783e-09\t0.00206922107327189\t0.919323193130209\t5.71436138398897e-11\t0.99999999999629\n1.40968913167328e-08\t0.343606628343661\t1.33227447885302e-08\t0.00206789984370423\t0.343671264496824\t1.11679312116211e-11\t0.999999999999822\n4.76054734844857e-09\t0.593022549313178\t2.28102966623129e-09\t0.00206625165098398\t0.947562121256448\t8.9437610753173e-11\t0.999999999999992\n1.96950784184139e-07\t0.579488113726155\t1.61915231214025e-07\t0.00208000350528798\t1.00891340595040\t1.22248906754713e-10\t0.999999999996493\n8.1448937742933e-09\t0.441088618716555\t4.54846390087941e-09\t0.00207634940425852\t0.446155700100820\t4.81439647816238e-12\t0.99999999999939\n4.82439218405912e-08\t0.557771049256698\t3.53737879481732e-08\t0.0020663035737319\t0.588137767965923\t2.6568947800491e-11\t0.999999999988615\n2.43086751126363e-08\t0.522927598354163\t2.26886829089137e-08\t0.00206533531066324\t0.611696593543814\t4.51226610050184e-11\t0.999999999999087\n3.05498959434100e-08\t0.465522202845817\t1.09246302124670e-08\t0.00207004066920179\t0.465583376966915\t3.24213847202457e-11\t0.999999999997366\n1.88687179088788e-07\t0.783614197203923\t4.51346471059839e-08\t0.00222403775221293\t0.786422171740329\t8.17865794171933e-10\t0.999999999986103\n1.0154423824979e-08\t0.302657777579883\t9.06923080122203e-09\t0.00206615353968094\t0.359722316646974\t8.27866320956902e-12\t0.99999999998461\n8.91008717665837e-08\t0.0020661526864997\t3.08619455858999e-09\t0.00206579199039568\t0.00275523149199496\t9.55650084108725e-09\t0.985185595958656\n1.25320647920029e-07\t0.635217955401437\t7.44627883600107e-08\t0.00206656250455391\t0.855937507707323\t3.70326032870889e-10\t0.999999999998375\n2.57618374406559e-08\t0.636499151952225\t1.09822023878715e-08\t0.00206677354204888\t0.772636071860102\t8.99370944431481e-11\t0.999999999978744\n1.09474196877990e-08\t0.501469973722704\t1.19992915868609e-10\t0.00206117941606503\t0.501594064757161\t1.34320044786225e-11\t0.999999999991232\n5.24203710193977e-05\t0.000127998340144109\t3.33258623630601e-09\t7.55779680724378e-05\t0.00248898574263025\t5.82411313482383e-06\t0.0221497278110802\n3.80217498132259e-07\t0.57664568703189\t1.01755510162620e-08\t0.00207232950382402\t0.944031557945531\t5.30703662426069e-10\t0.999999999995957\n1.45159816281038e-09\t0.391742001993341\t1.13492553980291e-09\t0.00206615324883312\t0.73041632635671\t2.05351961803669e-11\t0.99999999997684\n8.74006318627465e-05\t0.00176059707830211\t1.94489765002966e-09\t0.00167319599216734\t0.00234472182706612\t9.710963192258e-06\t0.358282221037878\n0.000238275046444342\t0.000264776586825777\t4.40904795740029e-10\t2.64911355650347e-05\t0.00259858019547791\t2.64749446522330e-05\t1.83580740341509e-07\n7.39730651399581e-10\t0.00908091738218919\t2.48425610406978e-10\t0.00206667909063917\t0.00928420674840742\t5.18131986840764e-11\t0.99999875366957\n6.76489417503509e-08\t0.66948409231674\t3.03852881114497e-08\t0.00207327594614506\t0.82038550137061\t2.64031575134214e-11\t0.999999999984622\n2.47578596556463e-05\t0.00192273935278028\t1.23710433232059e-10\t0.00189797520967688\t0.00249714264227544\t2.75085723641778e-06\t0.654395200885401\n1.89137722020867e-08\t0.611106915103611\t3.89703191870382e-09\t0.00210184590871973\t0.624411027730728\t8.5135512646264e-11\t0.99999999999684\n0.00019176743398086\t0.000561608946531094\t3.86469382998825e-10\t0.000369840972771214\t0.00250444089363261\t2.13074457599853e-05\t0.0571352017772342\n0.000185606084629350\t0.000206269128591342\t1.56795453162326e-11\t2.06627190417154e-05\t0.00249993097016385\t2.06228887085015e-05\t1.71605199821395e-06\n6.07957336199056e-08\t0.483682520205442\t5.5863930138716e-09\t0.00206322767692575\t0.483682695616455\t5.34362969147144e-11\t0.999999999999643\n2.32535804244419e-08\t0.479995736120651\t1.71422519965926e-08\t0.00207338945556393\t0.510141538832558\t1.48964674702430e-11\t0.999999999993732\n8.9183702782689e-06\t0.00206653282852738\t1.75762003328053e-10\t0.00205761314408722\t0.00252353219843752\t9.9090949737504e-07\t0.833268509557228\n1.98549228223182e-06\t0.251617257564206\t1.05359270191879e-06\t0.0022260243792503\t0.251624161164046\t9.60072596752024e-08\t0.99999999999983\n3.98028438135354e-08\t0.547004412551238\t3.46420325883517e-08\t0.00206593124574590\t0.780233389945956\t4.31912137883551e-11\t0.999999999999248\n7.415833973742e-09\t0.411955745727431\t6.63826778226352e-09\t0.00206692655795474\t0.422974654599724\t6.0360458732987e-12\t0.999999999999735\n2.31198818168677e-09\t0.00651214491263961\t1.32346818065092e-09\t0.00206600061742381\t0.0308298577099849\t1.09702273280814e-10\t0.99987783901442\n4.17312889043775e-08\t0.535841994679291\t2.16650907799191e-08\t0.00206804295529002\t0.59999577506709\t1.18576996500002e-10\t0.999999999999237\n3.06571185479614e-08\t0.210504230265054\t2.05714086443132e-08\t0.00206707615217700\t0.218748559037881\t2.15131848511398e-14\t0.999999999993557\n2.75615889053932e-09\t0.410462493146348\t1.61078464820130e-09\t0.00206420001019636\t0.410565659594555\t9.40738331890563e-11\t0.999999999999952\n4.56613193593397e-09\t0.408415058997493\t2.33397373332447e-09\t0.00206711241339086\t0.532349316444773\t6.74887208834456e-11\t0.99999999999929\n7.18189347926295e-08\t0.456169544603848\t5.38996419605601e-08\t0.00206990174706466\t1.10900729793115\t1.09308927282691e-13\t0.999999999990783\n0.000188732057072893\t0.000209745553735604\t2.65570357321341e-11\t2.10123232762018e-05\t0.00249946399527847\t2.09702247828353e-05\t7.56804739408697e-07\n5.85086685972612e-08\t0.586106422015639\t3.34740271798516e-08\t0.00207017375045705\t1.02476378656892\t7.7586558103274e-11\t0.999999999999751\n0.000110963331385117\t0.000134315151780862\t1.07242866306447e-06\t2.33497881113803e-05\t0.00255535434807175\t1.22100977811675e-05\t0.0100715104652649\n6.74756547544261e-05\t0.00181277651670570\t2.06882429964314e-10\t0.0017453002881811\t0.00248364499775618\t7.49727080120661e-06\t0.477865304416143\n2.12169576142447e-09\t0.258696699048681\t3.83834275215625e-10\t0.00206572907235368\t0.593016720449582\t2.47234004478185e-11\t0.999999999976093\n4.90290042793427e-08\t0.845133894257049\t4.26659941495083e-08\t0.00206573635916222\t0.846607006638287\t2.63753283209851e-10\t0.999999999994938\n1.82215438136793e-08\t0.80366504831158\t1.78340820866931e-08\t0.00225471081235068\t0.805133180734986\t2.65837229120276e-12\t0.999999999992972\n4.73449331282602e-08\t0.284890209400889\t3.18447541813436e-08\t0.00206840481685483\t0.808166776706798\t4.05949074947464e-10\t0.999999999996061\n1.09692979675704e-08\t0.504203767689845\t1.91188777015599e-09\t0.00206788476221373\t0.706912076703946\t4.06894266747559e-11\t0.99999999999973\n4.34112012988195e-08\t0.458125660334097\t6.46770375936903e-09\t0.00207007623328698\t0.625303714142111\t1.01347377674089e-10\t0.999999999992636\n1.16509068624767e-07\t0.598772124413396\t1.83783072861908e-08\t0.00207311616484422\t0.649412674861061\t1.72090788969858e-10\t0.999999999982887\n1.72904399298124e-08\t0.58859841513479\t5.56864060572789e-09\t0.00206902943325815\t0.834770114923498\t4.44826394221343e-11\t0.999999999998404\n1.95167889112074e-07\t0.680051903362475\t4.07870548730064e-08\t0.0021048787521164\t0.758987053084469\t3.35901569072651e-10\t0.999999999999464\n1.06657670445553e-08\t0.705185947467634\t5.468246700687e-09\t0.00206717328235464\t0.852353580488024\t9.79781097317382e-11\t0.999999999997673\n3.38906655480421e-08\t0.675066389889348\t5.7356420037523e-09\t0.00206939927716748\t0.864714866878808\t3.50701456652884e-10\t0.999999999999926\n4.72130896241037e-09\t0.193480077858215\t4.09642232386814e-09\t0.00206639690357456\t0.193772609031377\t2.22379321541448e-11\t0.999999999992884\n3.55665252909232e-08\t0.620669750121032\t1.90641809388101e-08\t0.00206864461846135\t0.622207402604423\t3.55684392133601e-11\t0.999999999999635\n3.43643575170166e-08\t0.508032144170851\t3.05576064051123e-08\t0.0020666442030495\t0.537473527046566\t5.41317633959989e-12\t0.999999999991207\n2.07413577081273e-08\t0.517006009937055\t1.78794895322523e-08\t0.00206609160101216\t0.723546217083115\t4.25770563404542e-11\t0.999999999977351\n2.9634111809255e-08\t0.678167734702809\t2.87136255305397e-08\t0.00207005922065176\t0.680058941948453\t4.86294997869349e-11\t0.999999999997674\n2.70007729246723e-08\t0.777109777637737\t2.23198659183296e-08\t0.00211784135373727\t0.821904778895813\t2.72480529179635e-10\t0.999999999999417\n1.21638582096581e-05\t0.685066257234478\t3.90995182181942e-06\t0.00201558375343728\t0.685516429216796\t4.73765370536012e-08\t0.999999999999993\n6.21341332802845e-08\t0.45153366532873\t4.28836207599489e-08\t0.00205228864113157\t0.630886659065685\t2.01031448944481e-10\t0.999999999976095\n1.19446880731148e-06\t0.00204849378641721\t5.41758686583886e-10\t0.00204660358124349\t0.00250002927315376\t1.32657483581135e-07\t0.926358671695374\n4.23724996341138e-07\t0.76589882078562\t1.07976473375288e-07\t0.00231084075578484\t0.772123021534594\t4.222800306051e-09\t0.99999999999554\n9.76490929801592e-09\t0.611133237912937\t3.40654501481527e-09\t0.00206753317060016\t0.624278286034974\t1.35688861199835e-11\t0.999999999991987\n0.000185800168507657\t0.000206604414024173\t1.51257663200075e-10\t2.08040548465085e-05\t0.00249987187225613\t2.06444402710859e-05\t1.00090667437022e-05\n4.87431144092831e-09\t0.486985270937825\t1.01147265793908e-09\t0.00206873578985202\t0.494229783529316\t2.1163667211661e-12\t0.999999999999217\n1.58678140422157e-08\t0.458475824861338\t3.728478508397e-09\t0.00206665340523142\t0.822538576890515\t6.73647051811321e-11\t0.999999999992949\n7.78797943133767e-07\t0.00201714819466376\t1.00271036821046e-09\t0.00201517307886584\t0.00243247068677390\t8.6420943116519e-08\t0.946415585057681\n1.79734244345473e-07\t0.618114350664356\t8.41196223101054e-08\t0.00209424634015987\t1.09808725088463\t1.36311179064841e-09\t0.999999999999325\n4.04750622932535e-06\t0.00202435649740235\t9.55231839434103e-11\t0.00202030658534268\t0.00249780762721203\t4.49711157881299e-07\t0.878051982789172\n3.27944009298396e-08\t0.710329613922295\t2.02989735589882e-08\t0.00206702754480486\t0.713789321637634\t4.43500632164969e-12\t0.99999999998325\n3.6211203640154e-08\t0.486990872484964\t2.23029819494578e-08\t0.00206834819984283\t0.925447188571729\t1.43913590315638e-10\t0.999999999999852\n1.52117049757253e-08\t0.499368102973816\t5.70289700988348e-09\t0.00206632041653347\t0.688163413575525\t6.86450078797379e-11\t0.99999999998881\n2.14084286484963e-08\t0.669902287842233\t1.64604388157258e-08\t0.00206787121557579\t0.675669448264383\t3.05725070183645e-11\t0.99999999999783\n4.64383080200508e-05\t0.00188125145190771\t2.92580309919556e-10\t0.00183481310287054\t0.00250971056566956\t5.15977640139516e-06\t0.571340025768215\n3.11099577796555e-08\t0.319299482089934\t8.84023352637676e-09\t0.00206855023112842\t0.441077204370492\t1.10446087116967e-09\t0.999999999995467\n0.000102965203269986\t0.0016493488546921\t2.58445958349384e-10\t0.00154638327053218\t0.00250288634336625\t1.14405481683120e-05\t0.342341363715383\n5.87912519479874e-09\t0.00301357388024528\t2.75211293457077e-10\t0.00206603126487256\t0.00686204622812863\t6.1682829968701e-10\t0.999931564740833\n8.28694064868836e-08\t0.673413934917665\t5.55691871872657e-08\t0.00206648968616976\t0.690994737517309\t8.53762213679993e-11\t0.99999999999553\n2.78964308878308e-08\t0.631906605077265\t1.87081150212841e-08\t0.00206682302780812\t1.04912853459322\t1.19798263785958e-10\t0.999999999998404\n0.000186009655330342\t0.000206938973112988\t1.18525336022574e-09\t2.09286186935030e-05\t0.00249989443096258\t2.06676012144089e-05\t2.57319855839169e-06\n5.79914576203232e-05\t0.00181271191072469\t1.15884908131972e-09\t0.00175471081855071\t0.0024812702174432\t6.44334507197721e-06\t0.509698530097913\n2.0503183260964e-08\t0.546450460261978\t1.27059638843222e-08\t0.00206791702172114\t1.14082199649402\t8.5751965370755e-12\t0.99999999999683\n3.66836690280629e-08\t0.481874078118496\t3.13611734401948e-08\t0.00207354422550728\t0.990376379663234\t2.13707863395726e-10\t0.999999999975761\n1.77224405556878e-08\t0.493128575789259\t8.63845133717168e-09\t0.00207307974398005\t0.493553411995952\t3.19150428367562e-11\t0.999999999999902\n0.000119234853016321\t0.00194143059603129\t2.65621637099599e-10\t0.00182214114564480\t0.00258385562559042\t1.32482776896270e-05\t0.564809333872708\n1.91321783130778e-07\t0.00205131977291163\t2.45737561775750e-10\t0.00205112100576657\t0.00251498989989795\t2.12303674145017e-08\t0.981038377325434\n2.04970869809e-09\t0.61540968024267\t1.80692316850342e-10\t0.00206758160218205\t0.616881623876956\t9.88879753424694e-11\t0.999999999998682\n2.28380664111838e-07\t0.495196927735637\t2.03520983522517e-07\t0.00206484911183903\t0.495729865740038\t3.10063601627842e-10\t0.999999999998029\n0.000142663207352814\t0.00136226156979156\t2.47224893929883e-11\t0.00121959537442013\t0.00249964872330666\t1.58514632925203e-05\t0.213308634647407\n\n\n\n> ----- Original Message -----\n> From: Paul Smith \n> Date: Wednesday, July 4, 2007 6:00 am\n> Subject: Re: [R] Fine tunning rgenoud\n> To: R-help \n>\n>\n> > On 7/4/07, RAVI VARADHAN  wrote:\n> >  > Here is another approach: I wrote an R function that would generate\n> > interior points as starting values for constrOptim.  This might work\n> > better than the LP approach, since the LP approach gives you a\n> > starting value that is on the boundary of the feasible region, i.e a\n> > vertex of the polyhedron, whereas this new approach gives you points\n> > on the interior.  You can generate as many points as you wish, but the\n> > approach is brute-force and is very inefficient - it takes on the\n> > order of a 1000 tries to find one feasible point.\n> >\n> >  Thanks again, Ravi. Actually, the LP approach also works here. Let\n> >  g(X) >= k be the constraints. Then, by solving a LP problem with the\n> >  constraints\n> >\n> >  g(X) >= (k+0.2)\n> >\n> >  returns an interior starting value for constrOptim. I am aware that\n> >  the new set of constraints may correspond to an impossible linear\n> >  system, but it works in many cases.\n> >\n> >  Paul\n> >\n> >  > ----- Original Message -----\n> >  > From: Paul Smith \n> >  > Date: Tuesday, July 3, 2007 7:32 pm\n> >  > Subject: Re: [R] Fine tunning rgenoud\n> >  > To: R-help \n> >  >\n> >  >\n> >  > > On 7/4/07, Ravi Varadhan  wrote:\n> >  > >  > It should be easy enough to check that your solution is valid\n> > (i.e.\n> >  > > a local\n> >  > >  > minimum):  first, check to see if the solution satisfies all the\n> >  > >  > constraints; secondly, check to see if it is an interior point\n> >  > > (i.e. none of\n> >  > >  > the constraints become equality); and finally, if the solution\n> > is an\n> >  > >  > interior point, check to see whether the gradient there is\n> > close to\n> >  > > zero.\n> >  > >  > Note that if the solution is one of the vertices of the polyhedron,\n> >  > > then the\n> >  > >  > gradient may not be zero.\n> >  > >\n> >  > >  I am having bad luck: all constraints are satisfied, but the solution\n> >  > >  given by constrOptim is not interior; the gradient is not equal\n> > to\n> >  > >  zero.\n> >  > >\n> >  > >  Paul\n> >  > >\n> >  > >\n> >  > >  > -----Original Message-----\n> >  > >  > From: r-help-bounces@stat.math.ethz.ch\n> >  > >  > [ On Behalf Of Paul Smith\n> >  > >  > Sent: Tuesday, July 03, 2007 5:10 PM\n> >  > >  > To: R-help\n> >  > >  > Subject: Re: [R] Fine tunning rgenoud\n> >  > >  >\n> >  > >  > On 7/3/07, Ravi Varadhan  wrote:\n> >  > >  > > You had indicated in your previous email that you are having\n> > trouble\n> >  > >  > finding\n> >  > >  > > a feasible starting value for constrOptim().  So, you basically\n> >  > > need to\n> >  > >  > > solve a system of linear inequalities to obtain a starting point.\n> >  > >  Have\n> >  > >  > you\n> >  > >  > > considered using linear programming? Either simplex() in the\n> > \"boot\"\n> >  > >  > package\n> >  > >  > > or solveLP() in \"linprog\" would work.  It seems to me that you\n> >  > > could use\n> >  > >  > any\n> >  > >  > > linear objective function in solveLP to obtain a feasible\n> >  > > starting point.\n> >  > >  > > This is not the most efficient solution, but it might be\n> > worth a\n> >  > > try.\n> >  > >  > >\n> >  > >  > > I am aware of other methods for generating n-tuples that satisfy\n> >  > > linear\n> >  > >  > > inequality constraints, but AFAIK those are not available in\n> > R.\n> >  > >  >\n> >  > >  > Thanks, Ravi. I had already conceived the solution that you suggest,\n> >  > >  > actually using \"lpSolve\". I am able to get a solution for my problem\n> >  > >  > with constrOptim, but I am not enough confident that the\n> > solution is\n> >  > >  > right. That is why I am trying to get a solution with rgenoud,\n> > but\n> >  > >  > unsuccessfully until now.\n> >  > >  >\n> >  > >  > Paul\n> >  > >  >\n> >  > >  >\n> >  > >  >\n> >  > >  > > -----Original Message-----\n> >  > >  > > From: r-help-bounces@stat.math.ethz.ch\n> >  > >  > > [ On Behalf Of Paul Smith\n> >  > >  > > Sent: Tuesday, July 03, 2007 4:10 PM\n> >  > >  > > To: R-help\n> >  > >  > > Subject: [R] Fine tunning rgenoud\n> >  > >  > >\n> >  > >  > > Dear All,\n> >  > >  > >\n> >  > >  > > I am trying to solve the following maximization problem, but\n> > I cannot\n> >  > >  > > have rgenoud giving me a reliable solution.\n> >  > >  > >\n> >  > >  > > Any ideas?\n> >  > >  > >\n> >  > >  > > Thanks in advance,\n> >  > >  > >\n> >  > >  > > Paul\n> >  > >  > >\n> >  > >  > > ----------------------------\n> >  > >  > > library(rgenoud)\n> >  > >  > >\n> >  > >  > > v <- 0.90\n> >  > >  > > O1 <- 10\n> >  > >  > > O2 <- 20\n> >  > >  > > O0 <- v*O1+(1-v)*O2\n> >  > >  > >\n> >  > >  > > myfunc <- function(x) {\n> >  > >  > >   U0 <- x[1]\n> >  > >  > >   U1 <- x[2]\n> >  > >  > >   U2 <- x[3]\n> >  > >  > >   q0 <- x[4]\n> >  > >  > >   q1 <- x[5]\n> >  > >  > >   q2 <- x[6]\n> >  > >  > >   p <- x[7]\n> >  > >  > >\n> >  > >  > >   if (U0 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if (U1 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if (U2 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if ((U0-(U1+(O1-O0)*q1)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if ((U0-(U2+(O2-O0)*q2)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if ((U1-(U0+(O0-O1)*q0)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if ((U1-(U2+(O2-O1)*q2)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if((U2-(U0+(O0-O2)*q0)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if((U2-(U1+(O1-O2)*q1)) < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if(p < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if(p > 1)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if(q0 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if(q1 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else if(q2 < 0)\n> >  > >  > >     return(-1e+200)\n> >  > >  > >   else\n> >  > >  > >\n> >  > >  > return(p*(sqrt(q0)-(O0*q0+U0))+(1-p)*(v*(sqrt(q1)-(O1*q1+U1))+(1-v)*(sqrt(q2\n> >  > >  > > )-(O2*q2+U2))))\n> >  > >  > >\n> >  > >  > > }\n> >  > >  > >\n> >  > >  > genoud(myfunc,nvars=7,max=T,pop.size=6000,starting.values=runif(7),wait.gene\n> >  > >  > > rations=150,max.generations=300,boundary.enforcement=2)\n> >  > >  > >\n> >  > >  > > ______________________________________________\n> >  > >  > > R-help@stat.math.ethz.ch mailing list\n> >  > >  > >\n> >  > >  > > PLEASE do read the posting guide\n> >  > >  >\n> >  > >  > > and provide commented, minimal, self-contained, reproducible\n> > code.\n> >  > >  > >\n> >  > >  >\n> >  > >  > ______________________________________________\n> >  > >  > R-help@stat.math.ethz.ch mailing list\n> >  > >  >\n> >  > >  > PLEASE do read the posting guide\n> >  > >  > and provide commented, minimal, self-contained, reproducible code.\n> >  > >  >\n> >  > >\n> >  > >  ______________________________________________\n> >  > >  R-help@stat.math.ethz.ch mailing list\n> >  > >\n> >  > >  PLEASE do read the posting guide\n> >  > >  and provide commented, minimal, self-contained, reproducible code.\n> >  >\n> >  >\n> >\n> >  ______________________________________________\n> >  R-help@stat.math.ethz.ch mailing list\n> >\n> >  PLEASE do read the posting guide\n> >  and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}