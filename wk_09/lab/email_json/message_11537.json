{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 171: - expanded status to include count of each call type in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 171\nrevision-id: tridge@samba.org-20070420110253-c6f53b7412bca669\nparent: tridge@samba.org-20070420100747-e2555d41345ac055\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Fri 2007-04-20 21:02:53 +1000\nmessage:\n  - expanded status to include count of each call type\n  - added lockwait latency\nmodified:\n  common/ctdb.c                  ctdb.c-20061127094323-t50f58d65iaao5of-2\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_status.c            ctdb_status.c-20070420100703-w2y116bm9be7hmlv-2\n=== modified file 'common/ctdb.c'\n--- a/common/ctdb.c\t2007-04-20 10:07:47 +0000\n+++ b/common/ctdb.c\t2007-04-20 11:02:53 +0000\n@@ -246,34 +246,42 @@\n \n \tswitch (hdr->operation) {\n \tcase CTDB_REQ_CALL:\n+\t\tctdb->status.count.req_call++;\n \t\tctdb_request_call(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REPLY_CALL:\n+\t\tctdb->status.count.reply_call++;\n \t\tctdb_reply_call(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REPLY_ERROR:\n+\t\tctdb->status.count.reply_error++;\n \t\tctdb_reply_error(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REPLY_REDIRECT:\n+\t\tctdb->status.count.reply_redirect++;\n \t\tctdb_reply_redirect(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_DMASTER:\n+\t\tctdb->status.count.req_dmaster++;\n \t\tctdb_request_dmaster(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REPLY_DMASTER:\n+\t\tctdb->status.count.reply_dmaster++;\n \t\tctdb_reply_dmaster(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_MESSAGE:\n+\t\tctdb->status.count.req_message++;\n \t\tctdb_request_message(ctdb, hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_FINISHED:\n+\t\tctdb->status.count.req_finished++;\n \t\tctdb_request_finished(ctdb, hdr);\n \t\tbreak;\n \n\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-04-20 10:07:47 +0000\n+++ b/common/ctdb_daemon.c\t2007-04-20 11:02:53 +0000\n@@ -443,6 +443,7 @@\n \tstruct ctdb_req_header *hdr = (struct ctdb_req_header *)data;\n \tstruct ctdb_client *client = talloc_get_type(p, struct ctdb_client);\n \tTALLOC_CTX *tmp_ctx;\n+\tstruct ctdb_context *ctdb = client->ctdb;\n \n \t/* place the packet as a child of a tmp_ctx. We then use\n \t   talloc_free() below to free it. If any of the calls want\n@@ -463,26 +464,32 @@\n \n \tswitch (hdr->operation) {\n \tcase CTDB_REQ_CALL:\n+\t\tctdb->status.client.req_call++;\n \t\tdaemon_request_call_from_client(client, (struct ctdb_req_call *)hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_REGISTER:\n+\t\tctdb->status.client.req_register++;\n \t\tdaemon_request_register_message_handler(client, \n \t\t\t\t\t\t\t(struct ctdb_req_register *)hdr);\n \t\tbreak;\n \tcase CTDB_REQ_MESSAGE:\n+\t\tctdb->status.client.req_message++;\n \t\tdaemon_request_message_from_client(client, (struct ctdb_req_message *)hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_CONNECT_WAIT:\n+\t\tctdb->status.client.req_connect_wait++;\n \t\tdaemon_request_connect_wait(client, (struct ctdb_req_connect_wait *)hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_SHUTDOWN:\n+\t\tctdb->status.client.req_shutdown++;\n \t\tdaemon_request_shutdown(client, (struct ctdb_req_shutdown *)hdr);\n \t\tbreak;\n \n \tcase CTDB_REQ_STATUS:\n+\t\tctdb->status.client.req_status++;\n \t\tdaemon_request_status(client, (struct ctdb_req_status *)hdr);\n \t\tbreak;\n \n\n=== modified file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t2007-04-20 10:07:47 +0000\n+++ b/common/ctdb_lockwait.c\t2007-04-20 11:02:53 +0000\n@@ -35,7 +35,7 @@\n \tpid_t child;\n \tvoid *private_data;\n \tvoid (*callback)(void *);\n-\tstruct timeval t;\n+\tstruct timeval start_time;\n };\n \n static void lockwait_handler(struct event_context *ev, struct fd_event *fde, \n@@ -48,7 +48,7 @@\n \tpid_t child = h->child;\n \ttalloc_set_destructor(h, NULL);\n \tclose(h->fd[0]);\n-\tDEBUG(3,(__location__ \" lockwait took %.6f seconds\\n\", timeval_elapsed(&h->t)));\n+\tctdb_latency(&h->ctdb->status.max_lockwait_latency, h->start_time);\n \th->ctdb->status.pending_lockwait_calls--;\n \ttalloc_free(h);\t\n \tcallback(p);\n@@ -133,7 +133,7 @@\n \t\treturn NULL;\n \t}\n \n-\tresult->t = timeval_current();\n+\tresult->start_time = timeval_current();\n \n \treturn result;\n }\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-04-20 10:07:47 +0000\n+++ b/include/ctdb_private.h\t2007-04-20 11:02:53 +0000\n@@ -122,6 +122,25 @@\n \tuint32_t client_packets_recv;\n \tuint32_t node_packets_sent;\n \tuint32_t node_packets_recv;\n+\tstruct {\n+\t\tuint32_t req_call;\n+\t\tuint32_t reply_call;\n+\t\tuint32_t reply_redirect;\n+\t\tuint32_t req_dmaster;\n+\t\tuint32_t reply_dmaster;\n+\t\tuint32_t reply_error;\n+\t\tuint32_t req_message;\n+\t\tuint32_t req_finished;\n+\t} count;\n+\tstruct {\n+\t\tuint32_t req_call;\n+\t\tuint32_t req_message;\n+\t\tuint32_t req_finished;\n+\t\tuint32_t req_register;\n+\t\tuint32_t req_connect_wait;\n+\t\tuint32_t req_shutdown;\n+\t\tuint32_t req_status;\n+\t} client;\n \tuint32_t total_calls;\n \tuint32_t pending_calls;\n \tuint32_t lockwait_calls;\n\n=== modified file 'tools/ctdb_status.c'\n--- a/tools/ctdb_status.c\t2007-04-20 10:07:47 +0000\n+++ b/tools/ctdb_status.c\t2007-04-20 11:02:53 +0000\n@@ -33,8 +33,24 @@\n {\n \tprintf(\" client_packets_sent     %u\\n\", s->client_packets_sent);\n \tprintf(\" client_packets_recv     %u\\n\", s->client_packets_recv);\n+\tprintf(\"   req_call              %u\\n\", s->client.req_call);\n+\tprintf(\"   req_message           %u\\n\", s->client.req_message);\n+\tprintf(\"   req_finished          %u\\n\", s->client.req_finished);\n+\tprintf(\"   req_register          %u\\n\", s->client.req_register);\n+\tprintf(\"   req_connect_wait      %u\\n\", s->client.req_connect_wait);\n+\tprintf(\"   req_shutdown          %u\\n\", s->client.req_shutdown);\n+\tprintf(\"   req_status            %u\\n\", s->client.req_status);\n \tprintf(\" node_packets_sent       %u\\n\", s->node_packets_sent);\n \tprintf(\" node_packets_recv       %u\\n\", s->node_packets_recv);\n+\tprintf(\"   req_call              %u\\n\", s->client.req_call);\n+\tprintf(\"   reply_call            %u\\n\", s->count.reply_call);\n+\tprintf(\"   reply_redirect        %u\\n\", s->count.reply_redirect);\n+\tprintf(\"   req_dmaster           %u\\n\", s->count.req_dmaster);\n+\tprintf(\"   reply_dmaster         %u\\n\", s->count.reply_dmaster);\n+\tprintf(\"   reply_error           %u\\n\", s->count.reply_error);\n+\tprintf(\"   reply_redirect        %u\\n\", s->count.reply_redirect);\n+\tprintf(\"   req_message           %u\\n\", s->count.req_message);\n+\tprintf(\"   req_finished          %u\\n\", s->count.req_finished);\n \tprintf(\" total_calls             %u\\n\", s->total_calls);\n \tprintf(\" pending_calls           %u\\n\", s->pending_calls);\n \tprintf(\" lockwait_calls          %u\\n\", s->lockwait_calls);\n\n"}