{"category": "ham", "to_address": "\"Karyn Williams\" <karyn@calarts.edu>, beginners@perl.org", "from_address": "\"Adriano Ferreira\" <a.r.ferreira@gmail.com>", "subject": "Re: Redirecting STDOUT & STDERR", "body": "On 5/7/07, Karyn Williams  wrote:\n> I have this script I have been working on where I need to redirect STDOUT\n> and STDERR to files at the beginning of the script and then back to default\n> (terminal) at the end of the script. I found an example on-line and used it\n> and it works, however it generates a warning when running my script. I\n> would prefer to make that warning go away. This is the output of the script:\n\nIIRC, you may get rid of these warnings with at least two different solutions:\n\n(1) cheat, and tell Perl not to warn on things it \"thinks\" to have\nbeen used only once\n\n     no warnings \"once\";  # would be enough\n\n> alum# ./match.pl\n> Name \"main::OLDERR\" used only once: possible typo at ./match.pl line 38.\n> Name \"main::OLDOUT\" used only once: possible typo at ./match.pl line 37.\n\nBecause the warnings are just that: the Perl interpreter thinks OLDERR\nand OLDOUT were used just once, because they show up in the open\nstatements and again when you restore the STDOUT and STDERR.\n\n> open(STDOUT, \">&OLDOUT\");\n> open(STDERR, \">&OLDERR\");\n\nBut in these, they are part of a string and the interpreter could not\ndetect by syntactical means that they will be used again.\n\n(2) As you're duping, I think you may close the handles explicitly\nafter the restoration of STDOUT and STDERR.\n\nclose OLDOUT;\nclose OLDERR;\n\nIn this case, Perl would see a second use of these handles and will\nnot complain.\n\nRegards,\nAdriano Ferreira.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}