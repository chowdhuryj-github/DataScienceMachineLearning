{"category": "ham", "to_address": "Perl List <beginners@perl.org>", "from_address": "oryann9 <oryann9@yahoo.com>", "subject": "Re: Nested loop", "body": "--- Chas Owens  wrote:\n\n> On 4/19/07, John W. Krahn  wrote:\n> > Chas Owens wrote:\n> > > Yes, foreach was aliased to for for backwards\n> compatibility,\n> >\n> > Huh?  Do you have something to back up that claim?\n> \n> Well, perlsyn* says\n>        The \"foreach\" keyword is actually a synonym\n> for the \"for\" keyword, so\n>        you can use \"foreach\" for readability or\n> \"for\" for brevity.  (Or\n>        because the Bourne shell is more familiar to\n> you than csh, so writing\n>        \"for\" comes more naturally.)\n> \n> But Synopsis 4* says\n>        There is no foreach statement any more. It's\n> always spelled for\n> in Perl 6,\n>        so it always takes a list as an argument\n> \n> So, you can either start training yourself to say\n> for instead of\n> foreach now or wait for culture shock down the road.\n> \n\nIt really does not matter to me which one I use b/c\nthey both work well and seem to produce the same\nresults in all my tested code.  Its like asking me\nwould you like that coffee with cream/sugar or black.\nANSWER: I like coffee black and with cream/sugar, it\ndoes not matter much and it all depends upon my mood.\n\nInteresting though I ran perl -MO=Deparse on this\ncode...\n\nderek.smith@dubmdsmith10 /cygdrive/c/temp\n$ cat foo1\nfor my $i (0 .. 3) {\n   $i *= 3;\n   print $i,\"\\n\";\n}\nprint \"\\n\\n\";\nfor my $i (map { $_ * 3 } 0 .. 3) {\n        print \"$i\\n\";\n}\n\n$ perl -MO=Deparse foo1\nforeach my $i (0 .. 3) {\n    $i *= 3;\n    print $i, \"\\n\";\n}\nprint \"\\n\\n\";\nforeach my $i (map {$_ * 3;} 0..3) {\n    print \"$i\\n\";\n}\nfoo1 syntax OK\n\nSo is foreach really dead or going away?\nBTW Great write up Chas!\n\n$ perl -v\n\nThis is perl, v5.8.7 built for\ncygwin-thread-multi-64int\n(with 1 registered patch, see perl -V for more detail)\n\n__________________________________________________\nDo You Yahoo!?\nTired of spam?  Yahoo! Mail has the best spam protection around \nhttp://mail.yahoo.com \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}