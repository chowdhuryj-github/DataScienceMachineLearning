{"category": "ham", "to_address": "sigzero@gmail.com", "from_address": "yaron@kahanovitch.com", "subject": "Re: looping through a file", "body": "Hi,\n\nevery outer loop you are reading all the $AFILE lines. From the second loop the Descriptor points to the end. If you want to work this way you seed to lseek to the begin. \nIf you you have a variable that holds the file contents you can do the following:\n\nmy @lines = <$AFILE>;\nforeach my $prime_id ( @id_hits ) {\n     foreach my $line( @lines ) {\n         if ( $line =~ /$prime_id/ ) {\n             print \"$line\\n\";\n             next;\n         }\n     }\n}\n\n\nHope that helps\n\nYaron Kahanovitch\n----- Original Message -----\nFrom: \"Robert Hicks\" \nTo: beginners@perl.org\nSent: Tuesday, May 8, 2007 4:39:12 PM (GMT+0200) Auto-Detected\nSubject: Re: looping through a file\n\nI decided to back up a bit and try a more simple routine. I have the \narray @id_hits populated and I can search the log for the line and print \nit. The problem is it only finds the first match and that is it.\n\nforeach my $prime_id ( @id_hits ) {\n     while ( my $line = <$AFILE> ) {\n         if ( $line =~ /$prime_id/ ) {\n             print \"$line\\n\";\n             next;\n         }\n     }\n}\n\nDo I need to pass it back to the foreach somehow?\n\nRobert\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}