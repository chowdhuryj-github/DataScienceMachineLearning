{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Jerry Gay (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #42974] [BUG] Hungry Alligator Eats Integer; Developer Registers Complaint ", "body": "# New Ticket Created by  Jerry Gay \n# Please include the string:  [perl #42974]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nit looks like the register alligator is eating integers in this code:\n\n.const int TESTS = 2\n\n.sub 'main' :main\n    load_bytecode 'Test/More.pir'\n    .local pmc exp, test_ns\n    test_ns = get_namespace ['Test::More']\n    exp     = new 'Exporter'\n    exp.'source'(test_ns)\n    exp.'import'('plan ok is diag isa_ok' :named('globals'))\n\n    plan(TESTS)\n\n    .local pmc attrs\n    attrs = new 'Hash'\n\n    .local pmc red, green, blue\n    attrs['name'] = 'Red'\n    red           = new 'Role', attrs\n\n    attrs['name'] = 'Green'\n    green         = new 'Role', attrs\n\n    attrs['name'] = 'Blue'\n    blue          = new 'Role', attrs\n\n    green.'add_role'( blue )\n\n    .local pmc color\n    color = new 'Class'\n\n    $S0 = 'Red'\n    $I0 = color.'does'($S0)\n    is($I0, 0, 'does not Red')\n\n    color.'add_role'( red )\n    $I0 = color.'does'($S0)\n    is($I0, 1, 'does Red')\n.end\n\n\nwhich produces:\n\n1..2\nok 1 - does not Red\nnot ok 2 - does Red\n# Received: -888\n# Expected: 1\n\n\neither something's fishy in the PCCRETURN code, or the register\nallocator. the -888 is a dead giveaway that an integer register has\nbeen eaten. it's possible it's isolated in code called from the\n'add_role' method in the Class PMC... this bug is preventing me from\ntesting that code.\n\n~jerry\n\n"}