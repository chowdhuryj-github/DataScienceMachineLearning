{"category": "ham", "to_address": "\"Izmirlian, Grant (NIH/NCI) [E]\" <izmirlig@mail.nih.gov>", "from_address": "\"Spielas Bates\" <bates@stat.wisc.edu>", "subject": "Re: [R] LME: internal workings of QR factorization", "body": "On 4/12/07, Izmirlian, Grant (NIH/NCI) [E]  wrote:\n> Hi:\n>\n> I've been reading \"Computational Methods for Multilevel Modeling\" by Pinheiro and Bates, the idea of embedding the technique in my own c-level code. The basic idea is to rewrite the joint density in a form to mimic a single least squares problem conditional upon the variance parameters.  The paper is fairly clear except that some important level of detail is missing. For instance, when we first meet Q_(i):\n>\n> /                    \\                  /                                 \\\n> | Z_i     X_i   y_i  |                  | R_11(i)     R_10(i)     c_1(i)  |\n> |                    | =         Q_(i)  |                                 |\n> | Delta   0     0    |                  |   0         R_00(i)     c_0(i)  |\n> \\                    /                  \\                                 /\n>\n> the text indicates that the Q-R factorization is limited to the first q columns of the augmented matrix on the left.  If one plunks the first\n> q columns of the augmented matrix on the left into a qr factorization, one obtains an orthogonal matrix Q that is (n_i + q) x q and a nonsingular upper triangular matrix R that is q x q.  While the text describes R as a nonsingular upper triangular q x q, the matrix Q_(i) is described as a square (n_i + q) x (n_i + q) orthogonal matrix.  The remaining columns in the matrix to the right are defined by applying transpose(Q_(i)) to both sides.  The question is how to augment my Q which is orthogonal (n_i + q) x q  with the missing (n_i + q) x n_i portion producing the orthogonal square matrix mentioned in the text?  I tried appending the n_i x n_i identity matrix to the block diagonal, but this doesn't work as the resulting likelihood is insensitive to the variance parameters.\n>\n> Grant Izmirlian\n\n\nThe QR decomposition of an n by p matrix (n > p) can be written as the\nproduct of an orthogonal n by n matrix Q and an n by p matrix R which\nis zero below the main diagonal.  Because the rows of R beyond the pth\nare zero, there is no need to store them.  For some purposes it is\nmore convenient to write the decomposition as the product of Q1, an n\nby p matrix with orthonormal columns and R1 a p by p upper triangular\nmatrix.\n\nIf you are going to be incorporating calculations like this in your\nown code I would recommend looking at the \"Implementation\" vignette in\nthe lme4 package.  It describes the computational approach used in the\nlatest version of lmer (currently called lmer2 but to become lmer at\nsome point) which allows for multiple non-nested grouping factors.\nThe techniques that Jose and I describe in the paper you mention only\nhandles nested grouping factors cleanly.\n\nThat vignette has been updated after the last release of the lme4\npackage.  You can get the expanded version from the SVN repository or\nwait until after R-2.5.0 is released and we release new versions of\nthe Matrix and lme4 packages for R-2.5.0.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}