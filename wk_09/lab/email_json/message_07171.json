{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 117: darn, forgot this in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 117\nrevision-id: tridge@samba.org-20070416214127-25dea7f95ada8a59\nparent: tridge@samba.org-20070416141104-3c489b41c92932d3\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-04-17 07:41:27 +1000\nmessage:\n  darn, forgot this\nadded:\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\nmodified:\n  tests/lockwait.c               lockwait.c-20070416055753-3ztnb4cxqgamfudx-1\n=== added file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t1970-01-01 00:00:00 +0000\n+++ b/common/ctdb_lockwait.c\t2007-04-16 21:41:27 +0000\n@@ -0,0 +1,108 @@\n+/* \n+   wait for a tdb chain lock\n+\n+   Copyright (C) Andrew Tridgell  2006\n+\n+   This library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2 of the License, or (at your option) any later version.\n+\n+   This library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with this library; if not, write to the Free Software\n+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+*/\n+\n+#include \"includes.h\"\n+#include \"lib/events/events.h\"\n+#include \"system/filesys.h\"\n+#include \"system/wait.h\"\n+#include \"popt.h\"\n+#include \"../include/ctdb_private.h\"\n+#include \"db_wrap.h\"\n+#include \"lib/tdb/include/tdb.h\"\n+\n+\n+struct lockwait_handle {\n+\tstruct fd_event *fde;\n+\tint fd[2];\n+\tpid_t child;\n+\tvoid *private_data;\n+\tvoid (*callback)(void *);\n+};\n+\n+static void lockwait_handler(struct event_context *ev, struct fd_event *fde, \n+\t\t\t     uint16_t flags, void *private_data)\n+{\n+\tstruct lockwait_handle *h = talloc_get_type(private_data, \n+\t\t\t\t\t\t     struct lockwait_handle);\n+\tvoid (*callback)(void *) = h->callback;\n+\tvoid *p = h->private_data;\n+\ttalloc_set_destructor(h, NULL);\n+\tclose(h->fd[0]);\n+\ttalloc_free(h);\t\n+\tcallback(p);\n+\twaitpid(h->child, NULL, 0);\n+}\n+\n+static int lockwait_destructor(struct lockwait_handle *h)\n+{\n+\tclose(h->fd[0]);\n+\tkill(h->child, SIGKILL);\n+\twaitpid(h->child, NULL, 0);\n+\treturn 0;\n+}\n+\n+\n+struct lockwait_handle *ctdb_lockwait(struct ctdb_db_context *ctdb_db,\n+\t\t\t\t      TDB_DATA key,\n+\t\t\t\t      void (*callback)(void *), void *private_data)\n+{\n+\tstruct lockwait_handle *h;\n+\tint ret;\n+\n+\th = talloc_zero(ctdb_db, struct lockwait_handle);\n+\tif (h == NULL) {\n+\t\treturn NULL;\n+\t}\n+\n+\tret = pipe(h->fd);\n+\tif (ret != 0) {\n+\t\ttalloc_free(h);\n+\t\treturn NULL;\n+\t}\n+\n+\th->child = fork();\n+\tif (h->child == (pid_t)-1) {\n+\t\tclose(h->fd[0]);\n+\t\tclose(h->fd[1]);\n+\t\ttalloc_free(h);\n+\t\treturn NULL;\n+\t}\n+\n+\th->callback = callback;\n+\th->private_data = private_data;\n+\n+\tif (h->child == 0) {\n+\t\tstruct tdb_context *tdb = ctdb_db->ltdb->tdb;\n+\t\t/* in child */\n+\t\ttdb_chainlock(tdb, key);\n+\t\t_exit(0);\n+\t}\n+\n+\tclose(h->fd[1]);\n+\ttalloc_set_destructor(h, lockwait_destructor);\n+\n+\th->fde = event_add_fd(ctdb_db->ctdb->ev, h, h->fd[0], EVENT_FD_READ, lockwait_handler, h);\n+\tif (h->fde == NULL) {\n+\t\ttalloc_free(h);\n+\t\treturn NULL;\n+\t}\n+\n+\treturn h;\n+}\n\n=== modified file 'tests/lockwait.c'\n--- a/tests/lockwait.c\t2007-04-16 14:11:04 +0000\n+++ b/tests/lockwait.c\t2007-04-16 21:41:27 +0000\n@@ -41,7 +41,6 @@\n \t\t\t\t\t\t     struct lockwait_handle);\n \tvoid (*callback)(void *) = h->callback;\n \tvoid *p = h->private_data;\n-\tprintf(\"%s\\n\", __location__);\n \ttalloc_set_destructor(h, NULL);\n \tclose(h->fd[0]);\n \ttalloc_free(h);\t\n\n"}