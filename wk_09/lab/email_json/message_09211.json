{"category": "ham", "to_address": "chromatic <chromatic@wgz.org>", "from_address": "\"Alek Storm\" <alek.storm@gmail.com>", "subject": "Re: [perl #42430] [PATCH] make :vtable imply :method", "body": "On 4/18/07, chromatic  wrote:\n> > Making :method mean one thing when used with :vtable, and something\n> > completely different without, seems like a really bad idea to me, and\n> > is confusing to the user.  The user will also be confused because\n> > adding :vtable removes it from the namespace, which they didn't\n> > explicitly ask it to do.\n>\n> I don't see why this is confusing.  Normal vtable methods (the ones defined\n> in C, for example) are not visible:\n\nVtable methods defined in C are visible from C.  Therefore, it makes\nsense that vtable methods defined in PIR are visible from PIR, at\nleast by default.  Making :vtable imply :anon might be unintuitive to\nusers.  Besides that, there's still the problem of :method meaning two\ndifferent things with that implementation.  Basically, in a non-vtable\nsub, there is the :anon flag to detach it from the namespace, but in a\nvtable sub, it's detached by default, and the :method flag attaches it\nto the namespace.  Reversal bad.  Continuity good.\n\n-- \nAlek Storm\n\n"}