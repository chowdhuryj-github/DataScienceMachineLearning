{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Allen McIntosh <mcintosh@research.telcordia.com>", "subject": "[R] Passing single precision arrays to legacy code", "body": "System: Fedora Core 5\nR: 2.2.1 and 2.4.1, complied from source\ngcc: 4.1.1\n\nI'm trying to pass a single precision array to some legacy code.  I \nultimately got the code working by ignoring part of the help \ndocumentation.  The code is actually in Fortran, but the following C \nprogram illustrates the problem:\n\n$  cat foo.c\n#include \nvoid\nfoo(float *t) {\n         int *bar;\n         float f;\n         double d;\n         bar = (int *) t;\n         printf(\"hello world\\n\");\n         printf(\"%f %f\\n\", t[0], t[1]);\n         printf(\"%08x %08x %08x\\n\", bar[0], bar[1], bar[2]);\n         f = 1.0;\n         bar = (int *)&f\n         printf(\"(float) 1.0 in hex: %08x\\n\", bar[0]);\n         d = 1.0;\n         bar = (int *)&d\n         printf(\"(double) 1.0 in hex: %08x %08x\\n\", bar[0], bar[1]);\n}\n\n$ gcc -O0 -c foo.c\n$ gcc -shared -o foo.so foo.o\n$ R\n\nR version 2.4.1 (2006-12-18)\nCopyright (C) 2006 The R Foundation for Statistical Computing\nISBN 3-900051-07-0\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n > dyn.load(\"foo.so\")\n > .C(\"foo\", as.single(1:3), DUP=F, PACKAGE=\"foo\")\nhello world\n0.000000 1.875000\n00000000 3ff00000 00000000\n(float) 1.0 in hex: 3f800000\n(double) 1.0 in hex: 00000000 3ff00000\n[[1]]\n[1] 1 2 3\nattr(,\"Csingle\")\n[1] TRUE\n\nIt's pretty clear from this that the array is getting passed as double, \ndespite the documentation:\n\n > help(.C)\n... stuff omitted...\n      Numeric vectors in R will be passed as type 'double *' to C (and\n      as 'double precision' to Fortran) unless (i) '.C' or '.Fortran' is\n      used, (ii) 'DUP' is false and (iii) the argument has attribute\n      'Csingle' set to 'TRUE' (use 'as.single' or 'single').  This\n      mechanism is only intended to be used to facilitate the\n      interfacing of existing C and Fortran code.\n\n\n\nThe online \"Writing R Extensions\" document doesn't mention DUP, and \nindeed the following works:\n\n > .C(\"foo\", as.single(1:3), DUP=T, PACKAGE=\"foo\")\nhello world\n1.000000 2.000000\n3f800000 40000000 40400000\n(float) 1.0 in hex: 3f800000\n(double) 1.0 in hex: 00000000 3ff00000\n[[1]]\n[1] 1 2 3\nattr(,\"Csingle\")\n[1] TRUE\n\nSo is the help document incorrect?\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}