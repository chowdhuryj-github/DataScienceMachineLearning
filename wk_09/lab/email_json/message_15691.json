{"category": "ham", "to_address": "Allison Randal <allison@perl.org>", "from_address": "Jonathan Worthington <jonathan@jnthn.net>", "subject": "Re: Is Parrot 1.0 too late?", "body": "Allison Randal wrote:\n> Nicholas Clark wrote:\n>>\n>> I guess that the most obvious current thing that ties Parrot to the Perl\n>> community is that Parrot requires a copy of Perl to bootstrap, and \n>> all the\n>> build tools are written in Perl 5.\n> This is slated to change before the 1.0 release.\nI guess that doing so will involve re-writing a lot of the current \nConfigure system and build tools into something that compiles down to \nPBC (and then just ship something very basic that can run a PBC). I \ndon't think PIR is the thing to translate them to though - Configure and \nthe build tools are fairly big things. You don't want to be doing that \nin an intermediate language. Well, I sure don't anyway, and I'm sure I'm \nnot alone in feeling this way.\n\nOne option would be a HLL that maps very closely down to the features of \nParrot, but really is a high level language. I say maps down closely \nbecause then you don't have to worry about matching the semantics of \nsome existing language, making it somewhat simpler to Get Done.\n\nAnother option is for any of the HLLs in languages/ to get to the stage \nwhere we can port Configure to them. OK, well, not BF. ;-) But then you \nhave the advantage of it being a language that some people already know. \nOf course, we may run into the fun of \"we should do it in X because it's \nmy favorite language\" kinda things, if we have multiple Parrot-targeting \nHLLs in shape by then. Though the simple answer to that is to make a \ndecision and tell people to put up with it. :-)\n\nIMHO, etc.\n\nJonathan\n\n"}