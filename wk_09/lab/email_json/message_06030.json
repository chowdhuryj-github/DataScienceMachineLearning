{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22216 - in branches/SAMBA_4_0/source:\n\tlib/replace lib/replace/test torture/local", "body": "Author: metze\nDate: 2007-04-15 16:13:06 +0000 (Sun, 15 Apr 2007)\nNew Revision: 22216\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22216\n\nLog:\nmove strptime testsuite into it's own file\nso we can include it for the configure test\n\nas it seems that strptime() is really broken on some hosts\nin the build farm, re should use the replacement code\nwhen we detect this in the configure test\n\nmetze\nAdded:\n   branches/SAMBA_4_0/source/lib/replace/test/strptime.c\nModified:\n   branches/SAMBA_4_0/source/lib/replace/strptime.m4\n   branches/SAMBA_4_0/source/lib/replace/test/testsuite.c\n   branches/SAMBA_4_0/source/torture/local/config.mk\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/replace/strptime.m4\n===================================================================\n--- branches/SAMBA_4_0/source/lib/replace/strptime.m4\t2007-04-14 09:14:40 UTC (rev 22215)\n+++ branches/SAMBA_4_0/source/lib/replace/strptime.m4\t2007-04-15 16:13:06 UTC (rev 22216)\n@@ -1,16 +1,8 @@\n AC_CACHE_CHECK([whether strptime is available and works],libreplace_cv_STRPTIME_OK,[\n \tAC_TRY_RUN([\n-\t\t#include \n-\t\t#include \n-\t\t#include \n-\t\tint main (void) {\n-\t\tconst char *s = \"20061004023546Z\";\n-\t\tchar *ret;\n-\t\tstruct tm t;\n-\t\tret = strptime(s, \"%Y%m%d%H%M%S\", &t);\n-\t\tif ( ret == NULL ) return 1;\n-\t\treturn 0;\n-\t\t}],\n+\t\t#define LIBREPLACE_CONFIGURE_TEST_STRPTIME\n+\t\t#include \"$libreplacedir/test/strptime.c\"\n+\t\t],\n \t\t[libreplace_cv_STRPTIME_OK=yes],\n \t\t[libreplace_cv_STRPTIME_OK=no],\n \t\t[libreplace_cv_STRPTIME_OK=\"assuming not\"])\n\nAdded: branches/SAMBA_4_0/source/lib/replace/test/strptime.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/replace/test/strptime.c\t2007-04-14 09:14:40 UTC (rev 22215)\n+++ branches/SAMBA_4_0/source/lib/replace/test/strptime.c\t2007-04-15 16:13:06 UTC (rev 22216)\n@@ -0,0 +1,152 @@\n+\n+#ifdef LIBREPLACE_CONFIGURE_TEST_STRPTIME\n+\n+#include \n+#include \n+#include \n+\n+#define true 1\n+#define false 0\n+\n+/* make printf a no-op */\n+#define printf if(0) printf\n+\n+#else /* LIBREPLACE_CONFIGURE_TEST_STRPTIME */\n+\n+#include \"replace.h\"\n+#include \"system/time.h\"\n+\n+#endif /* LIBREPLACE_CONFIGURE_TEST_STRPTIME */\n+\n+int libreplace_test_strptime(void)\n+{\n+\tconst char *s = \"20070414101546Z\";\n+\tchar *ret;\n+\tstruct tm t, t2;\n+\n+\tprintf(\"test: strptime\\n\");\n+\n+\tret = strptime(s, \"%Y%m%d%H%M%S\", &t);\n+\tif ( ret == NULL ) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"returned NULL\\n\"\n+\t\t       \"]\\n\");\n+\t\treturn false;\n+\t}\n+\n+\tif ( *ret != 'Z' ) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"ret doesn't point to 'Z'\\n\"\n+\t\t       \"]\\n\");\n+\t\treturn false;\n+\t}\n+\n+\tret = strptime(s, \"%Y%m%d%H%M%SZ\", &t2);\n+\tif ( ret == NULL ) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"returned NULL with Z\\n\"\n+\t\t       \"]\\n\");\n+\t\treturn false;\n+\t}\n+\n+\tif ( *ret != '\\0' ) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"ret doesn't point to '\\\\0'\\n\"\n+\t\t       \"]\\n\");\n+\t\treturn false;\n+\t}\n+\n+\tif (memcmp(&t, &t2, sizeof(t)) == 0) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"result differs if the format string has a 'Z' at the end\\n\"\n+\t\t       \"]\\n\");\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_sec != 46) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_sec: expected: 46, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_sec);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_min != 15) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_min: expected: 15, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_min);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_hour != 10) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_hour: expected: 10, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_hour);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_mday != 14) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_mday: expected: 14, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_mday);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_mon != 3) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_mon: expected: 3, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_mon);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_year != 107) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_year: expected: 107, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_year);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_wday != 6) { /* saturday */\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_wday: expected: 6, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_wday);\n+\t\treturn false;\n+\t}\n+\n+\tif (t.tm_yday != 103) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_yday: expected: 103, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_yday);\n+\t\treturn false;\n+\t}\n+\n+\t/* we don't test this as it depends on the host configuration\n+\tif (t.tm_isdst != 0) {\n+\t\tprintf(\"failure: strptime [\\n\"\n+\t\t       \"tm_isdst: expected: 0, got: %d\\n\"\n+\t\t       \"]\\n\",\n+\t\t       t.tm_isdst);\n+\t\treturn false;\n+\t}*/\n+\n+\tprintf(\"success: strptime\\n\");\n+\n+\treturn true;\n+}\n+\n+#ifdef LIBREPLACE_CONFIGURE_TEST_STRPTIME\n+int main (void)\n+{\n+\tint ret;\n+\tret = libreplace_test_strptime();\n+\tif (ret == false) return 1;\n+\treturn 0;\n+}\n+#endif\n\nModified: branches/SAMBA_4_0/source/lib/replace/test/testsuite.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/replace/test/testsuite.c\t2007-04-14 09:14:40 UTC (rev 22215)\n+++ branches/SAMBA_4_0/source/lib/replace/test/testsuite.c\t2007-04-15 16:13:06 UTC (rev 22216)\n@@ -606,113 +606,11 @@\n \treturn true;\n }\n \n+extern int libreplace_test_strptime(void);\n+\n static int test_strptime(void)\n {\n-\tconst char *s = \"20070414101546Z\";\n-\tchar *ret;\n-\tstruct tm t, t2;\n-\n-\tprintf(\"test: strptime\\n\");\n-\n-\tret = strptime(s, \"%Y%m%d%H%M%S\", &t);\n-\tif ( ret == NULL ) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"returned NULL\\n\"\n-\t\t       \"]\\n\");\n-\t\treturn false;\n-\t}\n-\n-\tret = strptime(s, \"%Y%m%d%H%M%SZ\", &t2);\n-\tif ( ret == NULL ) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"returned NULL with Z\\n\"\n-\t\t       \"]\\n\");\n-\t\treturn false;\n-\t}\n-\n-\tif (memcmp(&t, &t2, sizeof(t)) == 0) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"result differs if the format string has a 'Z' at the end\\n\"\n-\t\t       \"]\\n\");\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_sec != 46) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_sec: expected: 46, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_sec);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_min != 15) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_min: expected: 15, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_min);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_hour != 10) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_hour: expected: 10, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_hour);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_mday != 14) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_mday: expected: 14, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_mday);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_mon != 3) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_mon: expected: 3, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_mon);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_year != 107) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_year: expected: 107, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_year);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_wday != 6) { /* saturday */\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_wday: expected: 6, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_wday);\n-\t\treturn false;\n-\t}\n-\n-\tif (t.tm_yday != 103) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_yday: expected: 103, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_yday);\n-\t\treturn false;\n-\t}\n-\n-\t/* we don't test this as it depends on the host configuration\n-\tif (t.tm_isdst != 0) {\n-\t\tprintf(\"failure: strptime [\\n\"\n-\t\t       \"tm_isdst: expected: 0, got: %d\\n\"\n-\t\t       \"]\\n\",\n-\t\t       t.tm_isdst);\n-\t\treturn false;\n-\t}*/\n-\n-\tprintf(\"success: strptime\\n\");\n-\n-\treturn true;\n+\treturn libreplace_test_strptime();\n }\n \n struct torture_context;\n\nModified: branches/SAMBA_4_0/source/torture/local/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/torture/local/config.mk\t2007-04-14 09:14:40 UTC (rev 22215)\n+++ branches/SAMBA_4_0/source/torture/local/config.mk\t2007-04-15 16:13:06 UTC (rev 22216)\n@@ -14,6 +14,7 @@\n \t\t../../lib/crypto/hmacsha1test.o \\\n \t\t../../lib/talloc/testsuite.o \\\n \t\t../../lib/replace/test/os2_delete.o \\\n+\t\t../../lib/replace/test/strptime.o \\\n \t\t../../lib/replace/test/testsuite.o \\\n \t\tmessaging.o \\\n \t\t../../librpc/tests/binding_string.o \\\n\n"}