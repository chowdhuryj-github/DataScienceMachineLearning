{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Laxminarayan G Kamath A <laxminarayan@deeproot.co.in>", "subject": "Outlook CSV Parser", "body": "\nHi PERLers, \n\tWe here at DeepRoot Linux were trying to parse Outlook's csv so\nthat I can add them to ldap addressbook.. After several futile tries\naround with lots of built in packages, we decided it was up to us to\ndevice an algorithm. As time was of importance , we wrote a \"well it\nworks!\" \"character by character\" parsing perl algorithm. \n        Wondering about how I could make it run faster, I thought I\nwill give regular expressions a try. The attached file is what I have\ncome up to.. but it still takes more than 10 seconds on my 1.6 GHZ P4\nwith 1G RAM to parse a 6500+ lines of CSV . and seperate them  out ..\nLet alone importing them to LDAP. Any ways of optimising it further?\n\tThe stubling blocks : there are several types of problems in\nOutlook's CSV .. \n\t1. One line need not be one record. They may cointain multine\nfields.\n\t2. A sigh of relief but : only multi-line fields are wrapped in\ndouble quotes.\n\t3. commas are both inside and outside the fields. the ones in\nthe fileds must not be treated as \"seperator\" - again fields with\ncommans are wrapped in double quotes.\n \nI hope I am on the right mailing list.. Else, please direct me to the\nproper one.\n\n-- \nCheers,\nLaxminarayan G Kamath A\ne-mail: laxminarayan@deeproot.co.in\nWork URL: http://deeproot.in\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}