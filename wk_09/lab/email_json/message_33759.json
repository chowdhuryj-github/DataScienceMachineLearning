{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r23045 - in\n\tbranches/SAMBA_4_0/source/smb_server/smb2: .", "body": "Author: metze\nDate: 2007-05-21 17:39:05 +0000 (Mon, 21 May 2007)\nNew Revision: 23045\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23045\n\nLog:\nforward SMB2 oplock breaks to the client\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/smb_server/smb2/receive.c\n   branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/smb_server/smb2/receive.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/receive.c\t2007-05-21 17:23:56 UTC (rev 23044)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/receive.c\t2007-05-21 17:39:05 UTC (rev 23045)\n@@ -44,7 +44,7 @@\n \treturn -1;\n }\n \n-static struct smb2srv_request *smb2srv_init_request(struct smbsrv_connection *smb_conn)\n+struct smb2srv_request *smb2srv_init_request(struct smbsrv_connection *smb_conn)\n {\n \tstruct smb2srv_request *req;\n \n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-21 17:23:56 UTC (rev 23044)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-21 17:39:05 UTC (rev 23045)\n@@ -31,9 +31,56 @@\n /*\n   send an oplock break request to a client\n */\n-static NTSTATUS smb2srv_send_oplock_break(void *p, struct ntvfs_handle *ntvfs, uint8_t level)\n+static NTSTATUS smb2srv_send_oplock_break(void *p, struct ntvfs_handle *h, uint8_t level)\n {\n-\tDEBUG(0,(\"TODO: we don't pass SMB2 oplock breaks to the Clients yet!\\n\"));\n+\tstruct smbsrv_handle *handle = talloc_get_type(h->frontend_data.private_data,\n+\t\t\t\t\t\t       struct smbsrv_handle);\n+\tstruct smb2srv_request *req;\n+\tNTSTATUS status;\n+\n+\t/* setup a dummy request structure */\n+\treq = smb2srv_init_request(handle->tcon->smb_conn);\n+\tNT_STATUS_HAVE_NO_MEMORY(req);\n+\n+\treq->in.buffer\t\t= talloc_size(req, NBT_HDR_SIZE + SMB2_MIN_SIZE);\n+\tNT_STATUS_HAVE_NO_MEMORY(req->in.buffer);\n+\treq->in.size\t\t= NBT_HDR_SIZE + SMB2_MIN_SIZE;\n+\treq->in.allocated\t= req->in.size;\n+\n+\treq->in.hdr\t\t= req->in.buffer+ NBT_HDR_SIZE;\n+\treq->in.body\t\t= req->in.hdr\t+ SMB2_HDR_BODY;\n+\treq->in.body_size\t= req->in.size\t- (SMB2_HDR_BODY+NBT_HDR_SIZE);\n+\treq->in.dynamic \t= NULL;\n+\n+\treq->seqnum\t\t= UINT64_MAX;\n+\n+\tSIVAL(req->in.hdr, 0,\t\t\t\tSMB2_MAGIC);\n+\tSSVAL(req->in.hdr, SMB2_HDR_LENGTH,\t\tSMB2_HDR_BODY);\n+\tSSVAL(req->in.hdr, SMB2_HDR_PAD1,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_STATUS,\t\t0);\n+\tSSVAL(req->in.hdr, SMB2_HDR_OPCODE,\t\tSMB2_OP_BREAK);\n+\tSSVAL(req->in.hdr, SMB2_HDR_UNKNOWN1,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_FLAGS,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_CHAIN_OFFSET,\t0);\n+\tSBVAL(req->in.hdr, SMB2_HDR_SEQNUM,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_PID,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_TID,\t\t0);\n+\tSBVAL(req->in.hdr, SMB2_HDR_UID,\t\t0);\n+\tmemset(req->in.hdr+SMB2_HDR_SIG, 0, 16);\n+\n+\tSSVAL(req->in.body, 0, 2);\n+\n+\tstatus = smb2srv_setup_reply(req, 0x18, False, 0);\n+\tNT_STATUS_NOT_OK_RETURN(status);\n+\n+\tSSVAL(req->out.hdr, SMB2_HDR_UNKNOWN1,\t0x0000);\n+\n+\tSSVAL(req->out.body, 0x02, 0x0001);\n+\tSIVAL(req->out.body, 0x04, 0x00000000);\n+\tsmb2srv_push_handle(req->out.body, 0x08, h);\n+\n+\tsmb2srv_send_reply(req);\n+\n \treturn NT_STATUS_OK;\n }\n \n\n"}