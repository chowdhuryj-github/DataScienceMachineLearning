{"category": "ham", "to_address": "gavin.simpson@ucl.ac.uk", "from_address": "Marc Schwartz <marc_schwartz@comcast.net>", "subject": "Re: [R] Names of objects passed as ... to a function?", "body": "On Sat, 2007-06-23 at 15:54 +0100, Gavin Simpson wrote:\n> Dear list,\n> \n> I have a function whose first argument is '...'. Each element of '...'\n> is a data frame, and there will be at least 2 data frames in '...'. The\n> function processes each of the data frames in '...' and returns a list,\n> whose components are the processed data frames. I would like to name the\n> components of this returned list with the names of the original data\n> frames. \n> \n> Normally I'd use deparse(substitute()) to do this, but here I do not\n> know the appropriate argument to run deparse(substitute()) on, and doing\n> this on ... only returns a single \"name\":\n> \n> > foo <- function(...)\n> +                 deparse(substitute(...))\n> > dat1 <- rnorm(10)\n> > dat2 <- runif(10)\n> > foo(dat1, dat2)\n> [1] \"dat1\"\n> \n> Can anyone suggest to me a way to get the names of objects passed as\n> the ... argument of a function?\n> \n> TIA\n> \n> G\n\nGavin,\n\nTry this:\n\nfoo <- function(...)\n{\n  foo.call <- as.character(match.call())[-1]\n  dotargs <- list(...)\n  names(dotargs) <- foo.call\n  dotargs\n}\n\ndat1 <- rnorm(10)\ndat2 <- runif(10)\n\n> foo(dat1, dat2)\n$dat1\n [1]  0.30314712  1.11273051  1.16002159 -1.69579969 -0.54936868\n [6] -0.01931636 -1.56714719 -0.92752592  1.44081430 -0.88249502\n\n$dat2\n [1] 0.53080505 0.55194766 0.42004031 0.23313474 0.08039291 0.69108296\n [7] 0.05794077 0.25523083 0.11331677 0.72618992\n\n\nSee ?match.call\n\nHTH,\n\nMarc Schwartz\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}