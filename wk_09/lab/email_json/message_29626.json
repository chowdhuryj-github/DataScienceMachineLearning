{"category": "ham", "to_address": "Thomas Wittek <mail@gedankenkonstrukt.de>", "from_address": "Frank Wiles <frank@wiles.org>", "subject": "Re: Is Perl 6 too late?", "body": "On Mon, 14 May 2007 12:51:53 +0200\nThomas Wittek  wrote:\n\n> Reason? I still haven't seen a good justification for sigils.\n\n   This may not qualify as a \"good justification\", but it is one I've \n   discussed with others and rings true for many.  Take a look at \n   actual code written in other languages and you'll find many variable\n   names that end in things like _ary, _array, _dict, _list, etc.  to\n   denote the type of container it is. Why?  Because 'foo' doesn't\n   tell you what it is, so programmers compensate with 'foo_dict' or\n   'foo_array' so they don't have to constantly go looking for the \n   definition.  \n\n   With Perl you get that plainly visible with one single character at\n   the beginning of the variable name.  You can differentiate what it\n   is easily, in a consistent way, with only one character. \n\n   Personally, I love sigils for this reason alone.\n\n> To allow arrays and scalars and subs to have the same name (besides\n> the sigil) although they have different content? No good idea I think.\n> I also can't remember that I ever named a variable like a \"reserved \n> word\" or operator. And even if I could, I'd consider it to be bad\n> style.\n\n   Much like your argument about naming variables after reserved\n   words, I see naming an array, scalar, and a sub the same to be\n   bad style.\n\n ---------------------------------\n   Frank Wiles \n   http://www.wiles.org\n ---------------------------------\n\n"}