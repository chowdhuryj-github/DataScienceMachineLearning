{"category": "ham", "to_address": "jim holtman <jholtman@gmail.com>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Rounding?", "body": "On Mon, 11 Jun 2007, jim holtman wrote:\n\n> your number 6.6500000000000001 is to large to fit in a floating point\n> number.  It takes 56 bits and there are only 54 in a real number so the\n> system see it as 6.65 and does the rounding to an even digit; 6.6\n\nI'll take it you mean a IEC60559 double, which has 53 bits in its implied \nmantissa (it stores 52 and for normalized numbers the leading bit is 1 \nand not stored).\n\n> 6.650000000000001 does fit into a real number (takes 54 bits) and this will\n> now round to 6.7\n\nAll you can say quickly is that its representation is greater than \n6.65:\n\n> 6.650000000000001 - 6.65\n[1] 8.881784e-16\n\nBut I don't think that is the explanation.  Remember that you are using \nbinary arithmetic, so each of these numbers is stored with representation \nerror.  As the exact number stored is not '6.65', round-to-even does not \nstrictly apply.\n\nI get\n\n> formatC(6.65,format=\"f\",digits=1)\n[1] \"6.7\"\n> print(6.65, digits=2)\n[1] 6.7\n> print(66.5, digits=1) # round to even really does apply\n[1] 66\n> print(67.5, digits=1)\n[1] 68\n\non (several of) my non-Windows systems, so I think this is a Windows \nquirk.  Remember the parsing and printing software has also to run in \nbinary on a limited-precision machine, and it does tend to be less \naccurate on Windows than on other ix86 OSes.  (Windows software also tends \nnot to implement round-to-even rules.)\n\n\n> On 6/11/07, BXC (Bendix Carstensen)  wrote:\n>>\n>> I was a bit puzzed by:\n>>\n>>> formatC(6.65,format=\"f\",digits=1)\n>> [1] \"6.6\"\n>>\n>> So I experimented and found:\n>>\n>>> formatC(6.6500000000000001,format=\"f\",digits=1)\n>> [1] \"6.6\"\n>>> formatC(6.650000000000001,format=\"f\",digits=1)\n>> [1] \"6.7\"\n>>>   round(6.6500000000000001,1)\n>> [1] 6.7\n>>>   round(6.650000000000001,1)\n>> [1] 6.7\n>>> version\n>>               _\n>> platform       i386-pc-mingw32\n>> arch           i386\n>> os             mingw32\n>> system         i386, mingw32\n>> status\n>> major          2\n>> minor          5.0\n>> year           2007\n>> month          04\n>> day            23\n>> svn rev        41293\n>> language       R\n>> version.string R version 2.5.0 (2007-04-23)\n>>\n>> My machine runs Windows NT.\n>>\n>> Is this intended or just a Windows facility?\n>> ______________________________________________\n>>\n>> Bendix Carstensen\n>> Senior Statistician\n>>\n>> Steno Diabetes Center\n>> Niels Steensens Vej 2-4\n>> DK-2820 Gentofte\n>> Denmark\n>> +45 44 43 87 38 (direct)\n>> +45 30 75 87 38 (mobile)\n>> +45 44 43 73 13 (fax)\n>> bxc@steno.dk   http://www.biostat.ku.dk/~bxc\n>>\n>> This e-mail (including any attachments) is intended for the ...{{dropped}}\n>>\n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide\n>> http://www.R-project.org/posting-guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n>>\n>\n>\n>\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}