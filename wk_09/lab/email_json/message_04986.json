{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "Should a dirhandle be a filehandle-like iterator?", "body": "As I was playing around with dirhandles, I thought \"What if...\" (which\nis actualy sorta fun to do in Pugs, where Perl 5 has everything\ndocumented somewhere even if nobody has read it).\n\nMy goal is modest: explain fewer things in the Llama. If dirhandles\nwere like filehandles, there's a couple of pages of explanation I don't\nneed to go through.\n\nWitness:\n\nI can iterate through the elements of a named array with =@array:\n\n   my @a = < 1 2 3 4 5 >;\n   for =@a { .say }   # but not =< 1 2 3 4 5 > :(\n\nand I can read lines from a file:\n\n   for =$fh { .say }\n\nShould I be able to go through a directory handle that way too? A \"yes\"\nanswer would be very pleasing :)\n\n   my $dh = \"doc\".opendir;\n   for =$dh { .say }    # doesn't work in pugs\n\nAnd, since we're using objects now, .closedir can really just be\n.close, right? \n\nAnd, maybe this has been already done, but wrapping a lazy filter\naround anything that can return items. I'm not proposing this as a\nlanguage feature, but if many things shared the same way of getting the\nnext item, perhaps I could wrap it in a lazy map-ish thingy:\n\n   my $general_iterator = lazy_mappish_thingy( \"doc\".opendir ); \n\n   for =$general_iterator { .say }\n\n   $general_iterator.close;  # or .end, or .whatever\n\nThat last part is definetely not Llama material, but maybe I'll at\nleast hit the haystack.\n\n"}