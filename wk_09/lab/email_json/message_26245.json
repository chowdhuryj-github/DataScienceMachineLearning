{"category": "ham", "to_address": "\"Marco Pesenti Gritti\" <mpg@redhat.com>", "from_address": "\"edward baafi\" <edwardbaafi@gmail.com>", "subject": "Re: [sugar] [pyxpcom] PyXPCOM viability and OLPC", "body": "Hi Marco,\n\n> What we need to do for pyxpcom to be actually useful is to bridge it to\n> gtkmozembed. In particular we need to be able to access nsIWebBrowser,\n> which gtkmozembed exposes, as a python object. Someone in the epiphany\n> team might be able to give some guidance on this too.\n\nI guess I don't understand what the constraints are here..   Ian says\nthat the current web browser \"activity\" uses pygtkmozembed which is\nlacking in terms of allowing you to customize the experience and thus\nwas looking for other options..\n\nOne option discussed was to build a custom Xulrunner based browser\napplication, which would give you access to nsiWebBrowser..  The\nDemocracy Player is one application that uses Xul + PyXpcom and\napparently uses the nsiWebBrowser interface:\nhttps://develop.participatoryculture.org/trac/democracy/browser/trunk/dtv-binary-kit/idlinclude/nsIWebBrowser.idl?rev=4572\n\nYou can also build a standalone PyXPCOM as discussed in this somewhat\noutdated document: http://kb.mozillazine.org/Standalone_PyXPCOM but\nthis wouldn't get you access to nsiWebBrowser by default..\n\nMy main question is whether you are open to a xulrunner based\napplication with xul widgets and either javascript or python front end\ncode as well as your choice of python, c, c++, and java components or\nif you're locked into gtk widgets..\n\n-Ed\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}