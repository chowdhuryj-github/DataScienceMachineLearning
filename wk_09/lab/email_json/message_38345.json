{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r23212 - in\n\tbranches/SAMBA_3_0_26/source/rpc_server: .", "body": "Author: jerry\nDate: 2007-05-29 16:46:16 +0000 (Tue, 29 May 2007)\nNew Revision: 23212\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23212\n\nLog:\nmerge from SAMBA_3_0: Use pipe_user rather than global current_user\nModified:\n   branches/SAMBA_3_0_26/source/rpc_server/srv_spoolss_nt.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_spoolss_nt.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_spoolss_nt.c\t2007-05-29 16:26:38 UTC (rev 23211)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_spoolss_nt.c\t2007-05-29 16:46:16 UTC (rev 23212)\n@@ -1534,7 +1534,6 @@\n \n \tfstring name;\n \tint snum;\n-\tstruct current_user user;\n \tPrinter_entry *Printer=NULL;\n \n \tif ( !q_u->printername )\n@@ -1558,8 +1557,6 @@\n \t\treturn WERR_INVALID_PRINTER_NAME;\n \t}\n \n-\tget_current_user(&user, p);\n-\n \t/*\n \t * First case: the user is opening the print server:\n \t *\n@@ -1624,12 +1621,12 @@\n \t\t\t/* if the user is not root, doesn't have SE_PRINT_OPERATOR privilege,\n \t\t\t   and not a printer admin, then fail */\n \t\t\t\n-\t\t\tif ((user.ut.uid != 0) &&\n-\t\t\t    !user_has_privileges(user.nt_user_token,\n+\t\t\tif ((p->pipe_user.ut.uid != 0) &&\n+\t\t\t    !user_has_privileges(p->pipe_user.nt_user_token,\n \t\t\t\t\t\t &se_printop ) &&\n \t\t\t    !token_contains_name_in_list(\n-\t\t\t\t    uidtoname(user.ut.uid), NULL,\n-\t\t\t\t    user.nt_user_token,\n+\t\t\t\t    uidtoname(p->pipe_user.ut.uid), NULL,\n+\t\t\t\t    p->pipe_user.nt_user_token,\n \t\t\t\t    lp_printer_admin(snum))) {\n \t\t\t\tclose_printer_handle(p, handle);\n \t\t\t\treturn WERR_ACCESS_DENIED;\n@@ -1682,9 +1679,9 @@\n \t\t\treturn WERR_ACCESS_DENIED;\n \t\t}\n \n-\t\tif (!user_ok_token(uidtoname(user.ut.uid), user.nt_user_token,\n-\t\t\t\t   snum) ||\n-\t\t    !print_access_check(&user, snum,\n+\t\tif (!user_ok_token(uidtoname(p->pipe_user.ut.uid),\n+\t\t\t\t   p->pipe_user.nt_user_token, snum) ||\n+\t\t    !print_access_check(&p->pipe_user, snum,\n \t\t\t\t\tprinter_default->access_required)) {\n \t\t\tDEBUG(3, (\"access DENIED for printer open\\n\"));\n \t\t\tclose_printer_handle(p, handle);\n@@ -1978,20 +1975,17 @@\n \tNT_PRINTER_DRIVER_INFO_LEVEL\tinfo;\n \tNT_PRINTER_DRIVER_INFO_LEVEL\tinfo_win2k;\n \tint\t\t\t\tversion;\n-\tstruct current_user\t\tuser;\n \tWERROR\t\t\t\tstatus;\n \tWERROR\t\t\t\tstatus_win2k = WERR_ACCESS_DENIED;\n \tSE_PRIV                         se_printop = SE_PRINT_OPERATOR;\t\n \t\n-\tget_current_user(&user, p);\n-\t \n \t/* if the user is not root, doesn't have SE_PRINT_OPERATOR privilege,\n \t   and not a printer admin, then fail */\n \t\t\t\n-\tif ( (user.ut.uid != 0) \n-\t\t&& !user_has_privileges(user.nt_user_token, &se_printop ) \n-\t\t&& !token_contains_name_in_list( uidtoname(user.ut.uid), \n-\t\t    NULL, user.nt_user_token, lp_printer_admin(-1)) ) \n+\tif ( (p->pipe_user.ut.uid != 0) \n+\t\t&& !user_has_privileges(p->pipe_user.nt_user_token, &se_printop ) \n+\t\t&& !token_contains_name_in_list( uidtoname(p->pipe_user.ut.uid), \n+\t\t    NULL, p->pipe_user.nt_user_token, lp_printer_admin(-1)) ) \n \t{\n \t\treturn WERR_ACCESS_DENIED;\n \t}\n@@ -2038,7 +2032,7 @@\n \t\t\t/* if we get to here, we now have 2 driver info structures to remove */\n \t\t\t/* remove the Win2k driver first*/\n \t\t\n-\t\t\tstatus_win2k = delete_printer_driver(info_win2k.info_3, &user, 3, False );\n+\t\t\tstatus_win2k = delete_printer_driver(info_win2k.info_3, &p->pipe_user, 3, False );\n \t\t\tfree_a_printer_driver( info_win2k, 3 );\n \t\t\n \t\t\t/* this should not have failed---if it did, report to client */\n@@ -2050,7 +2044,7 @@\n \t\t}\n \t}\n \t\n-\tstatus = delete_printer_driver(info.info_3, &user, version, False);\n+\tstatus = delete_printer_driver(info.info_3, &p->pipe_user, version, False);\n \t\n \t/* if at least one of the deletes succeeded return OK */\n \t\n@@ -2076,20 +2070,17 @@\n \tint\t\t\t\tversion;\n \tuint32\t\t\t\tflags = q_u->delete_flags;\n \tBOOL\t\t\t\tdelete_files;\n-\tstruct current_user\t\tuser;\n \tWERROR\t\t\t\tstatus;\n \tWERROR\t\t\t\tstatus_win2k = WERR_ACCESS_DENIED;\n \tSE_PRIV                         se_printop = SE_PRINT_OPERATOR;\t\n \t\n-\tget_current_user(&user, p);\n-\t\n \t/* if the user is not root, doesn't have SE_PRINT_OPERATOR privilege,\n \t   and not a printer admin, then fail */\n \t\t\t\n-\tif ( (user.ut.uid != 0) \n-\t\t&& !user_has_privileges(user.nt_user_token, &se_printop ) \n-\t\t&& !token_contains_name_in_list( uidtoname(user.ut.uid), \n-\t\t    NULL, user.nt_user_token, lp_printer_admin(-1)) ) \n+\tif ( (p->pipe_user.ut.uid != 0) \n+\t\t&& !user_has_privileges(p->pipe_user.nt_user_token, &se_printop ) \n+\t\t&& !token_contains_name_in_list( uidtoname(p->pipe_user.ut.uid), \n+\t\t    NULL, p->pipe_user.nt_user_token, lp_printer_admin(-1)) ) \n \t{\n \t\treturn WERR_ACCESS_DENIED;\n \t}\n@@ -2175,7 +2166,7 @@\n \t\t\t/* if we get to here, we now have 2 driver info structures to remove */\n \t\t\t/* remove the Win2k driver first*/\n \t\t\n-\t\t\tstatus_win2k = delete_printer_driver(info_win2k.info_3, &user, 3, delete_files);\n+\t\t\tstatus_win2k = delete_printer_driver(info_win2k.info_3, &p->pipe_user, 3, delete_files);\n \t\t\tfree_a_printer_driver( info_win2k, 3 );\n \t\t\t\t\n \t\t\t/* this should not have failed---if it did, report to client */\n@@ -2185,7 +2176,7 @@\n \t\t}\n \t}\n \n-\tstatus = delete_printer_driver(info.info_3, &user, version, delete_files);\n+\tstatus = delete_printer_driver(info.info_3, &p->pipe_user, version, delete_files);\n \n \tif ( W_ERROR_IS_OK(status) || W_ERROR_IS_OK(status_win2k) )\n \t\tstatus = WERR_OK;\n@@ -5725,15 +5716,12 @@\n \tpstring jobname;\n \tfstring datatype;\n \tPrinter_entry *Printer = find_printer_index_by_hnd(p, handle);\n-\tstruct current_user user;\n \n \tif (!Printer) {\n \t\tDEBUG(2,(\"_spoolss_startdocprinter: Invalid handle (%s:%u:%u)\\n\", OUR_HANDLE(handle)));\n \t\treturn WERR_BADFID;\n \t}\n \n-\tget_current_user(&user, p);\n-\n \t/*\n \t * a nice thing with NT is it doesn't listen to what you tell it.\n \t * when asked to send _only_ RAW datas, it tries to send datas\n@@ -5757,7 +5745,7 @@\n \n \tunistr2_to_ascii(jobname, &info_1->docname, sizeof(jobname));\n \t\n-\tPrinter->jobid = print_job_start(&user, snum, jobname, Printer->nt_devmode);\n+\tPrinter->jobid = print_job_start(&p->pipe_user, snum, jobname, Printer->nt_devmode);\n \n \t/* An error occured in print_job_start() so return an appropriate\n \t   NT error code. */\n@@ -5830,13 +5818,10 @@\n static WERROR control_printer(POLICY_HND *handle, uint32 command,\n \t\t\t      pipes_struct *p)\n {\n-\tstruct current_user user;\n \tint snum;\n \tWERROR errcode = WERR_BADFUNC;\n \tPrinter_entry *Printer = find_printer_index_by_hnd(p, handle);\n \n-\tget_current_user(&user, p);\n-\n \tif (!Printer) {\n \t\tDEBUG(2,(\"control_printer: Invalid handle (%s:%u:%u)\\n\", OUR_HANDLE(handle)));\n \t\treturn WERR_BADFID;\n@@ -5847,18 +5832,18 @@\n \n \tswitch (command) {\n \tcase PRINTER_CONTROL_PAUSE:\n-\t\tif (print_queue_pause(&user, snum, &errcode)) {\n+\t\tif (print_queue_pause(&p->pipe_user, snum, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\n \t\tbreak;\n \tcase PRINTER_CONTROL_RESUME:\n \tcase PRINTER_CONTROL_UNPAUSE:\n-\t\tif (print_queue_resume(&user, snum, &errcode)) {\n+\t\tif (print_queue_resume(&p->pipe_user, snum, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\n \t\tbreak;\n \tcase PRINTER_CONTROL_PURGE:\n-\t\tif (print_queue_purge(&user, snum, &errcode)) {\n+\t\tif (print_queue_purge(&p->pipe_user, snum, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\n \t\tbreak;\n@@ -5880,7 +5865,6 @@\n \tPOLICY_HND\t*handle = &q_u->handle;\n \tPrinter_entry \t*Printer = find_printer_index_by_hnd(p, handle);\n \tint\t\tsnum;\n-\tstruct \t\tcurrent_user user;\n \tWERROR \t\terrcode = WERR_OK;\n \t\n \tif (!Printer) {\n@@ -5891,10 +5875,8 @@\n \tif (!get_printer_snum(p, handle, &snum))\n \t\treturn WERR_BADFID;\n \t\n-\tget_current_user( &user, p );\t\n+\tprint_job_delete( &p->pipe_user, snum, Printer->jobid, &errcode );\t\n \t\n-\tprint_job_delete( &user, snum, Printer->jobid, &errcode );\t\n-\t\n \treturn errcode;\n }\n \n@@ -6753,8 +6735,6 @@\n \tPOLICY_HND *handle = &q_u->handle;\n \tuint32 jobid = q_u->jobid;\n \tuint32 command = q_u->command;\n-\n-\tstruct current_user user;\n \tint snum;\n \tWERROR errcode = WERR_BADFUNC;\n \t\t\n@@ -6766,23 +6746,21 @@\n \t\treturn WERR_INVALID_PRINTER_NAME;\n \t}\n \n-\tget_current_user(&user, p);\t\n-\n \tswitch (command) {\n \tcase JOB_CONTROL_CANCEL:\n \tcase JOB_CONTROL_DELETE:\n-\t\tif (print_job_delete(&user, snum, jobid, &errcode)) {\n+\t\tif (print_job_delete(&p->pipe_user, snum, jobid, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\n \t\tbreak;\n \tcase JOB_CONTROL_PAUSE:\n-\t\tif (print_job_pause(&user, snum, jobid, &errcode)) {\n+\t\tif (print_job_pause(&p->pipe_user, snum, jobid, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\t\t\n \t\tbreak;\n \tcase JOB_CONTROL_RESTART:\n \tcase JOB_CONTROL_RESUME:\n-\t\tif (print_job_resume(&user, snum, jobid, &errcode)) {\n+\t\tif (print_job_resume(&p->pipe_user, snum, jobid, &errcode)) {\n \t\t\terrcode = WERR_OK;\n \t\t}\n \t\tbreak;\n@@ -7708,26 +7686,23 @@\n \tSPOOL_PRINTER_DRIVER_INFO_LEVEL *info = &q_u->info;\n \tWERROR err = WERR_OK;\n \tNT_PRINTER_DRIVER_INFO_LEVEL driver;\n-\tstruct current_user user;\n \tfstring driver_name;\n \tuint32 version;\n \n \tZERO_STRUCT(driver);\n \n-\tget_current_user(&user, p);\n-\t\n \tif (!convert_printer_driver_info(info, &driver, level)) {\n \t\terr = WERR_NOMEM;\n \t\tgoto done;\n \t}\n \n \tDEBUG(5,(\"Cleaning driver's information\\n\"));\n-\terr = clean_up_driver_struct(driver, level, &user);\n+\terr = clean_up_driver_struct(driver, level, &p->pipe_user);\n \tif (!W_ERROR_IS_OK(err))\n \t\tgoto done;\n \n \tDEBUG(5,(\"Moving driver to final destination\\n\"));\n-\tif( !W_ERROR_IS_OK(err = move_driver_to_download_area(driver, level, &user, &err)) ) {\n+\tif( !W_ERROR_IS_OK(err = move_driver_to_download_area(driver, level, &p->pipe_user, &err)) ) {\n \t\tgoto done;\n \t}\n \n\n"}