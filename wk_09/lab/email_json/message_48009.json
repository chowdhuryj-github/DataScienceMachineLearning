{"category": "ham", "to_address": "Thomas Wittek <mail@gedankenkonstrukt.de>", "from_address": "Mark Overmeer <mark@overmeer.net>", "subject": "Re: POD <-> Code entanglement", "body": "* Thomas Wittek (mail@gedankenkonstrukt.de) [070614 15:18]:\n> So maybe directives like method, sub, attribute, class etc. might be a\n> better choice regarding semantics.\n\nSee OODoc::Parser::Markov\n\n> It's a bit like HTML<->XML, where the former lacks most of the semantics\n> and makes the information processing - not to speak about a consistent\n> look over several documents - a lot harder.\n\nIn HTML, you have logical markup as well: EM, STRONG, KEY, CODE, etc\nWith id and class, you can make any annotation you like:\n\n  \n     my_method OPTIONS\n     This is the description of a method.\n  \n\nI love the power of CSS.\n\n> I could imagine a semantic documentation in Perl6, that could be\n> translated to XML/HTML+CSS or to POD(6) for formatting it.\n\nThe nicest thing would be that the semantic docs become part of the parse\ntree, which then (using standard introspection) can be used to generate\nmanual pages, natively into POD, roff, HTML, whatever.\n\nI see no reason why entangled docs are so hard to parse for Perl6,\nas Damian arguments.  Even it being difficult is not a good reason to\nmake the life of all programmers harder.\n-- \n               MarkOv\n\n------------------------------------------------------------------------\n       Mark Overmeer MSc                                MARKOV Solutions\n       Mark@Overmeer.net                          solutions@overmeer.net\nhttp://Mark.Overmeer.net                   http://solutions.overmeer.net\n\n"}