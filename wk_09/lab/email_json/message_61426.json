{"category": "ham", "to_address": "\"Michael Hoffman\" <b3i4old02@sneakemail.com>", "from_address": "deepayan.sarkar@gmail.com", "subject": "Re: [R] Lattice: shifting strips to left of axes", "body": "On 7/3/07, Michael Hoffman  wrote:\n> deepayan.sarkar@gmail.com wrote:\n> > On 7/2/07, Michael Hoffman  wrote:\n> >> Consider this plot:\n> >>\n> >> xyplot(mpg ~ disp | cyl, mtcars, strip=F, strip.left=T, layout=c(1, 3),\n> >>         scales=list(relation=\"free\"),\n> >>         par.settings=list(strip.background=list(col=\"transparent\")))\n> >>\n> >> I want to have the \"cyl\" strip labels on the left side of the axis. Is\n> >> this possible?\n> >\n> > No. (It's possible to have a legend there, which could be used to put\n> > row-specific ylab-s, for example, but it will be hard to make it look\n> > like strips)\n>\n> Thanks for the response.\n>\n> Not looking like a real strip is fine. What I want is essentially a\n> secondary ylab for each row, and don't care about niceties such as\n> shingle markings (I should have made the conditional factor(cyl) in the\n> above plot).\n\nI thought this might be the case.\n\n> But it looks like the legend goes to the left of the plot's ylab, and\n> what I really want is for the secondary ylab to be between the primary\n> ylab and the panel. So looks like I would have to eliminate the primary\n> ylab from being drawn automatically and draw it myself in the legend?\n> And I think I would have to manually calculate the panel heights as\n> well, right? I don't see a way for the legend to get this out of the\n> trellis object.\n\nIt's possible, although it requires some advanced grid features.\nLuckily, this has come up before (search the r-help archives for\n\"myXlabGrob\"). Basically, you can use the fact that 'ylab' can be a\n\"grob\" to get what you want (I think). Here is a modified version of\nthe original function (adapted to include a 'primary' ylab):\n\n\nlibrary(grid)\nlibrary(lattice)\n\nmyYlabGrob <-\n    function(..., main.ylab = \"\") ## ...is lab1, lab2, etc\n{\n    ## you can add arguments to textGrob for more control\n    ## in the next line\n    labs <- lapply(list(...), textGrob, rot=90)\n    main.ylab <- textGrob(main.ylab, rot = 90)\n    nlabs <- length(labs)\n    lab.heights <-\n        lapply(labs,\n               function(lab) unit(1, \"grobheight\",\n                                  data=list(lab)))\n    unit1 <- unit(1.2, \"grobheight\", data = list(main.ylab))\n    unit2 <- do.call(max, lab.heights)\n    lab.layout <-\n        grid.layout(ncol = 2, nrow = nlabs,\n                    heights = unit(1, \"null\"),\n                    widths = unit.c(unit1, unit2),\n                    respect = TRUE)\n    lab.gf <- frameGrob(layout=lab.layout)\n    for (i in seq_len(nlabs))\n    {\n        lab.gf <- placeGrob(lab.gf, labs[[i]], row = i, col = 2)\n    }\n    lab.gf <- placeGrob(lab.gf, main.ylab, col = 1)\n    lab.gf\n}\n\nxyplot(mpg ~ disp | cyl, mtcars, strip=F, strip.left=F, layout=c(1, 3),\n       scales=list(relation=\"free\"),\n       ylab = myYlabGrob(\"4\", \"6\", \"8\", main.ylab = \"mpg\"))\n\n-Deepayan\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}