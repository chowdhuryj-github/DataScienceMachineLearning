{"category": "ham", "to_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "from_address": "\"Christophe Pallier\" <christophe@pallier.org>", "subject": "Re: [R] Read Windows-like .INI files into R data structure?", "body": "On 6/14/07, Gabor Grothendieck  wrote:\n>\n> Here is yet another solution.  This is the simplest so far.\n> Lines.raw is as before and the output is a 3 column character\n> matrix.\n\nsection <- \"\"\n> f <- function(x) {\n>         if (length(x) == 1) section <<- gsub(\"[\\\\[\\\\]]\", \"\", x)\n>         if (length(x) <= 1) return()\n>         return(c(x, section))\n> }\n> # Lines <- readLines(\"myfile.ini\")\n> Lines <- readLines(textConnection(Lines.raw))\n> do.call(\"rbind\", lapply(strsplit(Lines, \"=\"), f))\n\n\n\nThe corresponding awk code fits in one line '/\\[/{a=$1;next}{print\n$1,$2,a}'.\n\nWith the example.ini:\n\n$ awk -F\"=\" '/\\[/{a=$1;next}{print $1,$2,a}' example.ini\nvar1 value1 [Section1]\nvar2 value2 [Section1]\nA value3 [Section2]\nB value4 [Section2]\n\nThe output can then be imported in R with read.table.\n\nI know, I am not playing by the rules here... :)\nBut with programming languages, like with human languages, it pays to be bi\nor tri-lingual (or polyglot, if one can).\n\nI also realise that under Windows, it means using the command line,\nsomething that  not so many people are comfortable with nowadays.\n\nOne reason people insist on using only one language to do everything may be\ndue to the awkwardness and limitations of the default scripting language\nunder Windows (DOS). Having everything done inside one single R script can\nseem simpler. But a divide-and-conquer approach, with a few small scripts,\ncan actually work better in some complex cases.\n\nI tend to do as much as possible in R but for all serious data analysis\ntasks, I use Makefile to \"glue\" the various stages of processing. Data\npreprocessing stages (performed with R or other tools) create files that are\nthen processed with R. One advantage is that preprocessing is performed only\nwhen raw input data change; but the most important, is that when I come back\nyears later, I can follow the exact flow of transformations.\nAgain, \"make\"  (like awk  or R) is not without limits and idiosyncrasies. If\nsomeone has a simpler solution, I am interested to hear about it.\n\nChristophe\n\n\n\n\n\n-- \nChristophe Pallier (http://www.pallier.org)\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}