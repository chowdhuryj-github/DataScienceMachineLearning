{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Beginner\" <dermot@sciencephoto.com>", "subject": "A little bit of SOAP", "body": "Hi,\n\nI am trying my hand a SOAP::Lite and wanted some enlightenment.\n\nI have created a test file (soaptest.pl) which acts as a server. \nsoaptest has a subroutine called ReNameTiff which needs 2 arguments, \na path to the original file and a new name for the file. Because \nSOAP::Lite is OO strange things seem to happen to the arguments that \nget passed to the subroutines I've made.\n\nThis is a snip of the client:\n\nmy $soap = SOAP::Lite\n        -> uri('http://myserver/Images')\n        -> proxy('http://myserver/soap/soaptest.pl')\n        -> ReNameTiff(\"$path,$splnum\");\t\n\nmy $res = $soap->result;\nprint STDERR \"Result was $res\\n\";\n\nIn this example the args are quoted together and to access them I \nhave to do split them like this:\n\n        my $self = shift;\n        my $args = shift;\n        my ($path,$newname) = split(/,/,$args);\n        print STDERR \"Self=$self, Path=$path, NewName=$newname, \nARGV=@ARGV ARGS=$args\\n\";\n\n\nThis seems a bit loose and prone to error, what if the path had a \ncomma in?\n\nWhat is the correct way to pass arguments in OO? Is there a practise \nI am missing. The reading and examples I have seen still use shift so \nI think I am sending the args incorrectly but if I don't quote them \nonly the first argument comes through.\n\nThanx,\nDp.\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}