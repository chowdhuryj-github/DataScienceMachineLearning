{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #42359\": ;", "from_address": "\"Steve Peters via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #42359] [PATCH] Assorted cleanups - part III (Intel C++) ", "body": "On Mon Apr 09 23:01:35 2007, chromatic@wgz.org wrote:\n> On Sunday 08 April 2007 18:07, Steve Peters via RT wrote:\n> \n> > On Sun Apr 08 16:08:05 2007, stmpeters wrote:\n> > > The attached patch includes several cleanups needed to silence\n> > > warnings\n> > > when compiling Parrot with Intel C++.\n> >\n> > It helps to attach the right patch....\n> \n> I get several warnings.  I've cleaned up this batch:\n> \n> src/pmc/eval.pmc: In function \\u2018Parrot_Eval_get_string\\u2019:\n> src/pmc/eval.pmc:255: warning: passing argument 3 of \\u2018PackFile_pack\\u2019\n> from\n> incompatible pointer type\n> src/pmc/eval.pmc: In function \\u2018Parrot_Eval_thaw\\u2019:\n> src/pmc/eval.pmc:312: warning: passing argument 3 of \\u2018PackFile_unpack\\u2019\n> from\n> incompatible pointer type\n> \n> src/pmc_freeze.c: In function \\u2018run_thaw\\u2019:\n> src/pmc_freeze.c:1435: warning: comparison of distinct pointer types\n> lacks a\n> cast\n> \n> src/pmc/string.pmc: In function \\u2018Parrot_String_nci_trans\\u2019:\n> src/pmc/string.pmc:853: warning: array subscript has type \\u2018char\\u2019\n> \n> ... but my attempt to fix these causes more test failures in\n> t/op/string_cs.t:\n> \n> src/encodings/fixed_8.c\n> src/encodings/fixed_8.c: In function \\u2018get_byte\\u2019:\n> src/encodings/fixed_8.c:49: warning: pointer targets in initialization\n> differ\n> in\n>  signedness\n>  src/encodings/fixed_8.c: In function \\u2018set_byte\\u2019:\n>  src/encodings/fixed_8.c:67: warning: pointer targets in assignment\n> differ in\n> sig\n>  nedness\n>  src/encodings/ucs2.c\n>  src/encodings/utf16.c\n>  src/encodings/utf16.c: In function \\u2018get_byte\\u2019:\n>  src/encodings/utf16.c:170: warning: pointer targets in initialization\n> differ\n> in\n>  signedness\n>  src/encodings/utf16.c: In function \\u2018set_byte\\u2019:\n>  src/encodings/utf16.c:188: warning: pointer targets in assignment\n> differ in\n> sign\n>  edness\n>  src/encodings/utf8.c\n>  src/encodings/utf8.c: In function \\u2018to_encoding\\u2019:\n>  src/encodings/utf8.c:334: warning: pointer targets in assignment\n> differ in\n> signe\n>  dness\n>  src/encodings/utf8.c:357: warning: pointer targets in assignment\n> differ in\n> signe\n>  dness\n>  src/encodings/utf8.c: In function \\u2018get_byte\\u2019:\n>  src/encodings/utf8.c:400: warning: pointer targets in initialization\n> differ\n> in s\n>  ignedness\n>  src/encodings/utf8.c: In function \\u2018set_byte\\u2019:\n>  src/encodings/utf8.c:418: warning: pointer targets in assignment\n> differ in\n> signe\n>  dness\n> \n> The test results are:\n> \n> not ok 5 - downcase\n> #     Failed test (t/op/string_cs.t at line 72)\n> #          got: 'aeiou_\\ufffd\\ufffd\n>                          # '\n> #     expected: 'aeiou_\\ufffd\\ufffd\n>                          # '\n> ok 6 - upcase\n> not ok 7 - titlecase\n> #     Failed test (t/op/string_cs.t at line 90)\n> #          got: 'Zaeiou_\\ufffd\\ufffd\n>                           # '\n> #     expected: 'Zaeiou_\\ufffd\\ufffd\n>                           # '\n> \n> As seen through less, they are:\n> #     Failed test (t/op/string_cs.t at line 72)\n> #          got: 'aeiou_\n> # '\n> #     expected: 'aeiou_\n> # '\n> #     Failed test (t/op/string_cs.t at line 90)\n> #          got: 'Zaeiou_\n> # '\n> #     expected: 'Zaeiou_\n> \n> ... so the encoded characters get 32 added to them somehow, somewhere.\n> \n> I've attached your patch with a few changes on my end.\n> \n> -- c\n> \n> \n\nThese are likely caused by the varying definition of what a\nSTRING->strstart is.  Sometimes its a char *.  Sometimes its an unsigned\nchar *.  The pointer itself is a void *.  Its a big mess.  Obviously,\nthis all needs more work, and probably a bit more thought on my part. \nI'll probably break apart this patch to get the enum fixes in and deal\nwith the larger STRING issue separately.\n\nSteve\n\n"}