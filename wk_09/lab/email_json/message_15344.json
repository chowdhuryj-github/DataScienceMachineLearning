{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Saravana Kumar <tuxkumar@gmail.com>", "subject": "Re: Reading and matching email ids", "body": "Saravana Kumar wrote:\n\n> yitzle wrote:\n> \n>> You can read one list into an array (@list) and then loop through the\n>> other file ($item) and grep the list for the item.\n>> \n>> for ($item = <>) { # or foreach\n>>   print \"$item found\" if ( grep $item, @list );\n>> }\n>> \n>> On 4/20/07, Saravana Kumar  wrote:\n>>> Boga Srinivas wrote:\n>>>\n>>> > Hi kumar,\n>>> >\n>>> > Try this.\n>>> >\n>>> > bseenu@bseenu-dt:~/perl$ cat reg.pl\n>>> > #! /usr/bin/perl\n>>> > $id=\"user1\\@example.net\";\n>>> > while(<>) {\n>>> > chomp($_);print \"$_\\t\";\n>>> > print \"$id found\\n\" if  /$id/;\n>>> > print \"$id not found\\n\" if ! /$id/;\n>>> > }\n>>> >\n>>> > bseenu@bseenu-dt:~/perl$ cat mail.txt\n>>> > user1@example.net\n>>> > user2@example.net\n>>> > user3@example.net\n>>> > bseenu@bseenu-dt:~/perl$ ./reg.pl < mail.txt\n>>> > user1@example.net       user1@example.net found\n>>> > user2@example.net       user1@example.net not found\n>>> > user3@example.net       user1@example.net not found\n>>> >\n>>> >\n>>> > ~Regards\n>>> > -srini\n>>>\n>>> Yes. I have tried that. It works. My problem is that the $id that i am\n>>> matching will also be read from another file.\n>>>\n>>> ie., a list of ids read one by one from a file and matched against\n>>> another file which has another list.\n>>>\n>>> Thanks! for your time.\n>>>\n>>> SK\n>>>\n>>> >\n>>> > Saravana Kumar wrote:\n>>> >> Hi list,\n>>> >>\n>>> >> I am testing a regex with email ids. I have a list of ids that i want\n>>> >> to match against a one more list of ids.\n>>> >>\n>>> >> I have this:\n>>> >> #! /usr/bin/perl\n>>> >> $id=\"user1@example.net\";\n>>> >> while(<>) {\n>>> >> chomp($_);print \"$_\\t\";\n>>> >> print \"$id found\\n\" if  /$id/;\n>>> >> print \"$id not found\\n\" if ! /$id/;\n>>> >> }\n>>> >>\n>>> >> and a file /tmp/sampleids\n>>> >> user1@example.net\n>>> >> user2@example.net\n>>> >> user3@example.net\n>>> >> user1\\@example\\.net\n>>> >>\n>>> >> When i run it i get :\n>>> >> user1@example.net       user1.net not found\n>>> >> user2@example.net       user1.net not found\n>>> >> user3@example.net       user1.net not found\n>>> >> user1\\@example\\.net     user1.net not found\n>>> >>\n>>> >> When i try to match simple text it works but matching email ids\n>>> >> doesn't. What am i doing wrong here?\n>>> >>\n>>> >> Please help me with this.\n>>> >>\n>>> >> TIA,\n>>> >> SK\n>> \n> Thanks to all who replied. Will try these out and post the results.\n> \n> Regds,\n> SK\n\nI tried various options but could not make it work. I was writing a perl\nscript to filter the mails.\n\nThe script will read directly from the mail program. Compare the from\naddresses with contents in a file. If the id is present in the file then\nthe mail will be allowed; else denied.\n\nFirst i regex the lines and store the from line in $from. Then i check if\nthe id(in $from) is in the acl file i have. \n\nAs you may know $from may have a String(fullname) with the email id or\nsimply the email id alone.\n\nHowever i try it doesn't work. I can still give the ids directly in the if\ncondition(escaping @ & .). But i want to have the list of allowed ids in a\nseparate file so that the script need not be changed everytime we add new\nids. \n\nideas?\n\nTIA,\nSK\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}