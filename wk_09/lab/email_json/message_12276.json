{"category": "ham", "to_address": "Patrick Rutkowski <rutski89@gmail.com>", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: I Don't Understand The Context Allocation/Destruction Code", "body": "On Saturday 21 April 2007 22:49, Patrick Rutkowski wrote:\n\n> I'm not looking at it for any particular reason. My interest in\n> helping work on parrot began only yesterday. First I spent last night\n> reading a few pdds. Then this morning in an effort to familiarize\n> myself with the implementation details I opened up main.c and just\n> started reading line by line assuming hello.pasm as\n> input. Unfortunately Parrot_alloc_context() is the first non-trivial\n> code that one runs into when doing that. The call stack basically\n> goes:\n>\n> main() ->\n>    Parrot_new() ->\n>      make_interpreter() ->\n>        create_initial_context() ->\n>          Parrot_alloc_context() ->\n>            walk_away_from_computer_in_confusion()\n\nOkay.  (You're lucky you started only yesterday.  src/main.c has only been \nwhere it is for a few days.)\n\nAssume Parrot_alloc_context() Does Scary Magic To Make Sure the Registers Are \nSane and skip over it for the time being.  Now you know almost everything I \ndo about it.\n\n> In that case I'll keep on digging. If I pinpoint the person who authored\n> the confusing bits then I'll forward him a link to this thread on\n> nntp.perl.org.\n\nI'm pretty sure Leo or Bob will jump in here if either can help us unravel it.\n\n-- c\n\n"}