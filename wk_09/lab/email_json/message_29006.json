{"category": "ham", "to_address": "perl6-internals@perl.org, Allison Randal <allison@perl.org>", "from_address": "James E Keenan <jkeen@verizon.net>", "subject": "Re: Odd failure in t/postconfigure/02-revision_no_DEVELOPING.t", "body": "> \n> My hunch is that while Parrot's *version* number (found in top-level \n> file 'VERSION' and reported by Parrot::BuildUtils::parrot_version()) is \n> important for building Parrot, Parrot's repository *revision* numbers \n> are less important.  But *how much* less important, I cannot yet say. \n> FWIW, here are locations where these $current and $config are used \n> (setting aside my 4 test files above).\n> \n> config/gen/revision.pm:30:    my $revision = $Parrot::Revision::current;\n> t/distro/file_metadata.t:219:    unless ( $Parrot::Revision::current or \n> `svk ls .` ) {\n> tools/build/revision_c.pl:46:    return ${Parrot::Revision::current};\n> tools/build/revision_c.pl:51:    return ${Parrot::Revision::config};\n> \n\nFurther research into $Parrot::Revision::current and \n$Parrot::Revision::config:\n\n1.  Relevant code from tools/build/revision_c.pl:\n\n/* also in \"parrot/embed.h\" */\nPARROT_API int Parrot_revision(void);\n/* also in \"parrot/misc.h\" */\nPARROT_API int Parrot_config_revision(void);\n\nint Parrot_revision(void)\n{\n     return ${Parrot::Revision::current};\n}\n\nint Parrot_config_revision(void)\n{\n     return ${Parrot::Revision::config};\n}\n\n\n2.  [reconf] 501 $ ack --nohtml --nophp Parrot_revision\ncompilers/imcc/main.c\n120:    rev = Parrot_revision();\n\ninclude/parrot/embed.h\n73:int Parrot_revision(void);\n\ntools/build/revision_c.pl\n40:PARROT_API int Parrot_revision(void);\n44:int Parrot_revision(void)\n\n\n3.  [reconf] 503 $ ack --nohtml --nophp Parrot_config_revision\ncompilers/imcc/main.c\n124:    rev = Parrot_config_revision();\n\ninclude/parrot/misc.h\n190:PARROT_API int Parrot_config_revision(void);\n\ntools/build/revision_c.pl\n42:PARROT_API int Parrot_config_revision(void);\n49:int Parrot_config_revision(void)\n\n\n4.  Relevant code from config/gen/revision.pm:\n\n     my $revision = $Parrot::Revision::current;\n\n     $conf->data->set(\n         revision    => $revision,\n     );\n\n     if ( $revision >= 1 ) {\n         $self->set_result(\"r$revision\");\n\n\n\nCommentary:  Why, in items (2) and (3) above, $current should be used as \nthe basis of the C variable in one case and $config should be used as \nthe basis of a different C variable in the other case it not something \napparent to me.\n\nWhether Parrot::Revision needs to be as complex as it is is increasingly \nless obvious to me.  If you're working from the repository and have not \nyet configured, then what use in $config?  Conversely, if you're working \nfrom the repository and *have* configured, then do you have any further \nneed for $current?  And if you're working from a release version, \n$current is entirely irrelevant because $config is all you've got and \nall you're going to get.\n\nkid51\n\n"}