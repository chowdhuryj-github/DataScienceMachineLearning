{"category": "ham", "to_address": "Steve Langasek <vorlon@debian.org>", "from_address": "Kern Sibbald <kern@sibbald.com>", "subject": "Re: Bacula: GPL and OpenSSL", "body": "On Saturday 09 June 2007 08:26, Steve Langasek wrote:\n> On Fri, Jun 08, 2007 at 09:11:45AM +0200, Kern Sibbald wrote:\n> \n> > However, the \"strict\" interpretation would imply that the GPL is not fair \n(in \n> > the sense of compaints about the Novell - Microsoft contract), because I \ncan \n> > distribute Bacula binaries because no where on any of the project sites do \nwe \n> > distribute OpenSSL, but then the strict definition says that you cannot \n> > distribute Bacula because you have OpenSSL someplace on the distribution \n> > disks, or on your servers.\n> \n> I'm not familiar with the arguments that have been made in the case of\n> Novell-Microsoft.  I'm certainly not aware of any argument why this aspect\n> of the GPL is not \"fair\" (=permitted under law) in a legal sense.\n\nWell, one of the main objections to the Novell-Microsoft contract from what I \nunderstand is that Microsoft has promissed not to pursue Novell or Novell's \ncustomers for any violation of Microsoft patents.  According to FSF, if I \nunderstand it right, this is unfair because it only protects a part of the \nGPL users and not everyone.  Any such license should, according to them, \napply to all or none.\n\n> \n> > > In recent times, it \n> > > appears that some Unix vendors such as Sun and Apple have also begun\n> > > distributing GNU software as part of systems whose cores are not \nlicensed\n> > > compatibly with the GPL, with the FSF's tacit consent; that seems\n> > > ill-advised to me, but in any case the FSF's interpretations of the GPL\n> > > aren't binding on other copyright holders where those interpretations \ndon't\n> > > follow logically from the text of the license.\n> \n> > I'm not sure Sun and Apple are so ill-advised.\n> \n> Sorry, I meant that I considered it ill-advised for the FSF to give their\n> tacit approval. :)\n\nI suspect that they are trying to be \"practical\" and don't want to chase after \nusers in \"technical\" violations where there is no intent to subvert Open \nSource objectives.\n\n> \n> > > > By the way, just to be clear, I consider all this (not you guys but \nthese \n> > > > license difficulties) to be a real pain.  As long as the code is Open \n> > Source \n> > > > (i.e. I can get it, see it and modify it), I have no problem with it \nbeing \n> > > > linked with Bacula. \n> \n> > > Ah, well, that right there is sufficient for us to use as a license\n> > > exception grant. :)  But of course it's not binding on other copyright\n> > > holders.\n> \n> > If that resoves the problems, great.  Here is what I have just added to \nthe \n> > LICENSE file -- hopefully it should be clear.  Here is a snippet from the \n> > LICENSE file ...\n> \n> > ...\n> > License:\n> > For the most part, Bacula is licensed under the GPL version 2\n> > this code is listed under Copyright Free Software Foundation\n> > Europe e.V. A small part of the code (less than 20 files) is\n> > copyrighted under the GPL by other people (FSF, Sun, ...).\n> \n> Oh.  So this is a case where you've assigned copyright to FSFE?  Does the\n> FSFE's copyright assignment procedure give you the right to continue\n> licensing your code under any license of your choice?\n\nYes. They have a fiduciary licence arrangement with us (me).  The project can \ndecide what license it will use.  There is a certain amount of mutual \nconsentment, but there is no question that they are not going to (and did not \nwhen I told them) complain about removing modifications to the GPL.\n\nSo it is clear, I do have the right to license the software anyway I want, but \nof course, if I license it differently, that would be a fork or a special \ndeal, and might not hold for the project, which is dedicated to Open Source.  \nFSFE also has certain rights and obligations.  99.9% of it is spelled out on \ntheir web site.\n\n> \n> > What follows is information from the authors of the code:\n> \n> > Linking:\n> > Bacula may be linked with any libraries permitted under the GPL.\n> > However, if configured with encryption Bacula does use the\n> > OpenSSL libraries which are, unfortunately, not compatible with\n> > GPL v2.  To the best of our knowledge these libaries are not\n> > distributed with Bacula code because they are shared objects, and\n> > as such there is no conflict with the GPL according what I (Kern)\n> > understand in talking to FSFE, and in any case, for the code that\n> > I have written, I have no problems linking in OpenSSL (of course\n> > this does not speak for the few files in Bacula that are\n> > copyrighted by others).  If you take a more severe stance on this\n> > issue, and you are going to distribute Bacula, then simply do not\n> > use the --with-openssl when building your package, and no use of\n> > OpenSSL even through dynamic linking will be included.\n> > ...\n> \n> Seems rather overwrought to me for inclusion in a license file.  I would\n> suggest one of the following two approaches, either:\n> \n>   In addition, for code copyright $foo, permission is explicitly granted to\n>   distribute binaries dynamically linked with libraries distributed under\n>   the OpenSSL license, even in cases where those libraries are distributed\n>   together with the binaries.\n> \n> or:\n> \n>   It is the understanding of $foo that the GPL permits distribution of\n>   binaries dynamically linked to OpenSSL, even in cases where OpenSSL is\n>   distributed together with the binaries.\n> \n> But if the code is copyright: FSFE, I don't know if this is something you\n> would have to clear with them first.\n\nI believe that doing what you suggest would modify the GPL, and I don't want \nto do that since it puts me according to FSFE and Red Hat in violation of \nother people's licenses.\n\n> \n> > > > The problem is that those third-party sources are linked into the \nBacula \n> > > > binaries, and since they are licensed as GPL with no modifications, I \n> > > > cannot include them in a binary that has code that is licensed in a \nway\n> > > > that is incompatible with the GPL.  Adding the OpenSSL exception to my\n> > > > license makes my code incompatible with the non-modified GPL, and\n> > > > hence I was violating the license on those 3rd party files\n> > > > (copyrighted by FSF, ATT, Sun, and a few others ...). \n> \n> > > To be clear here, it's not incompatible with the GPL for you to grant\n> > > additional linking permissions, which is what is being done.  The only \nreal\n> > > issue is that you can't grant such permission on behalf of other \ncopyright\n> > > holders.\n> \n> > That is what I believed, but according to Fedora/Red Hat and FSFE, the \nfact \n> > that I have mixed code in a single binary that is \"pure\" GPL for which I \n> > (FSFE) do not hold the copyright and GPL with a modified license violates \nthe \n> > license given by the authors of the \"pure\" GPL.  Since that is serious to \nme, \n> > and I am not a lawyer, and I have first hand experience in how \"illogical\" \n> > (IMO) judges can be, I prefer to avoid the problem and not modify the GPL.  \n> > So now Bacula is all \"pure\" GPL with no modifications with my explanations \nin \n> > notes rather than as modifications of the license.\n> \n> What I understand from your other message is that previously, you had\n> modified the text of the license under which the code was being distributed.\n> That in particular is something that you can't do without permission from\n> all of the copyright holders, AFAICS.\n\nYes.\n\n> \n> Cheers,\n> -- \n> Steve Langasek                   Give me a lever long enough and a Free OS\n> Debian Developer                   to set it on, and I can move the world.\n> vorlon@debian.org                                   http://www.debian.org/\n> \n\n\n-- \nTo UNSUBSCRIBE, email to debian-legal-REQUEST@lists.debian.org\nwith a subject of \"unsubscribe\". Trouble? Contact listmaster@lists.debian.org\n\n"}