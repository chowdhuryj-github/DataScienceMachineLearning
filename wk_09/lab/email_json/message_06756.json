{"category": "ham", "to_address": "Allison Randal via RT <parrotbug-followup@parrotcode.org>", "from_address": "Andy Spieherty <spiehera@lafayette.edu>", "subject": "Re: [perl #39063] [RESOLVED] [TODO] ResizableBooleanArray uses 64\n bytes per bit of information ", "body": "On Sun, 15 Apr 2007, Allison Randal via RT wrote:\n\n> According to our records, your request regarding \n>   \"[TODO] ResizableBooleanArray uses 64 bytes per bit of information\" \n> has been resolved. \n> \n> If you have any further questions or concerns, please respond to this message.\n> \n> For other topics, please create a new ticket.\n\n> \n\nAre you *sure* it's been fixed?  My test involved running a simple\nprogram something like this\n\n    .sub _main\n\t.local pmc pmc1\n\tpmc1 = new ResizableBooleanArray\n\tpmc1[1000] = 1\n    .end\n\nand incrementing the '1000'.  I found that for every element I added,\nparrot allocated 64 extra bytes.  (I monitored parrot's calls to malloc()\nwith -DDETAIL_MEMORY_DEBUG.)\n\nHence if I want to store 1,000 bits, parrot will call malloc() to\nallocate 64,000 bytes.  That's why I said it \"uses 64 bytes per bit of\ninformation\".\n\nI apologize in advance if I have misunderstood the correct way to use \nResizableBooleanArray or what the number '1000' means in the above\nexample.\n\n-- \n    Andy Spieherty\t\tspiehera@lafayette.edu\n\n"}