{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #43219] segfault in tcl", "body": "On Thursday 14 June 2007 22:17:25 Mark Glines wrote:\n\n> I poked around a bit in gdb.  I don't have any answers or patches, but\n> hopefully a little more information will be helpful.\n>\n> In Parrot_get_HLL_id, between the 31st and 32nd calls to this function,\n> the string memory for the \"name\" string, from the \"name_pmc\" PMC, is\n> freed.  The string pointer is not updated.  So, the next time around,\n> segfault.\n\nThat's consistent with what I saw, too.\n\n> Valgrind has some very interesting things to say about this test\n> script, including lots of undefined data warnings, lots of accesses\n> outside of allocated ranges, and also such gems as \"definitely lost:\n> 1,476,179 bytes in 13,925 blocks\".\n\nHere's my Valgrind alias:\n\nalias vgp='valgrind --suppressions=~/dev/parrot/tools/dev/parrot.supp \\\n\t--num-callers=500 --leak-check=full --leak-resolution=high \\\n\t--show-reachable=yes parrot --leak-test'\n\nThat ought to help.\n\n-- c\n\n"}