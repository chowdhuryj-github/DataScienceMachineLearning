{"category": "ham", "to_address": "\"Bob McConnell\" <rvm@cbord.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Having trouble porting an application to MS-Windows", "body": "On 6/14/07, Bob McConnell  wrote:\nsnip\n> Assuming I can update to ActivePerl 5.8.8.820, if I set an alarm in one\n> forked process (thread?) before calling sysread() or sleep() on Win32,\n> will the same process receive the wakeup?\n\nLooks like yes:\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nmy $pid = fork;\n\ndie \"couldn't fork\" unless defined $pid;\n\nmy ($name, $wait);\n\nif ($pid) {\n    ($name, $wait) = (\"parent \", 10)\n} else {\n    ($name, $wait) = (\"child \", 1)\n}\n\nprint \"$name\" . localtime() . \"\\n\";\neval {\n    local $SIG{ALRM} = sub { die \"timeout $name\\n\" };\n    alarm $wait;\n    print \"$name waiting $wait seconds\\n\";\n    while (1) {}\n};\nprint $@ if $@;\nprint \"$name\" . localtime() . \"\\n\";\n\nparent Thu Jun 14 13:11:43 2007\nparent  waiting 10 seconds\nchild Thu Jun 14 13:11:43 2007\nchild  waiting 1 seconds\ntimeout child\nchild Thu Jun 14 13:11:44 2007\ntimeout parent\nparent Thu Jun 14 13:11:53 2007\n\n> Can I also send it a signal to\n> wake it up from another process?\n\nIn theory you should be able to use kill to send the ALRM signal to\nanother process.  I have not tried it.\n\n> For the next step in this project I\n> have to split send and receive into two threads in order to handle a\n> full duplex connection. The ACK/NAK can be embedded anywhere in the\n> incoming data stream.\n>\n> Bob McConnell\n>\n> --\n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n>\n>\n>\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}