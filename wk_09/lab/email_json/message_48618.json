{"category": "ham", "to_address": "<beginners@perl.org>", "from_address": "\"Bob McConnell\" <rvm@CBORD.com>", "subject": "RE: Having trouble porting an application to MS-Windows", "body": "> -----Original Message-----\n> From: Chas Owens [mailto:chas.owens@gmail.com] \n> Sent: Thursday, June 14, 2007 12:10 PM\n> To: Bob McConnell\n> Cc: beginners@perl.org\n> Subject: Re: Having trouble porting an application to MS-Windows\n> \n> On 6/14/07, Chas Owens  wrote:\n> > On 6/14/07, Bob McConnell  wrote:\n> > > In \"perlport - Writing portable Perl\" in the Alphabetic \n> list of Perl\n> > > Functions:\n> > >\n> > > alarm SECONDS\n> > > alarm\n> > >     Not implemented. (Win32)\n> > >\n> > > I couldn't find anything in the ActiveState release notes that\n> > > contradicted that.\n> > snip\n> > > > the latest version of ActiveState Perl on Windows XP works.\n> > snip\n> >\n> > Are you using the latest version of ActiveState Perl?  I \n> installed the\n> > latest version this morning to test the code I sent and when I run\n> >\n> > perldoc -T perlport | find /i alarm\n> >\n> > I get not output.  The first three functions listed are -X, \n> atan2, and binmode.\n> >\n> \n> In fact, the reference to alarm drops out of perlport in version 5.8.3\n> (released in 2004).\n> \n> from Perl 5.8.3's Changes file\n>              [ 21895]\n>              alarm() is now implemented on Win32.\n> \n\nI still can't get it to work, even without the fork. I am now running\nActivePerl 5.8.8.820 on Win2K SP4. Here are the code snippets after\npasting in the recommended alarm handling:\n\n-----------------------------------\n$port = 'COM4' unless $port;\n\n$SIG{'INT'} = 'dokill';\t\t# this allows me to kill it with\nCTRL-Break\nsub dokill {\n    kill 9,$child if $child;\n}\n\nsysopen( PORT, \"$port\", O_RDWR ) or die \"Can't sysopen $port: $!\";\nbinmode(PORT);\n\nLINE: while () {        # Input records from input file.\n\tchomp;\n\t# loop on NAK or timeout with two retries\n\t$done = 0;\n\t$tries = 0;\n\tdo {\n\t\tsyswrite PORT, $_, length;\n\n\t\t$timeout = 3;\n\n\t\teval {\n\t\t\tlocal $SIG{ALRM} = sub { die \"alarm\\n\" }; # NB:\n\\n required\n\t\t\talarm $timeout;\n\t\t\t$nread = sysread PORT, $line, 1;\n\t\t\talarm 0;\n\t\t};\n\t\tif ($@) {\n\t\t\tdie unless $@ eq \"alarm\\n\";   # propagate\nunexpected errors\n\t\t\t# timed out\n\t\t\tprint STDOUT \" t/o\";\n\t\t}\n\t\telse {\n\t\t\tfprint STDOUT \"sysread returned %d.\\n\", $nread;\n\t\t\tif (ord $line == 21) {\n\t\t\t\tprint STDOUT \" NAK\";\n\t\t\t}\n\t\t\tif (ord $line == 6) {\n\t\t\t\tprint STDOUT \" ACK\";\n\t\t\t\t$done = 1;\n\t\t\t}\n\t\t}\n\t} while ($done == 0 && ++$tries < 3);\n\tprint STDOUT \"\\n\";\n\tif ($done == 0) {\n\t\tnext LINE;\n\t}\n\t#send response and wait for ACK/NAK here\n\n}\n-----------------------------------\n\nThis transmits the packet, but never comes out of the eval() if it\ndoesn't receive a character. Is there anything obvious that I missed?\n\nEven if this does work, can I set simultaneous alarms in multiple\nthreads?\n\nThank you,\n\nBob McConnell\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}