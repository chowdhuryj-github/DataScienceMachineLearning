{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: Checking if files are older than 20 mins in a particular directory", "body": "Jay Savage wrote:\n> On 5/2/07, Rob Dixon  wrote:\n>> Chris E. Rempola wrote:\n>> >\n>> > Could someone point me in the right direction to write out a simple\n>> Perl\n>> > script to check for old files in a particular directory that are older\n>> > than 20 mins.  Is there a module to grab current timestamp?  Thanks.\n>>\n>> Check out\n>>\n>>   perldoc -f -x\n>>\n>> and look at the -M option. It gives the age of the file in days in\n>> floating point, so if its greater than 20/(24*60) your file is older than\n>> twenty minutes.\n> \n> Not quite. -M reports \"Script start time minus file modification time,\n> in days.\" To put it another way, -M reports how old the file was when\n> the script started running. Or more appropriately, how old the file\n> would have been when the script started running, assuming its current\n> mtime. That's not the same thing as how old the file is when the test\n> is executed.\n> \n> For short-lived scripts, the difference is mainly a technicality For\n> long-running programs, though, -M's behavior has serious consequences.\n> -M on its own is useless in, say, a daemon that runs for days or\n> months--if you're lucky--or even in a program that just takes a while\n> to process all its data. The math to correct for running time is\n> complicated by -M returning fractional days. To use -M effectively,\n> you need to do something like:\n> \n>    my $minutes = 20;\n>    if ( (-M \"file\") + ((time - $^T) / (24 * 60 * 60)) >\n> $limit_minutes/(24*60) )\n>        { do something }\n> \n> Usually it's easier to just use the mtime from stat():\n> \n>    if (time - (stat \"file\")[9] > $minutes * 60)\n>        { do something }\n\nOr you could simply do:\n\n$^T = time;\n\nBefore you do the file test which will put the current time into $^T which is\nwhat -M uses to calculate the file time:\n\n$ perl -le'\n    $file = shift;\n    print -M $file;\n    $^T = time() - 86400;\n    print -M $file;\n' yourfile.txt\n8.75521990740741\n7.75521990740741\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}