{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: zero width lookahead match", "body": "On May 30, 10:02 am, chas.ow...@gmail.com (Chas Owens) wrote:\n> On 5/30/07, Sharan Basappa  wrote:\n\n> > You mention that if I write a rule like @store = $str =~ m/((?=\\d\\d\\d))/g;\n> > then the scanner does not move ahead. But as I mentioned in my mail,\n> > the result of this regex is 123 234 etc. This clearly shows that after every\n> > match,\n> > the regex engine of perl is moving its pointer to next char in the string\n> > (i.e. it starts\n> > looking at 23456 once 123 is matched)\n> > This was exactly my question.\n>\n> Because it always moves ahead by either one character or the match,\n> but zero-width constructs do not consume any characters.  That is why\n> they are called zero-width.\n\nI got confused by this too.  I think Sharan's question comes down to\n\"why isn't this an infinite loop?\"  That is, why does pos() move ahead\none character when it matches 0 characters?  This is not limited to\nlook-ahead assertions.  The behavior can be seen in other constructs\nas well.  For example:\n\n$ perl -wle'\n$string = \"abc\";\nwhile ($string =~ /(.*?)/g) {\n  print pos($string), \": \", $1;\n}\n'\n0:\n1: a\n1:\n2: b\n2:\n3: c\n3:\n\nIt appears that Perl is actually dividing the string up into\n\"characters\" and \"slots between character\", and allowing pos() to move\nto each of them in sequence.  So at the beginning, it's at the slot\nbefore the first character, and it can successfully match 0\ncharacters.  Then pos() moves to the first character, and the fewest\ncharacters it can find is that one character, so $1 gets 'a'.  Then it\nmoves to the slot between 'a' and 'b'.  Etc.\n\nHere's another, that doesn't allow any characters to be matched:\n$ perl -wle'\n$string = \"abc\";\nwhile ($string =~ /(.{0})/g) {\n  print pos($string), \": \", $1;\n}\n'\n0:\n1:\n2:\n3:\n\nWould the above be an accurate description of what's happening?  And\nif so, is this behavior documented anywhere?  I couldn't find it in a\ncursory examanation of either perlop or perlre...\n\nThanks,\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}