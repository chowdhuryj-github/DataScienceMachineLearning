{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: [svn:perl6-synopsis] r14405 - doc/trunk/design/syn", "body": "On 5/29/07, Larry Wall  wrote:\n> On Tue, May 29, 2007 at 04:43:20PM -0400, Chas Owens wrote:\n> : Just an odd corner case, but\n> :    \"foo\" x -*\n> : should return an empty string and\n> :    \"foo\" xx -*\n> : should return an empty list, right?\n>\n> I'm doubt &prefix:<->:(Whatever) is defined at all, so that's probably\n> a run-time failure unless someone defines the appropriate multi.\n> And if the - fails it never even gets to the x or xx.  The * token\n> doesn't mean infinity.  It means that the operator you feed it to\n> has to figure out what it means.  Some operators interpret * to mean\n> infinity.  But infix:<-> interprets a * on the left to mean the end\n> of the current subscript range.  And the range operator interprets *\n> to mean either negative or positive infinity depending on whether\n> it's on the left or the right.  We don't require (or even allow)\n> people to say -*..* as it currently stands.\n>\n> Larry\n\nOkay, obviously I have more synopsis to read, but currently Pugs says:\npugs> my $posinf = *\nInf\npugs> my $neginf = -*\n-Inf\n\nwhich made me think * is Inf in scalar context.  Is this a bug in Pugs then?\n\nIs Inf the canonical way of spelling the literal \"infinity\"?\n\nI am patching Pugs' x and xx operators to handle infinity now.  The\nbehavior after the patch is\npugs> \"a\" x 5\n\"aaaaa\"\npugs> \"a\" x 0\n\"\"\npugs> \"a\" x -5\n\"\"\npugs> \"a\" x Inf\nInternal error while running expression:\nInfinite replications would exahust memory\npugs> \"a\" x -Inf\n\"\"\n\nBesides fixing the spelling error on exhaust and making it a real die\ninstead of an internal error (which I have yet to figure out how to\ndo), does this match up with your expectations for the replication\noperators?\n\n"}