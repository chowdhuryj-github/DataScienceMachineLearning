{"category": "ham", "to_address": "Michael Adam <ma@sernet.de>", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: svn commit: samba r23668 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_26/source/lib", "body": "On Sun, Jul 01, 2007 at 04:19:40PM +0200, Michael Adam wrote:\n> \n> This was exactly my reasoning, why num_ucs2 can't wrap.\n> \n> But of course length itself is potentially dangerous here,\n> since \"length + 2\" is passed to convert_string_talloc a\n> couple of lines further down (since the function adds a\n> (two byte) zero to the end of the input string.\n> \n> So what to do about that? Check for length >= \n> (maximum of uint32) - 2  and return an error when\n> this is the case?\n\nThat was the purpose of my alert - to make you\nlook at uses of user-privided data into *alloc\nfunctions.\n\nYou need to fix this asap as it's currently\na security issue. Look at the code in smbd/trans2.c\n\nYou need to do something like :\n\nif (length + 2 < length)\n\nto check for wrap. And add some comments\nexplaining that \"length\" cannot be trusted\nhere.\n\nThansk,\n\n\tJeremy.\n\n"}