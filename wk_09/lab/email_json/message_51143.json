{"category": "ham", "to_address": "speakup@braille.uwo.ca", "from_address": "Tyler Spivey <tspivey@pcdesk.net>", "subject": "Speakup in userspace", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI have some oppinions on this, and I'd like some input on how possible\nthis is. I'm not a very good C coder, but that's less important. I'm\nhoping, if a user space screen reader is implemented, that it can be\nextended; e.g. perl, python, etc. The problems with this seems to be:\n1. How can a userspace program get extended key sequences such as caps\nlock+i? Under Linux, I don't think that an API exists for this.\n\n2. What about console output? There is /dev/vcs[a]x, but polling that\na few times a second would be inefficient if the system was under load.\nThe rest is relatively easy - Linux already has serial port devices if\nneeded, and also speech dispatcher communications. I see no reason why a\nsmaller subset of speakup (just an API to get keyboard/console\ninput/output) couldn't be included into the kernel - it probably\nwouldn't change much, compared to the user-space adapter that would be\nusing that API. This is similar to what the Jupiter project is doing;\nalthough that's all in-kernel.\nany thoughts?\n- - Tyler\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.5 (FreeBSD)\n\niD8DBQFGeOZxTsjaYASMWKQRAt/WAKCsG0jwPECPii4+yQX6i4gO02UdXQCgmmuY\ne5jsV1bQGCZd+8LLWjwTHTs=\n=xOzu\n-----END PGP SIGNATURE-----\n\n_______________________________________________\nSpeakup mailing list\nSpeakup@braille.uwo.ca\nhttp://speech.braille.uwo.ca/mailman/listinfo/speakup\n\n"}