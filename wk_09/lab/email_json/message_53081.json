{"category": "ham", "to_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "from_address": "Mark Glines <mark@glines.org>", "subject": "Re: [svn:parrot] r19231 - trunk/languages/perl6/src/pmc", "body": "On Fri, 22 Jun 2007 11:36:28 -0500\n\"Patrick R. Michaud\"  wrote:\n> > Also, using sizeof() will fix some cases that strlen() doesn't\n> > handle correctly, specifically, strings containing explicit null\n> > characters. src/objects.c has a few examples of that.\n> > string_to_cstring(interp, \"\\0\", 0) will get the size wrong, but\n> > string_to_cstring_literal(interp, \"\\0\") will get it right.  So I\n> > don't really see a good excuse for not using it everywhere.\n> \n> I think you mean \"string_from_cstring_literal\", not \n> \"string_to_cstring_literal\".  At least I _hope_ that's \n> what you mean.  :-)\n\nOops, you're absolutely right.\n\n\n> Also, out of curiosity, do we really need \"cstring\" in the name?\n> How about simply...?\n> \n>     string_from_literal(interp, \"Foo\")\n> \n> (I'm not opposed to leaving 'cstring' in the name if it's important\n> to somehow make it clear that the literal is a cstring literal, I'm\n> just asking the question.)\n\nI just did it to make it look visually similar to\nstring_from_cstring().  I am open to suggestions and happy to make\nchanges.\n\nMark\n\n"}