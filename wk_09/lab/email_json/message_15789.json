{"category": "ham", "to_address": "Jonathan Worthington <jonathan@jnthn.net>", "from_address": "Joshua Isom <jrisom@gmail.com>", "subject": "Re: Is Parrot 1.0 too late?", "body": "I think that would be more work than truly necessary.  We have an \nobvious dependency on having a make that can read a generic makefile, \nand a c compiler that can compile to the running architecture \nsuccessfully(cross compiling would come later).  We can limit what goes \ninto parrot, which pmc's, etc, and try to get a miniparrot that's works \nwith a fairly default makefile for bootstrapping.  Type make, then \nwhatever configure script, then make again to build a full parrot?  It \nwould help our external dependancies go down to what's an expected \ndependency, make, and cc.\n\nThe main things to consider is how much we'd need inside miniparrot.\n\nOn Apr 25, 2007, at 12:24 PM, Jonathan Worthington wrote:\n\n> Jonathan Worthington wrote:\n>> I guess that doing so will involve re-writing a lot of the current \n>> Configure system and build tools into something that compiles down to \n>> PBC (and then just ship something very basic that can run a PBC).\n> Whoa. I meant, have some kinda miniparrot that can run a PBC but is \n> pure ANSI C or something. Long day...\n>\n> Jonathan\n>\n\n"}