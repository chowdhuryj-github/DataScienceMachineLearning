{"category": "ham", "to_address": "Dave Singer <singer@apple.com>, Anne van Kesteren <annevk@opera.com>,\n   Chris Lilley <chris@w3.org>, Larry Masinter <LMM@acm.org>,\n   ned.freed@mrochek.com", "from_address": "Martin Duerst <duerst@it.aoyama.ac.jp>", "subject": "Re: MPEG asks for MIME review for the MPEG21 file format", "body": "\nHello Dave,\n\nSome very good questions.\n\nAt 00:27 07/05/19, Dave Singer wrote:\n>For a lot of these encodings, of course, the initial string is identical (all the ones which have an 'ascii' core).  UTF-16 uses twice the bytes etc.\n>\n>But in general, given a MIME type with a \"+xml\" suffix, an XML reader should be prepared to do what?\n\nAt the minimum, handle it if it's UTF-8 or UTF-16 (with BOM in the later\ncase). Everything else is optional.\n\n>I think I am reading \"treat the resource as being, in turn, all the encodings you know of, and if you treat it as an encoding, do you find a confirming \"encoding\" attribute?\"\n\nMy reading of Appendix F of the XML Spec would be somewhat different.\n(See http://www.w3.org/TR/REC-xml/#sec-guessing-no-ext-info.)\nFirst, it's not character encodings, but character encoding families,\nthat you try. This makes this process quite a bit faster.\n\nSecond, that appendix gives a list of character encoding families.\nAs the appendix is non-normative, it doesn't necessary exclude\nother character encoding families, but there aren't really any other\ncharacter encoding families that I know of.\n\n\n>Which means that encoding='EBCDIC' (I made that up, by the way) would work?\n\nYou didn't have to make that up. EBCDIC as a family is listed in said\nappendix. The IETF charset registry lists close to 50 EBCDIC variants\n(see http://www.iana.org/assignments/character-sets). I guess that\nfor the 'original' EBCDIC, you'd have to write encoding='EBCDIC-US'.\n\n\n>Is a ZIP compressed XML file servable under a +xml MIME type? \"encoding='zipped Shift_JIS'\"?\n\nFirst, the encoding names allowed in the XML spec don't permit spaces\n(see http://www.w3.org/TR/REC-xml/#NT-EncName), but that's a detail.\n\nSecond, I'm not familliar with ZIP encoding, but I guess that it's\nnot starting with any of the byte sequences mentioned in Appendix F.\n\nThe third point is that ZIP files are archives, not compressions of\nsingle files. So you would have to restrict this kind of thing to\narchives containing single files.\n\nFourth, ZIP files don't have any way to identify internal character\nencodings. And polluting the charset space with zipped_foo,\nzipped_bar, ... does not look like a good idea.\n\n\n>'Semantic' encodings (e.g. MPEG BiM, which uses the schema to be able to compact the XML) are even greyer;  the 'encoding=' is inserted by the BiM decoder, so what does it say then?  I think the 'sanity check' has to be not that the resulting 'encoding=' says BiM, but that the BiM decode worked;  it makes noi sense for the BiM decoder to produce a text document that says \"encoding='BiM'\"!\n\nWell, actually this is less of a problem. Or put it another way round,\nit's a problem that turns up with simple plain old character encodings.\nThe easiest way to understand this is to think in terms of Java, because\nJava has a very clear distinction between byte sequences (Streams) and\ncharacter sequences (Readers/Writers).\n\nThe whole encoding stuff is important as long as you are on the byte\nlevel. Once the decoding is done, you have external information about\nthe encoding (in Java, you know it's UTF-16), so the encoding\npseudo-attribute in the XML declaration becomes irrelevant.\nThat's how the implementations I know handle this, you can hand\nan XML document from a Reader or a String to a Java XML parser,\nand the characters in there might read:  encoding='shift_jis',\nbut that's just ignored. There is not too much in the spec\nthat defines this explicitly, but it's pretty difficult to do\notherwise.\n\n\n>This is all well off-topic for MPEG-21 of course, but by exploring these edge cases we might get some clarity on +xml, which would be a Good Thing.\n\nYes indeed. Thanks a lot.\n\nRegards,    Martin.\n\n\n\n#-#-#  Martin J. Du\"rst, Assoc. Professor, Aoyama Gakuin University\n#-#-#  http://www.sw.it.aoyama.ac.jp       mailto:duerst@it.aoyama.ac.jp     \n\n"}