{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "gabriele renzi <surrender_it@rc.europe.yahoo-eu1.akadns.net>", "subject": "\"cached\" trait specs", "body": "Hi everyone,\n\nA small request about the cached trait for functions that makes them \nmemoized: would it be possible to make it parametric?\n\nI think it would be nice to have at least one variant\n\n  sub foo is cached(max=>$size)\n\ncaching just the first $size results.\nMaybe it could also be useful to have a default size of the cache \ninstead of letting it grow indefinitely? I can easily imagine RAMs \nsuffering because someone used \"is cached\" in a bad place :)\n\nAlso it would be quite useful, I think, to have another variant:\n  sub foo is cached(using => $mapping)\n\nthis way people could implement their own caching policies easily, i.e. \nFIFO buffer, most used, most expensive and so on. Or reload on-disk \ncaches from run to run, and even the other suggestion could be \nimplemented easily in terms of this.\n\nOn the other hand, if the cached trait had a %.mapping attribute \npossible we could do this withouth making cached parametric, I mean:\n\n  sub foo is cached {...}\n  &foo.mapping = $my_mapping\n\n\nbut I think the other way it would be more clear.\n\n"}