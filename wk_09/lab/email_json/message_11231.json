{"category": "ham", "to_address": "beginners@perl.org", "from_address": "oryann9 <oryann9@yahoo.com>", "subject": "Re: Nested loop", "body": "--- Chas Owens  wrote:\n\n> On 4/20/07, John W. Krahn  wrote:\n> snip\n> > You are omitting one critical argument.  For\n> people who are stuck with older\n> > versions of Perl and in your grep() example above\n> the foreach expression\n> > creates its list in memory which may cause the\n> program to die if the list is\n> > large enough while the C style for loop does not\n> have this problem.\n> snip\n> \n> I refuse to let the fact that some people\n> cannot/will not upgrade\n> their copy of Perl affect how I code or advise\n> others to code.  There\n> are still people who wrtie/maintain Perl4 scripts,\n> should I not tell\n> people to use the strict pragma?  Even IBM is\n> shipping a modern Perl\n> with AIX now.\n> \n \nI agree with Chas and can support the AIX notion as I\nwork on AIX 5.3 machines which is the latest AIX.\n\nBut I did not see any response about:\n\nInteresting though I ran perl -MO=Deparse on this\ncode...\nSo will foreach really be going away?\n\n\n$ cat foo1\nfor my $i (0 .. 3) {\n   $i *= 3;\n   print $i,\"\\n\";\n}\nprint \"\\n\\n\";\nfor my $i (map { $_ * 3 } 0 .. 3) {\n        print \"$i\\n\";\n}\n\n$ perl -MO=Deparse foo1\nforeach my $i (0 .. 3) {\n    $i *= 3;\n    print $i, \"\\n\";\n}\nprint \"\\n\\n\";\nforeach my $i (map {$_ * 3;} 0..3) {\n    print \"$i\\n\";\n}\nfoo1 syntax OK\n\n\n\n\n\n\n__________________________________________________\nDo You Yahoo!?\nTired of spam?  Yahoo! Mail has the best spam protection around \nhttp://mail.yahoo.com \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}