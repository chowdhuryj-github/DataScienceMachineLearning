{"category": "ham", "to_address": "Michael Adam <ma@sernet.de>", "from_address": "David Collier-Brown <davec-b@rogers.com>", "subject": "Re: svn commit: samba r23108 - in\n branches:\tSAMBA_3_0/source/lib/replace\n SAMBA_3_0_26/source/lib/replace\tSAMBA_4_0/source/lib/replace", "body": "\n\nMichael Adam wrote:\n>>Is there any expectation that this is actually going to work? If we  \n>>cabn't figure out the header that these definition live in, then  \n>>making them up isn't necessarily going to help, eg. on AIX RTLD_GLOBAL  \n>>appears to be 0x100. I don't know any system that defines them *all*  \n>>to zero.\n>>\n>>If ldb requires these definitions, Id suggest simply disabling shared  \n>>library support in lds unless they are present. That seems safer that  \n>>passing an arbitrary (random?) value into dlopen.\n> \n> \n> You are probably right. My primary goal was to get the build\n> working on a system at all. I have taken the defines from\n> heimdal/lib/hdb/hdb.c more or less blindly...\n> \n> I have to reconsider this.\n\nThere's really two issues here: do you have the RTLD_XXX functionality\nin dlopen, and do you have the #defines for it.\n\nIf you lack the functionality **and** if you depend on it rather than on\nthe defined default behavior, then you should refuse to use dlopen with\nthe wrong settings.  If you have the capability and merely lack the\n#defines, you should create your own #defines.\n\nIf, on the third hand, the default behavior is what you wish (and\nI don't know if it is), then you can safely refrain from using the\n#defines and not have to think about the problem at all.  The latter\nwas something of a well-known \"best practice\" in the Unix of old (;-))\n\n--dave\n-- \nDavid Collier-Brown,         | Always do right. This will gratify\nSystem Programmer and Author | some people and astonish the rest\ndavecb@spamcop.net           |                      -- Mark Twain\n(416) 223-5943\n\n"}