{"category": "ham", "to_address": "\"Kevin E. Thorpe\" <kevin.thorpe@utoronto.ca>", "from_address": "\"Christophe Pallier\" <christophe@pallier.org>", "subject": "Re: [R] Tools For Preparing Data For Analysis", "body": "If I understand correctly (from your Perl script)\n\n1. you count the number of occurences of each \"(echo, muga)\" pairs in the\nfirst file.\n\n2. you remove from the second file the lines that correspond to these\noccurences.\n\nIf this is indeed your aim, here's a solution in R:\n\ncumcount <- function(x) {\n y <- numeric(length(x))\n for (i in 1:length(y)) {\n     y[i] = sum(x[1:i] == x[i])\n }\n y\n}\n\nboth <- read.csv('both_echo.csv')\nv <- table(paste(both$echo, \"_\", both$muga, sep=\"\"))\n\nsemi <- read.csv('qual_echo.csv')\ns <- paste(semi$echo, \"_\", semi$muga, sep=\"\")\ncs = cumcount(s)\ncount = v[s]\ncount[is.na(count)]=0\n\nsemi2 <- data.frame(semi, s, cs, count, keep = cs > count)\n\n> semi2\n  echo muga quant     s cs count  keep\n1   10   20     0 10_20  1     0  TRUE\n2   10   20     0 10_20  2     0  TRUE\n3   10   21     0 10_21  1     1 FALSE\n4   10   21     0 10_21  2     1  TRUE\n5   10   24     0 10_24  1     0  TRUE\n6   10   25     0 10_25  1     2 FALSE\n7   10   25     0 10_25  2     2 FALSE\n8   10   25     0 10_25  3     2  TRUE\n\n\nMy code is not very readable...\nYet, the 'trick' of using an helper function like 'cumcount' might be\ninstructive.\n\nChristophe Pallier\n\n\nOn 6/22/07, Kevin E. Thorpe  wrote:\n>\n> I am posting to this thread that has been quiet for some time because I\n> remembered the following question.\n>\n> Christophe Pallier wrote:\n> > Hi,\n> >\n> > Can you provide examples of data formats that are problematic to read\n> and\n> > clean with R ?\n>\n> Today I had a data manipulation problem that I don't know how to do in R\n> so I solved it with perl.  Since I'm always interested in learning more\n> about complex data manipulation in R I am posting my problem in the\n> hopes of receiving some hints for doing this in R.\n>\n> If anyone has nothing better to do than play with other people's data,\n> I would be happy to send the row files off-list.\n>\n> Background:\n>\n> I have been given data that contains two measurements of left\n> ventricular ejection fraction.  One of the methods is echocardiogram\n> which sometimes gives a true quantitative value and other times a\n> semi-quantitative value.  The desire is to compare echo with the\n> other method (MUGA).  In most cases, patients had either quantitative\n> or semi-quantitative.  Same patients had both.  The data came\n> to me in excel files with, basically, no patient identifiers to link\n> the \"both\" with the semi-quantitative patients (the \"both\" patients\n> were in multiple data sets).\n>\n> What I wanted to do was extract from the semi-quantitative data file\n> those patients with only semi-quantitative.  All I have to link with\n> are the semi-quantitative echo and the MUGA and these pairs of values\n> are not unique.\n>\n> To make this more concrete, here are some portions of the raw data.\n>\n> \"Both\"\n>\n> \"ID NUM\",\"ECHO\",\"MUGA\",\"Semiquant\",\"Quant\"\n> \"B\",12,37,10,12\n> \"D\",13,13,10,13\n> \"E\",13,26,10,15\n> \"F\",13,31,10,13\n> \"H\",15,15,10,15\n> \"I\",15,21,10,15\n> \"J\",15,22,10,15\n> \"K\",17,22,10,17\n> \"N\",17.5,4,10,17.5\n> \"P\",18,25,10,18\n> \"R\",19,25,10,19\n>\n> Seimi-quantitative\n>\n> \"echo\",\"muga\",\"quant\"\n> 10,20,0      <-- keep\n> 10,20,0      <-- keep\n> 10,21,0      <-- remove\n> 10,21,0      <-- keep\n> 10,24,0      <-- keep\n> 10,25,0      <-- remove\n> 10,25,0      <-- remove\n> 10,25,0      <-- keep\n>\n> Here is the perl program I wrote for this.\n>\n> #!/usr/bin/perl\n>\n> open(BOTH, \"quant_qual_echo.csv\") || die \"Can't open quant_qual_echo.csv\";\n> # Discard first row;\n> $_ = ;\n> while() {\n>     chomp;\n>     ($id, $e, $m, $sq, $qu) = split(/,/);\n>     $both{$sq,$m}++;\n> }\n> close(BOTH);\n>\n> open(OUT, \"> qual_echo_only.csv\") || die \"Can't open qual_echo_only.csv\";\n> print OUT \"pid,echo,muga,quant\\n\";\n> $pid = 2001;\n>\n> open(QUAL, \"qual_echo.csv\") || die \"Can't open qual_echo.csv\";\n> # Discard first row\n> $_ = ;\n> while() {\n>     chomp;\n>     ($echo, $muga, $quant) = split(/,/);\n>     if ($both{$echo,$muga} > 0) {\n>         $both{$echo,$muga}--;\n>     }\n>     else {\n>         print OUT \"$pid,$echo,$muga,$quant\\n\";\n>         $pid++;\n>     }\n> }\n> close(QUAL);\n> close(OUT);\n>\n> open(OUT, \"> both_echo.csv\") || die \"Can't open both_echo.csv\";\n> print OUT \"pid,echo,muga,quant\\n\";\n> $pid = 3001;\n>\n> open(BOTH, \"quant_qual_echo.csv\") || die \"Can't open quant_qual_echo.csv\";\n> # Discard first row;\n> $_ = ;\n> while() {\n>     chomp;\n>     ($id, $e, $m, $sq, $qu) = split(/,/);\n>     print OUT \"$pid,$sq,$m,0\\n\";\n>     print OUT \"$pid,$qu,$m,1\\n\";\n>     $pid++;\n> }\n> close(BOTH);\n> close(OUT);\n>\n>\n> --\n> Kevin E. Thorpe\n> Biostatistician/Trialist, Knowledge Translation Program\n> Assistant Professor, Department of Public Health Sciences\n> Faculty of Medicine, University of Toronto\n> email: kevin.thorpe@utoronto.ca  Tel: 416.864.5776  Fax: 416.864.6057\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n\n-- \nChristophe Pallier (http://www.pallier.org)\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}