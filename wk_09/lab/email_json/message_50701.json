{"category": "ham", "to_address": "\"Feng, Ken \" <ken.feng@citi.com>", "from_address": "Erik Iverson <iverson@biostat.wisc.edu>", "subject": "Re: [R] How do I avoid a loop?", "body": "One more variation on the solution, no idea how it compares in speed.\n\nUsing your x ...\n\n > ifelse(x, unlist(mapply(seq, to = rle(x)$lengths, from = 1)), 0)\n[1] 1 2 3 0 0 1 2 0 1\n\nFeng, Ken wrote:\n> Hi,\n> \n> I start with an array of booleans:\n> \n> \tx <- c( TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE );\n> \n> I want to define an y <- f(x) such that:\n> \n> \ty <- c( 1, 2, 3, 0, 0, 1, 2, 0, 1 );\n> \n> In other words, do a cumsum when I see a TRUE, but reset to 0 if I see a FALSE.\n> \n> I know I can do this with a very slow and ugly loop or maybe use apply,\n> but I was hoping there are some R experts out there who can show me\n> a cleaner/more elegant solution?\n> \n> Thanks in advance.\n> \n> - Ken\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}