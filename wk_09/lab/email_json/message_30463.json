{"category": "ham", "to_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: qx() won't accept over (about) 128,000 characters", "body": "On 5/15/07, Tom Phoenix  wrote:\n> On 5/15/07, Jameson C. Burt  wrote:\n>\n> > Letting my imagination loose,\n> > I ponder that  qx()  could have a fixed buffer size, which cannot be exceeded;\n> > or Unix takes in a block of size 2^16 but not of size 2^17.\n> > But I am probably only cluttering my mind with possibilities,\n> > when the problem is a simple looking  large-number-of-characters problem.\n> > Any ideas?\n>\n> It seems that you've stumbled upon an undocumented implementation\n> limitation. Perl doesn't have too many of those, and it probably\n> shouldn't have any. Now that you have a test case, I encourage you to\n> run perlbug to submit it with a request that it be fixed or\n> documented. (I suspect, though, that the real limitation is in your OS\n> or shell, rather than Perl; so the only fix will be to the\n> documentation.)\n>\n> But what's in the qx``, an entire shell script? Maybe there's a better\n> way to do whatever you're trying to do.\n>\n> When a string within qx`` contains shell metacharacters, the string is\n> passed to /bin/sh on Unix systems. So you're starting a shell, and\n> giving it a large program to run. The shell is going to launch one or\n> more other programs. Maybe your program could launch those programs\n> directly, leaving the shell out of things, and saving that much memory\n> and time, not to mention bypassing any limitations the shell imposes.\n>\n> Good luck with it!\n>\nsnip\n\nIt might not be a Perl limitation.  If it is being passed off to sh\nthen he is probably hitting his OS's commandline length limit.  This\ncan generally be increased, but it is not a good idea since it affects\nall running processes, not just this one.  Writing the SAS script to a\nfile and then calling sas with the file should work.  I have done it\nbefore from both shell (usuallly Korn) and Perl.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}