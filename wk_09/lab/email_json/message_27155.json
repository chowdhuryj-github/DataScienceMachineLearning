{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "HelponR <suncertain@gmail.com>", "subject": "Re: [R] how to control the sampling to make each sample unique", "body": "I know. But I am curious about how sample() works.\n\nFor a small sample size. choose 1 digit from 0, 1\nit only has two combinations. It is easy to test that the below can happen\nconsecutively.\n\n> sample (c(0,1), 1)\n[1] 0\n> sample (c(0,1), 1)\n[1] 0\n\nThat means, the output did not deplete all unique combinations before\nrepeating.\n\nSo I am concerned about how to control this. What I like to see after\nthe control is:\n> sample (c(0,1), 1)\n[1] 0\n> sample (c(0,1), 1)\n[1] 1\n> sample (c(0,1), 1)\n[1] 0\n\nI don't think that is possible. Anyway, I just think a way to control is\nrecording all output in files, checking the new output, if they are\nrepeating with any of the previous files, then do not use it.\nThat is kind of clumsy. For each new combination, I have to compare with all\nprevious combinations.\n\nFirst I sort the sequence, then I do a difference. then I square it, then I\nsum it. If the result is 0 then a repetition happens.\n\n\nThanks all.\n\n\n\nOn 5/10/07, Rory Martin  wrote:\n>\n>  sample(1:1000, 4000) returns a =random= sample of 4000\n> integers from [1,1000].  It is exceedingly unlikely\n> you will generate exactly the same set of 4000 integers.\n> And if it did happen, it wouldn't make the slightest\n> difference to your results.\n>\n> Rory\n>\n>\n>\n> ----- Original Message -----\n> *From:* HelponR \n> *To:* Rory Martin \n> *Cc:* r-help@stat.math.ethz.ch\n> *Sent:* Thursday, May 10, 2007 4:47 PM\n> *Subject:* Re: [R] how to control the sampling to make each sample unique\n>\n>\n> Yeah, I want to get all unique combinations of choosing ntest from ntotal.\n>\n> for example, choosing 4000 training data from 10,000 total data.\n>\n> Suppose they are sequenced as 1:10,000\n>\n> One obvious combination is 1:4000\n>\n> Then I run\n>\n> sample ((1:1000), 4000)\n>\n> it may output 4000 numbers:\n>\n> 1, 3, 5, .... 7999\n>\n> Then I run again,\n>\n> it may output another 4000 numbers:\n>\n> 2, 4, 6, ..., 8000\n>\n> I know the number of such unique combinations is\n>\n> Choose 4000 from 10,000\n>\n> (I forgot how to denote this.)\n>\n> Anyway, I remember choosing m from n is  computed as\n> T = n! /(m!(m-n)!)\n>\n> ! is factorial\n>\n>\n> My concern is:\n> when the sample output will start to repeat?\n>\n> For example, maybe I run next time, the output will be the same as the\n> first time.\n> 1,2, 3, ...., 4000\n> That's not what I want.\n>\n> I hope to get T different or unique combinations in T runs. It is fine it\n> may start to repeat after T times.\n>\n> I know the sample() may already do this way. But I am not sure.\n>\n>\n> Thank you!\n>\n>\n>\n> On 5/10/07, Rory Martin  wrote:\n> >\n> > I think you're asking a design question about a Monte Carlo\n> > simulation.  You\n> > have a \"population\" (size 10,000) from which you're defining an\n> > empirical\n> > distribution, and you're sampling from this to create pairs of training\n> > and\n> > test samples.\n> >\n> > You need to ensure that each specific pair of training and test samples\n> > is\n> > disjoint, meaning no observations in common.  Normally, you wouldn't\n> > want to\n> > make the different training samples disjoint, if that's what you meant\n> > by\n> > them being \"unique\".  Or were you using it to mean \"identical\"?\n> >\n> > Regards\n> > Rory Martin\n> >\n> >\n> > > From: HelponR  Date: Wed, 09 May 2007\n> > 17:28:19\n> > >\n> > > I have a dataset of 10000 records which I want to use to compare two\n> > > prediction models.\n> > >\n> > > I split the records into test dataset (size = ntest) and training\n> > dataset\n> > > (size = ntrain). Then I run the two models.\n> > >\n> > > Now I want to shuffle the data and rerun the models. I want many\n> > shuffles.\n> > >\n> > > I know that the following command\n> > >\n> > > sample ((1:10000), ntrain)\n> > >\n> > > can pick ntrain numbers from 1 to 10000. Then I just use these rows as\n> > the\n> > > training dataset.\n> > >\n> > > But how can I make sure each run of sample produce different results?\n> > I\n> > > want the data output be unique each time. I tested sample(). and found\n> > it\n> > > usually produce different combinations. But can I control it some how?\n> > Is\n> > > there a better way to write this?\n> >\n> > ______________________________________________\n> > R-help@stat.math.ethz.ch mailing list\n> > https://stat.ethz.ch/mailman/listinfo/r-help\n> > PLEASE do read the posting guide\n> > http://www.R-project.org/posting-guide.html\n> > and provide commented, minimal, self-contained, reproducible code.\n> >\n>\n>\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}