{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Dr.Ruud\" <rvtol+news@isolution.nl>", "subject": "Re: regex & utf8", "body": "Tom Allison schreef:\n> Ruud:\n>> Tom:\n\n>>> Under perl version 5.8, does /(\\w+)/ match UTF-8 characters without\n>>> calling any special pragma?\n>>\n>> Yes, but only if your data is proper. Mind that any ASCII-character\n>> is a UTF-8 character too (U+0000 .. U+007F).\n>\n\n>>> So I'm trying to see if I can just use /(\\w+)/ without worrying\n>>> about all this character encoding?\n>>\n>> Only if your data is proper. A file is just a string of bytes. If you\n>> use the proper IO-layer while reading in the file, then you'll end up\n>> with proper data (a string of characters, not of bytes) to work with.\n>>\n>> A UTF-8 encoded file can't tell you that it is UTF-8 encoded. For\n>> example a UTF-8 BOM at the start (as Windows Notepad uses) is not\n>> proof. So you need to know beforehand.\n>\n> Rather than going through the somewhat buggy process of trying to\n> determine which of the\n> many character sets there are, is there some way that I can just\n> universally convert everything into UTF8?\n\nYes, iconv, but still only if you know the encoding of the source, see\nmy \"beforehand\".\nSee also `man iconv`.\n\n\n> I can open a file with a :utf8 declaration when creating the file\n> handle.\n\nDon't do that unless the contents of the file (that you open for\nreading) are in utf8.\n\n\n> But do I need to do this on a utf8 file or will perl just\n> \"know\".  If it doesn't, can I just open everything in utf8 mode and\n> not lose any data?\n\nNo, see again my \"beforehand\". A utf8 file (I assume you mean \"Perl\nutf8\") is still just a stream of bytes.\nhttp://search.cpan.org/~dankogai/Encode-2.21/lib/Encode/Guess.pm\n\nDid you read perlunitut?\n\n-- \nAffijn, Ruud\n\n\"Gewoon is een tijger.\"\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}