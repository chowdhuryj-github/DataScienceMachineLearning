{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11881: Convert ldap provision code to perl. in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11881\nrevision-id: jelmer@samba.org-20070417001333-mff8mosr6a5i3sb3\nparent: jelmer@samba.org-20070416233038-0aom9b19fkyfq6j7\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Tue 2007-04-17 02:13:33 +0200\nmessage:\n  Convert ldap provision code to perl.\nremoved:\n  source/script/tests/mk-fedora-ds.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dfedora%2dds.sh\n  source/script/tests/mk-openldap.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dopenldap.sh\nmodified:\n  source/script/tests/Samba4.pm  svn-v2:21707@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fSamba4.pm\n=== removed file 'source/script/tests/mk-fedora-ds.sh'\n--- a/source/script/tests/mk-fedora-ds.sh\t2007-04-16 20:35:19 +0000\n+++ b/source/script/tests/mk-fedora-ds.sh\t1970-01-01 00:00:00 +0000\n@@ -1,90 +0,0 @@\n-FEDORA_DS_INF=$LDAPDIR/fedorads.inf\n-FEDORA_DS_INITIAL_LDIF=$LDAPDIR/fedorads-initial.ldif\n-\n-echo \"FEDORA_DS_LOGLEVEL=0\"\n-\n-#Make the subdirectory be as fedora DS would expect\n-FEDORA_DS_DIR=$LDAPDIR/slapd-samba4\n-echo FEDORA_DS_DIR=$FEDORA_DS_DIR\n-\n-echo \"FEDORA_DS_PIDFILE=$FEDORA_DS_DIR/logs/slapd-samba4.pid\"\n-\n-cat >$FEDORA_DS_INF <$FEDORA_DS_INITIAL_LDIF<<EOF\n-# These entries need to be added to get the container for the \n-# provision to be aimed at.\n-\n-dn: cn=\"dc=$BASEDN\",cn=mapping tree,cn=config\n-objectclass: top\n-objectclass: extensibleObject\n-objectclass: nsMappingTree\n-nsslapd-state: backend\n-nsslapd-backend: userData\n-cn: $BASEDN\n-\n-dn: cn=userData,cn=ldbm database,cn=plugins,cn=config\n-objectclass: extensibleObject\n-objectclass: nsBackendInstance\n-nsslapd-suffix: $BASEDN\n-\n-EOF\n-\n-perl $FEDORA_DS_PREFIX/bin/ds_newinst.pl $FEDORA_DS_INF >&2 || exit 1;\n-\n-( \n-     cd $FEDORA_DS_DIR/schema\n-     ls | grep -v ^00core | xargs rm\n-)\n-\n-cat >>$FEDORA_DS_DIR/dse.ldif<&2\n-\n-#it is easier to base64 encode this than correctly escape it:\n-# (targetattr = \"*\") (version 3.0;acl \"full access to all by all\";allow (all)(userdn = \"ldap:///anyone\");)\n-echo \"PROVISION_ACI=--aci=aci:: KHRhcmdldGF0dHIgPSAiKiIpICh2ZXJzaW9uIDMuMDthY2wgImZ1bGwgYWNjZXNzIHRvIGFsbCBieSBhbGwiO2FsbG93IChhbGwpKHVzZXJkbiA9ICJsZGFwOi8vL2FueW9uZSIpOykK\"\n-\n\n=== removed file 'source/script/tests/mk-openldap.sh'\n--- a/source/script/tests/mk-openldap.sh\t2007-04-16 20:35:19 +0000\n+++ b/source/script/tests/mk-openldap.sh\t1970-01-01 00:00:00 +0000\n@@ -1,124 +0,0 @@\n-SLAPD_CONF=$LDAPDIR/slapd.conf\n-export SLAPD_CONF\n-echo \"SLAPD_CONF=$SLAPD_CONF\"\n-\n-echo \"OPENLDAP_LOGLEVEL=0\"\n-OPENLDAP_PIDFILE=$PIDDIR/slapd.pid\n-echo \"OPENLDAP_PIDFILE=$OPENLDAP_PIDFILE\"\n-\n-cat >$SLAPD_CONF < $LDAPDIR/db/DB_CONFIG <&2\n-\n-#Now create an LDAP baseDN\n-$srcdir/bin/smbscript $srcdir/setup/provision $PROVISION_OPTIONS --ldap-base >&2\n-\n-OLDPATH=$PATH\n-PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH\n-export PATH\n-\n-MODCONF=$LDAPDIR/modules.conf\n-rm -f $MODCONF\n-touch $MODCONF\n-\n-slaptest -u -f $SLAPD_CONF >&2 || {\n-    # echo \"enabling slapd modules\" >&2\n-    cat > $MODCONF </dev/null || {\n-\techo \"slapadd failed\" >&2\n-    }\n-\n-    slaptest -f $SLAPD_CONF >/dev/null || {\n-\techo \"slaptest after database load failed\" >&2\n-    }\n-fi\n-    \n-PATH=$OLDPATH\n-export PATH\n\n=== modified file 'source/script/tests/Samba4.pm'\n--- a/source/script/tests/Samba4.pm\t2007-04-16 23:30:38 +0000\n+++ b/source/script/tests/Samba4.pm\t2007-04-17 00:13:33 +0000\n@@ -32,11 +32,11 @@\n \t# running slapd in the background means it stays in the same process group, so it can be\n \t# killed by timelimit\n \tif ($self->{ldap} eq \"fedora\") {\n-\t        system(\"$ENV{FEDORA_DS_PREFIX}/sbin/ns-slapd -D $env_vars->{FEDORA_DS_DIR} -d$env_vars->{FEDORA_DS_LOGLEVEL} -i $env_vars->{FEDORA_DS_PIDFILE}> $env_vars->{LDAPDIR}/logs 2>&1 &\");\n+\t        system(\"$ENV{FEDORA_DS_PREFIX}/sbin/ns-slapd -D $env_vars->{FEDORA_DS_DIR} -d0 -i $env_vars->{FEDORA_DS_PIDFILE}> $env_vars->{LDAPDIR}/logs 2>&1 &\");\n \t} elsif ($self->{ldap} eq \"openldap\") {\n \t\tmy $oldpath = $ENV{PATH};\n \t\t$ENV{PATH} = \"/usr/local/sbin:/usr/sbin:/sbin:$ENV{PATH}\";\n-\t\tsystem(\"slapd -d$env_vars->{OPENLDAP_LOGLEVEL} -f $conf -h $uri > $env_vars->{LDAPDIR}/logs 2>&1 &\");\n+\t\tsystem(\"slapd -d0 -f $conf -h $uri > $env_vars->{LDAPDIR}/logs 2>&1 &\");\n \t\t$ENV{PATH} = $oldpath;\n \t}\n \twhile (system(\"$self->{bindir}/ldbsearch -H $uri -s base -b \\\"\\\" supportedLDAPVersion > /dev/null\") != 0) {\n@@ -164,6 +164,227 @@\n \");\n }\n \n+sub mk_fedora($$$$$$)\n+{\n+\tmy ($self, $ldapdir, $basedn, $root, $password, $privatedir, $configuration) = @_;\n+\n+\tmy $fedora_ds_inf = \"$ldapdir/fedorads.inf\";\n+\tmy $fedora_ds_initial_ldif = \"$ldapdir/fedorads-initial.ldif\";\n+\n+\t#Make the subdirectory be as fedora DS would expect\n+\tmy $fedora_ds_dir = \"$ldapdir/slapd-samba4\";\n+\n+\tmy $pidfile = \"$fedora_ds_dir/logs/slapd-samba4.pid\";\n+\n+\topen(CONF, \">$fedora_ds_inf\");\n+\tprint CONF \"\n+[General]\n+SuiteSpotUserID = $root\n+fullMachineName=   localhost\n+ServerRoot=   $ldapdir\n+\n+[slapd]\n+ldapifilepath=$ldapdir/ldapi\n+Suffix= $basedn\n+rootDN= cn=Manager,$basedn\n+rootDNPwd= $password\n+serverIdentifier= samba4\n+InstallLdifFile=$fedora_ds_initial_ldif\n+\n+inst_dir= $fedora_ds_dir\n+config_dir= $fedora_ds_dir\n+schema_dir= $fedora_ds_dir/schema\n+lock_dir= $fedora_ds_dir/lock\n+log_dir= $fedora_ds_dir/logs\n+run_dir= $fedora_ds_dir/logs\n+db_dir= $fedora_ds_dir/db\n+bak_dir= $fedora_ds_dir/bak\n+tmp_dir= $fedora_ds_dir/tmp\n+ldif_dir= $fedora_ds_dir/ldif\n+cert_dir= $fedora_ds_dir\n+\n+start_server= 0\n+\";\n+\tclose(CONF);\n+\n+\topen(CONF, \">$fedora_ds_initial_ldif\");\n+\tprint \"\n+# These entries need to be added to get the container for the \n+# provision to be aimed at.\n+\n+dn: cn=\\\"dc=$basedn\\\",cn=mapping tree,cn=config\n+objectclass: top\n+objectclass: extensibleObject\n+objectclass: nsMappingTree\n+nsslapd-state: backend\n+nsslapd-backend: userData\n+cn: $basedn\n+\n+dn: cn=userData,cn=ldbm database,cn=plugins,cn=config\n+objectclass: extensibleObject\n+objectclass: nsBackendInstance\n+nsslapd-suffix: $basedn\n+\";\n+\tclose(CONF);\n+\n+\tsystem(\"perl $ENV{FEDORA_DS_PREFIX}/bin/ds_newinst.pl $fedora_ds_inf >&2\") == 0 or return 0;\n+\n+\tunlink(<$fedora_ds_dir/schema/00core.*>);\n+\n+\topen(LDIF, \">$fedora_ds_dir/dse.ldif\");\n+\tprint LDIF \"\n+dn: cn=bitwise,cn=plugins,cn=config\n+objectClass: top\n+objectClass: nsSlapdPlugin\n+objectClass: extensibleObject\n+cn: bitwise\n+nsslapd-pluginPath: $ENV{FEDORA_DS_PREFIX}/lib/fedora-ds/plugins/libbitwise-plugin.so\n+nsslapd-pluginInitfunc: bitwise_init\n+nsslapd-pluginType: matchingRule\n+nsslapd-pluginEnabled: on\n+nsslapd-pluginId: bitwise\n+nsslapd-pluginVersion: 1.1.0a3\n+nsslapd-pluginVendor: Fedora Project\n+nsslapd-pluginDescription: Allow bitwise matching rules\n+\";\n+\tclose(CONF);\n+\n+\tsystem(\"$self->{bindir}/ad2oLschema $configuration -H $privatedir/sam.ldb --option=convert:target=fedora-ds -I $self->{setupdir}/schema-map-fedora-ds-1.0 -O $fedora_ds_dir/schema/99_ad.ldif >&2\");\n+\n+\treturn ($fedora_ds_dir, $pidfile);\n+}\n+\n+sub mk_openldap($$$$$$$$)\n+{\n+\tmy ($self, $ldapdir, $basedn, $password, $privatedir, $dnsname, $configuration, $provision_options) = @_;\n+\n+\tmy $slapd_conf = \"$ldapdir/slapd.conf\";\n+\tmy $pidfile = \"$ldapdir/slapd.pid\";\n+\tmy $modconf = \"$ldapdir/modules.conf\";\n+\n+\tmkdir($_) foreach ($ldapdir, \"$ldapdir/db\", \"$ldapdir/db/bdb-logs\", \n+\t\t\"$ldapdir/db/tmp\");\n+\n+\topen(CONF, \">$slapd_conf\");\n+\tprint CONF \"\n+loglevel 0\n+\n+include $ldapdir/ad.schema\n+\n+pidfile\t\t$pidfile\n+argsfile\t$ldapdir/slapd.args\n+sasl-realm $dnsname\n+access to * by * write\n+\n+allow update_anon\n+\n+authz-regexp\n+          uid=([^,]*),cn=$dnsname,cn=digest-md5,cn=auth\n+          ldap:///$basedn??sub?(samAccountName=\\$1)\n+\n+authz-regexp\n+          uid=([^,]*),cn=([^,]*),cn=digest-md5,cn=auth\n+          ldap:///$basedn??sub?(samAccountName=\\$1)\n+\n+include $modconf\n+\n+defaultsearchbase \\\"$basedn\\\"\n+\n+backend\t\tbdb\n+database        bdb\n+suffix\t\t\\\"$basedn\\\"\n+rootdn          \\\"cn=Manager,$basedn\\\"\n+rootpw          $password\n+directory\t\\$ldapdir/db\n+index           objectClass eq\n+index           samAccountName eq\n+index name eq\n+index objectSid eq\n+index objectCategory eq\n+index member eq\n+index uidNumber eq\n+index gidNumber eq\n+index unixName eq\n+index privilege eq\n+index nCName eq pres\n+index lDAPDisplayName eq\n+index subClassOf eq\n+index dnsRoot eq\n+index nETBIOSName eq pres\n+\n+#syncprov is stable in OpenLDAP 2.3, and available in 2.2.  \n+#We only need this for the contextCSN attribute anyway....\n+overlay syncprov\n+syncprov-checkpoint 100 10\n+syncprov-sessionlog 100\n+\";\n+\n+\tclose(CONF);\n+\n+\topen(CONF, \">$ldapdir/db/DB_CONFIG\");\n+\tprint CONF \"\n+#\n+\t# Set the database in memory cache size.\n+\t#\n+\tset_cachesize   0       524288        0\n+\t\n+\t\n+\t#\n+\t# Set database flags (this is a test environment, we don't need to fsync()).\n+\t#\t\t\n+\tset_flags       DB_TXN_NOSYNC\n+\t\n+\t#\n+\t# Set log values.\n+\t#\n+\tset_lg_regionmax        104857\n+\tset_lg_max              1048576\n+\tset_lg_bsize            209715\n+\tset_lg_dir              $ldapdir/db/bdb-logs\n+\t\n+\t\n+\t#\n+\t# Set temporary file creation directory.\n+\t#\t\t\t\n+\tset_tmp_dir             $ldapdir/db/tmp\n+\t\";\n+\tclose(CONF);\n+\n+\t#This uses the provision we just did, to read out the schema\n+\tsystem(\"$self->{bindir}/ad2oLschema $configuration -H $privatedir/sam.ldb -I $self->{setupdir}/schema-map-openldap-2.3 -O $ldapdir/ad.schema >&2\");\n+\n+\t#Now create an LDAP baseDN\n+\tsystem(\"$self->{bindir}/smbscript $self->{setupdir}/provision $provision_options --ldap-base >&2\");\n+\n+\tmy $oldpath = $ENV{PATH};\n+\t$ENV{PATH} = \"/usr/local/sbin:/usr/sbin:/sbin:$ENV{PATH}\";\n+\n+\tunlink($modconf);\n+\topen(CONF, \">$modconf\"); close(CONF);\n+\n+\tif (system(\"slaptest -u -f $slapd_conf >&2\") != 0) {\n+\t\topen(CONF, \">modconf\"); \n+\t\t# enable slapd modules\n+\t\tprint \"\n+modulepath\t/usr/lib/ldap\n+moduleload\tback_bdb\n+moduleload\tsyncprov\n+\";\n+\t\tclose(CONF);\n+\t}\n+\n+\tif (system(\"slaptest -u -f $slapd_conf\") == 0) {\n+    \tsystem(\"slapadd -f $slapd_conf < $privatedir/$dnsname.ldif >/dev/null\") == 0 or die(\"slapadd failed\");\n+    }\n+\n+    system(\"slaptest -f $slapd_conf >/dev/null\") == 0 or \n+\t\tdie (\"slaptest after database load failed\");\n+    \n+\t$ENV{PATH} = $oldpath;\n+\n+\treturn $pidfile;\n+}\n+\n sub provision($$$$$)\n {\n \tmy ($self, $prefix, $server_role, $domain, $netbiosname) = @_;\n@@ -324,19 +545,8 @@\n \tmy $ldap_uri= \"$ldapdir/ldapi\";\n \t$ldap_uri =~ s|/|%2F|g;\n \t$ldap_uri = \"ldapi://$ldap_uri\";\n-\tmy $provision_aci = \"\"; # FIXME\n-\n-\tif (not defined($self->{ldap})) {\n-\t} elsif ($self->{ldap} eq \"openldap\") {\n-\t\tmkdir($_) foreach ($ldapdir, \"$ldapdir/db\", \"$ldapdir/db/bdb-logs\", \n-\t\t\"$ldapdir/db/tmp\");\n-\t\tsystem(\"$RealBin/mk-openldap.sh\") == 0 or die(\"Unable to create openldap directories\");\n-\t} elsif ($self->{ldap} eq \"fedora\") {\n-\t\tsystem(\"$RealBin/mk-fedora-ds.sh\") == 0 or die(\"Unable to create fedora ds directories\");\n-\t\tpush (@provision_options, \"--ldap-module=nsuniqueid\");\n-\t}\n-\n-\treturn {\n+\n+\tmy $ret = {\n \t\tKRB5_CONFIG => $krb5_config,\n \t\tPIDDIR => $piddir,\n \t\tSERVER => $server,\n@@ -347,11 +557,22 @@\n \t\tREALM => $realm,\n \t\tPASSWORD => $password,\n \t\tLDAPDIR => $ldapdir,\n-\t\tPROVISION_OPTIONS => join(' ', @provision_options),\n \t\tWINBINDD_SOCKET_DIR => $winbindd_socket_dir,\n \t\tNCALRPCDIR => $ncalrpcdir,\n \t\tCONFIGURATION => $configuration\n \t};\n+\n+\tif (not defined($self->{ldap})) {\n+\t} elsif ($self->{ldap} eq \"openldap\") {\n+\t\t$ret->{OPENLDAP_PIDFILE} = $self->mk_openldap($ldapdir, $basedn, $password, $privatedir, $dnsname, $configuration, join(' ', @provision_options)) or die(\"Unable to create openldap directories\");\n+\t} elsif ($self->{ldap} eq \"fedora\") {\n+\t\t($ret->{FEDORA_DS_DIR}, $ret->{FEDORA_DS_PIDFILE}) = $self->mk_fedora($ldapdir, $basedn, $root, $password, $privatedir, $configuration) or die(\"Unable to create fedora ds directories\");\n+\t\tpush (@provision_options, \"--ldap-module=nsuniqueid\");\n+\t}\n+\n+\t$ret->{PROVISION_OPTIONS} = join(' ', @provision_options);\n+\n+\treturn $ret; \n }\n \n sub provision_member($$$)\n@@ -390,8 +611,16 @@\n sub provision_ldap($$)\n {\n \tmy ($self, $envvars) = @_;\n-\tsystem(\"$self->{bindir}/smbscript $self->{setupdir}/provision $envvars->{PROVISION_OPTIONS} \\\"$envvars->{PROVISION_ACI}\\\" --ldap-backend=$envvars->{LDAP_URI}\") and\n-\t\tdie(\"LDAP PROVISIONING failed: $self->{bindir}/smbscript $self->{setupdir}/provision $envvars->{PROVISION_OPTIONS} \\\"$envvars->{PROVISION_ACI}\\\" --ldap-backend=$envvars->{LDAP_URI}\");\n+\tmy $provision_aci = \"\";\n+\t\n+\tif ($self->{ldap} eq \"fedora\") {\n+\t\t#it is easier to base64 encode this than correctly escape it:\n+\t\t# (targetattr = \"*\") (version 3.0;acl \"full access to all by all\";allow (all)(userdn = \"ldap:///anyone\");)\n+\t\t$provision_aci = \"--aci=aci:: KHRhcmdldGF0dHIgPSAiKiIpICh2ZXJzaW9uIDMuMDthY2wgImZ1bGwgYWNjZXNzIHRvIGFsbCBieSBhbGwiO2FsbG93IChhbGwpKHVzZXJkbiA9ICJsZGFwOi8vL2FueW9uZSIpOykK\";\n+\t}\n+\n+\tsystem(\"$self->{bindir}/smbscript $self->{setupdir}/provision $envvars->{PROVISION_OPTIONS} \\\"$provision_aci\\\" --ldap-backend=$envvars->{LDAP_URI}\") and\n+\t\tdie(\"LDAP PROVISIONING failed: $self->{bindir}/smbscript $self->{setupdir}/provision $envvars->{PROVISION_OPTIONS} \\\"$provision_aci\\\" --ldap-backend=$envvars->{LDAP_URI}\");\n }\n \n sub teardown_env($$)\n\n"}