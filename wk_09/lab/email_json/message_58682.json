{"category": "ham", "to_address": "Perl beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: Adding a line in a file inside many directories", "body": "usenet@DavidFilmer.com wrote:\n> On Jun 28, 12:00 pm, vedpsi...@gmail.com (Ved) wrote:\n>> Now I have to print a single line at say line number 20 in each of 150\n>> number of  kat.s file.\n> \n> Hey, another chance to show off my favorite Perl module, IO::All.\n> \n>> Situation is bit complex (atleast for a beginer like me).\n> \n> Actually it is so simple (with IO::All) that you're gonna think I'm\n> pulling your leg...\n> \n> #!/usr/bin/perl\n>    use strict;\n>    use warnings;\n>    use IO::All;\n> \n>    my $dir = '/tmp/clpm';   #root directory of data\n>    my $line = 19;           #print line 20 (first line is line zero)\n>    my $file = 'kat.s';      #match this filename\n> \n>    map {print \"@$_[$line]\\n\"}\n>       io($dir)->filter(sub{$_->filename eq $file})->all_files(0);\n\nInstead of using map in a void context:\n\n    print \"@$_[$line]\\n\" for\n       io($dir)->filter(sub{$_->filename eq $file})->all_files(0);\n\nOr just call print once with a large list:\n\n    print map \"@$_[$line]\\n\",\n       io($dir)->filter(sub{$_->filename eq $file})->all_files(0);\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you\ncan special-order certain sorts of tools at low cost and\nin short order.                            -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}