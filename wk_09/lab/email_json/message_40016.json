{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "David Green <david.green@telus.net>", "subject": "Re: [svn:perl6-synopsis] r14407 - doc/trunk/design/syn", "body": "On 5/29/07, Larry Wall wrote:\n>Note that \"any\" is considered a singular noun in English,\n\nI started to say, \"Except when it means 'all'\", but when used that \nway, it still would mean \"all\" in the singular sense.  But it gives \nme an excuse to point out that \"any\" can be ambiguous in English; \nit's not hard to see which meaning is intended in a given context, \nbut there's still a temptation to translate an English \"any\" into a \nPerl \"any\" when it really means \"all\".\n\n   #If my score equals anyone else's, there's a tie\n   if $my_score==any(@other_scores) { say \"I tied with \".score2name($my_score) }\n\n   #If my score is higher than anyone else's, I win!\n   if $my_score > any(@other_scores) { say \"Oops, this doesn't DWIM!\" }\n\nNot a big deal in one way, but it's the kind of error that's easy to \noverlook even when you're staring right at it.  Which is why when I'm \nwriting SQL, I prefer to use SOME instead of ANY.  If it were spelled \n\"some\" in Perl, I figure all the extra typing would be worth it to \navoid an occasional error.\n\n\n>In any case, the Huffman coding is probably right because you want\n>to declare Any parameters more often than you want to talk about any\n>possible kind of Object, I suspect.\n\nAre Objects really Everything?  What about native types like int -- \nor (thanks to autoboxing) should I really be thinking of them as \nObjects with built-in optimiser hints?  Not that I have a good \nexample of why you'd want to specify a native-only type; I'm only \nasking out of pedantic curiosity.\n\n\n-David\n\n"}