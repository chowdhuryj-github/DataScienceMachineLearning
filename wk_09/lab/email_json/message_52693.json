{"category": "ham", "to_address": "Smylers <Smylers@stripey.com>", "from_address": "Mark Overmeer <mark@overmeer.net>", "subject": "Re: Referring to source code within Perldoc: the new A<> code", "body": "* Smylers (Smylers@stripey.com) [070621 20:33]:\n> Documentation, unlike code, doesn't have to be backwards compatible: if\n> Perl 6.0.1 changes the API of a standard function that will break\n> existing code; but if Perl 6.0.1 has documentation with a different\n> structure from Perl 6.0.0, that won't break anything.\n\nWhen 6.0.1 changes the doc structure, then all 6.0.0 docs are unusuable,\nor need conversion.  Although this doesn't cause code breaking, it does\nhave maintenance and usability issues.  Don't forget that Perl code is\nso compact that we (at least me) have more lines of doc than of code\nin our files.\n\nIf you take documentation serious enough, you certainly do want (at least\nsome) backwards compatibility too.  And as much as possible automatic\nconsistency checks/warrants.\n-- \n               MarkOv\n\n------------------------------------------------------------------------\n       Mark Overmeer MSc                                MARKOV Solutions\n       Mark@Overmeer.net                          solutions@overmeer.net\nhttp://Mark.Overmeer.net                   http://solutions.overmeer.net\n\n"}