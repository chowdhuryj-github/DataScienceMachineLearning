{"category": "ham", "to_address": "Jeremy Kister <perl-04@jeremykister.com>, beginners@perl.org", "from_address": "Jeff Pang <pangj@earthlink.net>", "subject": "Re: forking problem with dbd::mysql", "body": "\n\n-----Original Message-----\n>From: Jeremy Kister \n>Sent: May 10, 2007 12:17 AM\n>To: beginners@perl.org\n>Subject: Re: forking problem with dbd::mysql\n>\n>On 5/9/2007 11:12 AM, Chas Owens wrote:\n>> my $dbh = DBI->connect($dsn, $dbun, $dbpw, {RaiseError => 1});\n>> \n>> to\n>> \n>> my $dbh = DBI->connect(\n>>     $dsn, $dbun, $dbpw,\n>>     {\n>>         RaiseError => 1,\n>>         mysql_auto_reconnect => 1\n>>     }\n>> );\n>\n>Yes, that works, just as a regular my $dbh = DBI->connect() inside the\n>loop, before the SELECT.\n>\n>The problem is, in reality, my real code doesnt sleep in the loop, and\n>reconnecting each time would be quite intensive.\n>\n>\n>FYI, I found that when using DBD::Sybase, the problem does not exist.\n>\n>Should I take this over to the mysql-perl list ?\n>\n>Thanks!\n\n\nWhat I think is instead of obtaining the $dbh from parent,you would better re-create a dbh object in child after forking.\n\n--\nmailto:pangj@earthlink.net\nhttp://home.arcor.de/jeffpang/\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}