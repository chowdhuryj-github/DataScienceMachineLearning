{"category": "ham", "to_address": "deepayan.sarkar@gmail.com", "from_address": "Benilton Carvalho <bcarvalh@jhsph.edu>", "subject": "Re: [R] plot via xyplot not being saved", "body": "Thank you Deepayan,\n\nI understand the behavior of not printing out the results inside the  \nfunctions.\n\nWhat I didn't know was that for xyplot() saving the plot actually  \nmeant \"save the result I see\", which does not happen with plot(), in  \nwhich case my function test() works just fine if I replaced xyplot()  \nby plot().\n\nThank you very much,\n\nb\n\nOn Jun 16, 2007, at 12:26 AM, deepayan.sarkar@gmail.com wrote:\n\n> On 6/15/07, Benilton Carvalho  wrote:\n>> So, if those statements are inside a function, I have to make my\n>> function to have an 'echo' argument/functionality? eg.:\n>>\n>> ## begin test.R\n>> test <- function(n){\n>>    y <- rnorm(n)\n>>    x <- rnorm(n)\n>>    z <- sample(letters[1:4], n, rep=T)\n>>    library(lattice)\n>>    bitmap(\"tst.png\")\n>>    xyplot(y~x|z)\n>>    dev.off()\n>> }\n>>\n>> test(100)\n>> ## end test.R\n>>\n>> source(\"test.R\", echo=T)\n>>\n>> also fails in this case...\n>\n> Yes. The following will produce some output (the values of x + y and x\n> - y) if you type it out at the R prompt:\n>\n> x <- rnorm(10)\n> y <- rnorm(10)\n> x + y\n> x - y\n>\n> If you put that in a file and source it, nothing will get printed,\n> unless you have echo=TRUE. If you define\n>\n> test <- function(){\n>    x <- rnorm(10)\n>    y <- rnorm(10)\n>    x + y\n>    x - y\n> }\n>\n> calling test() at the R prompt will only print x - y and not x + y,  \n> and so on.\n>\n> This is all standard R behaviour. If you want something to be printed\n> irrespective of context, use print(), e.g.\n>\n> print(x + y)\n>\n> or\n>\n> print(xyplot(y~x|z))\n>\n> This is also mentioned in the R FAQ.\n>\n> -Deepayan\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}