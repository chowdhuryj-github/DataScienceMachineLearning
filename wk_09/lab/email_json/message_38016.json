{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "mimir@samba.org", "subject": "svn commit: samba r23178 - in branches/SAMBA_4_0/testprogs/ejs: .\n\tejsnet", "body": "Author: mimir\nDate: 2007-05-29 05:49:35 +0000 (Tue, 29 May 2007)\nNew Revision: 23178\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23178\n\nLog:\nadd simple js code I use for testing and which starts to look like\nejsnet command line utility (perhaps to be moved to utils later...)\n\n\nrafal\n\n\nAdded:\n   branches/SAMBA_4_0/testprogs/ejs/ejsnet/\n   branches/SAMBA_4_0/testprogs/ejs/ejsnet/nethost.js\n   branches/SAMBA_4_0/testprogs/ejs/ejsnet/netusr.js\nModified:\n   branches/SAMBA_4_0/testprogs/ejs/ejsnet.js\n\n\nChangeset:\nAdded: branches/SAMBA_4_0/testprogs/ejs/ejsnet/nethost.js\n===================================================================\n--- branches/SAMBA_4_0/testprogs/ejs/ejsnet/nethost.js\t2007-05-29 01:20:47 UTC (rev 23177)\n+++ branches/SAMBA_4_0/testprogs/ejs/ejsnet/nethost.js\t2007-05-29 05:49:35 UTC (rev 23178)\n@@ -0,0 +1,45 @@\n+function PrintNetHostHelp()\n+{\n+\tprintln(\"Host management - available commands:\");\n+\tprintln(\"\\t domainlist - list users in specified domain\");\n+}\n+\n+\n+function ListDomains(hostCtx)\n+{\n+\tvar domain;\n+\n+\tvar list = hostCtx.DomainList();\n+\tif (list == undefined) {\n+\t\tprintln(\"Error when listing domains\");\n+\t\treturn -1;\n+\t}\n+\n+\tfor (var i = 0; i < list.Count; i++) {\n+\t\tdomain = list.Domains[i];\n+\t\tprintf(\"%s\\n\", domain.Name);\n+\t}\n+\n+\tprintf(\"\\nResult: %s\\n\", list.Status.errstr);\n+}\n+\n+\n+function HostManager(ctx, options)\n+{\n+\tvar hostCtx;\n+\n+\tif (options.ARGV.length < 2) {\n+\t\tPrintNetHostHelp();\n+\t\treturn -1;\n+\t}\n+\n+\tvar hostCmd = options.ARGV[1];\n+\n+\tif (hostCmd == \"domainlist\") {\n+\t\thostCtx = ctx.HostMgr();\n+\t\tListDomains(hostCtx);\n+\n+\t} else {\n+\t\tprintln(\"unknown command\");\n+\t}\n+}\n\nAdded: branches/SAMBA_4_0/testprogs/ejs/ejsnet/netusr.js\n===================================================================\n--- branches/SAMBA_4_0/testprogs/ejs/ejsnet/netusr.js\t2007-05-29 01:20:47 UTC (rev 23177)\n+++ branches/SAMBA_4_0/testprogs/ejs/ejsnet/netusr.js\t2007-05-29 05:49:35 UTC (rev 23178)\n@@ -0,0 +1,86 @@\n+function PrintNetUsrHelp(options)\n+{\n+\tprintln(\"User management - available commands:\");\n+\tprintln(\"\\t list - list users in specified domain\");\n+\tprintln(\"\\t info - display user account information\");\n+}\n+\n+\n+function ListUsers(usrCtx)\n+{\n+\tvar list, user;\n+\tvar finished = false;\n+\n+\tfor (list = usrCtx.List(list); list.Status.is_ok && !finished; list = usrCtx.List(list)) {\n+\t\tfor (i = 0; i < list.Count; i++) {\n+\t\t\tuser = list.Users[i];\n+\t\t\tprintf(\"%s\\n\", user.Username);\n+\t\t}\n+\t\t\n+\t\tfinished = list.EndOfList;\n+\t}\n+\n+\tprintf(\"\\nResult: %s\\n\", list.Status.errstr);\n+}\n+\n+\n+function UserInfo(usrCtx, username)\n+{\n+\tvar info;\n+\n+\tinfo = usrCtx.Info(username);\n+\tif (info == null) {\n+\t\tprintln(\"Account unknown\");\n+\t\treturn -1;\n+\t}\n+\n+\tprintln(\"User account info:\\n\");\n+\tprintf(\"AccountName = %s\\n\", info.AccountName);\n+\tprintf(\"Description = %s\\n\", info.Description);\n+\tprintf(\"FullName    = %s\\n\", info.FullName);\n+\tprintf(\"AcctExpiry  = %s\\n\", info.AcctExpiry);\n+}\n+\n+\n+function UserManager(ctx, options)\n+{\n+\tvar usrCtx;\n+\n+\tif (options.ARGV.length < 2) {\n+\t\tPrintNetUsrHelp(options);\n+\t\treturn -1;\n+\n+\t}\n+\t\n+\tvar usrCmd = options.ARGV[1];\n+\n+\tif (usrCmd == \"create\") {\n+\n+\t} else if (usrCmd == \"info\") {\n+\t\tvar userName;\n+\n+\t\tif (options.ARGV.length > 2) {\n+\t\t\tuserName = options.ARGV[2];\n+\t\t} else {\n+\t\t\tprintln(\"No username provided\");\n+\t\t\treturn -1;\n+\t\t}\n+\t\tusrCtx = ctx.UserMgr();\n+\n+\t\tUserInfo(usrCtx, userName);\n+\n+\t} else if (usrCmd == \"list\") {\n+\n+\t\tif (options.ARGV.length > 2) {\n+\t\t\tusrCtx = ctx.UserMgr(options.ARGV[2]);\n+\t\t} else {\n+\t\t\tusrCtx = ctx.UserMgr();\n+\t\t}\n+\n+\t\tListUsers(usrCtx);\n+\n+\t} else {\n+\t\tprintln(\"Unknown command specified.\");\n+\t\tPrintNetUsrHelp(options);\n+\t}\n+}\n\nModified: branches/SAMBA_4_0/testprogs/ejs/ejsnet.js\n===================================================================\n--- branches/SAMBA_4_0/testprogs/ejs/ejsnet.js\t2007-05-29 01:20:47 UTC (rev 23177)\n+++ branches/SAMBA_4_0/testprogs/ejs/ejsnet.js\t2007-05-29 05:49:35 UTC (rev 23178)\n@@ -1,52 +1,46 @@\n #!/usr/bin/env smbscript\n \n+libinclude(\"base.js\");\n+\n+/* note: these require specifying a proper path in \"js include\" parameter */\n+libinclude(\"ejsnet/netusr.js\");\n+libinclude(\"ejsnet/nethost.js\");\n+\n+function PrintNetHelp()\n+{\n+\tprintln(\"Usage: ejsnet.js  [options]\");\n+}\n+\n+/* here we start */\n+\n var options = GetOptions(ARGV, \n \t\t\"POPT_AUTOHELP\",\n \t\t\"POPT_COMMON_SAMBA\",\n \t\t\"POPT_COMMON_CREDENTIALS\");\n if (options == undefined) {\n-   println(\"Failed to parse options\");\n-   return -1;\n+\tPrintNetHelp();\n+\treturn -1;\n }\n \n-if (options.ARGV.length != 2) {\n-   println(\"Usage: ejsnet.js  \");\n-   return -1;\n+if (options.ARGV.length < 1) {\n+\tPrintNetHelp();\n+\treturn -1;\n }\n \n /* use command line creds if available */\n var creds = options.get_credentials();\n-\n var ctx = NetContext(creds);\n-var usr_ctx = ctx.UserMgr(options.ARGV[0]);\n-if (usr_ctx == undefined) {\n-\tprintln(\"Couldn't get user management context.\");\n-\treturn -1;\n-}\n \n-var status = usr_ctx.Create(options.ARGV[1]);\n-if (status.is_ok != true) {\n-\tprintln(\"Failed to create user account \" + options.ARGV[1] + \": \" + status.errstr);\n-\treturn -1;\n-}\n+var cmd = options.ARGV[0];\n+if (cmd == \"user\") {\n+\tUserManager(ctx, options);\n \n+} else if (cmd == \"host\") {\n+\tHostManager(ctx, options);\n \n-var info = usr_ctx.Info(options.ARGV[1]);\n-if (info != null) {\n-\tprintln(\"UserInfo.AccountName = \" + info.AccountName);\n-\tprintln(\"UserInfo.Description = \" + info.Description);\n-\tprintln(\"UserInfo.FullName = \" + info.FullName);\n-\tprintln(\"UserInfo.AcctExpiry = \" + info.AcctExpiry);\n } else {\n-\tprintln(\"Null UserInfo returned - account unknown\");\n-}\n-\n-\n-var status = usr_ctx.Delete(options.ARGV[1]);\n-if (status.is_ok != true) {\n-\tprintln(\"Failed to delete user account \" + options.ARGV[1] + \": \" + status.errstr);\n+\tPrintNetHelp();\n \treturn -1;\n }\n \n-print (\"OK\\n\");\n return 0;\n\n"}