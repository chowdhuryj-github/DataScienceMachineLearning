{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11878: Merge mksamba4server.pl into Samba4.pm in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11878\nrevision-id: jelmer@samba.org-20070416223513-66z48onzdyaegs8w\nparent: jelmer@samba.org-20070416215315-ntt9aikw1i1nbpgl\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Tue 2007-04-17 00:35:13 +0200\nmessage:\n  Merge mksamba4server.pl into Samba4.pm\nremoved:\n  source/script/tests/mksamba4server.pl svn-v2:22260@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmksamba4server.sh\nmodified:\n  source/script/tests/Samba4.pm  svn-v2:21707@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fSamba4.pm\n  source/script/tests/selftest.pl svn-v2:20693@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fselftest.pl\n=== removed file 'source/script/tests/mksamba4server.pl'\n--- a/source/script/tests/mksamba4server.pl\t2007-04-16 21:53:15 +0000\n+++ b/source/script/tests/mksamba4server.pl\t1970-01-01 00:00:00 +0000\n@@ -1,312 +0,0 @@\n-#!/usr/bin/perl\n-# Build a test environment for running Samba\n-\n-use Cwd;\n-use Getopt::Long;\n-use FindBin qw($RealBin $Script);\n-use strict;\n-\n-my $opt_help = undef;\n-my $server_role = \"domain controller\";\n-my $opt_ldap = undef;\n-my $domain = \"SAMBADOMAIN\";\n-my $netbiosname = \"localtest\";\n-\n-my $result = GetOptions(\n-\t'help|h|?' => \\$opt_help,\n-\t'server-role:s' => \\$server_role,\n-\t'ldap:s' => \\$opt_ldap,\n-\t'domain:s' => \\$domain,\n-\t'netbios-name:s' => \\$netbiosname,\n-);\n-\n-if (not $result) {\n-\texit(1);\n-}\n-\n-if (scalar(@ARGV) == 0) {\n-\tprint \"Usage: $Script [OPTIONS] \\n\";\n-\texit(1);\n-}\n-\n-my $prefix = shift @ARGV;\n-\n-my $share_backend = \"classic\";\n-my $smbd_loglevel = 1;\n-my $username = \"administrator\";\n-my $realm = \"SAMBA.EXAMPLE.COM\";\n-my $dnsname = \"samba.example.com\";\n-my $basedn = \"dc=samba,dc=example,dc=com\";\n-my $password = \"penguin\";\n-my $root = ($ENV{USER} or $ENV{LOGNAME} or `whoami`);\n-my $server = \"localhost\";\n-my $srcdir=\"$RealBin/../..\";\n--d $prefix or mkdir($prefix) or die(\"Unable to create $prefix\");\n-my $prefix_abs = getcwd().\"/\".$prefix;\n-\n-my $tmpdir = \"$prefix_abs/tmp\";\n-my $etcdir = \"$prefix_abs/etc\";\n-my $piddir = \"$prefix_abs/pid\";\n-my $conffile = \"$etcdir/smb.conf\";\n-my $krb5_config = \"$etcdir/krb5.conf\";\n-my $privatedir = \"$prefix_abs/private\";\n-my $ncalrpcdir = \"$prefix_abs/ncalrpc\";\n-my $lockdir= \"$prefix_abs/lockdir\";\n-\n-my $winbindd_socket_dir = \"$prefix_abs/winbind_socket\";\n-my $configuration = \"--configfile=$conffile\";\n-my $ldapdir = \"$prefix_abs/ldap\";\n-\n-my $tlsdir = \"$privatedir/tls\";\n-\n-(system(\"rm -rf $prefix/*\") == 0) or die(\"Unable to clean up\");\n-mkdir($_) foreach ($privatedir, $etcdir, $piddir, $ncalrpcdir, $lockdir, \n-\t$tmpdir);\n-\n-open(CONFFILE, \">$conffile\");\n-print CONFFILE \"\n-[global]\n-\tnetbios name = $netbiosname\n-\tnetbios aliases = $server\n-\tworkgroup = $domain\n-\trealm = $realm\n-\tprivate dir = $privatedir\n-\tpid directory = $piddir\n-\tncalrpc dir = $ncalrpcdir\n-\tlock dir = $lockdir\n-\tshare backend = $share_backend\n-\tsetup directory = $srcdir/setup\n-\tjs include = $srcdir/scripting/libjs\n-\twinbindd socket directory = $winbindd_socket_dir\n-\tname resolve order = bcast\n-\tinterfaces = 127.0.0.1/8\n-\ttls dh params file = $tlsdir/dhparms.pem\n-\tpanic action = $srcdir/script/gdb_backtrace \\%PID% \\%PROG%\n-\twins support = yes\n-\tserver role = $server_role\n-\tmax xmit = 32K\n-\tserver max protocol = SMB2\n-\tnotify:inotify = false\n-\tldb:nosync = true\n-\tsystem:anonymous = true\n-#We don't want to pass our self-tests if the PAC code is wrong\n-\tgensec:require_pac = true\n-\tlog level = $smbd_loglevel\n-\n-[tmp]\n-\tpath = $tmpdir\n-\tread only = no\n-\tntvfs handler = posix\n-\tposix:sharedelay = 100000\n-\tposix:eadb = $lockdir/eadb.tdb\n-\n-[cifs]\n-\tread only = no\n-\tntvfs handler = cifs\n-\tcifs:server = $server\n-\tcifs:user = $username\n-\tcifs:password = $password\n-\tcifs:domain = $domain\n-\tcifs:share = tmp\n-\n-[simple]\n-\tpath = $tmpdir\n-\tread only = no\n-\tntvfs handler = simple\n-\n-[cifsposixtestshare]\n-\tcopy = simple\n-\tntvfs handler = cifsposix   \n-\";\n-close(CONFFILE);\n-\n-## Override default share.ldb file\n-unlink(\"$privatedir/share.ldb\");\n-open(LDIF, \">$privatedir/share.ldif\");\n-print LDIF \"\n-### Shares basedn\n-dn: \\@INDEXLIST\n-\\@IDXATTR: name\n-\n-dn: \\@ATTRIBUTES\n-cn: CASE_INSENSITIVE\n-dc: CASE_INSENSITIVE\n-name: CASE_INSENSITIVE\n-dn: CASE_INSENSITIVE\n-objectClass: CASE_INSENSITIVE\n-\n-dn: CN=Shares\n-objectClass: top\n-objectClass: organizationalUnit\n-cn: Shares\n-\n-### Default IPC\\$ Share\n-dn: CN=IPC\\$,CN=Shares\n-objectClass: top\n-objectClass: share\n-cn: IPC\\$\n-name: IPC\\$\n-type: IPC\n-path: /tmp\n-comment: Remote IPC\n-max-connections: -1\n-available: True\n-readonly: True\n-browseable: False\n-ntvfs-handler: default\n-\n-### Default ADMIN\\$ Share\n-dn: CN=ADMIN\\$,CN=Shares\n-objectClass: top\n-objectClass: share\n-cn: ADMIN\\$\n-name: ADMIN\\$\n-type: DISK\n-path: /tmp\n-comment: Remote Admin\n-max-connections: -1\n-available: True\n-readonly: True\n-browseable: False\n-ntvfs-handler: default\n-\n-dn: CN=tmp,CN=Shares\n-objectClass: top\n-objectClass: share\n-cn: tmp\n-name: tmp\n-type: DISK\n-path: $tmpdir\n-comment: Temp Dir for Tests\n-readonly: False\n-ntvfs-handler: posix\n-posix-sharedelay: 100000\n-posix-eadb: $lockdir/eadb.tdb\n-\n-dn: CN=cifs,CN=Shares\n-objectClass: top\n-objectClass: share\n-cn: cifs\n-name: cifs\n-type: DISK\n-readonly: False\n-ntvfs-handler: cifs\n-cifs-server: $server\n-cifs-user: $username\n-cifs-password: $password\n-cifs-domain: $domain\n-cifs-share: tmp\n-\";\n-close(LDIF);\n-\n-system(\"$srcdir/bin/ldbadd -H $privatedir/share.ldb < $privatedir/share.ldif >/dev/null\") == 0 or die(\"Unable to add share ldif\");\n-\n-die (\"Unable to create key blobs\") if\n-\t(system(\"TLSDIR=$tlsdir $RealBin/mk-keyblobs.sh\") != 0);\n-\n-open(KRB5CONF, \">$krb5_config\");\n-print KRB5CONF \"\n-#Generated krb5.conf for $realm\n-\n-[libdefaults]\n- default_realm = $realm\n- dns_lookup_realm = false\n- dns_lookup_kdc = false\n- ticket_lifetime = 24h\n- forwardable = yes\n-\n-[realms]\n- $realm = {\n-  kdc = 127.0.0.1:88\n-  admin_server = 127.0.0.1:88\n-  default_domain = $dnsname\n- }\n- $dnsname = {\n-  kdc = 127.0.0.1:88\n-  admin_server = 127.0.0.1:88\n-  default_domain = $dnsname\n- }\n- $domain = {\n-  kdc = 127.0.0.1:88\n-  admin_server = 127.0.0.1:88\n-  default_domain = $dnsname\n- }\n-\n-[appdefaults]\n-\tpkinit_anchors = FILE:$tlsdir/ca.pem\n-\n-[kdc]\n-\tenable-pkinit = true\n-\tpkinit_identity = FILE:$tlsdir/kdc.pem,$tlsdir/key.pem\n-\tpkinit_anchors = FILE:$tlsdir/ca.pem\n-\n-[domain_realm]\n- .$dnsname = $realm\n-\";\n-close(KRB5CONF);\n-\n-#Ensure the config file is valid before we start\n-if (system(\"$srcdir/bin/testparm $configuration -v --suppress-prompt >/dev/null 2>&1\") != 0) {\n-    system(\"$srcdir/bin/testparm $configuration >&2\");\n-    die(\"Failed to create configuration!\");\n-}\n-\n-(system(\"($srcdir/bin/testparm $configuration -v --suppress-prompt --parameter-name=\\\"netbios name\\\" --section-name=global 2> /dev/null | grep -i ^$netbiosname ) >/dev/null 2>&1\") == 0) or die(\"Failed to create configuration!\");\n-\n-my @provision_options = ($configuration);\n-push (@provision_options, \"--host-name=$netbiosname\");\n-push (@provision_options, \"--host-ip=127.0.0.1\");\n-push (@provision_options, \"--quiet\");\n-push (@provision_options, \"--domain $domain\");\n-push (@provision_options, \"--realm $realm\");\n-push (@provision_options, \"--adminpass $password\");\n-push (@provision_options, \"--root=$root\");\n-push (@provision_options, \"--simple-bind-dn=cn=Manager,$basedn\");\n-push (@provision_options, \"--password=$password\");\n-push (@provision_options, \"--root=$root\");\n-\n-(system(\"$srcdir/bin/smbscript $srcdir/setup/provision \" .  join(' ', @provision_options) . \">&2\") == 0) or die(\"Unable to provision\");\n-\n-my $ldap_uri= \"$ldapdir/ldapi\";\n-$ldap_uri =~ s|/|%2F|g;\n-$ldap_uri = \"ldapi://$ldap_uri\";\n-my $provision_aci = \"\";\n-\n-if (not defined($opt_ldap)) {\n-} elsif ($opt_ldap eq \"openldap\") {\n-\tmkdir($_) foreach ($ldapdir, \"$ldapdir/db\", \"$ldapdir/db/bdb-logs\", \n-\t\"$ldapdir/db/tmp\");\n-\tsystem(\"$RealBin/mk-openldap.sh\") == 0 or die(\"Unable to create openldap directories\");\n-} elsif ($opt_ldap eq \"fedora\") {\n-    system(\"$RealBin/mk-fedora-ds.sh\") == 0 or die(\"Unable to create fedora ds directories\");\n-\tpush (@provision_options, \"--ldap-module=nsuniqueid\");\n-}\n-\n-open(LDIF, \">$privatedir/wins_config.ldif\");\n-print LDIF \"\n-dn: name=TORTURE_6,CN=PARTNERS\n-objectClass: wreplPartner\n-name: TORTURE_6\n-address: 127.0.0.6\n-pullInterval: 0\n-pushChangeCount: 0\n-type: 0x3\n-\";\n-close(LDIF);\n-\n-system(\"$srcdir/bin/ldbadd -H $privatedir/wins_config.ldb < $privatedir/wins_config.ldif >/dev/null\") == 0 or die(\"Unable to add wins configuration\");\n-\n-print \"KRB5_CONFIG=$krb5_config\\n\";\n-print \"PIDDIR=$piddir\\n\";\n-print \"SERVER=$server\\n\";\n-print \"NETBIOSNAME=$netbiosname\\n\";\n-print \"LDAP_URI=$ldap_uri\\n\";\n-print \"DOMAIN=$domain\\n\";\n-print \"USERNAME=$username\\n\";\n-print \"REALM=$realm\\n\";\n-print \"PASSWORD=$password\\n\";\n-print \"LDAPDIR=$ldapdir\\n\";\n-print \"PROVISION_OPTIONS=\".join(' ', @provision_options) . \"\\n\";\n-print \"WINBINDD_SOCKET_DIR=$winbindd_socket_dir\\n\";\n-print \"NCALRPCDIR=$ncalrpcdir\\n\";\n-print \"CONFIGURATION=$configuration\\n\";\n\n=== modified file 'source/script/tests/Samba4.pm'\n--- a/source/script/tests/Samba4.pm\t2007-04-16 21:53:15 +0000\n+++ b/source/script/tests/Samba4.pm\t2007-04-16 22:35:13 +0000\n@@ -135,41 +135,325 @@\n \tsystem(\"bin/nmblookup $testenv_vars->{CONFIGURATION} -U $testenv_vars->{SERVER} $testenv_vars->{NETBIOSNAME}\");\n }\n \n+sub provision($$$$$$)\n+{\n+\tmy ($self, $prefix, $server_role, $domain, $netbiosname, $ldap) = @_;\n+\n+\tmy $share_backend = \"classic\";\n+\tmy $smbd_loglevel = 1;\n+\tmy $username = \"administrator\";\n+\tmy $realm = \"SAMBA.EXAMPLE.COM\";\n+\tmy $dnsname = \"samba.example.com\";\n+\tmy $basedn = \"dc=samba,dc=example,dc=com\";\n+\tmy $password = \"penguin\";\n+\tmy $root = ($ENV{USER} or $ENV{LOGNAME} or `whoami`);\n+\tmy $server = \"localhost\";\n+\tmy $srcdir=\"$RealBin/../..\";\n+\t-d $prefix or mkdir($prefix) or die(\"Unable to create $prefix\");\n+\tmy $prefix_abs = getcwd().\"/\".$prefix;\n+\n+\tmy $tmpdir = \"$prefix_abs/tmp\";\n+\tmy $etcdir = \"$prefix_abs/etc\";\n+\tmy $piddir = \"$prefix_abs/pid\";\n+\tmy $conffile = \"$etcdir/smb.conf\";\n+\tmy $krb5_config = \"$etcdir/krb5.conf\";\n+\tmy $privatedir = \"$prefix_abs/private\";\n+\tmy $ncalrpcdir = \"$prefix_abs/ncalrpc\";\n+\tmy $lockdir= \"$prefix_abs/lockdir\";\n+\n+\tmy $winbindd_socket_dir = \"$prefix_abs/winbind_socket\";\n+\tmy $configuration = \"--configfile=$conffile\";\n+\tmy $ldapdir = \"$prefix_abs/ldap\";\n+\n+\tmy $tlsdir = \"$privatedir/tls\";\n+\n+\t(system(\"rm -rf $prefix/*\") == 0) or die(\"Unable to clean up\");\n+\tmkdir($_) foreach ($privatedir, $etcdir, $piddir, $ncalrpcdir, $lockdir, \n+\t\t$tmpdir);\n+\n+\topen(CONFFILE, \">$conffile\");\n+\tprint CONFFILE \"\n+[global]\n+\tnetbios name = $netbiosname\n+\tnetbios aliases = $server\n+\tworkgroup = $domain\n+\trealm = $realm\n+\tprivate dir = $privatedir\n+\tpid directory = $piddir\n+\tncalrpc dir = $ncalrpcdir\n+\tlock dir = $lockdir\n+\tshare backend = $share_backend\n+\tsetup directory = $self->{setupdir}\n+\tjs include = $srcdir/scripting/libjs\n+\twinbindd socket directory = $winbindd_socket_dir\n+\tname resolve order = bcast\n+\tinterfaces = 127.0.0.1/8\n+\ttls dh params file = $tlsdir/dhparms.pem\n+\tpanic action = $srcdir/script/gdb_backtrace \\%PID% \\%PROG%\n+\twins support = yes\n+\tserver role = $server_role\n+\tmax xmit = 32K\n+\tserver max protocol = SMB2\n+\tnotify:inotify = false\n+\tldb:nosync = true\n+\tsystem:anonymous = true\n+#We don't want to pass our self-tests if the PAC code is wrong\n+\tgensec:require_pac = true\n+\tlog level = $smbd_loglevel\n+\n+[tmp]\n+\tpath = $tmpdir\n+\tread only = no\n+\tntvfs handler = posix\n+\tposix:sharedelay = 100000\n+\tposix:eadb = $lockdir/eadb.tdb\n+\n+[cifs]\n+\tread only = no\n+\tntvfs handler = cifs\n+\tcifs:server = $server\n+\tcifs:user = $username\n+\tcifs:password = $password\n+\tcifs:domain = $domain\n+\tcifs:share = tmp\n+\n+[simple]\n+\tpath = $tmpdir\n+\tread only = no\n+\tntvfs handler = simple\n+\n+[cifsposixtestshare]\n+\tcopy = simple\n+\tntvfs handler = cifsposix   \n+\";\n+\tclose(CONFFILE);\n+\n+\t## Override default share.ldb file\n+\tunlink(\"$privatedir/share.ldb\");\n+\topen(LDIF, \">$privatedir/share.ldif\");\n+\tprint LDIF \"\n+### Shares basedn\n+dn: \\@INDEXLIST\n+\\@IDXATTR: name\n+\n+dn: \\@ATTRIBUTES\n+cn: CASE_INSENSITIVE\n+dc: CASE_INSENSITIVE\n+name: CASE_INSENSITIVE\n+dn: CASE_INSENSITIVE\n+objectClass: CASE_INSENSITIVE\n+\n+dn: CN=Shares\n+objectClass: top\n+objectClass: organizationalUnit\n+cn: Shares\n+\n+### Default IPC\\$ Share\n+dn: CN=IPC\\$,CN=Shares\n+objectClass: top\n+objectClass: share\n+cn: IPC\\$\n+name: IPC\\$\n+type: IPC\n+path: /tmp\n+comment: Remote IPC\n+max-connections: -1\n+available: True\n+readonly: True\n+browseable: False\n+ntvfs-handler: default\n+\n+### Default ADMIN\\$ Share\n+dn: CN=ADMIN\\$,CN=Shares\n+objectClass: top\n+objectClass: share\n+cn: ADMIN\\$\n+name: ADMIN\\$\n+type: DISK\n+path: /tmp\n+comment: Remote Admin\n+max-connections: -1\n+available: True\n+readonly: True\n+browseable: False\n+ntvfs-handler: default\n+\n+dn: CN=tmp,CN=Shares\n+objectClass: top\n+objectClass: share\n+cn: tmp\n+name: tmp\n+type: DISK\n+path: $tmpdir\n+comment: Temp Dir for Tests\n+readonly: False\n+ntvfs-handler: posix\n+posix-sharedelay: 100000\n+posix-eadb: $lockdir/eadb.tdb\n+\n+dn: CN=cifs,CN=Shares\n+objectClass: top\n+objectClass: share\n+cn: cifs\n+name: cifs\n+type: DISK\n+readonly: False\n+ntvfs-handler: cifs\n+cifs-server: $server\n+cifs-user: $username\n+cifs-password: $password\n+cifs-domain: $domain\n+cifs-share: tmp\n+\";\n+\tclose(LDIF);\n+\n+\tsystem(\"$self->{bindir}/ldbadd -H $privatedir/share.ldb < $privatedir/share.ldif >/dev/null\") == 0 or die(\"Unable to add share ldif\");\n+\n+\tdie (\"Unable to create key blobs\") if\n+\t\t(system(\"TLSDIR=$tlsdir $RealBin/mk-keyblobs.sh\") != 0);\n+\n+\topen(KRB5CONF, \">$krb5_config\");\n+\tprint KRB5CONF \"\n+#Generated krb5.conf for $realm\n+\n+[libdefaults]\n+ default_realm = $realm\n+ dns_lookup_realm = false\n+ dns_lookup_kdc = false\n+ ticket_lifetime = 24h\n+ forwardable = yes\n+\n+[realms]\n+ $realm = {\n+  kdc = 127.0.0.1:88\n+  admin_server = 127.0.0.1:88\n+  default_domain = $dnsname\n+ }\n+ $dnsname = {\n+  kdc = 127.0.0.1:88\n+  admin_server = 127.0.0.1:88\n+  default_domain = $dnsname\n+ }\n+ $domain = {\n+  kdc = 127.0.0.1:88\n+  admin_server = 127.0.0.1:88\n+  default_domain = $dnsname\n+ }\n+\n+[appdefaults]\n+\tpkinit_anchors = FILE:$tlsdir/ca.pem\n+\n+[kdc]\n+\tenable-pkinit = true\n+\tpkinit_identity = FILE:$tlsdir/kdc.pem,$tlsdir/key.pem\n+\tpkinit_anchors = FILE:$tlsdir/ca.pem\n+\n+[domain_realm]\n+ .$dnsname = $realm\n+\";\n+\tclose(KRB5CONF);\n+\n+#Ensure the config file is valid before we start\n+\tif (system(\"$self->{bindir}/testparm $configuration -v --suppress-prompt >/dev/null 2>&1\") != 0) {\n+\t\tsystem(\"$self->{bindir}/testparm $configuration >&2\");\n+\t\tdie(\"Failed to create configuration!\");\n+\t}\n+\n+\t(system(\"($self->{bindir}/testparm $configuration -v --suppress-prompt --parameter-name=\\\"netbios name\\\" --section-name=global 2> /dev/null | grep -i ^$netbiosname ) >/dev/null 2>&1\") == 0) or die(\"Failed to create configuration!\");\n+\n+\tmy @provision_options = ($configuration);\n+\tpush (@provision_options, \"--host-name=$netbiosname\");\n+\tpush (@provision_options, \"--host-ip=127.0.0.1\");\n+\tpush (@provision_options, \"--quiet\");\n+\tpush (@provision_options, \"--domain $domain\");\n+\tpush (@provision_options, \"--realm $realm\");\n+\tpush (@provision_options, \"--adminpass $password\");\n+\tpush (@provision_options, \"--root=$root\");\n+\tpush (@provision_options, \"--simple-bind-dn=cn=Manager,$basedn\");\n+\tpush (@provision_options, \"--password=$password\");\n+\tpush (@provision_options, \"--root=$root\");\n+\n+\t(system(\"$self->{bindir}/smbscript $self->{setupdir}/provision \" .  join(' ', @provision_options) . \">&2\") == 0) or die(\"Unable to provision\");\n+\n+\tmy $ldap_uri= \"$ldapdir/ldapi\";\n+\t$ldap_uri =~ s|/|%2F|g;\n+\t$ldap_uri = \"ldapi://$ldap_uri\";\n+\tmy $provision_aci = \"\"; # FIXME\n+\n+\tif (not defined($ldap)) {\n+\t} elsif ($ldap eq \"openldap\") {\n+\t\tmkdir($_) foreach ($ldapdir, \"$ldapdir/db\", \"$ldapdir/db/bdb-logs\", \n+\t\t\"$ldapdir/db/tmp\");\n+\t\tsystem(\"$RealBin/mk-openldap.sh\") == 0 or die(\"Unable to create openldap directories\");\n+\t} elsif ($ldap eq \"fedora\") {\n+\t\tsystem(\"$RealBin/mk-fedora-ds.sh\") == 0 or die(\"Unable to create fedora ds directories\");\n+\t\tpush (@provision_options, \"--ldap-module=nsuniqueid\");\n+\t}\n+\n+\topen(LDIF, \">$privatedir/wins_config.ldif\");\n+\tprint LDIF \"\n+dn: name=TORTURE_6,CN=PARTNERS\n+objectClass: wreplPartner\n+name: TORTURE_6\n+address: 127.0.0.6\n+pullInterval: 0\n+pushChangeCount: 0\n+type: 0x3\n+\";\n+\tclose(LDIF);\n+\n+\tsystem(\"$self->{bindir}/ldbadd -H $privatedir/wins_config.ldb < $privatedir/wins_config.ldif >/dev/null\") == 0 or die(\"Unable to add wins configuration\");\n+\n+\treturn {\n+\t\tKRB5_CONFIG => $krb5_config,\n+\t\tPIDDIR => $piddir,\n+\t\tSERVER => $server,\n+\t\tNETBIOSNAME => $netbiosname,\n+\t\tLDAP_URI => $ldap_uri,\n+\t\tDOMAIN => $domain,\n+\t\tUSERNAME => $username,\n+\t\tREALM => $realm,\n+\t\tPASSWORD => $password,\n+\t\tLDAPDIR => $ldapdir,\n+\t\tPROVISION_OPTIONS => join(' ', @provision_options),\n+\t\tWINBINDD_SOCKET_DIR => $winbindd_socket_dir,\n+\t\tNCALRPCDIR => $ncalrpcdir,\n+\t\tCONFIGURATION => $configuration\n+\t};\n+}\n+\n sub provision_member($$$)\n {\n \tmy ($self, $prefix, $dcvars) = @_;\n-\tmy %ret = ();\n \tprint \"PROVISIONING...\";\n-\topen(IN, \"$RealBin/mksamba4server.pl --netbios-name=nbmember --server-role=\\\"member server\\\" $prefix|\") or die(\"Unable to setup\");\n-\twhile () {\n-\t\tdie (\"Error parsing `$_'\") unless (/^([A-Z0-9a-z_]+)=(.*)$/);\n-\t\t$ret{$1} = $2;\n-\t}\n-\tclose(IN);\n-\n-\tsystem(\"$self->{bindir}/net join $ret{CONFIGURATION} $dcvars->{DOMAIN} member -U$dcvars->{USERNAME}\\%$dcvars->{PASSWORD}\") == 0 or die(\"Join failed\");\n-\n-\t$ret{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n-\t$ret{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n-\tprint \"$ret{DOMAIN}\\n\";\n-\treturn \\%ret;\n+\n+\tmy $ret = $self->provision($prefix, \"member server\", \"SAMBADOMAIN\", \n+\t\t\"localmember\", \n+\t\tundef  # LDAP\n+\t);\n+\n+\t$ret or die(\"Unable to provision\");\n+\n+\tsystem(\"$self->{bindir}/net join $ret->{CONFIGURATION} $dcvars->{DOMAIN} member -U$dcvars->{USERNAME}\\%$dcvars->{PASSWORD}\") == 0 or die(\"Join failed\");\n+\n+\t$ret->{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n+\t$ret->{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n+\treturn $ret;\n }\n \n sub provision_dc($$)\n {\n \tmy ($self, $prefix) = @_;\n-\tmy %ret = ();\n+\n \tprint \"PROVISIONING...\";\n-\topen(IN, \"$RealBin/mksamba4server.pl $prefix|\") or die(\"Unable to setup\");\n-\twhile () {\n-\t\tdie (\"Error parsing `$_'\") unless (/^([A-Z0-9a-z_]+)=(.*)$/);\n-\t\t$ret{$1} = $2;\n-\t}\n-\tclose(IN);\n+\tmy $ret = $self->provision($prefix, \"domain controller\", \"SAMBADOMAIN\", \n+\t\t\"localtest\", \n+\t\tundef  # LDAP\n+\t);\n \n-\t$ret{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n-\t$ret{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n-\treturn \\%ret;\n+\t$ret->{SMBD_TEST_FIFO} = \"$prefix/smbd_test.fifo\";\n+\t$ret->{SMBD_TEST_LOG} = \"$prefix/smbd_test.log\";\n+\treturn $ret;\n }\n \n sub provision_ldap($$)\n\n=== modified file 'source/script/tests/selftest.pl'\n--- a/source/script/tests/selftest.pl\t2007-04-16 03:16:23 +0000\n+++ b/source/script/tests/selftest.pl\t2007-04-16 22:35:13 +0000\n@@ -573,6 +573,7 @@\n sub teardown_env($)\n {\n \tmy ($envname) = @_;\n+\treturn if ($envname eq \"none\");\n \t$target->teardown_env($running_envs{$envname});\n \tdelete $running_envs{$envname};\n }\n\n"}