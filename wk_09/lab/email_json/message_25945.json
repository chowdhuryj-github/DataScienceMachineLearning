{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Andrew Pierce <adp179@psu.edu>", "subject": "[R] voronoi.mosaic chokes?", "body": "Hi all,\n\nI am running R 2.5.0 under Windows XP Media Center Edition.  Here's a \nproblem that's been stumping me for a few days now, and I can't find \nanything useful in the archives.  I am using voronoi.mosaic (tripack \npackage) to create proximity polygons for a study of vegetation \ncompetition and dynamics.  The points lists are read in from a file for \neach plot, then 8 duplicates are translated around the edges of the plot \n(Toroidal edge correction).  This is completed using the torus(...) \nfunction that I wrote myself.\n\nVMuncorrected is the voronoi  mosaic that is not toroidally edge corrected\nVMcorrected is the voronoi mosaic that is toroidally edge corrected\n\n >treemap = read.table('af1.txt', sep = \"\\t\", header = 1)\n >VMuncorrected = voronoi.mosaic(treemap$X, treemap$Y)\n\n###Use the torus function to create 8 copies around the study region\n >toroid = torus(treemap$X, treemap$Y, 25, 25)\n\n >VMcorrected = voronoi.mosaic(toroid[,1], toroid[,2], duplicate = \"remove\")\n\nHere's the problem. When I read in the points for the data file listed \nabove ('af1.txt'), both calls to voronoi.mosaic() work fine.  (The \nsecond one takes about 1.5 seconds because there are 1147 points in the \ntoroidally corrected set).\n\nHowever, when I read in the points from the next file ('af2.txt'), the \nfirst call to voronoi.mosaic() works.  The next call (to torus()) also \nworks fine.  But the second call to voronoi.mosaic() causes R to freeze \ncompletely requiring Ctrl-Alt-Del.\n\nI have 10 sets of points and this problem happens for about 5 of them.\n\nFactors I have ruled out:\n-too many points in the call (one set had 1147 and worked fine while the \nnext set had 801 and froze R)\n-duplicate points (taken care of by voronoi.mosaic(..., duplicate = \n\"remove\") and also independently verified by exporting the data.  no \nduplicates in either the original or the toroidally corrected set)\n-points too close together in space (minimum distance between two points \nin 'af1.txt' is 0.1414 and works fine.  minimum distance in the second \nset, 'af2.txt', is 0.2236, and this set causes R to freeze)\n-not enough memory (each data set is run in a new R session-i.e. R was \nquit between each attempt)\n-'flukiness' (the problem happens the same way every time for the \nproblem data sets, and the code runs fine every time for the non-problem \ndata sets)\n-file formats (each text file has the same number of columns, all the \nlabels for the columns are identical, and the columns are always in the \nsame order)\n-outdated versions (I am using R 2.5.0 and updated the tripack package \nwithin the last week.  also, I update packages about once a month)\n\nThis is a very frustrating problem because I get no errors indicating \nany problem with the data, and I have checked the data over and over for \nany type of error and found none.  If anyone has ANY helpful \nsuggestions, I would love to hear about any and all of them.\n\nAndrew\n\np.s. - for those of you who are really intrigued, I can email you the \n.txt files and the code for the torus() function.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}