{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 359: fixed tcp data offset and checksum in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 359\nrevision-id: tridge@samba.org-20070527065612-eru5ramnlqtgqkdy\nparent: tridge@samba.org-20070527054743-ldficagg4243oz4g\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sun 2007-05-27 16:56:12 +1000\nmessage:\n  fixed tcp data offset and checksum\nmodified:\n  takeover/ctdb_takeover.c       ctdb_takeover.c-20070525071636-a5n1ihghjtppy08r-2\n  takeover/system.c              system.c-20070525071636-a5n1ihghjtppy08r-3\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'takeover/ctdb_takeover.c'\n--- a/takeover/ctdb_takeover.c\t2007-05-27 05:47:43 +0000\n+++ b/takeover/ctdb_takeover.c\t2007-05-27 06:56:12 +0000\n@@ -71,7 +71,7 @@\n \t\t\t (unsigned)ntohs(tcp->daddr.sin_port), \n \t\t\t inet_ntoa(tcp->saddr.sin_addr),\n \t\t\t (unsigned)ntohs(tcp->saddr.sin_port)));\n-\t\tret = ctdb_sys_send_ack(&tcp->daddr, &tcp->saddr);\n+\t\tret = ctdb_sys_send_ack(&tcp->saddr, &tcp->daddr);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(0,(__location__ \" Failed to send tcp tickle ack for %s\\n\",\n \t\t\t\t inet_ntoa(tcp->saddr.sin_addr)));\n\n=== modified file 'takeover/system.c'\n--- a/takeover/system.c\t2007-05-27 05:47:43 +0000\n+++ b/takeover/system.c\t2007-05-27 06:56:12 +0000\n@@ -127,20 +127,42 @@\n \treturn 0;\n }\n \n+\n /*\n-  simple IP checksum - assumes data is multiple of 2 bytes long\n+  uint16 checksum for n bytes\n  */\n-static uint16_t ip_checksum(uint16_t *data, size_t n)\n+static uint32_t uint16_checksum(uint16_t *data, size_t n)\n {\n-\tuint16_t sum=0;\n-\twhile (n--) {\n-\t\tsum += ntohs(*data);\n+\tuint32_t sum=0;\n+\twhile (n>=2) {\n+\t\tsum += (uint32_t)ntohs(*data);\n \t\tdata++;\n-\t}\n-\tif (sum == 0) {\n+\t\tn -= 2;\n+\t}\n+\tif (n == 1) {\n+\t\tsum += (uint32_t)ntohs(*(uint8_t *)data);\n+\t}\n+\treturn sum;\n+}\n+\n+/*\n+  simple TCP checksum - assumes data is multiple of 2 bytes long\n+ */\n+static uint16_t tcp_checksum(uint16_t *data, size_t n, struct iphdr *ip)\n+{\n+\tuint32_t sum = uint16_checksum(data, n);\n+\tuint16_t sum2;\n+\tsum += uint16_checksum((uint16_t *)&ip->saddr, sizeof(ip->saddr));\n+\tsum += uint16_checksum((uint16_t *)&ip->daddr, sizeof(ip->daddr));\n+\tsum += ip->protocol + n;\n+\tsum = (sum & 0xFFFF) + (sum >> 16);\n+\tsum = (sum & 0xFFFF) + (sum >> 16);\n+\tsum2 = htons(sum);\n+\tsum2 = ~sum2;\n+\tif (sum2 == 0) {\n \t\treturn 0xFFFF;\n \t}\n-\treturn htons(sum);\n+\treturn sum2;\n }\n \n /*\n@@ -185,20 +207,21 @@\n \tZERO_STRUCT(pkt);\n \tpkt.ip.version  = 4;\n \tpkt.ip.ihl      = sizeof(pkt.ip)/4;\n-\tpkt.ip.tot_len  = sizeof(pkt);\n+\tpkt.ip.tot_len  = htons(sizeof(pkt));\n \tpkt.ip.ttl      = 255;\n \tpkt.ip.protocol = IPPROTO_TCP;\n \tpkt.ip.saddr    = src->sin_addr.s_addr;\n \tpkt.ip.daddr    = dest->sin_addr.s_addr;\n-\tpkt.ip.check    = ip_checksum((uint16_t *)&pkt.ip, sizeof(pkt.ip)/2);\n+\tpkt.ip.check    = 0;\n \n \tpkt.tcp.source   = src->sin_port;\n \tpkt.tcp.dest     = dest->sin_port;\n \tpkt.tcp.ack      = 1;\n-\tpkt.tcp.check    = 0;\n+\tpkt.tcp.doff     = sizeof(pkt.tcp)/4;\n+\tpkt.tcp.check    = tcp_checksum((uint16_t *)&pkt.tcp, sizeof(pkt.tcp), &pkt.ip);\n \n \tret = sendto(s, &pkt, sizeof(pkt), 0, dest, sizeof(*dest));\n-\tif (ret != 0) {\n+\tif (ret != sizeof(pkt)) {\n \t\tDEBUG(0,(__location__ \" failed sendto (%s)\\n\", strerror(errno)));\n \t}\n \tclose(s);\n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-05-25 07:04:13 +0000\n+++ b/tools/ctdb_control.c\t2007-05-27 06:56:12 +0000\n@@ -1139,6 +1139,20 @@\n \t\t{ \"thaw\", control_thaw },\n \t};\n \n+\t{\n+\t\tstruct sockaddr_in saddr, daddr;\n+\t\tinet_aton(\"192.168.115.128\", &daddr.sin_addr);\n+\t\tinet_aton(\"192.168.115.1\",   &saddr.sin_addr);\n+\t\tdaddr.sin_port = htons(1234);\n+\t\tsaddr.sin_port = htons(445);\n+\t\tdaddr.sin_family = AF_INET;\n+\t\tsaddr.sin_family = AF_INET;\n+\t\tctdb_sys_send_ack(&daddr, &saddr);\n+\t\texit(0);\n+\t}\n+\n+\n+\n \tpc = poptGetContext(argv[0], argc, argv, popt_options, POPT_CONTEXT_KEEP_FIRST);\n \n \twhile ((opt = poptGetNextOpt(pc)) != -1) {\n\n"}