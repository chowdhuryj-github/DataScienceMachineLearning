{"category": "ham", "to_address": "Weiwei Shi <helprhelp@gmail.com>", "from_address": "Dimitris Rizopoulos <Dimitris.Rizopoulos@med.kuleuven.be>", "subject": "Re: [R] how to ave this?", "body": "you could give a try to the following functions:\n\nmatFun <- function(lis, FUN){\n     if(!is.list(lis) || !all(sapply(lis, is.matrix)))\n         stop(\"'lis' must be a list containing 2-dimensional arrays\")\n     dims <- sapply(lis, dim)\n     n <- dims[1, 1]\n     p <- dims[2, 1]\n     if(!all(n == dims[1, ]) || !all(p == dims[2, ]))\n         stop(\"the matrices must have the same dimensions\")\n     mat <- matrix(unlist(lis), n * p, length(lis))\n     matrix(apply(mat, 1, FUN), n, p)\n}\n\nmatSums <- function(lis){\n     if(!is.list(lis) || !all(sapply(lis, is.matrix)))\n         stop(\"'lis' must be a list containing 2-dimensional arrays\")\n     dims <- sapply(lis, dim)\n     n <- dims[1, 1]\n     p <- dims[2, 1]\n     if(!all(n == dims[1, ]) || !all(p == dims[2, ]))\n         stop(\"the matrices must have the same dimensions\")\n     out <- array(data = 0, dim = c(n, p))\n     for(i in seq(along = lis))\n         out <- out + lis[[i]]\n     out\n}\n\n################\n\nn <- 6\np <- 5\nlis <- list(matrix(rnorm(n * p), n, p), matrix(rnorm(n * p), n, p),\nmatrix(rnorm(n * p), n, p), matrix(rnorm(n * p), n, p),\nmatrix(rnorm(n * p), n, p))\n\nmatFun(lis, sum)\nmatSums(lis)\n\n\nI hope it helps.\n\nBest,\nDimitris\n\n----\nDimitris Rizopoulos\nPh.D. Student\nBiostatistical Centre\nSchool of Public Health\nCatholic University of Leuven\n\nAddress: Kapucijnenvoer 35, Leuven, Belgium\nTel: +32/(0)16/336899\nFax: +32/(0)16/337015\nWeb: http://med.kuleuven.be/biostat/\n      http://www.student.kuleuven.be/~m0390867/dimitris.htm\n\n\nQuoting Weiwei Shi :\n\n> one of my approaches is:\n>\n> x0 = sapply(mylist, cbind)\n>\n> and manipulate from x0 (x0[1:nrow(x0)/2, ] correponds to fc and the\n> lower part is tt.\n>\n> but it is not neat way.\n>\n>\n> On 6/22/07, Weiwei Shi  wrote:\n>> Hi,\n>>\n>> I have a list that looks like this:\n>> [[1]]\n>>              fc          tt\n>> 50   0.07526882 0.000000000\n>> 100  0.09289617 0.000000000\n>> 150  0.12359551 0.000000000\n>>\n>> [[2]]\n>>              fc          tt\n>> 50   0.02040816 0.000000000\n>> 100  0.03626943 0.005025126\n>> 150  0.05263158 0.010101010\n>>\n>> and I am wondering how to \"average\" it so that I have one matrix t0 at\n>> the end, and t0[1,1] = (0.075..+0.0204..)/2\n>>\n>> Thanks,\n>>\n>> --\n>> Weiwei Shi, Ph.D\n>> Research Scientist\n>> GeneGO, Inc.\n>>\n>> \"Did you always know?\"\n>> \"No, I did not. But I believed...\"\n>> ---Matrix III\n>>\n>\n>\n> --\n> Weiwei Shi, Ph.D\n> Research Scientist\n> GeneGO, Inc.\n>\n> \"Did you always know?\"\n> \"No, I did not. But I believed...\"\n> ---Matrix III\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n>\n\n\n\nDisclaimer: http://www.kuleuven.be/cwis/email_disclaimer.htm\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}