{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r22873 - in\n\tbranches/SAMBA_4_0/source/torture/raw: .", "body": "Author: abartlet\nDate: 2007-05-15 00:10:18 +0000 (Tue, 15 May 2007)\nNew Revision: 22873\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22873\n\nLog:\nMake the RAW-QFILEINFO-IPC test pass against Win2k3.\n\nNext step is working on Samba4's IPC ntvfs module.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/torture/raw/qfileinfo.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/raw/qfileinfo.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/raw/qfileinfo.c\t2007-05-14 23:55:11 UTC (rev 22872)\n+++ branches/SAMBA_4_0/source/torture/raw/qfileinfo.c\t2007-05-15 00:10:18 UTC (rev 22873)\n@@ -2,6 +2,7 @@\n    Unix SMB/CIFS implementation.\n    RAW_FILEINFO_* individual test suite\n    Copyright (C) Andrew Tridgell 2003\n+   Copyright (C) Andrew Bartlett  2007\n    \n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n@@ -32,45 +33,107 @@\n \tuint_t only_paths:1;\n \tuint_t only_handles:1;\n \tuint32_t capability_mask;\n+\tuint_t expected_ipc_access_denied:1;\n+\tNTSTATUS expected_ipc_fnum_status;\n \tNTSTATUS fnum_status, fname_status;\n \tunion smb_fileinfo fnum_finfo, fname_finfo;\n } levels[] = {\n-\t{ \"GETATTR\",                   RAW_FILEINFO_GETATTR,           1, 0, },\n-\t{ \"GETATTRE\",                  RAW_FILEINFO_GETATTRE,          0, 1, },\n-\t{ \"STANDARD\",                  RAW_FILEINFO_STANDARD, },\n-\t{ \"EA_SIZE\",                   RAW_FILEINFO_EA_SIZE, },\n-\t{ \"ALL_EAS\",                   RAW_FILEINFO_ALL_EAS, },\n-\t{ \"IS_NAME_VALID\",             RAW_FILEINFO_IS_NAME_VALID,     1, 0, },\n-\t{ \"BASIC_INFO\",                RAW_FILEINFO_BASIC_INFO, },\n-\t{ \"STANDARD_INFO\",             RAW_FILEINFO_STANDARD_INFO, },\n-\t{ \"EA_INFO\",                   RAW_FILEINFO_EA_INFO, },\n-\t{ \"NAME_INFO\",                 RAW_FILEINFO_NAME_INFO, },\n-\t{ \"ALL_INFO\",                  RAW_FILEINFO_ALL_INFO, },\n-\t{ \"ALT_NAME_INFO\",             RAW_FILEINFO_ALT_NAME_INFO, },\n-\t{ \"STREAM_INFO\",               RAW_FILEINFO_STREAM_INFO, },\n-\t{ \"COMPRESSION_INFO\",          RAW_FILEINFO_COMPRESSION_INFO, },\n-\t{ \"UNIX_BASIC_INFO\",           RAW_FILEINFO_UNIX_BASIC, 0, 0, CAP_UNIX},\n-\t{ \"UNIX_LINK_INFO\",            RAW_FILEINFO_UNIX_LINK, 0, 0, CAP_UNIX},\n-\t{ \"BASIC_INFORMATION\",         RAW_FILEINFO_BASIC_INFORMATION, },\n-\t{ \"STANDARD_INFORMATION\",      RAW_FILEINFO_STANDARD_INFORMATION, },\n-\t{ \"INTERNAL_INFORMATION\",      RAW_FILEINFO_INTERNAL_INFORMATION, },\n-\t{ \"EA_INFORMATION\",            RAW_FILEINFO_EA_INFORMATION, },\n-\t{ \"ACCESS_INFORMATION\",        RAW_FILEINFO_ACCESS_INFORMATION, },\n-\t{ \"NAME_INFORMATION\",          RAW_FILEINFO_NAME_INFORMATION, },\n-\t{ \"POSITION_INFORMATION\",      RAW_FILEINFO_POSITION_INFORMATION, },\n-\t{ \"MODE_INFORMATION\",          RAW_FILEINFO_MODE_INFORMATION, },\n-\t{ \"ALIGNMENT_INFORMATION\",     RAW_FILEINFO_ALIGNMENT_INFORMATION, },\n-\t{ \"ALL_INFORMATION\",           RAW_FILEINFO_ALL_INFORMATION, },\n-\t{ \"ALT_NAME_INFORMATION\",      RAW_FILEINFO_ALT_NAME_INFORMATION, },\n-\t{ \"STREAM_INFORMATION\",        RAW_FILEINFO_STREAM_INFORMATION, },\n-\t{ \"COMPRESSION_INFORMATION\",   RAW_FILEINFO_COMPRESSION_INFORMATION, },\n-\t{ \"NETWORK_OPEN_INFORMATION\",  RAW_FILEINFO_NETWORK_OPEN_INFORMATION, },\n-\t{ \"ATTRIBUTE_TAG_INFORMATION\", RAW_FILEINFO_ATTRIBUTE_TAG_INFORMATION, },\n-\t{ NULL, }\n+\t{ .name = \"GETATTR\",\n+\t  .level = RAW_FILEINFO_GETATTR,         \n+\t  .only_paths = 1,\n+\t  .only_handles = 0,\n+\t  .expected_ipc_access_denied = 1},\n+\t{  .name =\"GETATTRE\",                  \n+\t   .level = RAW_FILEINFO_GETATTRE,         \n+\t   .only_paths = 0, \n+\t   .only_handles = 1 },\n+\t{  .name =\"STANDARD\",                  \n+\t   .level = RAW_FILEINFO_STANDARD, },\n+\t{  .name =\"EA_SIZE\",                 \n+\t   .level = RAW_FILEINFO_EA_SIZE },\n+\t{  .name =\"ALL_EAS\",                 \n+\t   .level = RAW_FILEINFO_ALL_EAS,\n+\t   .expected_ipc_fnum_status = NT_STATUS_ACCESS_DENIED,\n+\t},\n+\t{  .name =\"IS_NAME_VALID\",          \n+\t   .level =  RAW_FILEINFO_IS_NAME_VALID,\n+\t   .only_paths =  1,\n+\t   .only_handles =  0 },\n+\t{  .name =\"BASIC_INFO\",            \n+\t   .level =  RAW_FILEINFO_BASIC_INFO },\n+\t{  .name =\"STANDARD_INFO\",         \n+\t   .level =  RAW_FILEINFO_STANDARD_INFO },\n+\t{  .name =\"EA_INFO\",               \n+\t   .level =  RAW_FILEINFO_EA_INFO },\n+\t{  .name =\"NAME_INFO\",           \n+\t   .level =  RAW_FILEINFO_NAME_INFO },\n+\t{  .name =\"ALL_INFO\",              \n+\t   .level =  RAW_FILEINFO_ALL_INFO },\n+\t{  .name =\"ALT_NAME_INFO\",        \n+\t   .level =  RAW_FILEINFO_ALT_NAME_INFO,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{  .name =\"STREAM_INFO\",           \n+\t   .level =  RAW_FILEINFO_STREAM_INFO,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{  .name =\"COMPRESSION_INFO\",        \n+\t   .level =  RAW_FILEINFO_COMPRESSION_INFO,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{  .name =\"UNIX_BASIC_INFO\",         \n+\t   .level =  RAW_FILEINFO_UNIX_BASIC,\n+\t   .only_paths =  0, \n+\t   .only_handles = 0, \n+\t   .capability_mask = CAP_UNIX},\n+\t{  .name =\"UNIX_LINK_INFO\",          \n+\t   .level =  RAW_FILEINFO_UNIX_LINK, \n+\t   .only_paths = 0, \n+\t   .only_handles = 0, \n+\t   .capability_mask = CAP_UNIX},\n+\t{  .name =\"BASIC_INFORMATION\",      \n+\t   .level =  RAW_FILEINFO_BASIC_INFORMATION },\n+\t{  .name =\"STANDARD_INFORMATION\",   \n+\t   .level =  RAW_FILEINFO_STANDARD_INFORMATION },\n+\t{  .name =\"INTERNAL_INFORMATION\",   \n+\t   .level =  RAW_FILEINFO_INTERNAL_INFORMATION },\n+\t{  .name =\"EA_INFORMATION\",        \n+\t   .level =  RAW_FILEINFO_EA_INFORMATION },\n+\t{ .name = \"ACCESS_INFORMATION\",    \n+\t  .level =  RAW_FILEINFO_ACCESS_INFORMATION },\n+\t{ .name = \"NAME_INFORMATION\",      \n+\t  .level =  RAW_FILEINFO_NAME_INFORMATION },\n+\t{  .name =\"POSITION_INFORMATION\",  \n+\t   .level =  RAW_FILEINFO_POSITION_INFORMATION },\n+\t{  .name =\"MODE_INFORMATION\",       \n+\t   .level =  RAW_FILEINFO_MODE_INFORMATION },\n+\t{  .name =\"ALIGNMENT_INFORMATION\",  \n+\t   .level =  RAW_FILEINFO_ALIGNMENT_INFORMATION },\n+\t{  .name =\"ALL_INFORMATION\",       \n+\t   .level =  RAW_FILEINFO_ALL_INFORMATION },\n+\t{  .name =\"ALT_NAME_INFORMATION\",  \n+\t   .level =  RAW_FILEINFO_ALT_NAME_INFORMATION,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{  .name =\"STREAM_INFORMATION\",    \n+\t   .level =  RAW_FILEINFO_STREAM_INFORMATION,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{ .name = \"COMPRESSION_INFORMATION\", \n+\t  .level =  RAW_FILEINFO_COMPRESSION_INFORMATION,\n+\t  .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{  .name =\"NETWORK_OPEN_INFORMATION\",\n+\t   .level =  RAW_FILEINFO_NETWORK_OPEN_INFORMATION,\n+\t   .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{ .name = \"ATTRIBUTE_TAG_INFORMATION\",\n+\t  .level =  RAW_FILEINFO_ATTRIBUTE_TAG_INFORMATION,\n+\t  .expected_ipc_fnum_status = NT_STATUS_INVALID_PARAMETER\n+\t},\n+\t{ NULL }\n };\n \n-static bool is_ipc;\n-\n /*\n   compare a dos time (2 second resolution) to a nt time\n */\n@@ -101,7 +164,7 @@\n /*\n   find a level in the levels[] table\n */\n-static union smb_fileinfo *fname_find(const char *name)\n+static union smb_fileinfo *fname_find(bool is_ipc, const char *name)\n {\n \tint i;\n \tif (is_ipc) {\n@@ -161,7 +224,8 @@\n    for consistency between the calls. \n */\n static BOOL torture_raw_qfileinfo_internals(struct torture_context *torture, TALLOC_CTX *mem_ctx, \t\n-\t\t\t\t\t    struct smbcli_tree *tree, int fnum, const char *fname)\n+\t\t\t\t\t    struct smbcli_tree *tree, int fnum, const char *fname,\n+\tbool is_ipc)\n {\n \tint i;\n \tBOOL ret = True;\n@@ -198,16 +262,32 @@\n \t\t\tcontinue;\n \t\t}\n \n-\t\tif (!levels[i].only_paths && !NT_STATUS_IS_OK(levels[i].fnum_status)) {\n-\t\t\tprintf(\"ERROR: level %s failed - %s\\n\", \n-\t\t\t       levels[i].name, nt_errstr(levels[i].fnum_status));\n-\t\t\tcount++;\n+\t\tif (is_ipc) {\n+\t\t\tif (levels[i].expected_ipc_access_denied && NT_STATUS_EQUAL(NT_STATUS_ACCESS_DENIED, levels[i].fname_status)) {\n+\t\t\t} else if (!levels[i].only_handles && !NT_STATUS_EQUAL(NT_STATUS_INVALID_DEVICE_REQUEST, levels[i].fname_status)) {\n+\t\t\t\tprintf(\"ERROR: fname level %s failed, expected NT_STATUS_INVALID_DEVICE_REQUEST - %s\\n\", \n+\t\t\t\t       levels[i].name, nt_errstr(levels[i].fname_status));\n+\t\t\t\tcount++;\n+\t\t\t}\n+\t\t\tif (!levels[i].only_paths && !NT_STATUS_EQUAL(levels[i].expected_ipc_fnum_status, levels[i].fnum_status)) {\n+\t\t\t\tprintf(\"ERROR: fnum level %s failed, expected %s - %s\\n\", \n+\t\t\t\t       levels[i].name, nt_errstr(levels[i].expected_ipc_fnum_status), \n+\t\t\t\t       nt_errstr(levels[i].fnum_status));\n+\t\t\t\tcount++;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (!levels[i].only_paths && !NT_STATUS_IS_OK(levels[i].fnum_status)) {\n+\t\t\t\tprintf(\"ERROR: fnum level %s failed - %s\\n\", \n+\t\t\t\t       levels[i].name, nt_errstr(levels[i].fnum_status));\n+\t\t\t\tcount++;\n+\t\t\t}\n+\t\t\tif (!levels[i].only_handles && !NT_STATUS_IS_OK(levels[i].fname_status)) {\n+\t\t\t\tprintf(\"ERROR: fname level %s failed - %s\\n\", \n+\t\t\t\t       levels[i].name, nt_errstr(levels[i].fname_status));\n+\t\t\t\tcount++;\n+\t\t\t}\n \t\t}\n-\t\tif (!(is_ipc || levels[i].only_handles) && !NT_STATUS_IS_OK(levels[i].fname_status)) {\n-\t\t\tprintf(\"ERROR: level %s failed - %s\\n\", \n-\t\t\t       levels[i].name, nt_errstr(levels[i].fname_status));\n-\t\t\tcount++;\n-\t\t}\n+\t\t\n \t}\n \n \tif (count != 0) {\n@@ -242,9 +322,9 @@\n \tdo { \\\n \t\ts1 = fnum_find(sname1);\t s2 = fnum_find(sname2); \\\n \t\tif (s1 && s2) { INFO_CHECK } \\\n-\t\ts1 = fname_find(sname1); s2 = fname_find(sname2); \\\n+\t\ts1 = fname_find(is_ipc, sname1); s2 = fname_find(is_ipc, sname2); \\\n \t\tif (s1 && s2) { INFO_CHECK } \\\n-\t\ts1 = fnum_find(sname1);\t s2 = fname_find(sname2); \\\n+\t\ts1 = fnum_find(sname1);\t s2 = fname_find(is_ipc, sname2); \\\n \t\tif (s1 && s2) { INFO_CHECK } \\\n \t} while (0)\n \n@@ -322,7 +402,7 @@\n \t\t       nt_time_string(mem_ctx, correct_time)); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && memcmp(&s1->stype.out.tfield, &correct_time, sizeof(correct_time)) != 0) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - %s should be %s\\n\", __LINE__, #stype, #tfield,  \\\n \t\t       nt_time_string(mem_ctx, s1->stype.out.tfield), \\\n@@ -338,7 +418,7 @@\n \t\t       nt_time_string(mem_ctx, correct_time)); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && dos_nt_time_cmp(s1->stype.out.tfield, correct_time) != 0) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - %s should be %s\\n\", __LINE__, #stype, #tfield,  \\\n \t\t       timestring(mem_ctx, s1->stype.out.tfield), \\\n@@ -355,7 +435,7 @@\n \t\t       nt_time_string(mem_ctx, correct_time)); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && unx_nt_time_cmp(s1->stype.out.tfield, correct_time) != 0) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - %s should be %s\\n\", __LINE__, #stype, #tfield,  \\\n \t\t       timestring(mem_ctx, s1->stype.out.tfield), \\\n@@ -420,7 +500,7 @@\n \t\t       (uint_t)correct_size); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && s1->stype.out.tfield != correct_size) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - %u should be %u\\n\", __LINE__, #stype, #tfield,  \\\n \t\t       (uint_t)s1->stype.out.tfield, \\\n@@ -474,7 +554,7 @@\n \t\t       (uint_t)correct_attrib); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && s1->stype.out.tfield != correct_attrib) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - 0x%x should be 0x%x\\n\", __LINE__, #stype, #tfield,  \\\n \t\t       (uint_t)s1->stype.out.tfield, \\\n@@ -487,11 +567,13 @@\n \tprintf(\"attrib: 0x%x\\n\", (uint_t)correct_attrib);\n \t\n \tATTRIB_CHECK(\"GETATTR\",                   getattr,                   attrib);\n-\tATTRIB_CHECK(\"GETATTRE\",                  getattre,                  attrib);\n-\tATTRIB_CHECK(\"STANDARD\",                  standard,                  attrib);\n+\tif (!is_ipc) {\n+\t\tATTRIB_CHECK(\"GETATTRE\",                  getattre,                  attrib);\n+\t\tATTRIB_CHECK(\"STANDARD\",                  standard,                  attrib);\n+\t\tATTRIB_CHECK(\"EA_SIZE\",                   ea_size,                   attrib);\n+\t}\n \tATTRIB_CHECK(\"BASIC_INFO\",                basic_info,                attrib);\n \tATTRIB_CHECK(\"BASIC_INFORMATION\",         basic_info,                attrib);\n-\tATTRIB_CHECK(\"EA_SIZE\",                   ea_size,                   attrib);\n \tATTRIB_CHECK(\"ALL_INFO\",                  all_info,                  attrib);\n \tATTRIB_CHECK(\"ALL_INFORMATION\",           all_info,                  attrib);\n \tATTRIB_CHECK(\"NETWORK_OPEN_INFORMATION\",  network_open_information,  attrib);\n@@ -508,7 +590,7 @@\n \t\t       s1->stype.out.tfield.s, s1->stype.out.tfield.private_length); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && (strcmp_safe(s1->stype.out.tfield.s, correct_name) != 0 || \\\n \t    \t\twire_bad_flags(&s1->stype.out.tfield, flags, tree->session->transport))) { \\\n \t\tprintf(\"(%d) path %s/%s incorrect - '%s/%d'\\n\", __LINE__, #stype, #tfield,  \\\n@@ -604,7 +686,7 @@\n \t\t\t}\n \t\t}\n \t}\n-\ts2 = fname_find(\"ALL_EAS\");\n+\ts2 = fname_find(is_ipc, \"ALL_EAS\");\n \tif (s2) {\n \t\tVAL_EQUAL(all_eas, num_eas, all_eas, num_eas);\n \t\tfor (i=0;iall_eas.out.num_eas;i++) {\n@@ -622,21 +704,21 @@\n \t\t       s1->stype1.out.tfield1, s2->stype2.out.tfield2); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname1); s2 = fname_find(sname2); \\\n+\ts1 = fname_find(is_ipc, sname1); s2 = fname_find(is_ipc, sname2); \\\n \tif (s1 && s2 && s1->stype1.out.tfield1 != s2->stype2.out.tfield2) { \\\n \t\tprintf(\"(%d) path %s/%s != %s/%s - 0x%x vs 0x%x\\n\", __LINE__, \\\n                        #stype1, #tfield1, #stype2, #tfield2,  \\\n \t\t       s1->stype1.out.tfield1, s2->stype2.out.tfield2); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fnum_find(sname1); s2 = fname_find(sname2); \\\n+\ts1 = fnum_find(sname1); s2 = fname_find(is_ipc, sname2); \\\n \tif (s1 && s2 && s1->stype1.out.tfield1 != s2->stype2.out.tfield2) { \\\n \t\tprintf(\"(%d) handle %s/%s != path %s/%s - 0x%x vs 0x%x\\n\", __LINE__, \\\n                        #stype1, #tfield1, #stype2, #tfield2,  \\\n \t\t       s1->stype1.out.tfield1, s2->stype2.out.tfield2); \\\n \t\tret = False; \\\n \t} \\\n-\ts1 = fname_find(sname1); s2 = fnum_find(sname2); \\\n+\ts1 = fname_find(is_ipc, sname1); s2 = fnum_find(sname2); \\\n \tif (s1 && s2 && s1->stype1.out.tfield1 != s2->stype2.out.tfield2) { \\\n \t\tprintf(\"(%d) path %s/%s != handle %s/%s - 0x%x vs 0x%x\\n\", __LINE__, \\\n                        #stype1, #tfield1, #stype2, #tfield2,  \\\n@@ -652,12 +734,13 @@\n \t\t  \"ALL_INFO\",      all_info,      nlink);\n \tVAL_CHECK(\"EA_INFO\",       ea_info,       ea_size, \n \t\t  \"ALL_INFO\",      all_info,      ea_size);\n-\tVAL_CHECK(\"EA_SIZE\",       ea_size,       ea_size, \n-\t\t  \"ALL_INFO\",      all_info,      ea_size);\n+\tif (!is_ipc) {\n+\t\tVAL_CHECK(\"EA_SIZE\",       ea_size,       ea_size, \n+\t\t\t  \"ALL_INFO\",      all_info,      ea_size);\n+\t}\n \n-\n #define NAME_PATH_CHECK(sname, stype, field) do { \\\n-\ts1 = fname_find(sname); s2 = fnum_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); s2 = fnum_find(sname); \\\n         if (s1 && s2) { \\\n \t\tVAL_EQUAL(stype, field, stype, field); \\\n \t} \\\n@@ -694,7 +777,7 @@\n                        #stype, #tfield, \\\n \t\t       (uint_t)s1->stype.out.tfield); \\\n \t} \\\n-\ts1 = fname_find(sname); \\\n+\ts1 = fname_find(is_ipc, sname); \\\n \tif (s1 && s1->stype.out.tfield != 0) { \\\n \t\tprintf(\"(%d) path %s/%s unknown != 0 (0x%x)\\n\", __LINE__, \\\n                        #stype, #tfield, \\\n@@ -724,8 +807,6 @@\n \tint fnum;\n \tconst char *fname = \"\\\\torture_qfileinfo.txt\";\n \n-\tis_ipc = 0;\n-\n \tif (!torture_open_connection(&cli, 0)) {\n \t\treturn False;\n \t}\n@@ -739,7 +820,7 @@\n \t\tgoto done;\n \t}\n \n-\tret = torture_raw_qfileinfo_internals(torture, mem_ctx, cli->tree, fnum, fname);\n+\tret = torture_raw_qfileinfo_internals(torture, mem_ctx, cli->tree, fnum, fname, False /* is_ipc */);\n \t\n \tsmbcli_close(cli->tree, fnum);\n \tsmbcli_unlink(cli->tree, fname);\n@@ -761,8 +842,6 @@\n \tstruct smbcli_tree *ipc_tree;\n \tNTSTATUS status;\n \n-\tis_ipc = True;\n-\t\n \tif (!torture_open_connection(&cli, 0)) {\n \t\treturn False;\n \t}\n@@ -785,7 +864,7 @@\n \tipc_tree = dcerpc_smb_tree(p->conn);\n \tfnum = dcerpc_smb_fnum(p->conn);\n \n-\tret = torture_raw_qfileinfo_internals(torture, mem_ctx, ipc_tree, fnum, fname);\n+\tret = torture_raw_qfileinfo_internals(torture, mem_ctx, ipc_tree, fnum, fname, True /* is_ipc */);\n \t\n \ttalloc_free(p);\n \treturn ret;\n\n"}