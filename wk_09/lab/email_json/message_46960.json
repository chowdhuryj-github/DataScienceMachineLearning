{"category": "ham", "to_address": "Northstardomus <northstardomus@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Database insertion, escape issue", "body": "On 6/12/07, Northstardomus  wrote:\nsnip\n>         $dbh->prepare('INSERT INTO area_status (areaID, survey_date,\n> update_time, status ) VALUES (?,?,?,?)');\n>         $dbh->execute('$values[0]', '$values[1]', '$values[2]',\n> '$values[3]');\nsnip\n\nYou are getting an error because $dbh->prepare returns a statement\nhandle that can be executed.  The code should be written like this:\n\nmy $sth = $dbh->prepare('\n    INSERT INTO area_status (areaID, survey_date, update_time, status )\n        VALUES (?,?,?,?)\n');\n$sth->execute(@values[0 .. 3]);\n\nAlso, connecting to the database every time you want to do something\nis expensive.  You should connect once near the beginning of the\nscript and use that connection for the rest of the script.  The\nstatement handle may also be reused, so you might want to name it with\na better name than $sth* like this:\n\nmy $dbh = DBI->connect(...);\n\nmy $insert_area_status_sth = $dbh->prepare(...);\n\nwhile () {\n    my @rec = split /,/;\n    $insert_area_status_sth->execute(@rec) if $rec[0] eq 'Y';\n}\n\n\n* for handles that have a limited scope $sth is perfectly fine\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}