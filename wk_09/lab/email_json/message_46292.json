{"category": "ham", "to_address": "sigzero@gmail.com, beginners@perl.org", "from_address": "\"Adriano Ferreira\" <a.r.ferreira@gmail.com>", "subject": "Re: new vs ->new", "body": "On 6/11/07, Robert Hicks  wrote:\n> Dr.Ruud wrote:\n> > \"Adriano Ferreira\" schreef:\n> >\n> >> Definitely go with\n> >>  my $test = Some::Module->new;\n> >\n> > or even with:\n> >    my $test = Some::Module::->new();\n> >\n> While I am sure that will work...I have never seen it with parens after\n> the new.\n\nAs the docs say, there is nothing special about C< new >. It is only a\nconvention that it is the usual named used for a constructor. As any\nother methods without arguments, it can be invoked as\n\n              Some::Module->new\n\nor\n\n             Some::Module->new()\n\nBut on the hand, it the constructor has parameters, you will\nforcefully need the parameters\n\n             Some::Module->new($arg1, $arg2)\n\nbecause\n\n             Some::Module->new $arg1, $arg2\n\n(or something like that) is illegal. This is different from\nsubroutines invoked without parentheses around their arguments (which\nare legal if the sub definition was seen before so that the\ninterpreter knows it refers to code). But that has to do with\nrequirements of Perl syntax.\n\nCheers,\nAdriano Ferreira.\n\n> Robert\n>\n> --\n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n>\n>\n>\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}