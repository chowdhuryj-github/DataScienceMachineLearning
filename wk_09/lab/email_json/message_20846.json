{"category": "ham", "to_address": "Perl List <beginners@perl.org>", "from_address": "oryann9 <oryann9@yahoo.com>", "subject": "Re: unit messages", "body": "\n> #!/usr/bin/perl\n> \n> use strict;\n> use warnings;\n> \n> my @a = qw(abc def ghi);\n> \n> for my $s (@a) {\n>         $s =~ /(b)|(e)|(h)/;\n>         print \"1 => [$1] 2 => [$2] 3 => [$3]\\n\";\n> }\n> \n\nThank you for the kind replies. I understand now and\nhave modified the code to:\n\nuse strict;\nuse warnings;\n\nmy $jfsFile =\nqq(/home/dbsmith/onlinJFS_4_license_exp.txt);\nmy $CvsFile =\nqq(/home/dbsmith/onlinJFS_4_license_exp.cvs);\nmy $regexp  = qr/(host:\\w+)/is;\nmy $regexp1 = qr/(onlinejfs.*)/is;\nmy $regexp2 = qr/(jfs\\sversion.*)/is;\n\nopen (JFS, \"+<$jfsFile\") or die \"file '$jfsFile' was\nnot opened $!\";\n\n    while () {\n        s/^\\s+|\\s+$//g;         ## rid of newlines at\nbegin and end\n        next if ! length $_;    ## skip line of length\nundef\n\n        if (/$regexp/) {\n            print \"\\n$1\\n\",\n            '-' x length $1;\n        }\n        elsif (/$regexp1/) {\n            print \"\\n\\t$1\\n\";\n        }\n        elsif (/$regexp2/) {\n            print \"\\n\\t$1\\n\";\n        }\n    }\n\n\n\n__________________________________________________\nDo You Yahoo!?\nTired of spam?  Yahoo! Mail has the best spam protection around \nhttp://mail.yahoo.com \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}