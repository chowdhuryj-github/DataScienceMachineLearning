{"category": "ham", "to_address": "parrotbug-followup@parrotcode.org", "from_address": "\"jerry gay\" <jerry.gay@gmail.com>", "subject": "Re: [perl #42427] [CAGE] cleanup perlcritic errors", "body": "On 6/25/07, Paul Cochrane via RT  wrote:\n> To be able to attack this ticket properly, we need to be able to run at\n> least a subset of the perlcritic tests with 'make test' alongside the\n> other coding standards tests, so as to ensure that any broken windows\n> do not remain so for very long.  Therefore, I propose to change the\n> functionality of the t/codingstd/perlcritic.t test slightly so as to\n> run only those tests which have currently been \"cleaned up\" by default,\n> and to run all perlcritic policies by passing the flag '--allpolicies'\n> to the test script.  We can then incrementally move cleaned up policies\n> into the default list of policies and hence slowly increase our perl\n> coding standards testing coverage.  The attached patch implements this,\n> and sorts the output of the '--list' option so as to make its output\n> more readable.\n>\n> Comments most definitely welcome!  If there are no problems with this,\n> I'll commit the patch, and add t/codingstd/perlcritic.t to the coding\n> standards section of the test harness.\n>\ni have some suggestions for your patch.\n\nlet me start with a side point, sorry for the early tangent. why isn't\nperlcritic.t using a Getopt:: module--it should be. that'd be a good\ncage task, and would make one of my suggestions easier to implement.\n\narranging the %policies as a HoH would make it easier to add groupings\nas we please. something like:\n  my %policies = ( default => { ... }, extra => { ... }, );\n\nhave one flag to select which group of policies to run. the special\nvalue 'all' would run all groups. 'default' would be the default. for\nexample:\n  perl t/codingstd/perlcritic.t --group=extra\n\ni should have started with this: it's a good idea. the set of perl\ncoding standard tests that should be passing consistently should be\nrun by default. and we should not have false positives (tests expected\nto fail) in the trunk for any length of time, as it makes spotting\nreal bugs harder to do. this patch correctly addresses both those\npoints.\n~jerry\n\n"}