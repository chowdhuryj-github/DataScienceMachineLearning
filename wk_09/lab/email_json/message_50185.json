{"category": "ham", "to_address": "ted.harding@manchester.ac.uk", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] source a specific function", "body": "On 6/18/2007 12:11 PM, (Ted Harding) wrote:\n> On 18-Jun-07 14:28:35, Gabor Grothendieck wrote:\n>> This loads all the functions into an anonymous environment defined\n>> by local and then exports f to the global environment.\n>> \n>> f <- local({\n>>       source(\"/a.R\", local = TRUE)\n>>       environment(f) <- .GlobalEnv\n>>       f\n>> })\n> \n> That looks neat! Two questions:\n> \n> 1. Would something similar work for extracting selected functions\n>    from a library (assuming that you know about interdependencies)?\n> \n>    E.g. something like\n> \n>   f <- local({\n>        library(f.etc.lib)\n>        environment(f) <- .GlobalEnv\n>        f\n>   })\n\nThe exact syntax you list there won't work, but in any case, changing \nthe environment of a function in a package is a bad idea -- it may need \nto reference things from the namespace of the package.\n\n> \n> 2. Having done what you describe to extract just f from a source\n>    file, can one then \"delete\" the local environment used to load\n>    the source? I think what I'm basically asking is whether the\n>    exporting is done \"by value\" (local environment deletion OK)\n>    or \"by reference\" (deletion would destroy the exported object).\n\nGabor answered this:  it will go away automatically.\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}