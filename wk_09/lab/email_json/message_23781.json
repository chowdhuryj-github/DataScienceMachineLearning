{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Bernhard Schmalhofer (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #42885] Resurrect languages/lisp ", "body": "# New Ticket Created by  Bernhard Schmalhofer \n# Please include the string:  [perl #42885]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nlanguages/lisp looks like a nice implementation of Common Lisp.\nHowever it hasn't kept up with development in Parrot.\n\nSome areas I encountered, when trying to 'make' in languages/lisp.\n\ni. lexical scoping, The opcodes new_pad and peed_pad are gone now\nii. Calling conventions, use :slurpy for getting a variable number of \nreturn values\niii. regexp ops, the rx_* ops are gone\niv. Using namespace might simplify some things\n\nIt might be nice to bring languages/lisp back to life.\nAn idea of mine is to use SWIP and CFFI for convient access to C-libraries\nfrom Parrot, http://rakudo.org/parrot/index.cgi?cffi.\n\n"}