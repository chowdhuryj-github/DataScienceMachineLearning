{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #43315\": ;", "from_address": "\"James Keenan via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #43315] [TODO] config/inter/lex.pm:  Write unit tests ", "body": "Since last week's post-YAPC hackathon I've been trying to write tests for config/inter/lex.pm, \nthe package which governs Parrot configuration step inter::lex.  Per the POD, this step \"[d]\netermines whether 'lex' is installed and if it's actually 'flex' of least the user-specified \nminimum version, defaulting to 2.5.33.\"\n\nIn the Phalanx-model of testing, we try to write enough tests to exercise every statement in \nthe code and, within each statement, each branch and condition.  One major implication of \nthis is that we try to write tests to cover each 'return' statement from each subroutine within \nthe code.  In the case of config/inter/lex.pm, this is quite a challenge, since its subroutine \n'runstep()' has no fewer than *eight* return statements, i.e., eight different possible \noutcomes for running this configuration step.  (This is also true of config/inter/yacc.pm.)\n\nI anticipate writing a series of posts to this RT ticket about different aspects of config/inter/\nlex.pm.  To start, let me ask about the '--maintainer' option to Configure.pl.  This \nconfiguration option was added four years ago \"to work around imcc dependencies.\"  When \nset, its most important effect appears to come in config/auto/gcc.pm later in the \nconfiguration process when it causes Parrot to be compiled with \" -Wlarger-than-4096\".\n\nTwo years ago, however, Configure.pl and config/inter/lex.pm were modified such that:\n\n(a) If either of the '--lex' or '--yacc' options to Configure.pl were set, the '--maintainer' \noption would be set as well.\n\n(b) If the '--maintainer' option was *not* set (either explicitly or implicitly by setting '--lex' \nor '--yacc'), then configuration step inter::lex immediately short-circuits.  It makes no further \nattempt to determine whether you have a 'lex'-like program on disk or whether you have a \nsufficient version of 'flex'.  You are not prompted to provide input on STDIN.  A result of \n'skipped' is set; 'runstep()' exits; and configuration goes on to the next step.\n\n    unless ( $conf->options->get('maintainer') ) {\n        $conf->data->set( $util => 'echo' );    # here, $util = 'lex'\n        $self->set_result('skipped');\n        return $self;\n    }\n\nSince you have to explicitly set certain options to Configure.pl to get past this point in \ninter::lex, Parrot's configuration by default does not attempt to determine whether you have \na 'lex'-like program available.\n\nMy question is this:  Is this a good thing?\n\nIn other words, is it good that, by default, Parrot's configuration does *not* attempt to \ndetermine whether you have a 'lex'-like or 'yacc'-like program on disk?  Are we depriving the \nMakefile of any significant information by customarily sidestepping this probe?  Shouldn't \nParrot's default configuration behavior be to seek out information rather than to skip that \nsearch?\n\nThank you very much.\nkid51\n\n"}