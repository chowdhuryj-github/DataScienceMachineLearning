{"category": "ham", "to_address": "\"hadley wickham\" <h.wickham@gmail.com>", "from_address": "\"Deepayan Sarkar\" <deepayan.sarkar@gmail.com>", "subject": "Re: [R] model.frame: how does one use it?", "body": "On 6/15/07, hadley wickham  wrote:\n> On 6/15/07, Deepayan Sarkar  wrote:\n\n[...]\n\n> > By 'name', I mean a symbol, such as 'Age' or 'myweight'.  So\n> > basically, everything is as you would expect if the name is visible in\n> > data, but if not, the search starts in the environment of the formula,\n> > not the environment where the function call is being made (which is\n> > the standard evaulation behaviour).  This is a feature, not a bug\n> > (things would be a lot more confusing if it were the other way round).\n>\n> Could you give an example?  It's always seemed confusing to me and I\n> don't see why looking in the environment of the formula helps.\n\nGood question. I remember being convinced that it was a good idea, but\nno longer remember why. This is the best I can come up with right now:\n\n\n## stupid function that fits a model on a random subsample\n\nlmsub <- function(formula, data, p = 0.7)\n{\n    n <- nrow(data)\n    newdata <- data[sample(round(n * p)), ]\n    lm(formula, newdata)\n}\n\nmydata <- data.frame(x = 1:100, y = rnorm(100))\n\nn <- 2\n\nlmsub(y ~ poly(x, n), data = mydata)\n\nI don't think the use of the name 'n' is unusual in either case, and\nwe definitely wouldn't want the one inside 'lmsub' to be used for the\nformula.\n\n-Deepayan\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}