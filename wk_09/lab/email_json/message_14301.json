{"category": "ham", "to_address": "Beginners List <beginners@perl.org>", "from_address": "\"Mumia W.\" <mumia.w.18.spam+nospam@earthlink.net>", "subject": "Re: iso-8859-1 to unicode problem", "body": "On 04/24/2007 03:06 AM, Jeff Pang wrote:\n> 2007/4/24, Beau E. Cox :\n>>\n>> How do I get a proper conversion from iso-8859-1 to perl's internal utf8?\n> \n> Hello,\n> \n> You may use Encode module's decode function to do this conversion.\n> ie,for this string which was 'gb2312' format,\n> \n> $str = \"\\u4e2d\\u6587\";\n> \n> We use decode to convert it to perl's internal utf8,\n> \n> $str2 = decode('gb2312',$str);\n> \n> But you can't see this $str2 since it's perl's internal encode\n> format.So you need to convert it to corresponding output format,like,\n> \n> $output = encode('utf8',$str2);\n> \n> then print it out,\n> print $output;\n> \n> The whole things can be written one line,\n> \n> $ perl -MEncode -e '$out=encode(\"utf8\",decode(\"gb2312\",\"\\u4e2d\\u6587\"));print $out'\n> \n> That would get the correct result you wanted (output with utf8).\n> Hope this helps.\n> \n\nI don't think it'll work in this case because \\x99 doesn't seem to be \ninside my list of iso-8859-1 characters.\n\nThe document Mr. Cox is downloading is less than truthful about its \ncharacter set. Although it advertises itself as iso-8859-1, it's \nactually cp1250.\n\nMr. Cox, I got your program to decode the text properly by changing the \ndecoding line to this:\n\nmy $name1 = decode( 'cp1250', $name );\n\nHave a nice day.\n\nBTW, I got the list of valid cp1250 characters here: \nhttp://www.microsoft.com/typography/unicode/1250.htm\n\nRead \"perldoc Encode::Supported\" to see the list of supported character \nsets.\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}