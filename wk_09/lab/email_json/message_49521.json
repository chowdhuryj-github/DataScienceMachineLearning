{"category": "ham", "to_address": "\"Dr.Ruud\" <rvtol+news@isolution.nl>", "from_address": "Tom Allison <tom@tacocat.net>", "subject": "Re: character encoding & regex", "body": "\nOn Jun 17, 2007, at 6:14 AM, Dr.Ruud wrote:\n\n>\n> Tom Allison schreef:\n>\n>> I'm trying to do some regular expression on strings in email. They\n>> could be encoded to something.  But I can't tell because I don't have\n>> a utf8 unicode xterm window that will show me anything.\n>\n> There are more simple ways to find out, see charnames and perlunitut.\n> http://search.cpan.org/perldoc?charnames\n> http://search.cpan.org/perldoc?perlunitut\n>\n> I would first convert to a common base, like UTF-8, before trying to\n> match strings. Are you talking about raw mail messages? Consider\n> SpamAssassin and custom rules.\n\nI don't require actual character comparison, comparison of \\{263a} is  \nsufficient.\nAnd it's rather difficult to determine in raw email what the correct  \ncharset is to use for each string.  I find that email sometimes  \npasses multiple encodings in one message making it more difficult to  \npick apart.\n\nThe point that I'm coming from is post MIME::Parse which does a good  \njob of parsing out messages but I'm not sure how to manage the  \ndecoding in every case.  It's hard to find good examples sometimes.\n\nAs for SpamAssassin.  I'm trying to stay away from that because it's  \nvery large and from a development perspective -- badly documented in  \nthe code.  Basically, SpamAssassin is capable for what it does, but I  \ndon't exactly want to do that.  Similar, yet, but not exactly.\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}