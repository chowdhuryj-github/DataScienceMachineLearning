{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Brad Baxter <baxter.brad@gmail.com>", "subject": "Re: Accessing hash", "body": "On May 28, 7:41 am, jeevan.ing...@gmail.com (Jeevs) wrote:\n> On May 28, 11:35 am, jeevan.ing...@gmail.com (Jeevs) wrote:\n>\n> > @hashi = @hash{qw (jeevan, sarika)};\n> > print @hashi;\n>\n> > this gives me the values of keys jeevan and sarika.. how does this\n> > work ...\n\nIt works because that's the syntax for a hash slice--slices\nuse the @ to signify multiples of things.\n\n> ok i got it ...\n> and\n> I think i was not clear in my query...\n> I was expecting an hash slice to be\n> %hash{qw(jeevan sarika)} which seems more logical as i said earlier...\n\nPerhaps so.  Which is why ...\n\n> WEll i was browsing for more information and found out it has been\n> taken care of in perl6 :)\n\nWell, \"taken care of\" if you think it's broken--not everyone does.\n\n> where a new operator (qoute word) is introduced <> instead of qw() in\n> perl5.\n> u can write the above hash as\n>\n> @hashi = %hash;\n> print @hashi;\n>\n> and u can get the same output as above...\n\nFor the sake of discussion:\n\nmy %hash = ( a => 1, b => 2, c => 3 );\n\nprint \"%: \",    %hash;\nprint \"keys: \", keys %hash;\nprint \"vals: \", values %hash;\nprint \"\\@1: \",  @hash{ qw( a b c ) };\nprint \"\\@2: \",  @hash{ keys %hash };\nprint \"\\@3: \",  @hash{ sort keys %hash };\n\n__END__\n%: c3a1b2\nkeys: cab\nvals: 312\n@1: 123\n@2: 312\n@3: 123\n\nCheers,\n\n--\nBrad\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}