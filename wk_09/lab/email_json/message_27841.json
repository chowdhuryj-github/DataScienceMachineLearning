{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "mimir@samba.org", "subject": "svn commit: samba r22810 - in\n\tbranches/SAMBA_4_0/source/torture/libnet: .", "body": "Author: mimir\nDate: 2007-05-11 21:48:29 +0000 (Fri, 11 May 2007)\nNew Revision: 22810\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22810\n\nLog:\nwhen a test runs against domain controller use domain name\ninstead of target host name specified in binding string.\n\n\nmetze: this fixes the problem with passing name resolution\ndown the socket wrapper calls. NET tests now run against\n$SERVER flawlessly.\n\n\nrafal\n\n\nModified:\n   branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\n   branches/SAMBA_4_0/source/torture/libnet/libnet_rpc.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\t2007-05-11 21:45:03 UTC (rev 22809)\n+++ branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\t2007-05-11 21:48:29 UTC (rev 22810)\n@@ -129,17 +129,14 @@\n \tstruct libnet_context *ctx;\n \tstruct libnet_DomainOpen r;\n \tstruct lsa_Close lsa_close;\n-\tstruct dcerpc_binding *binding;\n \tstruct policy_handle h;\n-\tconst char *bindstr;\n-\t\n-\tbindstr = torture_setting_string(torture, \"binding\", NULL);\n-\tstatus = dcerpc_parse_binding(torture, bindstr, &binding);\n-\tif (!NT_STATUS_IS_OK(status)) {\n-\t\td_printf(\"failed to parse binding string\\n\");\n-\t\treturn False;\n-\t}\n+\tconst char *domain_name;\n \n+\t/* we're accessing domain controller so the domain name should be\n+\t   passed (it's going to be resolved to dc name and address) instead\n+\t   of specific server name. */\n+\tdomain_name = lp_workgroup();\n+\n \tctx = libnet_context_init(NULL);\n \tif (ctx == NULL) {\n \t\td_printf(\"failed to create libnet context\\n\");\n@@ -150,7 +147,7 @@\n \n \tZERO_STRUCT(r);\n \tr.in.type = DOMAIN_LSA;\n-\tr.in.domain_name = binding->host;\n+\tr.in.domain_name = domain_name;\n \tr.in.access_mask = SEC_FLAG_MAXIMUM_ALLOWED;\n \n \tstatus = libnet_DomainOpen(ctx, torture, &r);\n@@ -229,7 +226,7 @@\n \tctx->lsa.access_mask = access_mask;\n \tctx->lsa.handle      = h;\n \t/* we have to use pipe's event context, otherwise the call will\n-\t   hang indefinately */\n+\t   hang indefinitely */\n \tctx->event_ctx       = p->conn->event_ctx;\n \n \tZERO_STRUCT(r);\n@@ -257,9 +254,9 @@\n \tstruct event_context *evt_ctx=NULL;\n \tTALLOC_CTX *mem_ctx;\n \tstruct policy_handle domain_handle, handle;\n-\tstruct lsa_String name;\n \tstruct libnet_DomainOpen io;\n \tstruct samr_Close r;\n+\tconst char *domain_name;\n \tBOOL ret = True;\n \n \tmem_ctx = talloc_init(\"test_domainopen_lsa\");\n@@ -268,7 +265,10 @@\n \tctx = libnet_context_init(evt_ctx);\n \tctx->cred = cmdline_credentials;\n \n-\tname.string = lp_workgroup();\n+\t/* we're accessing domain controller so the domain name should be\n+\t   passed (it's going to be resolved to dc name and address) instead\n+\t   of specific server name. */\n+\tdomain_name = lp_workgroup();\n \n \t/*\n \t * Testing synchronous version\n@@ -276,7 +276,7 @@\n \tprintf(\"opening domain\\n\");\n \t\n \tio.in.type         = DOMAIN_SAMR;\n-\tio.in.domain_name  = name.string;\n+\tio.in.domain_name  = domain_name;\n \tio.in.access_mask  = SEC_FLAG_MAXIMUM_ALLOWED;\n \n \tstatus = libnet_DomainOpen(ctx, mem_ctx, &io);\n@@ -411,6 +411,10 @@\n \t\n \tmem_ctx = talloc_init(\"torture_domain_close_samr\");\n \n+\t/*\n+\t * querying the domain list using default buffer size\n+\t */\n+\n \tZERO_STRUCT(r);\n \tr.in.hostname = binding->host;\n \n@@ -420,12 +424,33 @@\n \t\tgoto done;\n \t}\n \n-\td_printf(\"Received list or domains:\\n\");\n+\td_printf(\"Received list or domains (everything in one piece):\\n\");\n \t\n \tfor (i = 0; i < r.out.count; i++) {\n \t\td_printf(\"Name[%d]: %s\\n\", i, r.out.domains[i].name);\n \t}\n \n+\t/*\n+\t * querying the domain list using specified (much smaller) buffer size\n+\t */\n+\n+\tctx->samr.buf_size = 32;\n+\n+\tZERO_STRUCT(r);\n+\tr.in.hostname = binding->host;\n+\n+\tstatus = libnet_DomainList(ctx, mem_ctx, &r);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tret = False;\n+\t\tgoto done;\n+\t}\n+\n+\td_printf(\"Received list or domains (collected in more than one round):\\n\");\n+\t\n+\tfor (i = 0; i < r.out.count; i++) {\n+\t\td_printf(\"Name[%d]: %s\\n\", i, r.out.domains[i].name);\n+\t}\n+\n done:\n \td_printf(\"\\nStatus: %s\\n\", nt_errstr(status));\n \n\nModified: branches/SAMBA_4_0/source/torture/libnet/libnet_rpc.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/libnet/libnet_rpc.c\t2007-05-11 21:45:03 UTC (rev 22809)\n+++ branches/SAMBA_4_0/source/torture/libnet/libnet_rpc.c\t2007-05-11 21:48:29 UTC (rev 22810)\n@@ -156,6 +156,7 @@\n \tNTSTATUS status;\n \tstruct dcerpc_binding *binding;\n \tconst char *bindstr;\n+\tconst char *domain_name;\n \t\n \tbindstr = torture_setting_string(torture, \"binding\", NULL);\n \tstatus = dcerpc_parse_binding(torture, bindstr, &binding);\n@@ -164,7 +165,11 @@\n \t\treturn False;\n \t}\n \n-\treturn torture_rpc_connect(torture, level, NULL, binding->host);\n+\t/* we're accessing domain controller so the domain name should be\n+\t   passed (it's going to be resolved to dc name and address) instead\n+\t   of specific server name. */\n+\tdomain_name = lp_workgroup();\n+\treturn torture_rpc_connect(torture, level, NULL, domain_name);\n }\n \n \n@@ -174,6 +179,7 @@\n \tNTSTATUS status;\n \tstruct dcerpc_binding *binding;\n \tconst char *bindstr;\n+\tconst char *domain_name;\n \t\n \tbindstr = torture_setting_string(torture, \"binding\", NULL);\n \tstatus = dcerpc_parse_binding(torture, bindstr, &binding);\n@@ -182,7 +188,11 @@\n \t\treturn False;\n \t}\n \n-\treturn torture_rpc_connect(torture, level, NULL, binding->host);\n+\t/* we're accessing domain controller so the domain name should be\n+\t   passed (it's going to be resolved to dc name and address) instead\n+\t   of specific server name. */\n+\tdomain_name = lp_workgroup();\n+\treturn torture_rpc_connect(torture, level, NULL, domain_name);\n }\n \n \n@@ -192,6 +202,7 @@\n \tNTSTATUS status;\n \tstruct dcerpc_binding *binding;\n \tconst char *bindstr;\n+\tconst char *domain_name;\n \t\n \tbindstr = torture_setting_string(torture, \"binding\", NULL);\n \tstatus = dcerpc_parse_binding(torture, bindstr, &binding);\n@@ -200,7 +211,11 @@\n \t\treturn False;\n \t}\n \n-\treturn torture_rpc_connect(torture, level, NULL, binding->host);\n+\t/* we're accessing domain controller so the domain name should be\n+\t   passed (it's going to be resolved to dc name and address) instead\n+\t   of specific server name. */\n+\tdomain_name = lp_workgroup();\n+\treturn torture_rpc_connect(torture, level, NULL, domain_name);\n }\n \n \n\n"}