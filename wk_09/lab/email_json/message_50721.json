{"category": "ham", "to_address": "\"Feng, Ken\" <ken.feng@citi.com>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] How do I avoid a loop?", "body": "Here is a slight variation.  The second line is unchanged from my\nprior solution but the first line is different.  The previous one I posted\nwas slightly more complex and took about 50% longer to run than\nthis one:\n\n   xx <- (cumsum(!x) + 1) * x\n   (seq_along(x) - match(xx, xx) + 1) * x\n\n> # performance testing\n>\n> f1 <- function(x) {\n+ xx <- cumsum(diff(c(FALSE, x)) > 0)\n+ (seq_along(x) - match(xx, xx) + 1) * x\n+ }\n>\n> f2 <- function(x) {\n+    xx <- (cumsum(!x) + 1) * x\n+    (seq_along(x) - match(xx, xx) + 1) * x\n+ }\n>\n>\n> f3 <- function(x) {\n+ j <- 0\n+ for(i in seq_along(x)) x[i] <- if (x[i]) j <- j+1 else j <- 0\n+ x\n+ }\n>\n> set.seed(1)\n> x <- sample(c(TRUE, FALSE), 100000, replace = TRUE)\n> system.time(out1 <- f1(x))\n   user  system elapsed\n   0.10    0.02    0.12\n> system.time(out2 <- f2(x))\n   user  system elapsed\n   0.07    0.01    0.08\n> system.time(out3 <- f3(x))\n   user  system elapsed\n   1.65    0.00    1.72\n> identical(out1, out2)\n[1] TRUE\n> identical(out1, out3)\n[1] TRUE\n\n\nOn 6/19/07, Gabor Grothendieck  wrote:\n> xx is 1 in every position of the first run of TRUE, 2 in every\n> position in the 2nd run of TRUE and so on.  The parenthesized\n> expression in the second line converts those to increasing\n> values and multiplying it by x zaps the garbage in the positions\n> that correspond to FALSE in x.\n>\n> xx <- cumsum(diff(c(FALSE, x)) > 0)\n> (seq_along(x) - match(xx, xx) + 1) * x\n>\n>\n> On 6/19/07, Feng, Ken  wrote:\n> > Hi,\n> >\n> > I start with an array of booleans:\n> >\n> >        x <- c( TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE );\n> >\n> > I want to define an y <- f(x) such that:\n> >\n> >        y <- c( 1, 2, 3, 0, 0, 1, 2, 0, 1 );\n> >\n> > In other words, do a cumsum when I see a TRUE, but reset to 0 if I see a FALSE.\n> >\n> > I know I can do this with a very slow and ugly loop or maybe use apply,\n> > but I was hoping there are some R experts out there who can show me\n> > a cleaner/more elegant solution?\n> >\n> > Thanks in advance.\n> >\n> > - Ken\n> >\n> > ______________________________________________\n> > R-help@stat.math.ethz.ch mailing list\n> > https://stat.ethz.ch/mailman/listinfo/r-help\n> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> > and provide commented, minimal, self-contained, reproducible code.\n> >\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}