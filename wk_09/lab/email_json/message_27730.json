{"category": "ham", "to_address": "Jeremy Allison <jra@samba.org>", "from_address": "\"Neal A. Lucier\" <nlucier@math.purdue.edu>", "subject": "Re: symlink failure when listing a dircetory in samba 3.0.25", "body": "Jeremy Allison wrote:\n > On Fri, May 11, 2007 at 10:40:08AM -0500, Gerald (Jerry) Carter wrote:\n >\n >>-----BEGIN PGP SIGNED MESSAGE-----\n >>Hash: SHA1\n >>\n >>Jeremy,\n >>\n >>Is this a change in behavior ?\n >>\n >>* create a symlink in a share to a directory that\n >>  has permissions that would deny a given user to\n >>  stat the link target\n >>\n >>* smbd removes the link from the list of files\n >>  in the output to smbclient and Windows 2003\n >>\n[stuff snipped as I don't really understand it]\n >>\n >>It seems to be that we should display the link anyways.\n >>Hide unreadable is not set.\n >\n >\n > Actually this isn't a change in behavior I think.\n >\n > What should we display if we can't stat a symlink target ?\n > Is is a link to a directory ? Is it a link to a file ?\n >\n > We don't know and can't guess - whatever we guess it'll be\n > wrong. I think we just have to filter it.\n >\n\nI think that filtering is the wrong conclusion to the fact that\nyou are unable to guess the possible type and or status of the\ntarget of a symlink.  My argument and subsequent example have to do\nwith just standard ugo UNIX permissions and might not apply in\nPosix.1e, NTFS, NFSv4, or other ACL regimes.  I'm not a programmer\nor an SMB/NTFS guru by any means.\n\nUser 'nlucier' makes symlinks to files and directories in /root,\nneither or which can be stated by the creator of the symlink or\nanyone who stats the symlink; however, the symlink itself is\ncreated with permiscous permissions and anyone can tell what\nthat it is a symlink and what its target is, and if they also\nhave abilites to stat the target then they can further determine\nif the target is a directory or a file.\n\nIn terms of icon choice in explorer.exe, it seems you need to\nexpress three states; 1) symlink can stat target, target is dir\n2) symlink can stat target, target is file 3) symlink can't\nstat target.  You could overload either the stat AND dir or\nstat AND file icon to also symbolize no stat of target.\n\nCan't stat target example; \"dir\" is a directory symlink and \"file\"\nis a file symlink (but since we can't stat who really knows?).\n\n% ln -s /root/file file\n% ln -s /root/dir/ dir/\n% ls -l file\nlrwxrwxrwx   1 nlucier  cstaff        10 May 11 14:20 file -> /root/file\n% ls -l dir\nlrwxrwxrwx   1 nlucier  cstaff         9 May 11 14:20 dir -> /root/dir\n\nCan stat target example; ls intelligently recognizes and informs the\nuser if the target is a file or a directory.\n\n% ln -s /etc/passwd file\n% ln -s /etc/init.d/ dir/\n% ls -l file\nlrwxrwxrwx   1 nlucier  cstaff        11 May 11 14:26 file -> /etc/passwd\n% ls -l dir\nlrwxrwxrwx   1 nlucier  cstaff        11 May 11 14:26 dir -> /etc/init.d/\n\nHow this actually maps into how new Windows symlinks work I have no clue.\n\nBut as a user (and an admin) I would like to be able to create and\nsee symlinks that point to nowhere on both *nix and samba/windows\nshares and partitions.\n\nNeal\n\n"}