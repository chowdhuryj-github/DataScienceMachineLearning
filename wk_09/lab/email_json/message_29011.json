{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Moritz Lenz <moritz@casella.verplant.org>", "subject": "Re: Is Perl 6 too late?", "body": "Thomas Wittek wrote:\n> chromatic schrieb:\n>> On Thursday 03 May 2007 03:06:43 Andrew Shitov wrote:\n>>> What is nedded is a very simple step:\n>> Contributors.\n> \n> And to attract contributors, you have to have a convincing vision.\n> I'm not sure, if the (current) Perl6 specs are convincing enough to\n> attract the developers out there.\n\nI think they are ;-)\n\n> But I also think that there is a great opportunity to make _big_ changes\n> to Perl to be even more competitive.\n\nI don't think that there is space for the changes you are implying in\nthe following paragraphs. Small changes are acceptable, of course.\n\n> But maybe Perl6 is probably too far defined to encounter big changes in\n> some critical aspects.\n\nRight ;-)\n\n> As Ruby and Python are getting more and more attraction [1][2] I think\n> they do something right, that Perl doesn't.\n> What I think where both (especially Python) do better is in readable code.\n> \n> What makes Perl hard to read is the excessive use of special characters\n> (/\\W/).\n\nI disagree: The make it look ugly, but not hard to read.\n\n> Global variables with cryptic names, that no beginner can make any sense\n> of by reading it. And after not working with \"$<\" for some months I\n> can't remember it either, although I've got quite some Perl experience.\n\nWell, most of them are gone or renamed to more readable ones in p6.\n\n> Additionally I'm not a friend of sigils: \n\nThen you shouldn't program in perl. Really.\n\n> I would also like semicolons to be optional. \n\nMost people don't ;-).\n\n> I really like the Python way of doing it: Set the variables type on the\n> assignment and remember it. The (fewer) operators now work according to\n> the type of the operands. No implicit (and error prone) type casting.\n> That way seems to be the best compromise of easiness and type safety.\n\nWell, if you like the python way, feel free to code in python.\nPerhaps some day it will be possible to mix them:\n\nuse python;\n# Write python code here\n\nDon't get me wrong, there's nothing bad in writing some critics, but\nyours is impossible to realize in Perl 6, and therefore are it's hard to\ncall it constructive.\n\nCheers,\nMoritz\n\n-- \nMoritz Lenz\nhttp://moritz.faui2k3.org/ |  http://perl-6.de/\n\n\n"}