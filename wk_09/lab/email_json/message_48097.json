{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Northstardomus <northstardomus@gmail.com>", "subject": "Re: Database insertion, escape issue", "body": "On Jun 14, 6:59 am, J...@Krynicky.cz (Jenda Krynicky) wrote:\n> From: Northstardomus \n>\n> > ...\n> >         $dbh->prepare('INSERT INTO area_status (areaID, survey_date,\n> > update_time, status ) VALUES (?,?,?,?)');\n> >         $dbh->execute('$values[0]', '$values[1]', '$values[2]',\n> > '$values[3]');\n>\n> Apart from the $sth already explained by others, there is one more\n> problem with this code. It seems you already found it as it is not\n> present in the examples you give in the later posts, but I'd like to\n> point it out anyway.\n>\n> You cannot use singlequotes around the $values[x] in the ->execute()\n> call. You'd insert not the values in the @values array, but the\n> literal dollar, \"values\", opening square brace, one and closing\n> brace. Try\n>\n>  @values = (1,2,3,4);\n>  print $values[1], \"\\n\";\n>  print '$values[1]', \"\\n\";\n>\n> Just for reference, you should not use doublequotes around them\n> either:\n>\n>  $dbh->execute(\"$values[0]\", \"$values[1]\", \"$values[2]\",\n>    \"$values[3]\");\n>\n> While this would work (in this case) it forces perl to make copies of\n> the values and possibly also an unnecessary number->string\n> conversion. I only mention this because I see things like this quite\n> often.\n>\n> Jenda\n> ===== J...@Krynicky.cz ===http://Jenda.Krynicky.cz=====\n> When it comes to wine, women and song, wizards are allowed\n> to get drunk and croon as much as they like.\n>         -- Terry Pratchett in Sourcery\n\nYes, I found that after looking at my database contents!\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}