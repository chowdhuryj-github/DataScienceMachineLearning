{"category": "ham", "to_address": "sugar@laptop.org", "from_address": "Simon McVittie <simon.mcvittie@collabora.co.uk>", "subject": "[sugar] Obtaining Buddy objects as contacts are encountered", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nAt the moment the Presence Service API assumes we're subscribed to the\npresence of every contact we'll ever encounter, which obviously can't scale to\na school.\n\nWhen child joins an activity we're in, the presence service needs to be able\nto give us a Buddy object for them without making network round-trips -\notherwise the activity will have no way to identify them. We can't just ignore\nthem (omit them from the GUI) until we've made network round-trips to ask\nthe server about them, because they might start participating in the activity\nbefore we get the server's reply, and it would be confusing to get messages\nfrom an apparently nonexistent buddy (also, activity authors are\nunlikely to handle this correctly).\n\nAt the same time, we don't want to have two Buddy objects in the PS process\nrepresenting the same child, and have to do some sort of coalescing process\nwhen we work out that they actually represent the same person; so from just\nthe information we immediately have when we first encounter someone,\nwe should be able to make the decision whether two contacts are in fact the\nsame.\n\nFor the server case, the JID is constructed as follows:\n\n\thex(sha1(public key)) + '@' + configured server\n\nTo avoid spoofing we need to require that the server will only create new\naccounts (or almost equivalently, allow login to an account) if the client can\ndemonstrate knowledge of a private key for which the public key's hex SHA-1\nis the username part of the desired JID.\n\nFor the link-local (mesh) case, I believe the idea is that the public key\nand other OLPC info is in the mDNS record, so by the time we can interact with\nsomeone, we already have all relevant information about them? If so, and we\nput the corresponding server-JID in the mDNS record, then we can again always\nknow which child we're talking to.\n\nAgain, to avoid spoofing we need to require that the mDNS record demonstrates\nknowledge of the private key; perhaps it could include a signature of the IP\naddress or IP:port or whatever, and a timestamp, made using the private key.\n\nGiven this, we should be able to create Buddy objects from arbitrary Telepathy\nhandles (a handle represents the unique ID on the instant messaging system)\nand know at least whether they're distinct; the Buddy object can then have\nsignals it emits as its alias, colour, etc. arrive. The worst case in the GUI\nwill be that a grey XO with no name appears and starts participating, and\nshortly afterwards, its colour changes to the right colour and it gains the\nright alias.\n\nThoughts?\n\tSimon\n- -- \nSimon McVittie, Collabora Ltd.: http://www.collabora.co.uk/\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net\n\niD8DBQFGQzsTWSc8zVUw7HYRAh0vAKC9jDBXbJRaLSV9+YMeF/SMdn/+aQCg7Tkh\n2QSiCi/K46rR+pRVEbOdb8k=\n=m749\n-----END PGP SIGNATURE-----\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}