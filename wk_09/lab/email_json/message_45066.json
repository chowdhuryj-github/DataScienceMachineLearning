{"category": "ham", "to_address": "Zack Weinberg <zackw@panix.com>", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] evaluating variables in the context of a data frame", "body": "On 6/8/2007 11:33 AM, Zack Weinberg wrote:\n> On 6/7/07, Prof Brian Ripley  wrote:\n>> >> f <- function(x, dat) evalq(x, dat)\n>> >> f(o, D)\n>> > Error in eval(expr, envir, enclos) : object \"o\" not found\n>> >> g <- function(x, dat) eval(x, dat)\n>> >> g(o, D)\n>> > Error in eval(x, dat) : object \"o\" not found\n>> >\n>> > What am I doing wrong?  This seems to be what the helpfiles say you do\n>> > to evaluate arguments in the context of a passed-in data frame...\n>>\n>> When you call f(o, D), the argument 'o' is evaluated in the current\n>> environment ('context' in R means something different).  Because of lazy\n>> evaluation, it is not evaluated until evalq is called, but it evaluated as\n>> if it was evaluated greedily.\n>>\n>> g(quote(o), D) will work.\n> \n> Thanks.\n> \n> After a bit more experimentation I figured out that this does what I want:\n> \n>> h <- function(x, d) eval(substitute(x), d, parent.frame())\n> \n> but I don't understand why the substitute() helps, or indeed why it\n> has any effect at all...\n\nWithin the evaluation frame of h, x is a promise to evaluate an \nexpression.  substitute(x) extracts the expression.  If you just use x, \nit gets evaluated in the frame from which h was called, rather than in a \nframe created from d.\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}