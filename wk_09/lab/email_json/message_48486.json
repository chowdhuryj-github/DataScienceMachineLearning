{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #43006] Tail call force-frees current context", "body": "On Saturday 09 June 2007 02:40:23 Bram Geron wrote:\n\n> The patch I attached should solve that. In a freshly created context,\n> the refcount is zero, and this increases it by one. I think incrementing\n> it is slightly better than directly assigning it a refcount of 1,\n> because that could cause bugs if we incremented the refcount before for\n> some mysterious reason. (far-fetched, I admit.)\n\nThanks, applied as r19019.\n\n> With the patch, [perl #42790] \"[BUG] Tailcall with slurpy argument\n> passing causes a memory leak\" is solved for me too.\n\nGreat!\n\nThere are other context memory leaks.  Valgrind is a great source of \nfrustration.  I tried calling Parrot_free_context() on ctxp->from_ctx and \nctxp->to_ctx within Parrot_free_context(), as it made sense to me, but that \ndidn't work so well.\n\nIf you understand this code well enough to have produced a successful patch \n(and you have), there's other investigation here....\n\n-- c\n\n"}