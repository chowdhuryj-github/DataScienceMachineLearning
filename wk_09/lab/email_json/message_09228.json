{"category": "ham", "to_address": "\"Katie L. Barbee\" <Katie@mmwebserv.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Where Clause Help.", "body": "On 4/18/07, Katie L. Barbee  wrote:\n> I believe this is a very simple question or at least I'm hoping ...\n>\n> I am trying to select items from a table where the miles field is not\n> null or blank and the below statement does not work.  Does anyone have\n> any suggestions?\n>\n> Thanks!\n>\n>\n>\n>             @resultkeys = (\"Date\",\"People\",\"Miles\",\"Savings\");\n>\n>             $sql = \"SELECT c.objectid,c.dateadded as\n> \\\"Date\\\",c.totalpeople as \\\"People\\\", \";\n>\n>             $sql .= \"c.miles as Miles, c.totalsaved as \\\"Savings\\\" \";\n>\n>             $sql .= \"FROM OWNER.CONFERENCE c\";\n>\n>             $sql .= \" WHERE c.miles <> \"\";\n>\n>             $sql .= \" ORDER BY c.datestart\";\n>\n>\n\nWell, part of your problem is that c.datestart is not in your query,\nso you can't sort on it.  You can use the \"is null\" comparison (I\nbelieve it is the same in all flavours of SQL) to test for null, I\ndon't know what flavor of SQL you are using, so I don't know if empty\nstring is '' or \"\", but I have preserved what you did.  I hope you are\nusing the DBI for this.  You can get more information by looking at\n$dbh->errstr after a failed $sth->execute or $sth->prepare.\n\nmy $sql = qq(\n    SELECT\n        c.objectid,\n        c.datestart as \"DateStart\"\n        c.dateadded as \"Date\",\n        c.totalpeople as \"People\",\n        c.miles as \"Miles\",\n        c.totalsaved as \"Savings\"\n    FROM owner.conference c\n    WHERE c.miles IS NOT NULL\n      AND c.miles != ''\n    ORDER BY c.datestart\n);\n\nmy $sth = $dbh->prepare($sql) or die $dbh->errstr;\n$sth->execute or die $dbh->errstr;\n\nwhile (my $row = $sth->fetchrow_hashref) {\n     print \"@{$row}{@resultkeys}\\n\";\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}