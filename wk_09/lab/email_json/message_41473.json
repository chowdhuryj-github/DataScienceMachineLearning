{"category": "ham", "to_address": "Ryan <cryan2@stny.rr.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: freeze after <STDIN>", "body": "On 6/3/07, Ryan  wrote:\nsnip\n> open F, \"JunkTestText.txt\";\n> local $/ = \"\\*\\*\\*\";\n> my @sections = ;\n> close F;\nsnip\n> When executed, it runs up to and including asking me for input from the\n> terminal.  When I enter a value for $patient (a 7-digit number) and\n> press enter, nothing happens.  The cursor goes down to the next line and\n> just waits.\nsnip\n\nThe Problem is in that section of code.  You did the right thing using\nlocal to limit the scope of $/, but failed to do the other necessary\nthing: add a block around the code to cause it to revert back.  This\nbeing Perl there are several solutions.  Here are few in order of my\npreference.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nprint \"use do to make the three steps into one\\n\";\nmy @sections1 = do {\n        open my $file, '<', 'JunkTestText.txt';\n        local $/ = '***';\n        <$file>;\n};\n\nprint map { \"[$_]\\n\" } @sections1;\n\nprint \"use a bare block to limit the scope\\n\";\nmy @sections2;\n{\n        open my $file, '<', 'JunkTestText.txt';\n        local $/ = '***';\n        @sections2 = <$file>;\n}\n\nprint map { \"[$_]\\n\" } @sections2;\n\nprint \"save to old value of \\$/ and put it back\\n\";\nmy $old_in_sep = $/;\n$/ = '***';\nopen my $file, '<', 'JunkTestText.txt';\nmy @sections3 = <$file>;\n#this was not necessary before because\n#the file handle closes when it goes\n#out of scope\nclose $file;\n$/ = $old_in_sep;\n\nprint map { \"[$_]\\n\" } @sections3;\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}