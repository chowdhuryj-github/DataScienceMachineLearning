{"category": "ham", "to_address": "Smylers <Smylers@stripey.com>", "from_address": "Mark Overmeer <mark@overmeer.net>", "subject": "Re: = at Start of Line ([svn:perl6-synopsis] r14421 - doc/trunk/design/syn)", "body": "> brian d foy writes:\n>> I doubt other languages will want to deal with this situation.\n\n* Smylers (Smylers@stripey.com) [070616 08:44]:\n> With these new Pod rules it's possible to entirely remove Pod from a\n> file without knowing _anything_ about the host language.  (It could\n> straightforwardly be done as an editor macro, for example.)  That\n> permits Pod to be used to document just about anything; all you need to\n> allow it is a filter that strips off all Pod before you do anything else\n> with the file.\n\nAnd then the main point: if you write documentation which is not\nrelated to Perl6 coding itself, do we really need to create just\nanother text processor?  There are already so many sofisticated\ntext processors available!\n\nWell, ok, if you \"get it for free\", like with POD(5), then take\nthat opportunity.  But if the life of ordinary programmers who write\ndocumentation is complicated just to provide this feature, we are IMO\non the wrong path.\n\nAnd why do you want easy to remove docs?  Perl6 is even nicer: you can\ndistribute it compiled; no program text and no docs!  Docs in code\nfiles are much less of a \"burden\" than in Perl5, so the need to strip\nthem from the code has deminished.\n\n> If Pod were to take notice of the host language's context throughout the\n> file then this would not be possible: every language which wished to\n> have Pod support would require its own Pod parser embedded within the\n> languge parser.  _That_ is orders of magnitude more complex than the\n> simplicity of filtering off all Pod first, and strikes me as something\n> other languages are much less likely to be bothered to do.\n\nOther languages already have their own documentation system. Why do you\nexpect them to use POD6?  Why should we design POD6 with this endlessly\nopen requirement in mind?  Let's rule the World!\n\nAll I try to achieve is the best possible set of documentation for\nend-users: consistent in structure and correct in content.  To achieve\nthis, I wish to keep the freedom and avoid the anacharchy.  Correctness\nautomatically improves where redundancy is removed.  But that requires\na closer doc/code entanglement than a lot of the experienced Perl people\nlike (==are used to).\n-- \n               MarkOv\n\n------------------------------------------------------------------------\n       Mark Overmeer MSc                                MARKOV Solutions\n       Mark@Overmeer.net                          solutions@overmeer.net\nhttp://Mark.Overmeer.net                   http://solutions.overmeer.net\n\n"}