{"category": "ham", "to_address": "Volker.Lendecke@SerNet.DE", "from_address": "James Peach <jpeach@samba.org>", "subject": "Re: idle_timeout processing in the parent smbd?", "body": "On Jun 4, 2007, at 5:01 AM, Volker Lendecke wrote:\n\n> On Fri, Jun 01, 2007 at 09:50:43AM -0700, James Peach wrote:\n>> Not sure about this. I think this depends on how you define idleness,\n>> see below.\n>\n> Recently I also had a quick chat with Tridge about adding\n> real idle events. For example disconnecting an idle LDAP\n> connection is nothing you want to spend time on if you're\n> really busy doing other things. Right now this is a normal\n> timed event that is run when it's time has come.\n\nYep, I don't believe that it is possible to do reliable idle events  \nwith a timed event.\n\n> I'm not\n> sure about the API that this would need, but if we added\n> that to lib/events.c we would have a good way to determine\n> if we have real work in the queue.\n\nHow can you distinguish between an event that represents real work and  \nan event that represents internal housekeeping?\n\n> What to others think about an idle event API that says\n> \"please run me every minute if you can, but every ten\n> minutes at least\" or something like this?\n\nThis seems like something that's generically useful. The hardest part  \naboout idle events is when the definition of idle depends on another  \nsubsystem. for example, it's quite easy for an LDAP subsystem to track  \nthe last time it was called and idle out that way. For exit on idle,  \nhowever, the idle event needs to be able to introspect other events  \nand figure out the last time they were idle.\n\n--\nJames Peach | jpeach@samba.org\n\n"}