{"category": "ham", "to_address": "\"Jenny Bryan\" <jenny@stat.ubc.ca>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] how to optionally include variables in a data.frame at\n\tassignment", "body": "How about this:\n\ndata.frame2 <- function(...) {\n\tL <- list(...)\n\tas.data.frame(L[!sapply(L, is.null)])\n}\n\n# test 1\ninclude <- FALSE\ndata.frame2(a = 1:3, junk = if (include) z, b = 3:1)\n\n# test 2\nz <- letters[1:3]\ninclude <- TRUE\ndata.frame2(a = 1:3, junk = if (include) z, b = 3:1)\n\n\nOn 6/13/07, Jenny Bryan  wrote:\n> I am creating a data.frame inside a function and the set of variables\n> to include depends on the current value of other variables.  Is there\n> a way to accomplish this in the original assignment?  Or must I first\n> create the core data.frame with the variables I always want and then\n> use if blocks to add other variables?\n>\n> Basically, I'm hoping for something like this (which does not work):\n>\n> newDat <- data.frame(x, y, if(zInclude) z else NULL)\n>\n> Thanks, Jenny\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}