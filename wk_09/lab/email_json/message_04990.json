{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22212 - in branches: SAMBA_3_0/source/libsmb\n\tSAMBA_3_0_25/source/libsmb", "body": "Author: jra\nDate: 2007-04-14 00:53:38 +0000 (Sat, 14 Apr 2007)\nNew Revision: 22212\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22212\n\nLog:\nCope with signature errors on sessionsetupX logins\nwhere the server just reflects our signature back\nto us. Allow the upper layer to see the real error.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/libsmb/clientgen.c\n   branches/SAMBA_3_0_25/source/libsmb/clientgen.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/libsmb/clientgen.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/clientgen.c\t2007-04-13 22:56:27 UTC (rev 22211)\n+++ branches/SAMBA_3_0/source/libsmb/clientgen.c\t2007-04-14 00:53:38 UTC (rev 22212)\n@@ -139,6 +139,26 @@\n \t}\n \n \tif (!cli_check_sign_mac(cli)) {\n+\t\t/*\n+\t\t * If we get a signature failure in sessionsetup, then\n+\t\t * the server sometimes just reflects the sent signature\n+\t\t * back to us. Detect this and allow the upper layer to\n+\t\t * retrieve the correct Windows error message.\n+\t\t */\n+\t\tif (CVAL(cli->outbuf,smb_com) == SMBsesssetupX &&\n+\t\t\t(smb_len(cli->inbuf) > (smb_ss_field + 8 - 4)) &&\n+\t\t\t(SVAL(cli->inbuf,smb_flg2) & FLAGS2_SMB_SECURITY_SIGNATURES) &&\n+\t\t\tmemcmp(&cli->outbuf[smb_ss_field],&cli->inbuf[smb_ss_field],8) == 0 &&\n+\t\t\tcli_is_error(cli)) {\n+\n+\t\t\t/*\n+\t\t\t * Reflected signature on login error. \n+\t\t\t * Set bad sig but don't close fd.\n+\t\t\t */\n+\t\t\tcli->smb_rw_error = READ_BAD_SIG;\n+\t\t\treturn True;\n+\t\t}\n+\n \t\tDEBUG(0, (\"SMB Signature verification failed on incoming packet!\\n\"));\n \t\tcli->smb_rw_error = READ_BAD_SIG;\n \t\tclose(cli->fd);\n\nModified: branches/SAMBA_3_0_25/source/libsmb/clientgen.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/libsmb/clientgen.c\t2007-04-13 22:56:27 UTC (rev 22211)\n+++ branches/SAMBA_3_0_25/source/libsmb/clientgen.c\t2007-04-14 00:53:38 UTC (rev 22212)\n@@ -117,6 +117,26 @@\n \t}\n \n \tif (!cli_check_sign_mac(cli)) {\n+\t\t/*\n+\t\t * If we get a signature failure in sessionsetup, then\n+\t\t * the server sometimes just reflects the sent signature\n+\t\t * back to us. Detect this and allow the upper layer to\n+\t\t * retrieve the correct Windows error message.\n+\t\t */\n+\t\tif (CVAL(cli->outbuf,smb_com) == SMBsesssetupX &&\n+\t\t\t(smb_len(cli->inbuf) > (smb_ss_field + 8 - 4)) &&\n+\t\t\t(SVAL(cli->inbuf,smb_flg2) & FLAGS2_SMB_SECURITY_SIGNATURES) &&\n+\t\t\tmemcmp(&cli->outbuf[smb_ss_field],&cli->inbuf[smb_ss_field],8) == 0 &&\n+\t\t\tcli_is_error(cli)) {\n+\n+\t\t\t/*\n+\t\t\t * Reflected signature on login error. \n+\t\t\t * Set bad sig but don't close fd.\n+\t\t\t */\n+\t\t\tcli->smb_rw_error = READ_BAD_SIG;\n+\t\t\treturn True;\n+\t\t}\n+\n \t\tDEBUG(0, (\"SMB Signature verification failed on incoming packet!\\n\"));\n \t\tcli->smb_rw_error = READ_BAD_SIG;\n \t\tclose(cli->fd);\n\n"}