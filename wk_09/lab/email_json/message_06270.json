{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Michael Adam <ma@sernet.de>", "subject": "Rev 5363: merge from upstream in\n\thttp://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/", "body": "At http://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/\n\n------------------------------------------------------------\nrevno: 5363\nrevision-id: ma@sernet.de-20070415225054-98f15a01f998d3c6\nparent: ma@sernet.de-20070415224610-fc21b5e8b650cff4\nparent: vlendec@samba.org-20070414110415-pcc5u5ltrtes11qn\ncommitter: Michael Adam \nbranch nick: SAMBA_3_0-registry.bzr\ntimestamp: Mon 2007-04-16 00:50:54 +0200\nmessage:\n  merge from upstream\nmodified:\n  REVISION                       REVISION-20060530022625-68239662668b41c3\n  source/lib/debug.c             debug.c-20060530022627-f23cb2ef8f91a8a6\n  source/libsmb/clientgen.c      clientgen.c-20060530022627-3aad65ce54001b6b\n  source/nsswitch/idmap.c        idmap.c-20061212152801-ke1ub3n5v1jjf8gy-1\n  source/nsswitch/winbindd.c     winbindd.c-20060530022627-8bb76c46bd1253ec\n  source/nsswitch/winbindd_cache.c winbindd_cache.c-20060530022627-45b83e217d38566d\n  source/smbd/process.c          process.c-20060530022627-8fe40017fe0e41ff\n    ------------------------------------------------------------\n    merged: vlendec@samba.org-20070414110415-pcc5u5ltrtes11qn\n    parent: vlendec@samba.org-20070414110156-dy0a166chepd8utj\n    committer: vlendec@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Sat 2007-04-14 06:04:15 -0500\n    message:\n      vlendec@samba.org (r22214)  2007-04-14 01:44:30 -0500 (Sat, 14 Apr 2007)\n          \n          Fix incompatible pointer type warnings. Simo, please check and merge to 3_0_25\n          if appropriate.\n          \n          Volker\n          \n    ------------------------------------------------------------\n    merged: vlendec@samba.org-20070414110156-dy0a166chepd8utj\n    parent: jra@samba.org-20070414050143-8qtyziv9z78jp4i6\n    committer: vlendec@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Sat 2007-04-14 06:01:56 -0500\n    message:\n      vlendec@samba.org (r22213)  2007-04-14 01:40:47 -0500 (Sat, 14 Apr 2007)\n          \n          We can't use become_root() here, as it does DEBUG()\n          itself. become_root_uid_only did not :-)\n          \n          Revert 21868, we need to find a better way.\n          \n          Volker\n          \n    ------------------------------------------------------------\n    merged: jra@samba.org-20070414050143-8qtyziv9z78jp4i6\n    parent: jra@samba.org-20070413231018-ceqp55p89wao4cb1\n    committer: jra@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Sat 2007-04-14 00:01:43 -0500\n    message:\n      jra@samba.org (r22212)  2007-04-13 19:53:38 -0500 (Fri, 13 Apr 2007)\n          \n          Cope with signature errors on sessionsetupX logins\n          where the server just reflects our signature back\n          to us. Allow the upper layer to see the real error.\n          Jeremy.\n          \n    ------------------------------------------------------------\n    merged: jra@samba.org-20070413231018-ceqp55p89wao4cb1\n    parent: jra@samba.org-20070413230750-83afp6hivtgnwx23\n    committer: jra@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Fri 2007-04-13 18:10:18 -0500\n    message:\n      jra@samba.org (r22211)  2007-04-13 17:56:27 -0500 (Fri, 13 Apr 2007)\n          \n          Don't return a value from void functions !\n          Jeremy.\n          \n    ------------------------------------------------------------\n    merged: jra@samba.org-20070413230750-83afp6hivtgnwx23\n    parent: jra@samba.org-20070413230259-01ilq20r9vo86gdy\n    committer: jra@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Fri 2007-04-13 18:07:50 -0500\n    message:\n      jra@samba.org (r22210)  2007-04-13 17:42:21 -0500 (Fri, 13 Apr 2007)\n          \n          Fix typo in testing for non-centry entries.\n          Jeremy.\n          \n    ------------------------------------------------------------\n    merged: jra@samba.org-20070413230259-01ilq20r9vo86gdy\n    parent: jra@samba.org-20070413050503-g5oyr7tnheeb3fc3\n    committer: jra@samba.org\n    branch nick: SAMBA_3_0.bzr\n    timestamp: Fri 2007-04-13 18:02:59 -0500\n    message:\n      jra@samba.org (r22209)  2007-04-13 17:29:50 -0500 (Fri, 13 Apr 2007)\n          \n          Fix the storage of time_t -> make it 64 bits (use the\n          same load/store function as NTTIME). Add a version number\n          string to the winbindd cache so we can tell if it needs\n          upgrading. THIS WILL DELETE ANY EXISTING winbindd_cache.tdb\n          on first startup regardless of offline auth status. Once\n          this is done we're in good shape though.\n          Jeremy.\n          \n=== modified file 'REVISION'\n--- a/REVISION\t2007-04-13 05:05:03 +0000\n+++ b/REVISION\t2007-04-14 11:04:15 +0000\n@@ -2,9 +2,9 @@\n URL: svn+ssh://svn.samba.org/home/svn/samba/branches/SAMBA_3_0\n Repository Root: svn+ssh://svn.samba.org/home/svn/samba\n Repository UUID: 0c0555d6-39d7-0310-84fc-f1cc0bd64818\n-Revision: 22207\n+Revision: 22214\n Node Kind: directory\n-Last Changed Author: jra\n-Last Changed Rev: 22207\n-Last Changed Date: 2007-04-12 20:46:47 -0500 (Thu, 12 Apr 2007)\n+Last Changed Author: vlendec\n+Last Changed Rev: 22214\n+Last Changed Date: 2007-04-14 01:44:30 -0500 (Sat, 14 Apr 2007)\n \n\n=== modified file 'source/lib/debug.c'\n--- a/source/lib/debug.c\t2007-04-06 05:01:25 +0000\n+++ b/source/lib/debug.c\t2007-04-14 11:01:56 +0000\n@@ -688,15 +688,20 @@\n \tint         maxlog;\n \tSMB_STRUCT_STAT st;\n \n+\t/*\n+\t *  We need to be root to check/change log-file, skip this and let the main\n+\t *  loop check do a new check as root.\n+\t */\n+\n+\tif( geteuid() != 0 )\n+\t\treturn;\n+\n \tif(log_overflow || !need_to_check_log_size() )\n \t\treturn;\n \n \tmaxlog = lp_max_log_size() * 1024;\n \n \tif( sys_fstat( x_fileno( dbf ), &st ) == 0 && st.st_size > maxlog ) {\n-\n-\t\tbecome_root();\n-\n \t\t(void)reopen_logs();\n \t\tif( dbf && get_file_size( debugf ) > maxlog ) {\n \t\t\tpstring name;\n@@ -709,8 +714,6 @@\n \t\t\t\t(void)rename(name, debugf);\n \t\t\t}\n \t\t}\n-\n-\t\tunbecome_root();\n \t}\n \n \t/*\n\n=== modified file 'source/libsmb/clientgen.c'\n--- a/source/libsmb/clientgen.c\t2007-03-30 15:36:50 +0000\n+++ b/source/libsmb/clientgen.c\t2007-04-14 05:01:43 +0000\n@@ -139,6 +139,26 @@\n \t}\n \n \tif (!cli_check_sign_mac(cli)) {\n+\t\t/*\n+\t\t * If we get a signature failure in sessionsetup, then\n+\t\t * the server sometimes just reflects the sent signature\n+\t\t * back to us. Detect this and allow the upper layer to\n+\t\t * retrieve the correct Windows error message.\n+\t\t */\n+\t\tif (CVAL(cli->outbuf,smb_com) == SMBsesssetupX &&\n+\t\t\t(smb_len(cli->inbuf) > (smb_ss_field + 8 - 4)) &&\n+\t\t\t(SVAL(cli->inbuf,smb_flg2) & FLAGS2_SMB_SECURITY_SIGNATURES) &&\n+\t\t\tmemcmp(&cli->outbuf[smb_ss_field],&cli->inbuf[smb_ss_field],8) == 0 &&\n+\t\t\tcli_is_error(cli)) {\n+\n+\t\t\t/*\n+\t\t\t * Reflected signature on login error. \n+\t\t\t * Set bad sig but don't close fd.\n+\t\t\t */\n+\t\t\tcli->smb_rw_error = READ_BAD_SIG;\n+\t\t\treturn True;\n+\t\t}\n+\n \t\tDEBUG(0, (\"SMB Signature verification failed on incoming packet!\\n\"));\n \t\tcli->smb_rw_error = READ_BAD_SIG;\n \t\tclose(cli->fd);\n\n=== modified file 'source/nsswitch/idmap.c'\n--- a/source/nsswitch/idmap.c\t2007-04-12 23:04:30 +0000\n+++ b/source/nsswitch/idmap.c\t2007-04-14 11:04:15 +0000\n@@ -828,7 +828,11 @@\n \t\twbret = winbind_lookup_sid(ctx, map->sid, &domname, &name, &sid_type);\n \t\twinbind_off();\n \t} else {\n-\t\twbret = winbindd_lookup_name_by_sid(ctx, map->sid, &domname, &name, &sid_type);\n+\t\tchar *tmp_dom, *tmp_name;\n+\t\twbret = winbindd_lookup_name_by_sid(ctx, map->sid, &tmp_dom,\n+\t\t\t\t\t\t    &tmp_name, &sid_type);\n+\t\tdomname = tmp_dom;\n+\t\tname = tmp_name;\n \t}\n \n \t/* check if this is a valid SID and then map it */\n\n=== modified file 'source/nsswitch/winbindd.c'\n--- a/source/nsswitch/winbindd.c\t2007-04-12 23:04:30 +0000\n+++ b/source/nsswitch/winbindd.c\t2007-04-13 23:02:59 +0000\n@@ -1081,6 +1081,11 @@\n \t\texit(1);\n \t}\n \t\n+\t/* Initialize cache (ensure version is correct). */\n+\tif (!initialize_winbindd_cache()) {\n+\t\texit(1);\n+\t}\n+\n \t/* React on 'smbcontrol winbindd reload-config' in the same way\n \t   as to SIGHUP signal */\n \tmessage_register(MSG_SMB_CONF_UPDATED, msg_reload_services, NULL);\n\n=== modified file 'source/nsswitch/winbindd_cache.c'\n--- a/source/nsswitch/winbindd_cache.c\t2007-04-13 05:05:03 +0000\n+++ b/source/nsswitch/winbindd_cache.c\t2007-04-13 23:10:18 +0000\n@@ -29,12 +29,53 @@\n #undef DBGC_CLASS\n #define DBGC_CLASS DBGC_WINBIND\n \n+#define WINBINDD_CACHE_VERSION 1\n+#define WINBINDD_CACHE_VERSION_KEYSTR \"WINBINDD_CACHE_VERSION\"\n+\n extern struct winbindd_methods reconnect_methods;\n extern BOOL opt_nocache;\n #ifdef HAVE_ADS\n extern struct winbindd_methods ads_methods;\n #endif\n \n+/*\n+ * JRA. KEEP THIS LIST UP TO DATE IF YOU ADD CACHE ENTRIES.\n+ * Here are the list of entry types that are *not* stored\n+ * as form struct cache_entry in the cache.\n+ */\n+\n+static const char *non_centry_keys[] = {\n+\t\"SEQNUM/\",\n+\t\"DR/\",\n+\t\"DE/\",\n+\t\"WINBINDD_OFFLINE\",\n+\tWINBINDD_CACHE_VERSION_KEYSTR,\n+\tNULL\n+};\n+\n+/************************************************************************\n+ Is this key a non-centry type ?\n+************************************************************************/\n+\n+static BOOL is_non_centry_key(TDB_DATA kbuf)\n+{\n+\tint i;\n+\n+\tif (kbuf.dptr == NULL || kbuf.dsize == 0) {\n+\t\treturn False;\n+\t}\n+\tfor (i = 0; non_centry_keys[i] != NULL; i++) {\n+\t\tsize_t namelen = strlen(non_centry_keys[i]);\n+\t\tif (kbuf.dsize < namelen) {\n+\t\t\tcontinue;\n+\t\t}\n+\t\tif (strncmp(non_centry_keys[i], (const char *)kbuf.dptr, namelen) == 0) {\n+\t\t\treturn True;\n+\t\t}\n+\t}\n+\treturn False;\n+}\n+\n /* Global online/offline state - False when online. winbindd starts up online\n    and sets this to true if the first query fails and there's an entry in\n    the cache tdb telling us to stay offline. */\n@@ -237,18 +278,11 @@\n }\n \n /*\n-  pull a time_t from a cache entry \n+  pull a time_t from a cache entry. time_t stored portably as a 64-bit time.\n */\n static time_t centry_time(struct cache_entry *centry)\n {\n-\ttime_t ret;\n-\tif (centry_check_bytes(centry, sizeof(time_t))) {\n-\t\tsmb_panic_fn(\"centry_time\");\n-\t\treturn (time_t)-1;\n-\t}\n-\tret = IVAL(centry->data, centry->ofs); /* FIXME: correct ? */\n-\tcentry->ofs += sizeof(time_t);\n-\treturn ret;\n+\treturn (time_t)centry_nttime(centry);\n }\n \n /* pull a string from a cache entry, using the supplied\n@@ -719,13 +753,13 @@\n }\n \n /*\n-  push a time_t into a centry \n+  push a time_t into a centry - use a 64 bit size.\n+  NTTIME here is being used as a convenient 64-bit size.\n */\n static void centry_put_time(struct cache_entry *centry, time_t t)\n {\n-\tcentry_expand(centry, sizeof(time_t));\n-\tSIVAL(centry->data, centry->ofs, t); /* FIXME: is this correct ?? */\n-\tcentry->ofs += sizeof(time_t);\n+\tNTTIME nt = (NTTIME)t;\n+\tcentry_put_nttime(centry, nt);\n }\n \n /*\n@@ -2164,6 +2198,61 @@\n \treturn True;\n }\n \n+/************************************************************************\n+ This is called by the parent to initialize the cache file.\n+ We don't need sophisticated locking here as we know we're the\n+ only opener.\n+************************************************************************/\n+\n+BOOL initialize_winbindd_cache(void)\n+{\n+\tBOOL cache_bad = True;\n+\tuint32 vers;\n+\n+\tif (!init_wcache()) {\n+\t\tDEBUG(0,(\"initialize_winbindd_cache: init_wcache failed.\\n\"));\n+\t\treturn False;\n+\t}\n+\n+\t/* Check version number. */\n+\tif (tdb_fetch_uint32(wcache->tdb, WINBINDD_CACHE_VERSION_KEYSTR, &vers) &&\n+\t\t\tvers == WINBINDD_CACHE_VERSION) {\n+\t\tcache_bad = False;\n+\t}\n+\n+\tif (cache_bad) {\n+\t\tDEBUG(0,(\"initialize_winbindd_cache: clearing cache \"\n+\t\t\t\"and re-creating with version number %d\\n\",\n+\t\t\tWINBINDD_CACHE_VERSION ));\n+\n+\t\ttdb_close(wcache->tdb);\n+\t\twcache->tdb = NULL;\n+\n+\t\tif (unlink(lock_path(\"winbindd_cache.tdb\")) == -1) {\n+\t\t\tDEBUG(0,(\"initialize_winbindd_cache: unlink %s failed %s \",\n+\t\t\t\tlock_path(\"winbindd_cache.tdb\"),\n+\t\t\t\tstrerror(errno) ));\n+\t\t\treturn False;\n+\t\t}\n+\t\tif (!init_wcache()) {\n+\t\t\tDEBUG(0,(\"initialize_winbindd_cache: re-initialization \"\n+\t\t\t\t\t\"init_wcache failed.\\n\"));\n+\t\t\treturn False;\n+\t\t}\n+\n+\t\t/* Write the version. */\n+\t\tif (!tdb_store_uint32(wcache->tdb, WINBINDD_CACHE_VERSION_KEYSTR, WINBINDD_CACHE_VERSION)) {\n+\t\t\tDEBUG(0,(\"initialize_winbindd_cache: version number store failed %s\\n\",\n+\t\t\t\ttdb_errorstr(wcache->tdb) ));\n+\t\t\treturn False;\n+\t\t}\n+\t}\n+\n+\ttdb_close(wcache->tdb);\n+\twcache->tdb = NULL;\n+\treturn True;\n+}\n+\n void cache_store_response(pid_t pid, struct winbindd_response *response)\n {\n \tfstring key_str;\n@@ -2360,12 +2449,21 @@\n \t\t\t\tsid, type);\n }\n \n-/* delete all centries that don't have NT_STATUS_OK set */\n+/*\n+ * The original idea that this cache only contains centries has\n+ * been blurred - now other stuff gets put in here. Ensure we\n+ * ignore these things on cleanup.\n+ */\n+\n static int traverse_fn_cleanup(TDB_CONTEXT *the_tdb, TDB_DATA kbuf, \n \t\t\t       TDB_DATA dbuf, void *state)\n {\n \tstruct cache_entry *centry;\n \n+\tif (is_non_centry_key(kbuf)) {\n+\t\treturn 0;\n+\t}\n+\n \tcentry = wcache_fetch_raw((char *)kbuf.dptr);\n \tif (!centry) {\n \t\treturn 0;\n\n=== modified file 'source/smbd/process.c'\n--- a/source/smbd/process.c\t2007-04-09 23:02:01 +0000\n+++ b/source/smbd/process.c\t2007-04-14 11:01:56 +0000\n@@ -1406,6 +1406,13 @@\n   \n \tupdate_monitored_printq_cache();\n   \n+\t/*\n+\t * Now we are root, check if the log files need pruning.\n+\t * Force a log file check.\n+\t */\n+\tforce_check_log_size();\n+\tcheck_log_size();\n+\n \t/* Send any queued printer notify message to interested smbd's. */\n \n \tprint_notify_send_messages(0);\n\n"}