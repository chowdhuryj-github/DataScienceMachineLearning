{"category": "ham", "to_address": "Will Coleda <will@coleda.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: vtable cleanup and questions", "body": "Will Coleda wrote:\n> On Apr 6, 2007, at 12:31 PM, Jonathan Worthington wrote:\n> \n>> Hi,\n>>\n>> I'm adding the new vtable entries required for PDD15. A few questions.\n>>\n>> 1) become_parent we agreed should go. It appears to be completely \n>> unused anywhere in the repository (languages included). Should we take \n>> that as evidence enough to just kill it, or go for a standard \n>> deprecation cycle?\n> \n> Standard cycle, which means it'll be gone in 11 days or so.\n\nYes, standard cycle. Get the deprecation note into DEPRECATED.pod before \nthe next release.\n\n>> 2) I think we agreed that the subclass vtable method should go too, \n>> but the current ParrotClass and ParrotObject use it, so we can't \n>> deprecate that until we deprecate those. Note that it is only \n>> impelmented in default.pmc.\n\nYes, it's adequately handled by add_parent, no need for both.\n\n>> 3) I just discovered we also have:\n>>\n>> PMC* new_singleton()\n>> PMC* get_anonymous_subclass()\n>>\n>> I marked them unspecified. Neither of them are implemented by any PMCs \n>> in the repository - not even default. Should they go?\n\nYes. I'd say they're a case of being overly prepared for possible future \nneeds. Both can be adequately handled by passing in options to 'new', or \n  (for singletons) altering the instantiation code in the class (if all \ninstantiations are singletons).\n\n>> 4) We have:\n>> PMC* get_attr(INTVAL idx)\n>> void set_attr(INTVAL idx, PMC* value) :write\n>> I guess, like subclass, these are things we plan to deprecate along \n>> with ParrotClass and ParrotObject once folks are all using the PDD 15 \n>> implementation, since attribute lookup is by name now? Or do we leave \n>> them for other languages that might want integer indexed attribute \n>> lookup, but just not implement them in our own class system?\n\nLet's go ahead and deprecate them (when we do the full change to PDD \n15). We can bring them back at some point if absolutely necessary.\n\nAllison\n\n"}