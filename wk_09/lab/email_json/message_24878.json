{"category": "ham", "to_address": "\"Karyn Williams\" <karyn@calarts.edu>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: Redirecting STDOUT & STDERR", "body": "On 5/7/07, Karyn Williams  wrote:\n\n> I have this script I have been working on where I need to redirect STDOUT\n> and STDERR to files at the beginning of the script and then back to default\n> (terminal) at the end of the script. I found an example on-line and used it\n> and it works, however it generates a warning when running my script. I\n\n> Name \"main::OLDOUT\" used only once: possible typo at ./match.pl line 37.\n\n> open (OLDOUT, \">&STDOUT\");\n\nYou could declare your bareword filehandles. Adding a line like this\nshould work.\n\n    our($OLDOUT, $OLDERR);  # \"declare\" OLDOUT and OLDERR\n\nBut the easiest way to solve this is probably to use ordinary\nvariables instead of your bareword filehandles:\n\n    open(my $oldout, \">&STDOUT\") or die \"Can't reopen STDOUT: $!\";\n\nHope this helps!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}