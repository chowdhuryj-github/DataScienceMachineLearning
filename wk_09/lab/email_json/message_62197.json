{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23706 - in branches/SAMBA_3_0/examples/scripts:\n\t. users_and_groups", "body": "Author: obnox\nDate: 2007-07-04 16:17:48 +0000 (Wed, 04 Jul 2007)\nNew Revision: 23706\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23706\n\nLog:\nAdd a script to create domainusers,-groups and -aliases.\nThis is done via rpc client. The main purpose is to\nbe able to fill a domain controller with a large number\nof users / groups easily. A the object names are\nbuilt as  where number ranges from a given\nstart number counting up until a given number of objects\nhas been created.\n\nIn a next step, I will submit scripts to add (many) users to\na group and to add a user to (many) groups.\n\nMichael\n\n\nAdded:\n   branches/SAMBA_3_0/examples/scripts/users_and_groups/\n   branches/SAMBA_3_0/examples/scripts/users_and_groups/createdomobj.pl\n\n\nChangeset:\nAdded: branches/SAMBA_3_0/examples/scripts/users_and_groups/createdomobj.pl\n===================================================================\n--- branches/SAMBA_3_0/examples/scripts/users_and_groups/createdomobj.pl\t2007-07-04 14:15:26 UTC (rev 23705)\n+++ branches/SAMBA_3_0/examples/scripts/users_and_groups/createdomobj.pl\t2007-07-04 16:17:48 UTC (rev 23706)\n@@ -0,0 +1,155 @@\n+#!/usr/bin/perl\n+\n+#\n+# createdomobj.pl\n+#\n+#    create single or continuously numbered domain \n+#    users/groups/aliases via rpc\n+#\n+# Copyright (C) Michael Adam  2007\n+#\n+# This program is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the Free\n+# Software Foundation; either version 2 of the License, or (at your option)\n+# any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+# more details.\n+#\n+# You should have received a copy of the GNU General Public License along with\n+# this program; if not, write to the Free Software Foundation, Inc., 675\n+# Mass Ave, Cambridge, MA 02139, USA.\n+#\n+\n+#\n+# WARNING: This script is still rather crude.\n+#\n+\n+use strict;\n+use Getopt::Std;\n+\n+\n+my $target_type\t= \"group\";\t\t# what type of object to create\n+my $rpc_cmd\t= \"createdom\".$target_type;\n+my $rpccli_cmd\t= \"rpcclient\";\n+\n+# defaults:\n+\n+my $server;\n+my $num_targets\t= 1;\n+my $startnum;\t\t\t\t# if empty, don't add numbers to prefix\n+my $prefix\t= $target_type;\t\t# name-prefix\n+my $path;\t\t\t\t# path to rpcclient command\n+my $rpccli_path\t= $rpccli_cmd;\n+my $creds;\n+\n+sub usage {\n+\tprint \"USAGE: $0 [-h] -S server -U user\\%pass [-p prefix] \\\\\\n\"\n+\t\t. \"\\t[-t {alias|group|user}] [-s startnum] [-n numobjs] [-P path] \\n\";\n+}\n+\n+# parse commandline:\n+\n+my %options = ();\n+getopts(\"U:t:S:s:n:p:P:h\", \\%options);\n+\n+if (exists($options{h})) {\n+\tusage();\n+\texit 0;\n+}\n+\n+if (exists($options{t})) {\n+\t$target_type = $options{t};\n+\tif ($target_type !~ /^(alias|user|group)$/) {\n+\t\tprint \"ERROR: invalid target type given\\n\";\n+\t\tusage();\n+\t\texit 1;\n+\t}\n+\t$rpc_cmd = \"createdom\".$target_type;\n+}\n+\n+if (exists($options{U})) {\n+\t$creds = \"-U $options{U}\";\n+\tif ($creds !~ '%') {\n+\t\tprint \"ERROR: you need to specify credentials in the form -U user\\%pass\\n\";\n+\t\tusage();\n+\t\texit 1;\n+\t}\n+}\n+else {\n+\tprint \"ERROR: mandatory argument '-U' missing\\n\";\n+\tusage();\n+\texit 1;\n+}\n+\n+if (exists($options{S})) {\n+\t$server = $options{S};\n+}\n+else {\n+\tprint \"ERROR: madatory argument '-S' missing\\n\";\n+\tusage();\n+\texit 1;\n+}\n+\n+if (exists($options{s})) {\n+\t$startnum = $options{s};\n+}\n+\n+if (exists($options{n})) {\n+\t$num_targets = $options{n};\n+}\n+\n+if (exists($options{p})) {\n+\t$prefix = $options{p};\n+}\n+\n+if (exists($options{P})) {\n+\t$path = $options{p};\n+\t$rpccli_path = \"$path/$rpccli_cmd\";\n+}\n+\n+if (@ARGV) {\n+\tprint \"ERROR: junk on the command line ('\" . join(\" \", @ARGV) . \"')...\\n\";\n+\tusage();\n+\texit 1;\n+}\n+\n+# rpc open/close functions:\n+\n+sub open_rpc_pipe {\n+\tprint \"opening rpc pipe\\n\";\n+\topen(IPC, \"| $rpccli_cmd $server $creds -d0\") or\n+\t\tdie \"error opening rpc pipe.\";\n+}\n+\n+sub close_rpc_pipe {\n+\tprint \"closing rpc pipe\\n\";\n+\tclose(IPC);\n+}\n+\n+# main:\n+\n+open_rpc_pipe();\n+\n+if (\"x$startnum\" eq \"x\") {\n+\tmy $target_name = $prefix;\n+\tprint \"creating $target_type $target_name\\n\";\n+\tprint IPC \"$rpc_cmd $target_name\\n\";\n+}\n+else {\n+\tfor (my $num = 1; $num <= $num_targets; ++$num) {\n+\t\tmy $target_name = sprintf \"%s%.05d\", $prefix, $startnum + $num - 1;\n+\t\tprint \"creating $target_type $target_name\\n\";\n+\t\tprint IPC \"$rpc_cmd $target_name\\n\";\n+\t\tif (($num) % 500 == 0) {\n+\t\t\tprintf(\"500 \".$target_type.\"s created\\n\");\n+\t\t\tclose_rpc_pipe();\n+\t\t\tsleep 2;\n+\t\t\topen_rpc_pipe();\n+\t\t}\n+\t}\n+}\n+close_rpc_pipe();\n+\n\n\nProperty changes on: branches/SAMBA_3_0/examples/scripts/users_and_groups/createdomobj.pl\n___________________________________________________________________\nName: svn:executable\n   + *\n\n"}