{"category": "ham", "to_address": "Joshua Isom <jrisom@gmail.com>", "from_address": "Andy Armstrong <andy@hexten.net>", "subject": "Re: memcpy", "body": "On 19 Jun 2007, at 08:48, Joshua Isom wrote:\n> On Jun 18, 2007, at 4:48 PM, Andy Lester wrote:\n>\n>> Is there a reason we use\n>>\n>>   memcpy( dest, src, sizeof(FOO) );\n>>\n>> instead of\n>>\n>>   *dest = *src;\n>>\n>> The latter should be the exact same code, but be much less likely  \n>> to be screwed up.\n>\n> No, they're extremely different.  In the first, the data of FOO is  \n> copied to dest, so dest can be modified without changing src.  In  \n> the second, src and dest point to the same data.  If you modify  \n> one, all are modified.\n\nNonsense :)\n\n>   If you want to clone something, or just move it to a new  \n> location, you can't just set the pointer.  If I'm missing  \n> something, well maybe someone who knows more can provide more advice.\n\nYou're thinking of pointer assignment. Andy is assigning the pointed- \nto structures. Consider with ints instead of structs\n\nint *p, *q;\n\nmemcpy(p, q, sizeof(int)); /* copy int at q into int at p */\n*p = *q;                   /* the same */\np = q;                     /* p and q point to same memory */\n\nYou're thinking of the third case - Andy is doing the second.\n\n-- \nAndy Armstrong, hexten.net\n\n"}