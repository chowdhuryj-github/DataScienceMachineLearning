{"category": "ham", "to_address": "edward baafi <edwardbaafi@gmail.com>", "from_address": "Ian Bicking <ianb@colorstudy.com>", "subject": "Re: [sugar] [pyxpcom] PyXPCOM viability and OLPC", "body": "edward baafi wrote:\n> This is interesting.. I use PyXpcom along with Xulrunner and currently\n> have a B2 XO for development..\n\nWell then, this may be leading in an obvious direction...\n\n> In terms of a stripped down Firefox vs. PyXPCOM, I don't see why this\n> would be an either/or as Firefox can be built with PyXPCOM support..\n> Of course you need a stripped down browser in terms of memory\n> footprint (the B2 only has 128MB of ram and the production version\n> should have 256) and you need to add extra functionality and tie it in\n> as a \"Sugar Activity\" so you should of course use python..\n> \n> So you can build a stripped down Firefox with PyXpcom support and add\n> features and tie into sugar with python, or you can build a Xulrunner\n> based browser from scratch with PyXpcom support.. Actually these\n> aren't too different as Firefox 3 was supposed to just be an app\n> running on top of Xulrunner although this feature shows up as \"At\n> Risk\" in the Firefox3 features list:\n> http://wiki.mozilla.org/Firefox3/Product_Requirements_Document#Gecko.2FPlatform \n> \n> \n> Given that there isn't much to the current \"Web Browser Activity\" on\n> the XO, I would think that you could build a Xulrunner based version\n> of that pretty quickly and then add features as needed (using PyXpcom\n> if you like) rather than starting with all the features of Firefox and\n> figuring out where to nip and tuck..  I like the Xulrunner plus\n> PyXpcom approach as it would allow others to write Xul apps rather\n> than use py/GTK which is probably too low level for many \"Activity\"\n> developers..\n\nI think my mention of Firefox may have just been a subconscious threat \n;) -- the advantage of it is more in things like a clear extension \nmechanism, and we need to extend the browser in *some* way.\n\nEven if PyXPCOM isn't terribly well documented and hard to build, that \ndoesn't seem like a blocker in itself.  At least in theory, we just have \nto get it to build once or twice (or however many build systems there \nare -- I guess there's two).  Actually having extension in Python will \nmake it a lot more accessible to many of the people who would actually \nlike to work on it now, since they are pretty much all familiar with \nPython.\n\nBut despite the fact that this seems like a good direction, it hasn't \nhappened yet because the setup is rather complex (as mentioned by you \nand several other people).  Probably just reaching the level of Hello \nWorld with PyXPCOM in the OLPC environment would be the biggest hurdle \n(or at least from there there would be much more satisfying work to be \ndone).  Could you help get us to that point?\n\n   Ian\n\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}