{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "\"Chris Bowring\" <chrisbowringgg@gmail.com>", "subject": "[R] ARIMA prediction", "body": "Hi\n\nThis is my first post to this group, so apologies in advance if I get it wrong.\n\nI would like to know how the prediction for arima models works in R. I\nhave a time series to which I fit an arima model, of varying AR and MA\norders. I then use the predict function to project it forward. I have\nalso written my own function to perform the prediction, but it gives\ndifferent answers to Arima.predict when the MA order is non-zero.\n\n\nI use the residuals from the arima function in my custom prediction\nfunction. I think this may be my problem. In the arima model:\n\n\nx{t} = a(1)x{t-1} + a(2)x{t-2} + ... + a(p)x{t-p} + e{t} + b(1)e{t-1}\n+ b(2)e{t-2} + ... + b(q)e{t-q}\n\n\nI am treating the residuals (i.e. arima(....)$res)  as the e{t} terms.\nThis gives different answers both in the region of the simulation and\nin the region of the prediction, so I'm guessing they're not what I\nthink they are. Indeed, after q intervals in the prediction, the\nprediction proceeds as I would expect, presumably because all the\nresiduals that have an effect are zero by this stage.\n\n\nAny help greatly appreciated - my code is below.\n\n\nThanks\n\n\nChris\n\n\n--------------------------------------------------------------\n\nThe code to produce the two predictions is as follows:\n\n\nAR <- 5\nMA <- 3\n\n\nsim <- arima.sim(list(order=c(AR,0,MA), ar=c(.1, .1, .1, .1, .1),\nma=c(.1, .1, .1)), n=100) + 50\n\n\nfit <- arima(sim, order = c(AR, 0, MA))\n\n\ncoefs <- fit$coef\nseries <- sim\ninnov <- fit$res\npred <- 100\n\n\nfit.predict <- predict(fit, n.ahead = pred)\n\n\nfit.r <- c(sim, fit.predict$pred)\n\n\nfit.custom <- ProjectCentralArima(AR = AR, MA = MA, d = 0, coefs =\ncoefs, series = sim, innov = innov, pred = pred)$ser\n\n\nProjectCentralArima function:\n\n\nProjectCentralArima <- function(AR, MA, d, coefs, series, innov, pred)\n{\n\n\n  if(d==0){\n    series.diff <- series\n  }\n  else {\n    series.diff <- diff(series, lag=1, differences=d)\n  }\n\n\n  intercept <- coefs[length(coefs)]\n\n\n  for(i in 1:pred){\n    temp <- intercept\n    l.s <- length(series.diff)\n    if(AR > 0){\n      for(j in 1:AR){\n        temp <- temp + coefs[j] * (series.diff[l.s - j + 1] -\nintercept)\n      }\n    }\n    if(MA > 0){\n      for(j in (1:MA)){\n        temp <- temp + coefs[j + AR] * innov[l.s - j + 1]\n      }\n    }\n\n\n    innov <- c(innov, 0)\n    series.diff <- c(series.diff, temp)\n  }\n\n\n  if(d==0){\n     series.undiff <- series.diff\n  }\n  else {\n    series.undiff <- diffinv(series.diff, lag=1, differences=d, xi =\nseries[1:d])\n  }\n\n\n  return(list(series = series.undiff, innov = innov))\n}\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}