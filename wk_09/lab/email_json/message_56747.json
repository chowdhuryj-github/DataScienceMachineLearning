{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "larry@cvs.develooper.com", "subject": "[svn:perl6-synopsis] r14425 - doc/trunk/design/syn", "body": "Author: larry\nDate: Wed Jun 27 13:39:48 2007\nNew Revision: 14425\n\nModified:\n   doc/trunk/design/syn/S12.pod\n\nLog:\nClarify that method hypers can be called in any order.\n\n\nModified: doc/trunk/design/syn/S12.pod\n==============================================================================\n--- doc/trunk/design/syn/S12.pod\t(original)\n+++ doc/trunk/design/syn/S12.pod\tWed Jun 27 13:39:48 2007\n@@ -12,9 +12,9 @@\n \n   Maintainer: Larry Wall \n   Date: 27 Oct 2004\n-  Last Modified: 15 May 2007\n+  Last Modified: 27 Jun 2007\n   Number: 12\n-  Version: 55\n+  Version: 56\n \n =head1 Overview\n \n@@ -833,6 +833,10 @@\n As with other forms of method call, the \"meth\" above may be replaced\n with a quoted string or variable to do various forms of indirection.\n \n+Note that, as with any hyper operator, the methods may be evaluated\n+in any order.  Use an explicit loop if you want to do something with\n+ordered side effects, such as I/O.\n+\n =head1 Multisubs and Multimethods\n \n The \"long name\" of a subroutine or method includes the type signature\n\n"}