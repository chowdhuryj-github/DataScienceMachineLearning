{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 378: fixed more warnings on 64 bit boxes in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 378\nrevision-id: tridge@samba.org-20070529035841-sdafwb84qcxmqt79\nparent: tridge@samba.org-20070529034830-j1dnavzkvremsri1\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-05-29 13:58:41 +1000\nmessage:\n  fixed more warnings on 64 bit boxes\nmodified:\n  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_io.c               ctdb_io.c-20070409200335-dzfc7f3rra5rcf60-1\n  common/ctdb_message.c          ctdb_message.c-20070208224107-9dnio7x7z33prrmt-1\n  common/ctdb_recoverd.c         recoverd.c-20070503213540-bvxuyd9jm1f7ig90-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tcp/tcp_io.c                   tcp_io.c-20061128004937-x70q1cu5xzg5g2tm-3\n=== modified file 'common/ctdb_client.c'\n--- a/common/ctdb_client.c\t2007-05-29 02:16:59 +0000\n+++ b/common/ctdb_client.c\t2007-05-29 03:58:41 +0000\n@@ -115,7 +115,7 @@\n \t}\n \n \tif (cnt < sizeof(*hdr)) {\n-\t\tDEBUG(0,(\"Bad packet length %u in client\\n\", cnt));\n+\t\tDEBUG(0,(\"Bad packet length %u in client\\n\", (unsigned)cnt));\n \t\tgoto done;\n \t}\n \tif (cnt != hdr->length) {\n@@ -527,7 +527,7 @@\n \t}\n \th->data    = data;\n \n-\tDEBUG(3,(\"ctdb_fetch_lock: key=%*.*s\\n\", key.dsize, key.dsize, \n+\tDEBUG(3,(\"ctdb_fetch_lock: key=%*.*s\\n\", (int)key.dsize, (int)key.dsize, \n \t\t (const char *)key.dptr));\n \n again:\n@@ -823,7 +823,7 @@\n \n \tif (data.dsize != sizeof(struct ctdb_statistics)) {\n \t\tDEBUG(0,(__location__ \" Wrong statistics size %u - expected %u\\n\",\n-\t\t\t data.dsize, sizeof(struct ctdb_statistics)));\n+\t\t\t (unsigned)data.dsize, (unsigned)sizeof(struct ctdb_statistics)));\n \t\t      return -1;\n \t}\n \n@@ -1330,7 +1330,7 @@\n \t}\n \tif (data.dsize != sizeof(uint32_t)) {\n \t\tDEBUG(0,(\"Bad control reply size in ctdb_get_debuglevel (got %u)\\n\",\n-\t\t\t      data.dsize));\n+\t\t\t (unsigned)data.dsize));\n \t\treturn -1;\n \t}\n \t*level = *(uint32_t *)data.dptr;\n@@ -1518,7 +1518,7 @@\n \n \tif (data.dsize < sizeof(uint32_t) ||\n \t    d->length != data.dsize) {\n-\t\tDEBUG(0,(\"Bad data size %u in traverse_handler\\n\", data.dsize));\n+\t\tDEBUG(0,(\"Bad data size %u in traverse_handler\\n\", (unsigned)data.dsize));\n \t\tstate->done = True;\n \t\treturn;\n \t}\n\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-05-29 03:48:30 +0000\n+++ b/common/ctdb_daemon.c\t2007-05-29 03:58:41 +0000\n@@ -142,9 +142,11 @@\n \t}\n \tres = ctdb_register_message_handler(ctdb, client, srvid, daemon_message_handler, client);\n \tif (res != 0) {\n-\t\tDEBUG(0,(__location__ \" Failed to register handler %llu in daemon\\n\", srvid));\n+\t\tDEBUG(0,(__location__ \" Failed to register handler %llu in daemon\\n\", \n+\t\t\t (unsigned long long)srvid));\n \t} else {\n-\t\tDEBUG(2,(__location__ \" Registered message handler for srvid=%llu\\n\", srvid));\n+\t\tDEBUG(2,(__location__ \" Registered message handler for srvid=%llu\\n\", \n+\t\t\t (unsigned long long)srvid));\n \t}\n \treturn res;\n }\n@@ -789,7 +791,7 @@\n \thdr = (struct ctdb_req_header *)talloc_size(mem_ctx, size);\n \tif (hdr == NULL) {\n \t\tDEBUG(0,(\"Unable to allocate packet for operation %u of length %u\\n\",\n-\t\t\t operation, length));\n+\t\t\t operation, (unsigned)length));\n \t\treturn NULL;\n \t}\n \ttalloc_set_name_const(hdr, type);\n@@ -825,7 +827,7 @@\n \thdr = (struct ctdb_req_header *)ctdb->methods->allocate_pkt(mem_ctx, size);\n \tif (hdr == NULL) {\n \t\tDEBUG(0,(\"Unable to allocate transport packet for operation %u of length %u\\n\",\n-\t\t\t operation, length));\n+\t\t\t operation, (unsigned)length));\n \t\treturn NULL;\n \t}\n \ttalloc_set_name_const(hdr, type);\n\n=== modified file 'common/ctdb_io.c'\n--- a/common/ctdb_io.c\t2007-05-27 22:37:54 +0000\n+++ b/common/ctdb_io.c\t2007-05-29 03:58:41 +0000\n@@ -85,7 +85,7 @@\n \n \tnread = read(queue->fd, queue->partial.data + queue->partial.length, num_ready);\n \tif (nread <= 0) {\n-\t\tDEBUG(0,(\"read error nread=%d\\n\", nread));\n+\t\tDEBUG(0,(\"read error nread=%d\\n\", (int)nread));\n \t\tgoto failed;\n \t}\n \n@@ -135,7 +135,7 @@\n \t\t\tqueue->partial.data = talloc_memdup(queue, data, nread);\n \t\t\tif (queue->partial.data == NULL) {\n \t\t\t\tDEBUG(0,(\"read error memdup partial failed for %u\\n\", \n-\t\t\t\t\t nread));\n+\t\t\t\t\t (unsigned)nread));\n \t\t\t\tgoto failed;\n \t\t\t}\n \t\t\tqueue->partial.length = nread;\n\n=== modified file 'common/ctdb_message.c'\n--- a/common/ctdb_message.c\t2007-05-04 01:41:29 +0000\n+++ b/common/ctdb_message.c\t2007-05-29 03:58:41 +0000\n@@ -79,7 +79,8 @@\n \n \tres = ctdb_dispatch_message(m->ctdb, m->srvid, m->data);\n \tif (res != 0) {\n-\t\tDEBUG(0, (__location__ \" Failed to dispatch message for srvid=%llu\\n\", m->srvid));\n+\t\tDEBUG(0, (__location__ \" Failed to dispatch message for srvid=%llu\\n\", \n+\t\t\t  (unsigned long long)m->srvid));\n \t}\n \ttalloc_free(m);\n }\n\n=== modified file 'common/ctdb_recoverd.c'\n--- a/common/ctdb_recoverd.c\t2007-05-29 03:48:30 +0000\n+++ b/common/ctdb_recoverd.c\t2007-05-29 03:58:41 +0000\n@@ -286,7 +286,7 @@\n \t\t\t\t\t\t db_id, max_rsn+1);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(0,(__location__ \" Failed to set rsn on node %u to %llu\\n\",\n-\t\t\t\t nodemap->nodes[i].vnn, max_rsn+1));\n+\t\t\t\t nodemap->nodes[i].vnn, (unsigned long long)max_rsn+1));\n \t\t\treturn -1;\n \t\t}\n \t}\n@@ -300,7 +300,7 @@\n \t\t\t\t\t\t db_id, max_rsn+1);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(0,(__location__ \" Failed to delete records on node %u with rsn below %llu\\n\",\n-\t\t\t\t nodemap->nodes[i].vnn, max_rsn+1));\n+\t\t\t\t nodemap->nodes[i].vnn, (unsigned long long)max_rsn+1));\n \t\t\treturn -1;\n \t\t}\n \t}\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-29 03:48:30 +0000\n+++ b/include/ctdb_private.h\t2007-05-29 03:58:41 +0000\n@@ -821,7 +821,7 @@\n #define CHECK_CONTROL_DATA_SIZE(size) do { \\\n  if (indata.dsize != size) { \\\n \t DEBUG(0,(__location__ \" Invalid data size in opcode %u. Got %u expected %u\\n\", \\\n-\t\t  opcode, indata.dsize, size));\t\t\t\t\\\n+\t\t  opcode, (unsigned)indata.dsize, (unsigned)size));\t\\\n \t return -1; \\\n  } \\\n  } while (0)\n\n=== modified file 'tcp/tcp_io.c'\n--- a/tcp/tcp_io.c\t2007-05-26 08:13:19 +0000\n+++ b/tcp/tcp_io.c\t2007-05-29 03:58:41 +0000\n@@ -47,7 +47,8 @@\n \t}\n \n \tif (cnt & (CTDB_TCP_ALIGNMENT-1)) {\n-\t\tDEBUG(0,(__location__ \" Length 0x%x not multiple of alignment\\n\", cnt));\n+\t\tDEBUG(0,(__location__ \" Length 0x%x not multiple of alignment\\n\", \n+\t\t\t (unsigned)cnt));\n \t\tgoto failed;\n \t}\n \n\n"}