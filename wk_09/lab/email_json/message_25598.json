{"category": "ham", "to_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "from_address": "Spencer Graves <spencer.graves@pdf.com>", "subject": "Re: [R] getting informative error messages", "body": "Dear Prof. Ripley: \n\n      1.  I very much appreciate your contributions to the R project. \n\n      2.  Whether with release 2.4.0 or earlier, I noticed that \n'traceback()' had become less informative.  This loss was more than \noffset when I learned to use the 'debug' function in the 'base' \npackage:  It increased my productivity so much that it helped complete \nmy transition from S-Plus:  The last few times I had to use S-Plus, I \nported them to R, got the code working using 'debug', then ported the \nresults back to S-Plus.  That was quicker for me than debugging directly \nin S-Plus.\n\n      3.  Thanks again for your many contributions to the R project and \nto my education more generally. \n\n      Best Wishes,\n      Spencer Graves\n\nProf Brian Ripley wrote:\n> It is not clear to me what you want here.\n>\n> Errors are tagged by a 'call', and f(1:3) is the innermost 'call' (special \n> primitives do not set a context and so do not count if you consider '[' \n> to be a function).\n>\n> The message could tell you what the type was, but it does not and we have \n> lost the pool of active contributors we once had to submit tested patches \n> for things like that.\n>\n>\n> On Mon, 7 May 2007, Tony Plate wrote:\n>\n>   \n>> Certain errors seem to generate messages that are less informative than\n>> most -- they just tell you which function an error happened in, but\n>> don't indicate which line or expression the error occurred in.\n>>\n>> Here's a toy example:\n>>\n>>     \n>>> f <- function(x) {a <- 1; y <- x[list(1:3)]; b <- 2; return(y)}\n>>> options(error=NULL)\n>>> f(1:3)\n>>>       \n>> Error in f(1:3) : invalid subscript type\n>>     \n>>> traceback()\n>>>       \n>> 1: f(1:3)\n>>     \n>> In this function, it's clear that the error is in subscripting 'x', but\n>> it's not always so immediately obvious in lengthier functions.\n>>\n>> Is there anything I can do to get a more informative error message in\n>> this type of situation?  I couldn't find any help in the section\n>> \"Debugging R Code\" in \"R-exts\" (or anything at all relevant in \"R-intro\").\n>>\n>> (Different values for options(error=...) and different formatting of the\n>> function made no difference.)\n>>\n>> -- Tony Plate\n>>\n>>     \n>>> sessionInfo()\n>>>       \n>> R version 2.5.0 (2007-04-23)\n>> i386-pc-mingw32\n>>\n>> locale:\n>> LC_COLLATE=English_United States.1252;LC_CTYPE=English_United\n>> States.1252;LC_MONETARY=English_United\n>> States.1252;LC_NUMERIC=C;LC_TIME=English_United States.1252\n>>\n>> attached base packages:\n>> [1] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"\n>> [7] \"base\"\n>>\n>> other attached packages:\n>> tap.misc\n>>    \"1.0\"\n>>     \n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n>>\n>>     \n>\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}