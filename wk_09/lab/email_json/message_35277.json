{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Darren Duncan <darren@DarrenDuncan.net>", "subject": "Re: [svn:perl6-synopsis] r14401 - doc/trunk/design/syn", "body": "At 4:00 PM -0700 5/23/07, Jonathan Lang wrote:\n>I see no mention of C<@@x> in this section.  I would assume that\n>C<@@x> may be bound to any object that does the C\n>role, with a note to the effect that the C role does\n>the C role (and thus anything that C<@x> may be bound to,\n>C<@@x> may also be bound to).\n\nI would argue that \"multi-dimensional\" is too generic a name for what \nyou describe.  In particular, I wouldn't say that something with that \nname \"does positional\", at least in a conventional sense.\n\nFor example, take a list of vectors, which is a multi-dimensional \nstructure.  Does it make sense to say that a bunch of vectors can be \nordered in a simple deterministic sense?  It doesn't make sense \nwithout context or parameters for the ordering.\n\nIf we have a multidim role, don't make it do positional.  Those can \nonly be combined on a case by case basis.  If you do make multidim \npositional, then you might as well say that every type does ordered, \nbecause that makes as much sense.\n\nAnd the latter is okay per se as long as we just know the purpose of \nsuch is to make a deterministic way to arrange a group of things into \nan array, but if it doesn't have meaning besides this, in the general \ncase.  Same as all does Str or all does Bool et al.\n\n-- Darren Duncan\n\n"}