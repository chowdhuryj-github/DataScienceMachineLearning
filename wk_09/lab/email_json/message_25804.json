{"category": "ham", "to_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: PIR syntax methods ambiguity", "body": "Patrick R. Michaud wrote:\n> \n> Personally, I would think that the standard approach for going from\n> a String PMC to a method invocation would be via the find_method\n> opcode.  But that's just me.\n\nThat goes back to the philosophical question of \"Is PIR a language to be \ngenerated by compilers, or is it a language for humans to use?\" It's \nabout half-way in between at the moment, and the conflict shows.\n\nFor generated code, it's no problem to require a methodname lookup for \nevery call. For hand-written code it's insanely annoying (which is the \nreason the syntactic sugar was introduced in the first place).\n\nPerhaps PIR's next stage of evolution is to split off into two \nlanguages, one for generation and one for humans.\n\nAllison\n\n"}