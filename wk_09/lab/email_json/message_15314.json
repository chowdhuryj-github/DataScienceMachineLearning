{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Stephen Tucker <brown_emu@yahoo.com>", "subject": "[R] regular expressions with grep() and negative indexing", "body": "Dear R-helpers,\n\nDoes anyone know how to use regular expressions to return vector elements\nthat don't contain a word? For instance, if I have a vector\n  x <- c(\"seal.0\",\"seal.1-exclude\")\nI'd like to get back the elements which do not contain the word \"exclude\",\nusing something like (I know this doesn't work) but:\n  grep(\"[^(exclude)]\",x)\n\nI can use \n  x[-grep(\"exclude\",x)]\nfor this case but then if I use this expression in a recursive function, it\nwill not work for instances in which the vector contains no elements with\nthat word. For instance, if I have\n  x2 <- c(\"dolphin.0\",\"dolphin.1\")\nthen\n  x2[-grep(\"exclude\",x2)]\nwill give me 'character(0)'\n\nI know I can accomplish this in several steps, for instance:\n  myfunc <- function(x) {\n    iexclude <- grep(\"exclude\",x)\n    if(length(iexclude) > 0) x2 <- x[-iexclude] else x2 <- x\n    # do stuff with x2 <...?\n  }\n\nBut this is embedded in a much larger function and I am trying to minimize\nintermediate variable assignment (perhaps a futile effort). But if anyone\nknows of an easy solution, I'd appreciate a tip.\n\nThanks very much!\n\nStephen\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}