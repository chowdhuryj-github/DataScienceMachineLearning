{"category": "ham", "to_address": "Jonathan Worthington <jonathan@jnthn.net>", "from_address": "Joshua Isom <jrisom@gmail.com>", "subject": "Re: [perl #41894] segfault happens when invoking poll op", "body": "\nOn Apr 14, 2007, at 7:44 AM, Jonathan Worthington wrote:\n\n> Hi,\n>\n> This patch broke the build on some platforms (Win32 with MSVC++ \n> included).\n>\n>>>  INTVAL\n>>>  PIO_poll(Interp *interp, PMC *pmc, INTVAL which, INTVAL sec, INTVAL\n>>> usec)\n>>>  {\n>>> +    if (pmc == PMCNULL) {\n>>> +     real_exception(interp, NULL, E_ValueError, \"Can't poll NULL\n>>> pmc\");\n>>> +    }\n>>>      ParrotIOLayer * const l = PMC_struct_val(pmc);\n>>>      ParrotIO * const io = PMC_data0(pmc);\n>>>\n> Under C89, declarations must come first. Fixed in r18187.\n>\n> Thanks,\n>\n> Jonathan\n>\n\nWouldn't it be preferable to add a check to ops2c for all 'in' pmc's to \nmake sure they are not null?  That would help prevent errors like this \nfrom popping up easily, and just require that all C code using the \nfunctions must check for it being valid before calling the function.\n\n"}