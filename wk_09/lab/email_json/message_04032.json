{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22206 - in branches/SAMBA_3_0/source/nsswitch: .", "body": "Author: jra\nDate: 2007-04-13 01:00:44 +0000 (Fri, 13 Apr 2007)\nNew Revision: 22206\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22206\n\nLog:\nAdded boilerplate to be filled in for other validation functions.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c\t2007-04-13 00:39:06 UTC (rev 22205)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_cache.c\t2007-04-13 01:00:44 UTC (rev 22206)\n@@ -2730,61 +2730,224 @@\n \n static int validate_loc_pol(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t(void)centry_nttime(centry);\n+\t(void)centry_nttime(centry);\n+\t(void)centry_uint16(centry);\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_loc_pol: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_pwd_pol(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_pwd_pol: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_cred(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_cred: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_ul(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_ul: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_gl(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_gl: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_ug(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_ug: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_ua(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_ua: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_gm(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_gm: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_dr(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_dr: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_de(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_de: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_trustdoms(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tstruct cache_entry *centry = create_centry_validate(keystr, dbuf);\n+\n+\tif (!centry) {\n+\t\treturn 1;\n+\t}\n+\n+\t/* FIXME - fill in details here... */\n+\n+\tcentry_free(centry);\n+\n+\tif (bad_cache_entry) {\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_trustdoms: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n static int validate_offline(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf)\n {\n+\tif (dbuf.dsize != 4) {\n+\t\tDEBUG(0,(\"validate_offline: Corrupt cache for key %s (len %u != 4) ?\\n\",\n+\t\t\t\tkeystr, (unsigned int)dbuf.dsize ));\n+\t\tbad_cache_entry = True;\n+\t\treturn 1;\n+\t}\n+\tDEBUG(10,(\"validate_offline: %s ok\\n\", keystr));\n \treturn 0;\n }\n \n\n"}