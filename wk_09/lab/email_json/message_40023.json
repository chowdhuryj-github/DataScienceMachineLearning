{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Darren Duncan <darren@DarrenDuncan.net>", "subject": "propose renaming Hash to Dict", "body": "I decided to bring out this Hash->Dict topic in a different thread \nfrom the thread on Synopsis r14407 about Object->Universal since I \nconsider them separate though tangential matters that should be \nargued on their individual merits.\n\nIn the interest of that Perl data types are better off being named \nprimarily after their meaning rather than their implementation, \nprobably the current worst offender is Hash.\n\nBarring some better name, I highly recommend/propose renaming Hash to Dict.\n\nThe term Dict (as a short form of \"dictionary\") is well understood by \ngeneral people and is the term used for associative arrays in some \nother languages, so it is easy to learn, and easy to explain to \npeople in Learning Perl.\n\nThe term Dict is easier for new people to Perl, either new \nprogrammers or visitors from other languages, to learn than Hash is. \nIt allows more self-documenting code where one is used.  And writing \nLearning Perl should be easier.\n\nFor Perl 5 people, it should be very easy to adapt, or for the most \npart they may not notice any difference save for documentation \nreferences.\n\nYou also have equal huffmanization since the terms Hash and Dict are \nboth of the same length, and they are also equally easy to type.\n\nAnd aside from the 4 letter word, all the other details associated \nwith hashes, eg the % sigil and {} constructor, and parts named \nkeys,values,pairs,kv et al can/should remain the same as they are.\n\nIn fact, since many users of Perl don't refer to the data type by the \nname Hash but rather just by % or {}, the change may not take from \ntheir useability at all or they may not even notice that a change \noccurred at all, so easy to adapt.\n\nOf course, if that change is made, KeyHash should be renamed to \nKeyDict, and so forth.\n\nAfter this change, the term Hash is then freed up to be used more \nspecifically to describe an implementation detail of something and/or \nhashing functions et al.\n\nI think this change would be a good thing.\n\nFeedback is appreciated, either pro or con.\n\n-- Darren Duncan\n\n"}