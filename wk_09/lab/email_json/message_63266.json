{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Ray <olson.ray@gmail.com>", "subject": "GetOptions with dynamic set of options", "body": "Hi,\nI'm trying to build a generic Parsing Arguments functions that would\nbe driven by an array of possible options that is defined by a\nspecific program. I'm trying to use this feature of GetOptions:\n\nmy %h = ();\nGetOptions (\\%h, 'length=i');       # will store in $h{length}\n\nBut what I would like to do is to not have to hard code the 'length=i'\noption directly in the argument for GetOptions, but rather this be\nbased on some list. Here is what I would like to do (but the options\npart is not working). Anyone have any suggestions or recommendations\n(maybe I'm going at this all wrong)?\n\n\nuse Getopt::Long;\nuse Data::Dumper qw(Dumper);\nour %MyArgs = ();\nour %OptList = ();\nsub ParseArgs {\n\tGetOptions(%OptList) or Getopt::Long::HelpMessage(2);\n}\n\n\n@GlobalSwitches = (\"test\",\"showlog\");       # These will be available\nto any program\n@LocalSwitches = (\"noadd\", \"noemail\");     # These will be placed in\nan ini file\n@OptionList = (\"strategy\",\"country\");          # These will be placed\nin an ini file\n# strategy option could contain: \"LT\" or \"MT\" or \"ST\" or \"ALL\"\n# country option could contain a ISO country code, I would like to\nsupport multiple values\n\n@SwitchList = (@GlobalSwitches, @LocalSwitches);\n\nforeach my $switch (@SwitchList) {$OptList{$switch} = \\\n$MyArgs{$switch}}\nprint \"Available command line args \\n\" . Dumper(%MyArgs) ;\n\nforeach my $option (@OptionList) {$OptList{$option} = \\\n$MyArgs{$option}}\nprint \"Available command line args is now \\n\" . Dumper(%MyArgs) ;\n\nParseArgs;\n\n# Switch Results\nprint \"loading into DB is turned OFF\\n\" if $MyArgs{noadd};\nprint \"E-mailing results is turned OFF\\n\" if $MyArgs{noemail};\nprint \"Running in TEST Mode\\n\" if $MyArgs{test};\nprint \"Running in SHOWLOG Mode\\n\" if $MyArgs{showlog};\n\n#Option Results\nprint \"Strategy is: $MyArgs{strategy} \\n\" if $MyArgs{strategy};\nprint \"Country is: $MyArgs{country} \\n\" if $MyArgs{country};\n\nexit;\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}