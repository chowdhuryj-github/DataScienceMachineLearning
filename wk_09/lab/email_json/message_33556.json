{"category": "ham", "to_address": "sugar@laptop.org", "from_address": "Simon McVittie <simon.mcvittie@collabora.co.uk>", "subject": "[sugar] [PATCH] sugar.presence.presenceservice: Add\n\tget_buddy_by_telepathy_handle()", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n- ---\n sugar/presence/presenceservice.py |   26 ++++++++++++++++++++++++++\n 1 files changed, 26 insertions(+), 0 deletions(-)\n\ndiff --git a/sugar/presence/presenceservice.py b/sugar/presence/presenceservice.py\nindex 1bc9a57..fc9d13e 100644\n- --- a/sugar/presence/presenceservice.py\n+++ b/sugar/presence/presenceservice.py\n@@ -317,6 +317,32 @@ class PresenceService(gobject.GObject):\n             return None\n         return self._new_object(buddy_op)\n \n+    def get_buddy_by_telepathy_handle(self, tp_conn_name, tp_conn_path,\n+                                      handle):\n+        \"\"\"Retrieve single Buddy object for the given public key\n+\n+        :Parameters:\n+            `tp_conn_name` : str\n+                The well-known bus name of a Telepathy connection\n+            `tp_conn_path` : dbus.ObjectPath\n+                The object path of the Telepathy connection\n+            `handle` : int or long\n+                The handle of a Telepathy contact on that connection,\n+                of type HANDLE_TYPE_CONTACT. This may not be a\n+                channel-specific handle.\n+        :Returns: the Buddy object, or None if the buddy is not found\n+        \"\"\"\n+        try:\n+            buddy_op = self._ps.GetBuddyByTelepathyHandle(tp_conn_name,\n+                                                          tp_conn_path,\n+                                                          handle)\n+        except dbus.exceptions.DBusException, err:\n+            _logger.warn('Unable to retrieve buddy handle for handle %u at '\n+                         'conn %s:%s from presence service: %s',\n+                         handle, tp_conn_name, tp_conn_path, err)\n+            return None\n+        return self._new_object(buddy_op)\n+\n     def get_owner(self):\n         \"\"\"Retrieves the laptop \"owner\" Buddy object.\"\"\"\n         try:\n- -- \n1.5.2-rc3.GIT\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net\n\niD8DBQFGUYHTWSc8zVUw7HYRAhnpAJ0WQ/tz+XSggqetV5Om0NYtKBgh6wCgx0qY\nY6dUeC761Cf0cejs1qaQHgM=\n=1nJJ\n-----END PGP SIGNATURE-----\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}