{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23336 - in branches/SAMBA_3_0_26/source: . auth\n\tinclude nsswitch passdb rpc_server utils", "body": "Author: obnox\nDate: 2007-06-04 12:29:15 +0000 (Mon, 04 Jun 2007)\nNew Revision: 23336\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23336\n\nLog:\nMerge r20824 from 3_0: \n\nSend access to the trusted domain passwords through the pdb backend.\n\nI did not yet find the time to implement the next step: trusted\ndomain passwords support in pdb_ldap. But at I wanted to have the\ninfrastructure available at least.\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/Makefile.in\n   branches/SAMBA_3_0_26/source/auth/auth_domain.c\n   branches/SAMBA_3_0_26/source/auth/auth_util.c\n   branches/SAMBA_3_0_26/source/include/passdb.h\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_ads.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_passdb.c\n   branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\n   branches/SAMBA_3_0_26/source/passdb/passdb.c\n   branches/SAMBA_3_0_26/source/passdb/pdb_interface.c\n   branches/SAMBA_3_0_26/source/passdb/secrets.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_lsa_nt.c\n   branches/SAMBA_3_0_26/source/utils/net_rpc.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/Makefile.in\n===================================================================\n--- branches/SAMBA_3_0_26/source/Makefile.in\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/Makefile.in\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -642,6 +642,7 @@\n TOOL_OBJ = client/smbctool.o client/clitar.o $(PARAM_OBJ) $(LIBSMB_OBJ) \\\n \t     $(LIB_NONSMBD_OBJ) $(KRBCLIENT_OBJ) \\\n              $(READLINE_OBJ) $(POPT_LIB_OBJ) $(SECRETS_OBJ) \\\n+             $(PASSDB_OBJ) $(SMBLDAP_OBJ) $(GROUPDB_OBJ) $(LDB_OBJ) \\\n \t     $(DISPLAY_SEC_OBJ)\n \n NET_OBJ1 = utils/net.o utils/net_ads.o utils/net_domain.o utils/net_help.o \\\n\nModified: branches/SAMBA_3_0_26/source/auth/auth_domain.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/auth/auth_domain.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/auth/auth_domain.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -408,8 +408,8 @@\n \t * No need to become_root() as secrets_init() is done at startup.\n \t */\n \n-\tif (!secrets_fetch_trusted_domain_password(user_info->domain, &trust_password,\n-\t\t\t\t&sid, &last_change_time)) {\n+\tif (!pdb_get_trusteddom_pw(user_info->domain, &trust_password,\n+\t\t\t\t   &sid, &last_change_time)) {\n \t\tDEBUG(0, (\"check_trustdomain_security: could not fetch trust \"\n \t\t\t  \"account password for domain %s\\n\",\n \t\t\t  user_info->domain));\n\nModified: branches/SAMBA_3_0_26/source/auth/auth_util.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/auth/auth_util.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/auth/auth_util.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -1669,8 +1669,7 @@\n \t\tbecome_root();\n \t\tDEBUG (5,(\"is_trusted_domain: Checking for domain trust with \"\n \t\t\t  \"[%s]\\n\", dom_name ));\n-\t\tret = secrets_fetch_trusted_domain_password(dom_name, NULL,\n-\t\t\t\t\t\t\t    NULL, NULL);\n+\t\tret = pdb_get_trusteddom_pw(dom_name, NULL, NULL, NULL);\n \t\tunbecome_root();\n \t\tif (ret)\n \t\t\treturn True;\n\nModified: branches/SAMBA_3_0_26/source/include/passdb.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/passdb.h\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/include/passdb.h\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -400,6 +400,19 @@\n \tBOOL (*rid_algorithm)(struct pdb_methods *methods);\n \tBOOL (*new_rid)(struct pdb_methods *methods, uint32 *rid);\n \n+\n+\tBOOL (*get_trusteddom_pw)(struct pdb_methods *methods,\n+\t\t\t\t  const char *domain, char** pwd, \n+\t\t\t\t  DOM_SID *sid, time_t *pass_last_set_time);\n+\tBOOL (*set_trusteddom_pw)(struct pdb_methods *methods, \n+\t\t\t\t  const char* domain, const char* pwd,\n+\t        \t  \t  const DOM_SID *sid);\n+\tBOOL (*del_trusteddom_pw)(struct pdb_methods *methods, \n+\t\t\t\t  const char *domain);\n+\tNTSTATUS (*enum_trusteddoms)(struct pdb_methods *methods,\n+\t\t\t\t     TALLOC_CTX *mem_ctx, uint32 *num_domains,\n+\t\t\t\t     struct trustdom_info ***domains);\n+\n \tvoid *private_data;  /* Private data of some kind */\n \t\n \tvoid (*free_private_data)(void **);\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_ads.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_ads.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_ads.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -88,7 +88,7 @@\n \t\tDOM_SID sid;\n \t\ttime_t last_set_time;\n \n-\t\tif ( !secrets_fetch_trusted_domain_password( domain->name, &ads->auth.password, &sid, &last_set_time ) ) {\n+\t\tif ( !pdb_get_trusteddom_pw( domain->name, &ads->auth.password, &sid, &last_set_time ) ) {\n \t\t\tads_destroy( &ads );\n \t\t\treturn NULL;\n \t\t}\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_passdb.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_passdb.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_passdb.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -413,8 +413,7 @@\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n-\tnt_status = secrets_trusted_domains(tmp_ctx, num_domains,\n-\t\t\t\t\t    &domains);\n+\tnt_status = pdb_enum_trusteddoms(tmp_ctx, num_domains, &domains);\n \tif (!NT_STATUS_IS_OK(nt_status)) {\n \t\tTALLOC_FREE(tmp_ctx);\n \t\treturn nt_status;\n\nModified: branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -178,8 +178,7 @@\n \t/* 5. Trusted domains as such, to me it looks as if members don't do\n               this, tested an XP workstation in a NT domain -- vl */\n \n-\tif (IS_DC && (secrets_fetch_trusted_domain_password(name, NULL,\n-\t\t\t\t\t\t\t    &sid, NULL))) {\n+\tif (IS_DC && (pdb_get_trusteddom_pw(name, NULL, &sid, NULL))) {\n \t\t/* Swap domain and name */\n \t\ttmp = name; name = domain; domain = tmp;\n \t\ttype = SID_NAME_DOMAIN;\n@@ -592,9 +591,9 @@\n \t\t * and for SIDs that have 4 sub-authorities and thus look like\n \t\t * domains */\n \n-\t\tif (!NT_STATUS_IS_OK(secrets_trusted_domains(mem_ctx,\n-\t\t\t\t\t\t\t     &num_domains,\n-\t\t\t\t\t\t\t     &domains))) {\n+\t\tif (!NT_STATUS_IS_OK(pdb_enum_trusteddoms(mem_ctx,\n+\t\t\t\t\t\t          &num_domains,\n+\t\t\t\t\t\t          &domains))) {\n \t\t\treturn False;\n \t\t}\n \n\nModified: branches/SAMBA_3_0_26/source/passdb/passdb.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/passdb/passdb.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/passdb/passdb.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -1517,3 +1517,46 @@\n \n \treturn True;\n }\n+\n+\n+/*******************************************************************\n+ Wrapper around retrieving the trust account password\n+*******************************************************************/\n+\n+BOOL get_trust_pw(const char *domain, uint8 ret_pwd[16], uint32 *channel)\n+{\n+\tDOM_SID sid;\n+\tchar *pwd;\n+\ttime_t last_set_time;\n+                                                                                                                     \n+\t/* if we are a DC and this is not our domain, then lookup an account\n+\t\tfor the domain trust */\n+                                                                                                                     \n+\tif ( IS_DC && !strequal(domain, lp_workgroup()) && lp_allow_trusted_domains() ) {\n+\t\tif (!pdb_get_trusteddom_pw(domain, &pwd, &sid, &last_set_time)) {\n+\t\t\tDEBUG(0, (\"get_trust_pw: could not fetch trust \"\n+\t\t\t\t\"account password for trusted domain %s\\n\",\n+\t\t\t\tdomain));\n+\t\t\treturn False;\n+\t\t}\n+                                                                                                                     \n+\t\t*channel = SEC_CHAN_DOMAIN;\n+\t\tE_md4hash(pwd, ret_pwd);\n+\t\tSAFE_FREE(pwd);\n+\n+\t\treturn True;\n+\t}\n+                                                                                                                     \n+\t/* Just get the account for the requested domain. In the future this\n+\t * might also cover to be member of more than one domain. */\n+                                                                                                                     \n+\tif (secrets_fetch_trust_account_password(domain, ret_pwd,\n+\t\t\t\t\t\t&last_set_time, channel))\n+\t\treturn True;\n+\n+\tDEBUG(5, (\"get_trust_pw: could not fetch trust account \"\n+\t\t\"password for domain %s\\n\", domain));\n+\treturn False;\n+}\n+\n+/* END */\n\nModified: branches/SAMBA_3_0_26/source/passdb/pdb_interface.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/passdb/pdb_interface.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/passdb/pdb_interface.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -2023,6 +2023,77 @@\n }\n \n /*******************************************************************\n+ trustodm methods\n+ *******************************************************************/\n+\n+BOOL pdb_get_trusteddom_pw(const char *domain, char** pwd, DOM_SID *sid, \n+\t\t\t   time_t *pass_last_set_time)\n+{\n+\tstruct pdb_methods *pdb = pdb_get_methods();\n+\treturn pdb->get_trusteddom_pw(pdb, domain, pwd, sid, \n+\t\t\tpass_last_set_time);\n+}\n+\n+BOOL pdb_set_trusteddom_pw(const char* domain, const char* pwd,\n+\t\t\t   const DOM_SID *sid)\n+{\n+\tstruct pdb_methods *pdb = pdb_get_methods();\n+\treturn pdb->set_trusteddom_pw(pdb, domain, pwd, sid);\n+}\n+\n+BOOL pdb_del_trusteddom_pw(const char *domain)\n+{\n+\tstruct pdb_methods *pdb = pdb_get_methods();\n+\treturn pdb->del_trusteddom_pw(pdb, domain);\n+}\n+\n+NTSTATUS pdb_enum_trusteddoms(TALLOC_CTX *mem_ctx, uint32 *num_domains,\n+\t\t\t      struct trustdom_info ***domains)\n+{\n+\tstruct pdb_methods *pdb = pdb_get_methods();\n+\treturn pdb->enum_trusteddoms(pdb, mem_ctx, num_domains, domains);\n+}\n+\n+/*******************************************************************\n+ the defaults for trustdom methods: \n+ these simply call the original passdb/secrets.c actions,\n+ to be replaced by pdb_ldap.\n+ *******************************************************************/\n+\n+static BOOL pdb_default_get_trusteddom_pw(struct pdb_methods *methods,\n+\t\t\t\t\t  const char *domain, \n+\t\t\t\t\t  char** pwd, \n+\t\t\t\t\t  DOM_SID *sid, \n+\t        \t \t\t  time_t *pass_last_set_time)\n+{\n+\treturn secrets_fetch_trusted_domain_password(domain, pwd,\n+\t\t\t\tsid, pass_last_set_time);\n+\n+}\n+\n+static BOOL pdb_default_set_trusteddom_pw(struct pdb_methods *methods, \n+\t\t\t\t\t  const char* domain, \n+\t\t\t\t\t  const char* pwd,\n+\t        \t  \t\t  const DOM_SID *sid)\n+{\n+\treturn secrets_store_trusted_domain_password(domain, pwd, sid);\n+}\n+\n+static BOOL pdb_default_del_trusteddom_pw(struct pdb_methods *methods, \n+\t\t\t\t\t  const char *domain)\n+{\n+\treturn trusted_domain_password_delete(domain);\n+}\n+\n+static NTSTATUS pdb_default_enum_trusteddoms(struct pdb_methods *methods,\n+\t\t\t\t\t     TALLOC_CTX *mem_ctx, \n+\t\t\t\t\t     uint32 *num_domains,\n+\t\t\t\t\t     struct trustdom_info ***domains)\n+{\n+\treturn secrets_trusted_domains(mem_ctx, num_domains, domains);\n+}\n+\n+/*******************************************************************\n  Create a pdb_methods structure and initialize it with the default\n  operations.  In this way a passdb module can simply implement\n  the functionality it cares about.  However, normally this is done \n@@ -2085,5 +2156,10 @@\n \t(*methods)->search_groups = pdb_default_search_groups;\n \t(*methods)->search_aliases = pdb_default_search_aliases;\n \n+\t(*methods)->get_trusteddom_pw = pdb_default_get_trusteddom_pw;\n+\t(*methods)->set_trusteddom_pw = pdb_default_set_trusteddom_pw;\n+\t(*methods)->del_trusteddom_pw = pdb_default_del_trusteddom_pw;\n+\t(*methods)->enum_trusteddoms  = pdb_default_enum_trusteddoms;\n+\n \treturn NT_STATUS_OK;\n }\n\nModified: branches/SAMBA_3_0_26/source/passdb/secrets.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/passdb/secrets.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/passdb/secrets.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -655,47 +655,6 @@\n \treturn ret;\n }\n \n-/*******************************************************************\n- Wrapper around retrieving the trust account password\n-*******************************************************************/\n-                                                                                                                     \n-BOOL get_trust_pw(const char *domain, uint8 ret_pwd[16], uint32 *channel)\n-{\n-\tDOM_SID sid;\n-\tchar *pwd;\n-\ttime_t last_set_time;\n-                                                                                                                     \n-\t/* if we are a DC and this is not our domain, then lookup an account\n-\t\tfor the domain trust */\n-                                                                                                                     \n-\tif ( IS_DC && !strequal(domain, lp_workgroup()) && lp_allow_trusted_domains() ) {\n-\t\tif (!secrets_fetch_trusted_domain_password(domain, &pwd, &sid,\n-\t\t\t\t\t\t\t&last_set_time)) {\n-\t\t\tDEBUG(0, (\"get_trust_pw: could not fetch trust \"\n-\t\t\t\t\"account password for trusted domain %s\\n\",\n-\t\t\t\tdomain));\n-\t\t\treturn False;\n-\t\t}\n-                                                                                                                     \n-\t\t*channel = SEC_CHAN_DOMAIN;\n-\t\tE_md4hash(pwd, ret_pwd);\n-\t\tSAFE_FREE(pwd);\n-\n-\t\treturn True;\n-\t}\n-                                                                                                                     \n-\t/* Just get the account for the requested domain. In the future this\n-\t * might also cover to be member of more than one domain. */\n-                                                                                                                     \n-\tif (secrets_fetch_trust_account_password(domain, ret_pwd,\n-\t\t\t\t\t\t&last_set_time, channel))\n-\t\treturn True;\n-\n-\tDEBUG(5, (\"get_trust_pw: could not fetch trust account \"\n-\t\t\"password for domain %s\\n\", domain));\n-\treturn False;\n-}\n-\n /************************************************************************\n  Routine to delete the machine trust account password file for a domain.\n ************************************************************************/\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_lsa_nt.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_lsa_nt.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_lsa_nt.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -648,8 +648,7 @@\n \tif (!(info->access & POLICY_VIEW_LOCAL_INFORMATION))\n \t\treturn NT_STATUS_ACCESS_DENIED;\n \n-\tnt_status = secrets_trusted_domains(p->mem_ctx, &num_domains,\n-\t\t\t\t\t    &domains);\n+\tnt_status = pdb_enum_trusteddoms(p->mem_ctx, &num_domains, &domains);\n \n \tif (!NT_STATUS_IS_OK(nt_status)) {\n \t\treturn nt_status;\n\nModified: branches/SAMBA_3_0_26/source/utils/net_rpc.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/utils/net_rpc.c\t2007-06-04 09:57:59 UTC (rev 23335)\n+++ branches/SAMBA_3_0_26/source/utils/net_rpc.c\t2007-06-04 12:29:15 UTC (rev 23336)\n@@ -5712,9 +5712,7 @@\n \t * Store the password in secrets db\n \t */\n \n-\tif (!secrets_store_trusted_domain_password(domain_name,\n-\t\t\t\t\t\t   opt_password,\n-\t\t\t\t\t\t   domain_sid)) {\n+\tif (!pdb_set_trusteddom_pw(domain_name, opt_password, domain_sid)) {\n \t\tDEBUG(0, (\"Storing password for trusted domain failed.\\n\"));\n \t\tcli_shutdown(cli);\n \t\ttalloc_destroy(mem_ctx);\n@@ -5754,6 +5752,7 @@\n static int rpc_trustdom_revoke(int argc, const char **argv)\n {\n \tchar* domain_name;\n+\tint rc = -1;\n \n \tif (argc < 1) return -1;\n \t\n@@ -5762,13 +5761,16 @@\n \tstrupper_m(domain_name);\n \n \t/* delete password of the trust */\n-\tif (!trusted_domain_password_delete(domain_name)) {\n+\tif (!pdb_del_trusteddom_pw(domain_name)) {\n \t\tDEBUG(0, (\"Failed to revoke relationship to the trusted domain %s\\n\",\n \t\t\t  domain_name));\n-\t\treturn -1;\n+\t\tgoto done;\n \t};\n \t\n-\treturn 0;\n+\trc = 0;\n+done:\n+\tSAFE_FREE(domain_name);\n+\treturn rc;\n }\n \n /**\n@@ -5854,9 +5856,7 @@\n \t\tgoto done;\n \t}\n \t\n-\tif (!secrets_store_trusted_domain_password(trusted_dom_name,\n-\t\t\t\t\t\t   cleartextpwd,\n-\t\t\t\t\t\t   &dom_sid)) {\n+\tif (!pdb_set_trusteddom_pw(trusted_dom_name, cleartextpwd, &dom_sid)) {\n \t\tDEBUG(0, (\"Storing password for trusted domain failed.\\n\"));\n \t\tnt_status = NT_STATUS_UNSUCCESSFUL;\n \t\tgoto done;\n\n"}