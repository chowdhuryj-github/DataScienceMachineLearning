{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r23044 - in branches/SAMBA_4_0/source/smb_server:\n\t. smb2", "body": "Author: metze\nDate: 2007-05-21 17:23:56 +0000 (Mon, 21 May 2007)\nNew Revision: 23044\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23044\n\nLog:\n- use uint32_t for handle id's\n- include the session vuid in the SMB2 128-Bit wire handles\n  as SMB2 oplock breaks doesn't include a TID or VUID in the header\n  we need to make sure the handle is unique for the whole TCP connection\n\nmetze  \nModified:\n   branches/SAMBA_4_0/source/smb_server/handle.c\n   branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n   branches/SAMBA_4_0/source/smb_server/smb_server.h\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/smb_server/handle.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/handle.c\t2007-05-21 17:12:49 UTC (rev 23043)\n+++ branches/SAMBA_4_0/source/smb_server/handle.c\t2007-05-21 17:23:56 UTC (rev 23044)\n@@ -27,7 +27,7 @@\n /****************************************************************************\n init the handle structures\n ****************************************************************************/\n-NTSTATUS smbsrv_init_handles(struct smbsrv_tcon *tcon, uint64_t limit)\n+NTSTATUS smbsrv_init_handles(struct smbsrv_tcon *tcon, uint32_t limit)\n {\n \t/* \n \t * the idr_* functions take 'int' as limit,\n@@ -47,7 +47,7 @@\n find a handle given a handle id\n ****************************************************************************/\n static struct smbsrv_handle *smbsrv_handle_find(struct smbsrv_handles_context *handles_ctx,\n-\t\t\t\t\t\tuint64_t hid, struct timeval request_time)\n+\t\t\t\t\t\tuint32_t hid, struct timeval request_time)\n {\n \tvoid *p;\n \tstruct smbsrv_handle *handle;\n@@ -77,7 +77,7 @@\n }\n \n struct smbsrv_handle *smbsrv_smb2_handle_find(struct smbsrv_tcon *smb_tcon,\n-\t\t\t\t\t      uint64_t hid, struct timeval request_time)\n+\t\t\t\t\t      uint32_t hid, struct timeval request_time)\n {\n \treturn smbsrv_handle_find(&smb_tcon->handles, hid, request_time);\n }\n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-21 17:12:49 UTC (rev 23043)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-21 17:23:56 UTC (rev 23044)\n@@ -41,9 +41,9 @@\n {\n \tstruct smbsrv_tcon *tcon;\n \tstruct smbsrv_handle *handle;\n-\tuint64_t hid;\n+\tuint32_t hid;\n \tuint32_t tid;\n-\tuint32_t pad;\n+\tuint64_t uid;\n \n \t/*\n \t * if there're chained requests used the cached handle\n@@ -56,16 +56,20 @@\n \t\toffset = 0;\n \t}\n \n-\thid = BVAL(base, offset);\n-\ttid = IVAL(base, offset + 8);\n-\tpad = IVAL(base, offset + 12);\n+\thid = IVAL(base, offset);\n+\ttid = IVAL(base, offset + 4);\n+\tuid = BVAL(base, offset + 8);\n \n-\tif (pad != UINT32_MAX) {\n+\t/* if it's the wildcard handle, don't waste time to search it... */\n+\tif (hid == UINT32_MAX && tid == UINT32_MAX && uid == UINT64_MAX) {\n \t\treturn NULL;\n \t}\n \n-\t/* if it's the wildcard handle, don't waste time to search it... */\n-\tif (hid == UINT64_MAX && tid == UINT32_MAX) {\n+\t/*\n+\t * if the (v)uid part doesn't match the given session the handle isn't\n+\t * valid\n+\t */\n+\tif (uid != req->session->vuid) {\n \t\treturn NULL;\n \t}\n \n@@ -74,7 +78,7 @@\n \t * as that TID in the SMB2 header says, but\n \t * the request should succeed nevertheless!\n \t *\n-\t * because if this we put the 32 bit TID into the\n+\t * because of this we put the 32 bit TID into the\n \t * 128 bit handle, so that we can extract the tcon from the\n \t * handle\n \t */\n@@ -102,6 +106,8 @@\n \t * as the handle may have overwritten the tcon\n \t * we need to set it on the request so that the\n \t * correct ntvfs context will be used for the ntvfs_*() request\n+\t *\n+\t * TODO: check if that's correct for chained requests as well!\n \t */\n \treq->tcon = tcon;\n \treturn handle->ntvfs;\n@@ -115,9 +121,9 @@\n \t/* \n \t * the handle is 128 bit on the wire\n \t */\n-\tSBVAL(base, offset,\thandle->hid);\n-\tSIVAL(base, offset + 8,\thandle->tcon->tid);\n-\tSIVAL(base, offset + 12,UINT32_MAX);\n+\tSIVAL(base, offset,\thandle->hid);\n+\tSIVAL(base, offset + 4,\thandle->tcon->tid);\n+\tSBVAL(base, offset + 8,\thandle->session->vuid);\n }\n \n static NTSTATUS smb2srv_handle_create_new(void *private_data, struct ntvfs_request *ntvfs, struct ntvfs_handle **_h)\n\nModified: branches/SAMBA_4_0/source/smb_server/smb_server.h\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb_server.h\t2007-05-21 17:12:49 UTC (rev 23043)\n+++ branches/SAMBA_4_0/source/smb_server/smb_server.h\t2007-05-21 17:23:56 UTC (rev 23044)\n@@ -185,13 +185,14 @@\n \t/*\n \t * the value passed over the wire\n \t * - 16 bit for smb\n-\t * - 64 bit for smb2\n+\t * - 32 bit for smb2\n \t *   Note: for SMB2 handles are 128 bit\n-\t *         we'll fill the 2nd 64 bit with:\n+\t *         we'll fill them with\n+\t *\t   - 32 bit HID\n \t *         - 32 bit TID\n-\t *         - 32 bit 0xFFFFFFFF\n+\t *\t   - 64 bit VUID\n \t */\n-\tuint64_t hid;\n+\tuint32_t hid;\n \n \t/*\n \t * the ntvfs handle passed to the ntvfs backend\n\n"}