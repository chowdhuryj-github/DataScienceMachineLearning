{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23668 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_26/source/lib", "body": "Author: obnox\nDate: 2007-06-30 23:52:23 +0000 (Sat, 30 Jun 2007)\nNew Revision: 23668\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23668\n\nLog:\nWhen creating a new string value, win2k regedit delivers\none byte of data despite characters being two-byte.\n\nThis modifies registry_pull_value, to change the data\nto the correct two-byte version of the empty string,\n(as delivered by winxp), when only one byte of data is\nreceived.\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0/source/lib/util_reg_api.c\n   branches/SAMBA_3_0_26/source/lib/util_reg_api.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/util_reg_api.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/util_reg_api.c\t2007-06-30 22:31:13 UTC (rev 23667)\n+++ branches/SAMBA_3_0/source/lib/util_reg_api.c\t2007-06-30 23:52:23 UTC (rev 23668)\n@@ -53,19 +53,33 @@\n \t\tsmb_ucs2_t *tmp;\n \t\tuint32 num_ucs2 = length / 2;\n \n-\t\tif ((length % 2) != 0) {\n+\t\tif (length == 1) {\n+\t\t\t/* win2k regedit gives us a string of 1 byte when\n+\t\t\t * creating a new value of type REG_SZ. this workaround\n+\t\t\t * replaces the input by using the same string as\n+\t\t\t * winxp delivers. */\n+\t\t\tlength = 2;\n+\t\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, 2))) {\n+\t\t\t\terr = WERR_NOMEM;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\ttmp[0] = 2;\n+\t\t\ttmp[1] = 0;\n+\t\t}\n+\t\telse if ((length % 2) != 0) {\n \t\t\terr = WERR_INVALID_PARAM;\n \t\t\tgoto error;\n \t\t}\n+\t\telse {\n+\t\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, num_ucs2+1))) {\n+\t\t\t\terr = WERR_NOMEM;\n+\t\t\t\tgoto error;\n+\t\t\t}\n \n-\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, num_ucs2+1))) {\n-\t\t\terr = WERR_NOMEM;\n-\t\t\tgoto error;\n+\t\t\tmemcpy((void *)tmp, (const void *)data, length);\n+\t\t\ttmp[num_ucs2] = 0;\n \t\t}\n \n-\t\tmemcpy((void *)tmp, (const void *)data, length);\n-\t\ttmp[num_ucs2] = 0;\n-\n \t\tvalue->v.sz.len = convert_string_talloc(\n \t\t\tvalue, CH_UTF16LE, CH_UNIX, tmp, length+2,\n \t\t\t&value->v.sz.str, False);\n\nModified: branches/SAMBA_3_0_26/source/lib/util_reg_api.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/util_reg_api.c\t2007-06-30 22:31:13 UTC (rev 23667)\n+++ branches/SAMBA_3_0_26/source/lib/util_reg_api.c\t2007-06-30 23:52:23 UTC (rev 23668)\n@@ -53,19 +53,33 @@\n \t\tsmb_ucs2_t *tmp;\n \t\tuint32 num_ucs2 = length / 2;\n \n-\t\tif ((length % 2) != 0) {\n+\t\tif (length == 1) {\n+\t\t\t/* win2k regedit gives us a string of 1 byte when\n+\t\t\t * creating a new value of type REG_SZ. this workaround\n+\t\t\t * replaces the input by using the same string as\n+\t\t\t * winxp delivers. */\n+\t\t\tlength = 2;\n+\t\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, 2))) {\n+\t\t\t\terr = WERR_NOMEM;\n+\t\t\t\tgoto error;\n+\t\t\t}\n+\t\t\ttmp[0] = 2;\n+\t\t\ttmp[1] = 0;\n+\t\t}\n+\t\telse if ((length % 2) != 0) {\n \t\t\terr = WERR_INVALID_PARAM;\n \t\t\tgoto error;\n \t\t}\n+\t\telse {\n+\t\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, num_ucs2+1))) {\n+\t\t\t\terr = WERR_NOMEM;\n+\t\t\t\tgoto error;\n+\t\t\t}\n \n-\t\tif (!(tmp = SMB_MALLOC_ARRAY(smb_ucs2_t, num_ucs2+1))) {\n-\t\t\terr = WERR_NOMEM;\n-\t\t\tgoto error;\n+\t\t\tmemcpy((void *)tmp, (const void *)data, length);\n+\t\t\ttmp[num_ucs2] = 0;\n \t\t}\n \n-\t\tmemcpy((void *)tmp, (const void *)data, length);\n-\t\ttmp[num_ucs2] = 0;\n-\n \t\tvalue->v.sz.len = convert_string_talloc(\n \t\t\tvalue, CH_UTF16LE, CH_UNIX, tmp, length+2,\n \t\t\t&value->v.sz.str, False);\n\n"}