{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22812 - in branches: SAMBA_3_0/source/nsswitch\n\tSAMBA_3_0_25/source/nsswitch SAMBA_3_0_26/source/nsswitch", "body": "Author: jra\nDate: 2007-05-12 01:08:09 +0000 (Sat, 12 May 2007)\nNew Revision: 22812\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22812\n\nLog:\nFix bug #3024 (and also the group varient). Patch from\nJohann Hanne  and also Kaya Bekiro?lu \nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/nsswitch/winbindd_group.c\n   branches/SAMBA_3_0/source/nsswitch/winbindd_user.c\n   branches/SAMBA_3_0_25/source/nsswitch/winbindd_group.c\n   branches/SAMBA_3_0_25/source/nsswitch/winbindd_user.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_group.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_user.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_group.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_group.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_group.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -902,7 +902,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_gr *group_list = NULL;\n-\tint num_groups, group_list_ndx = 0, i, gr_mem_list_len = 0;\n+\tint num_groups, group_list_ndx, gr_mem_list_len = 0;\n \tchar *gr_mem_list = NULL;\n \n \tDEBUG(3, (\"[%5lu]: getgrent\\n\", (unsigned long)state->pid));\n@@ -916,6 +916,11 @@\n \n \tnum_groups = MIN(MAX_GETGRENT_GROUPS, state->request.data.num_entries);\n \n+\tif (num_groups == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n+\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_gr, num_groups)) == NULL) {\n \t\trequest_error(state);\n \t\treturn;\n@@ -938,7 +943,7 @@\n \n \t/* Start sending back groups */\n \n-\tfor (i = 0; i < num_groups; i++) {\n+\tfor (group_list_ndx = 0; group_list_ndx < num_groups; ) {\n \t\tstruct acct_info *name_list = NULL;\n \t\tfstring domain_group_name;\n \t\tuint32 result;\n\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_user.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_user.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_user.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -662,7 +662,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_pw *user_list;\n-\tint num_users, user_list_ndx = 0, i;\n+\tint num_users, user_list_ndx;\n \n \tDEBUG(3, (\"[%5lu]: getpwent\\n\", (unsigned long)state->pid));\n \n@@ -676,6 +676,11 @@\n \t/* Allocate space for returning a chunk of users */\n \n \tnum_users = MIN(MAX_GETPWENT_USERS, state->request.data.num_entries);\n+\n+\tif (num_users == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n \t\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_pw, num_users)) == NULL) {\n \t\trequest_error(state);\n@@ -697,7 +702,7 @@\n \n \t/* Start sending back users */\n \n-\tfor (i = 0; i < num_users; i++) {\n+\tfor (user_list_ndx = 0; user_list_ndx < num_users; ) {\n \t\tstruct getpwent_user *name_list = NULL;\n \t\tuint32 result;\n \n@@ -740,8 +745,6 @@\n \t\t\tname_list[ent->sam_entry_index].shell,\n \t\t\t&user_list[user_list_ndx]);\n \t\t\n-\t\tent->sam_entry_index++;\n-\t\t\n \t\t/* Add user to return list */\n \t\t\n \t\tif (result) {\n@@ -754,6 +757,9 @@\n \t\t} else\n \t\t\tDEBUG(1, (\"could not lookup domain user %s\\n\",\n \t\t\t\t  name_list[ent->sam_entry_index].name));\n+\n+\t\tent->sam_entry_index++;\n+\t\t\n \t}\n \n \t/* Out of domains */\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/winbindd_group.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/winbindd_group.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0_25/source/nsswitch/winbindd_group.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -902,7 +902,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_gr *group_list = NULL;\n-\tint num_groups, group_list_ndx = 0, i, gr_mem_list_len = 0;\n+\tint num_groups, group_list_ndx, gr_mem_list_len = 0;\n \tchar *gr_mem_list = NULL;\n \n \tDEBUG(3, (\"[%5lu]: getgrent\\n\", (unsigned long)state->pid));\n@@ -916,6 +916,11 @@\n \n \tnum_groups = MIN(MAX_GETGRENT_GROUPS, state->request.data.num_entries);\n \n+\tif (num_groups == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n+\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_gr, num_groups)) == NULL) {\n \t\trequest_error(state);\n \t\treturn;\n@@ -938,7 +943,7 @@\n \n \t/* Start sending back groups */\n \n-\tfor (i = 0; i < num_groups; i++) {\n+\tfor (group_list_ndx = 0; group_list_ndx < num_groups; ) {\n \t\tstruct acct_info *name_list = NULL;\n \t\tfstring domain_group_name;\n \t\tuint32 result;\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/winbindd_user.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/winbindd_user.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0_25/source/nsswitch/winbindd_user.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -631,7 +631,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_pw *user_list;\n-\tint num_users, user_list_ndx = 0, i;\n+\tint num_users, user_list_ndx;\n \n \tDEBUG(3, (\"[%5lu]: getpwent\\n\", (unsigned long)state->pid));\n \n@@ -645,6 +645,11 @@\n \t/* Allocate space for returning a chunk of users */\n \n \tnum_users = MIN(MAX_GETPWENT_USERS, state->request.data.num_entries);\n+\n+\tif (num_users == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n \t\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_pw, num_users)) == NULL) {\n \t\trequest_error(state);\n@@ -666,7 +671,7 @@\n \n \t/* Start sending back users */\n \n-\tfor (i = 0; i < num_users; i++) {\n+\tfor (user_list_ndx = 0; user_list_ndx < num_users; ) {\n \t\tstruct getpwent_user *name_list = NULL;\n \t\tuint32 result;\n \n@@ -709,8 +714,6 @@\n \t\t\tname_list[ent->sam_entry_index].shell,\n \t\t\t&user_list[user_list_ndx]);\n \t\t\n-\t\tent->sam_entry_index++;\n-\t\t\n \t\t/* Add user to return list */\n \t\t\n \t\tif (result) {\n@@ -723,6 +726,9 @@\n \t\t} else\n \t\t\tDEBUG(1, (\"could not lookup domain user %s\\n\",\n \t\t\t\t  name_list[ent->sam_entry_index].name));\n+\n+\t\tent->sam_entry_index++;\n+\t\t\n \t}\n \n \t/* Out of domains */\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_group.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_group.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_group.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -902,7 +902,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_gr *group_list = NULL;\n-\tint num_groups, group_list_ndx = 0, i, gr_mem_list_len = 0;\n+\tint num_groups, group_list_ndx, gr_mem_list_len = 0;\n \tchar *gr_mem_list = NULL;\n \n \tDEBUG(3, (\"[%5lu]: getgrent\\n\", (unsigned long)state->pid));\n@@ -916,6 +916,11 @@\n \n \tnum_groups = MIN(MAX_GETGRENT_GROUPS, state->request.data.num_entries);\n \n+\tif (num_groups == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n+\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_gr, num_groups)) == NULL) {\n \t\trequest_error(state);\n \t\treturn;\n@@ -938,7 +943,7 @@\n \n \t/* Start sending back groups */\n \n-\tfor (i = 0; i < num_groups; i++) {\n+\tfor (group_list_ndx = 0; group_list_ndx < num_groups; ) {\n \t\tstruct acct_info *name_list = NULL;\n \t\tfstring domain_group_name;\n \t\tuint32 result;\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_user.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_user.c\t2007-05-11 21:51:53 UTC (rev 22811)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_user.c\t2007-05-12 01:08:09 UTC (rev 22812)\n@@ -662,7 +662,7 @@\n {\n \tstruct getent_state *ent;\n \tstruct winbindd_pw *user_list;\n-\tint num_users, user_list_ndx = 0, i;\n+\tint num_users, user_list_ndx;\n \n \tDEBUG(3, (\"[%5lu]: getpwent\\n\", (unsigned long)state->pid));\n \n@@ -676,6 +676,11 @@\n \t/* Allocate space for returning a chunk of users */\n \n \tnum_users = MIN(MAX_GETPWENT_USERS, state->request.data.num_entries);\n+\n+\tif (num_users == 0) {\n+\t\trequest_error(state);\n+\t\treturn;\n+\t}\n \t\n \tif ((state->response.extra_data.data = SMB_MALLOC_ARRAY(struct winbindd_pw, num_users)) == NULL) {\n \t\trequest_error(state);\n@@ -697,7 +702,7 @@\n \n \t/* Start sending back users */\n \n-\tfor (i = 0; i < num_users; i++) {\n+\tfor (user_list_ndx = 0; user_list_ndx < num_users; ) {\n \t\tstruct getpwent_user *name_list = NULL;\n \t\tuint32 result;\n \n@@ -740,8 +745,6 @@\n \t\t\tname_list[ent->sam_entry_index].shell,\n \t\t\t&user_list[user_list_ndx]);\n \t\t\n-\t\tent->sam_entry_index++;\n-\t\t\n \t\t/* Add user to return list */\n \t\t\n \t\tif (result) {\n@@ -754,6 +757,9 @@\n \t\t} else\n \t\t\tDEBUG(1, (\"could not lookup domain user %s\\n\",\n \t\t\t\t  name_list[ent->sam_entry_index].name));\n+\n+\t\tent->sam_entry_index++;\n+\t\t\n \t}\n \n \t/* Out of domains */\n\n"}