{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22993 - in\n\tbranches/SAMBA_4_0/source/scripting/ejs: .", "body": "Author: metze\nDate: 2007-05-18 08:16:50 +0000 (Fri, 18 May 2007)\nNew Revision: 22993\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22993\n\nLog:\n- make it possible to load a dsdb_schema from ldif via the ejs bindings\n- make it possible to set ntds_objectGUID and ntds_invocationId via the ejy bindings\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/scripting/ejs/config.mk\n   branches/SAMBA_4_0/source/scripting/ejs/smbcalls_ldb.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/scripting/ejs/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/scripting/ejs/config.mk\t2007-05-18 08:13:06 UTC (rev 22992)\n+++ branches/SAMBA_4_0/source/scripting/ejs/config.mk\t2007-05-18 08:16:50 UTC (rev 22993)\n@@ -15,6 +15,7 @@\n OBJ_FILES = smbcalls_ldb.o\n SUBSYSTEM = smbcalls\n INIT_FUNCTION = smb_setup_ejs_ldb\n+PRIVATE_DEPENDENCIES = LIBLDB SAMDB LIBNDR\n \n [MODULE::smbcalls_nbt]\n OBJ_FILES = smbcalls_nbt.o\n\nModified: branches/SAMBA_4_0/source/scripting/ejs/smbcalls_ldb.c\n===================================================================\n--- branches/SAMBA_4_0/source/scripting/ejs/smbcalls_ldb.c\t2007-05-18 08:13:06 UTC (rev 22992)\n+++ branches/SAMBA_4_0/source/scripting/ejs/smbcalls_ldb.c\t2007-05-18 08:16:50 UTC (rev 22993)\n@@ -27,6 +27,8 @@\n #include \"lib/ldb/include/ldb.h\"\n #include \"lib/ldb/include/ldb_errors.h\"\n #include \"db_wrap.h\"\n+#include \"dsdb/samdb/samdb.h\"\n+#include \"librpc/ndr/libndr.h\"\n \n /*\n   get the connected db\n@@ -566,6 +568,123 @@\n }\n \n /*\n+  commit a ldb attach a dsdb_schema from ldif files\n+  usage:\n+   ok = ldb.attach_dsdb_schema_from_ldif(\"prefixMap ldif content\", \"definition ldif content\")\n+*/\n+static int ejs_ldb_attach_dsdb_schema_from_ldif(MprVarHandle eid, int argc, char **argv)\n+{\n+\tstruct ldb_context *ldb;\n+\tWERROR status;\n+\tchar *pf_name;\n+\tchar *df_name;\n+\tconst char *pf;\n+\tconst char *df;\n+\n+\tif (argc != 2) {\n+\t\tejsSetErrorMsg(eid, \"ldb.attach_dsdb_schema_from_ldif invalid arguments\");\n+\t\treturn -1;\n+\t}\n+\n+\tldb = ejs_get_ldb_context(eid);\n+\tif (ldb == NULL) {\n+\t\treturn -1;\n+\t}\n+\n+\tpf = argv[0];\n+\tdf = argv[1];\n+\n+\tstatus = dsdb_attach_schema_from_ldif_file(ldb, pf, df);\n+\n+\tmpr_Return(eid, mprWERROR(status));\n+\treturn 0;\n+}\n+\n+/*\n+  commit a ldb attach a dsdb_schema from ldif files\n+  usage:\n+   ok = ldb.set_ntds_invocationId(\"7729aa4b-f990-41ad-b81a-8b6a14090f41\");\n+*/\n+static int ejs_ldb_set_ntds_invocationId(MprVarHandle eid, int argc, char **argv)\n+{\n+\tstruct ldb_context *ldb;\n+\tNTSTATUS status;\n+\tstruct GUID guid;\n+\tchar *guid_str;\n+\tbool ok;\n+\n+\tif (argc != 1) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_invocationId invalid arguments\");\n+\t\treturn -1;\n+\t}\n+\n+\tldb = ejs_get_ldb_context(eid);\n+\tif (ldb == NULL) {\n+\t\treturn -1;\n+\t}\n+\n+\tguid_str = argv[0];\n+\n+\tstatus = GUID_from_string(guid_str, &guid);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_invocationId - failed to parse GUID '%s' %s\\n\",\n+\t\t\t\tguid_str, nt_errstr(status));\n+\t\treturn -1;\n+\t}\n+\n+\tok = samdb_set_ntds_invocation_id(ldb, &guid);\n+\tif (!ok) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_invocationId - failed to set cached ntds invocationId\\n\");\n+\t\treturn -1;\n+\t}\n+\n+\tmpr_Return(eid, mprCreateBoolVar(ok));\n+\treturn 0;\n+}\n+\n+/*\n+  commit a ldb attach a dsdb_schema from ldif files\n+  usage:\n+   ok = ldb.get_ntds_objectGUID(\"7729aa4b-f990-41ad-b81a-8b6a14090f41\");\n+*/\n+static int ejs_ldb_set_ntds_objectGUID(MprVarHandle eid, int argc, char **argv)\n+{\n+\tstruct ldb_context *ldb;\n+\tNTSTATUS status;\n+\tstruct GUID guid;\n+\tchar *guid_str;\n+\tbool ok;\n+\n+\tif (argc != 1) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_objectGUID invalid arguments\");\n+\t\treturn -1;\n+\t}\n+\n+\tldb = ejs_get_ldb_context(eid);\n+\tif (ldb == NULL) {\n+\t\treturn -1;\n+\t}\n+\n+\tguid_str = argv[0];\n+\n+\tstatus = GUID_from_string(guid_str, &guid);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_objectGUID - failed to parse GUID '%s' %s\\n\",\n+\t\t\t\tguid_str, nt_errstr(status));\n+\t\treturn -1;\n+\t}\n+\n+\tok = samdb_set_ntds_invocation_id(ldb, &guid);\n+\tif (!ok) {\n+\t\tejsSetErrorMsg(eid, \"ldb.set_ntds_objectGUID - failed to set cached ntds invocationId\\n\");\n+\t\treturn -1;\n+\t}\n+\n+\tmpr_Return(eid, mprCreateBoolVar(ok));\n+\treturn 0;\n+}\n+\n+/*\n   initialise ldb ejs subsystem\n */\n static int ejs_ldb_init(MprVarHandle eid, int argc, struct MprVar **argv)\n@@ -586,6 +705,12 @@\n \tmprSetCFunction(ldb, \"transaction_start\", ejs_ldbTransactionStart);\n \tmprSetCFunction(ldb, \"transaction_cancel\", ejs_ldbTransactionCancel);\n \tmprSetCFunction(ldb, \"transaction_commit\", ejs_ldbTransactionCommit);\n+\tmprSetStringCFunction(ldb, \"attach_dsdb_schema_from_ldif\",\n+\t\t\t      ejs_ldb_attach_dsdb_schema_from_ldif);\n+\tmprSetStringCFunction(ldb, \"set_ntds_invocationId\",\n+\t\t\t      ejs_ldb_set_ntds_invocationId);\n+\tmprSetStringCFunction(ldb, \"set_ntds_objectGUID\",\n+\t\t\t      ejs_ldb_set_ntds_objectGUID);\n \tmprSetVar(ldb, \"SCOPE_BASE\", mprCreateNumberVar(LDB_SCOPE_BASE));\n \tmprSetVar(ldb, \"SCOPE_ONE\", mprCreateNumberVar(LDB_SCOPE_ONELEVEL));\n \tmprSetVar(ldb, \"SCOPE_SUBTREE\", mprCreateNumberVar(LDB_SCOPE_SUBTREE));\n\n"}