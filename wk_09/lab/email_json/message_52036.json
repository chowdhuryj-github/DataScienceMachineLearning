{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Regarding file handling", "body": "On Jun 21, 9:31 am, dharshana...@gmail.com (Dharshana Eswaran) wrote:\n> Hi All,\n>\n> I am reading a certain data from one file and writing to another file. In\n> the original file, there are few lines, which occur more than once in\n> different lines. When i am writing it to the second file, i don't want it to\n> be written more than once. I mean, it should not be repetitive. The file are\n> just two simple text files.\n>\n> In achieving what i need, i thought simultaneous reading and writing to the\n> file is required, to know if the lines are being written for the second\n> time. But i don't know how to achieve this.\n>\n> A sample of the text file is shown below:\n> STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T\n> {\n>     STACK_CC_SS_COMMON_TYPE_REFERENCE_PROTOCOL_DIS_T\n> protocol_discriminator;\n>     STACK_CC_SS_COMMON_TYPE_REFERENCE_TRANSACTION_ID_T   transaction_id;} STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T;\n> };\n>\n> STACK_CC_SS_COMMON_TYPE_CHANNEL_INFO_T\n> {\n>     STACK_CC_SS_COMMON_TYPE_CHANNEL_TYPE_T channel_type;\n>     STACK_CC_SS_COMMON_TYPE_CHANNEL_MODE_T channel_mode;} STACK_CC_SS_COMMON_TYPE_CHANNEL_INFO_T;\n> };\n>\n> STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T\n> {\n>     STACK_CC_SS_COMMON_TYPE_REFERENCE_PROTOCOL_DIS_T\n> protocol_discriminator;\n>     STACK_CC_SS_COMMON_TYPE_REFERENCE_TRANSACTION_ID_T   transaction_id;\n>\n> } STACK_CC_SS_COMMON_TYPE_REFERENCE_ID_T;\n> };\n>\n\nIt looks as though your data is delimited by \"};\\n\\n\".  Is that\ncorrect?  That is, each \"block\" of text ends with that string, and you\nwant to only print out the first instance of each block?  You can\ncontrol Perl's notion of what a \"line\" is via the $/ variable.  See\nperldoc perlvar for more information.\n\nTo only print one instance of any given block, use a hash.  Each time\nthrough your read loop, check to see if that block is in the hash.  If\nit is, don't print it.  If it's not, do print it, and then add it to\nthe hash.  For example:\n\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nopen my $fh, '<', \"infile.txt\" or die $!;\nopen my $ofh, '>', \"outfile.txt\" or die $!;\nlocal $/ = \"};\\n\\n\";\nmy %printed;\nwhile (my $record = <$fh>) {\n   print $ofh $record unless $printed{$record}++;\n}\n__END__\n\nHope that helps,\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}