{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 365: another place where we could send a partial packet in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 365\nrevision-id: tridge@samba.org-20070527223754-wb7q9bje7rd7dfxi\nparent: tridge@samba.org-20070527145110-4dwpd6btx287elvc\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Mon 2007-05-28 08:37:54 +1000\nmessage:\n  another place where we could send a partial packet\nmodified:\n  common/ctdb_io.c               ctdb_io.c-20070409200335-dzfc7f3rra5rcf60-1\n=== modified file 'common/ctdb_io.c'\n--- a/common/ctdb_io.c\t2007-05-26 06:41:32 +0000\n+++ b/common/ctdb_io.c\t2007-05-27 22:37:54 +0000\n@@ -225,7 +225,7 @@\n int ctdb_queue_send(struct ctdb_queue *queue, uint8_t *data, uint32_t length)\n {\n \tstruct ctdb_queue_pkt *pkt;\n-\tuint32_t length2;\n+\tuint32_t length2, full_length;\n \n \tif (queue->alignment) {\n \t\t/* enforce the length and alignment rules from the tcp packet allocator */\n@@ -238,6 +238,8 @@\n \tif (length2 != length) {\n \t\tmemset(data+length, 0, length2-length);\n \t}\n+\n+\tfull_length = length2;\n \t\n \t/* if the queue is empty then try an immediate write, avoiding\n \t   queue overhead. This relies on non-blocking sockets */\n@@ -268,7 +270,7 @@\n \tCTDB_NO_MEMORY(queue->ctdb, pkt->data);\n \n \tpkt->length = length2;\n-\tpkt->full_length = length2;\n+\tpkt->full_length = full_length;\n \n \tif (queue->out_queue == NULL && queue->fd != -1) {\n \t\tEVENT_FD_WRITEABLE(queue->fde);\n\n"}