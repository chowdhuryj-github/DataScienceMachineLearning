{"category": "ham", "to_address": "\"Chas Owens\" <chas.owens@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: CGI Header", "body": "On 4/11/07, Chas Owens  wrote:\n> On 4/11/07, Tom Phoenix  wrote:\n> >   my $header_is_complete;  # starts out false\n\n> Is there a reason you are not using an our variable instead of a my variable:\n\nTIMTOWTDI. The scope is different, of course; but which scope one\nprefers seems largely a matter of style, driven by the ways in which\nthe programmer imagines using the variable. Earlier in my response to\nthe OP, I had suggested using a fully-qualified variable; that offers\nsimilar scoping to that of an 'our' variable. Doing it that way would\nbe another style.\n\n> Or even better using a block to hide that variable from other functions:\n\nThat's also a good way to affect scope. Doing it that way could also\nbe good style. In this case, I didn't need to hide that variable with\na block in the example code, partly because I told how to do so in the\ntext.\n\nIn this case, I think you may have been misled by the presence of the\ncode within the text. My intent was to show several alternative ways\nfor the OP to choose among. I wrote the code merely to illustrate a\ntechnique that would have been hard to explain clearly without code.\nIncluding that code among other techniques needn't imply that I\nnecessarily endorse that particular style as the ideal method of\nsolving the OP's problem. If I had been able to describe each\nalternative technique without using code, or if I had written an\nexplicit example for each possibility, there wouldn't be this\nconfusion. Having only one piece of example code emphasised that style\nunduly, and diminished the others. Nevertheless, having written that\none example and the documentation on its scoping issues, I was (and\nstill am) content with it.\n\nHere's to good style!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}