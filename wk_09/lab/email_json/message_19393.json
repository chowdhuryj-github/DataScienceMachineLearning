{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "mimir@samba.org", "subject": "svn commit: samba r22566 - in\n\tbranches/SAMBA_4_0/source/torture/libnet: .", "body": "Author: mimir\nDate: 2007-04-29 12:32:17 +0000 (Sun, 29 Apr 2007)\nNew Revision: 22566\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22566\n\nLog:\nadd a simple test of libnet_DomainList function.\n\n\nrafal\n\n\nModified:\n   branches/SAMBA_4_0/source/torture/libnet/libnet.c\n   branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/libnet/libnet.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/libnet/libnet.c\t2007-04-29 12:31:09 UTC (rev 22565)\n+++ branches/SAMBA_4_0/source/torture/libnet/libnet.c\t2007-04-29 12:32:17 UTC (rev 22566)\n@@ -52,6 +52,7 @@\n \ttorture_suite_add_simple_test(suite, \"API-DOMOPENSAMR\", torture_domain_open_samr);\n \ttorture_suite_add_simple_test(suite, \"API-DOMCLOSESAMR\", torture_domain_close_samr);\n \ttorture_suite_add_simple_test(suite, \"API-BECOME-DC\", torture_net_become_dc);\n+\ttorture_suite_add_simple_test(suite, \"API-DOMLIST\", torture_domain_list);\n \n \tsuite->description = talloc_strdup(suite, \"libnet convenience interface tests\");\n \n\nModified: branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\t2007-04-29 12:31:09 UTC (rev 22565)\n+++ branches/SAMBA_4_0/source/torture/libnet/libnet_domain.c\t2007-04-29 12:32:17 UTC (rev 22566)\n@@ -312,7 +312,7 @@\n {\n \tBOOL ret = True;\n \tNTSTATUS status;\n-\tTALLOC_CTX *mem_ctx=NULL;\n+\tTALLOC_CTX *mem_ctx = NULL;\n \tstruct libnet_context *ctx;\n \tstruct lsa_String domain_name;\n \tstruct dcerpc_binding *binding;\n@@ -340,7 +340,7 @@\n \n \tmem_ctx = talloc_init(\"torture_domain_close_samr\");\n \tstatus = dcerpc_pipe_connect(mem_ctx, &p, bindstr, &dcerpc_table_samr,\n-\t\t\t\t     cmdline_credentials, NULL);\n+\t\t\t\t     ctx->cred, NULL);\n \tif (!NT_STATUS_IS_OK(status)) {\n \t\td_printf(\"failed to connect to server %s: %s\\n\", bindstr,\n \t\t\t nt_errstr(status));\n@@ -361,7 +361,8 @@\n \tctx->samr.access_mask = access_mask;\n \tctx->samr.handle      = h;\n \t/* we have to use pipe's event context, otherwise the call will\n-\t   hang indefinately */\n+\t   hang indefinitely - this wouldn't be the case if pipe was opened\n+\t   by means of libnet call */\n \tctx->event_ctx       = p->conn->event_ctx;\n \n \tZERO_STRUCT(r);\n@@ -379,3 +380,56 @@\n \ttalloc_free(ctx);\n \treturn ret;\n }\n+\n+\n+BOOL torture_domain_list(struct torture_context *torture)\n+{\n+\tBOOL ret = True;\n+\tNTSTATUS status;\n+\tTALLOC_CTX *mem_ctx = NULL;\n+\tconst char *bindstr;\n+\tstruct dcerpc_binding *binding;\n+\tstruct libnet_context *ctx;\n+\tstruct libnet_DomainList r;\n+\tint i;\n+\n+\tbindstr = torture_setting_string(torture, \"binding\", NULL);\n+\tstatus = dcerpc_parse_binding(torture, bindstr, &binding);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\td_printf(\"failed to parse binding string\\n\");\n+\t\treturn False;\n+\t}\n+\n+\tctx = libnet_context_init(NULL);\n+\tif (ctx == NULL) {\n+\t\td_printf(\"failed to create libnet context\\n\");\n+\t\tret = False;\n+\t\tgoto done;\n+\t}\n+\n+\tctx->cred = cmdline_credentials;\n+\t\n+\tmem_ctx = talloc_init(\"torture_domain_close_samr\");\n+\n+\tZERO_STRUCT(r);\n+\tr.in.hostname = binding->host;\n+\n+\tstatus = libnet_DomainList(ctx, mem_ctx, &r);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tret = False;\n+\t\tgoto done;\n+\t}\n+\n+\td_printf(\"Received list or domains:\\n\");\n+\t\n+\tfor (i = 0; i < r.out.count; i++) {\n+\t\td_printf(\"Name[%d]: %s\\n\", i, r.out.domains[i].name);\n+\t}\n+\n+done:\n+\td_printf(\"\\nStatus: %s\\n\", nt_errstr(status));\n+\n+\ttalloc_free(mem_ctx);\n+\ttalloc_free(ctx);\n+\treturn ret;\n+}\n\n"}