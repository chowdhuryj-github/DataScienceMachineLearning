{"category": "ham", "to_address": "beginners-list <beginners@perl.org>", "from_address": "Jeff Pang <pangj@earthlink.net>", "subject": "Re: forking problem with dbd::mysql", "body": "\n\n-----Original Message-----\n>From: Chas Owens \n>Sent: May 9, 2007 11:25 PM\n>To: Jeremy Kister \n>Cc: beginners@perl.org\n>Subject: Re: forking problem with dbd::mysql\n>\n>On 5/9/07, Chas Owens  wrote:\n>snip\n>> It looks like it has something to do with $dbh going out of scope\n>> (when the child exits).\n>snip\n>\n>This is definitely a case of the database handle auto-disconnecting\n>when it is destroyed.  You can see the behavior by creating a set of\n>DBI subclasses and overriding the DBI::db::destroy function.  Change\n>the DBI->connect call to MyDBI->connect and add these lines to the\n>bottom of the script.\n>\n\n\nBut still has a question for me.We may see this similiar destroy method on DBI class,\n\nsub DESTROY \n{\n    my $self = shift;\n    my $dbh = $self->{'dbh'};\n    if ($dbh) {\n        local $SIG{'__WARN__'} = sub {};\n        $dbh->disconnect();\n    }\n}\n\nOk where in child when going out of scope the $dbh should get disconnected.\nBut why this would affect the $dbh in parent?As we know,when forking child get a full copy of $dbh from parent and it's separate to parent's $dbh.\n\n--\nmailto:pangj@earthlink.net\nhttp://home.arcor.de/jeffpang/\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}