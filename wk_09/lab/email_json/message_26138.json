{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #42898\": ;", "from_address": "\"Paul Cochrane via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #42898] [PATCH] src/library.c , honor PARROT_PREFER_SOURCE in extension guessing ", "body": "On Mon May 07 04:28:22 2007, codermattie wrote:\n> hello,\n> \n> Building on commit #18446 this patch honors PARROT_PREFER_SOURCE.\n> \n> quick background:\n> \n> to get the install/working-copy to work the same extensions should\n> not be used with .load_bytecode. Sometimes it will be compiled,\n> sometimes not.\n> \n> The default behavior implemented in #18446 was to first preserve\n> compatibility with the existing code-base by trying a path as\n> it was given first. If that fails it will try appending extensions,\n> from the lowest level compiled objects (.pbc) to the highest level\n> source\n> (.pir).\n> \n> This is the perl5 use behavior and what you would expect running out\n> of a install target.\n> \n> Some developers did not like having to run a \"make clean\" to run the\n> latest version of the source if there were stale objects lying around.\n> \n> This patch addresses that issue by honoring PARROT_PREFER_SOURCE.\n> Currently\n> the value is ignored. If it is set in the environment variable table\n> it\n> will reverse the normal extension guessing order, trying the highest\n> level form of the code first. Developers who wish to avoid a make\n> clean\n> can now either avoid compiling files, or simply set this environment\n> variable.\n> \n> As noted in the comments if the value of PARROT_PREFER_SOURCE is ever\n> interpreted\n> I think it should be a path spec for directories where source is\n> preferred over\n> compiled objects. Currently that is not implemented, but it can be if\n> someone\n> makes a more concrete case for it.\n> \n> This patch should be discussed, during which I will add the necessary\n> tests\n> and documentation changes. I have deferred this until now , when the\n> behavior\n> is complete enough to document.\n> \n> patch:\n> \n> This patch is based off rev 18446 with the spelling fixes from #42897\n> applied.\n> \n> harness:\n> \n> when I ran the test-suite I got a failure from t/perl/Parrot_Docs.t. A\n> subsequent\n> run of prove to double check it resulted in a pass. Strange. End\n> result the\n> test-suite passed unless someone can reproduce the failure with the\n> harness.\n> \n> Cheers,\n> Mike Mattie - codermattie  at gmail.com\n\nThere hasn't been any discussion about this patch, and it looks pretty \ngood to me, so I've applied it as r18482, thanks!\n\nI haven't noticed the failure from t/perl/Parrot_Docs.t.  This might be \na problem with your setup as you mentioned in a previous email.\n\nPaul\n\n"}