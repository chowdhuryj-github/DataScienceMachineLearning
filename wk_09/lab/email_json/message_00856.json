{"category": "ham", "to_address": "Ramon Diaz-Uriarte <rdiaz02@gmail.com>", "from_address": "Simon Urbanek <Simon.Urbanek@r-project.org>", "subject": "Re: [R] Rserve and R to R communication", "body": "\nOn Apr 7, 2007, at 10:56 AM, Ramon Diaz-Uriarte wrote:\n\n> Dear All,\n>\n> The \"clients.txt\" file of the latest Rserve package, by Simon  \n> Urbanek, says, regarding its R client,\n>\n> \"(...) a simple R client, i.e. it allows you to connect to Rserve  \n> from R itself. It is very simple and limited,  because Rserve was  \n> not primarily meant for R-to-R communication (there are better ways  \n> to do that), but it is useful for quick interactive connection to  \n> an Rserve farm.\"\n>\n> Which are those better ways to do it? I am thinking about using  \n> Rserve to have an R process send jobs to a bunch of Rserves in  \n> different machines. It is like what we could do with Rmpi (or pvm),  \n> but without the MPI layer. Therefore, presumably it'd be easier to  \n> deal with network problems, machine's failures, using checkpoints,  \n> etc. (i.e., to try to get better fault tolerance).\n>\n> It seems that Rserve would provide the basic infrastructure for  \n> doing that and saves me from reinventing the wheel of using  \n> sockets, etc, directly from R.\n>\n> However, Simon's comment about better ways of R-to-R communication  \n> made me wonder if this idea really makes sense. What is the catch?  \n> Have other people tried similar approaches?\n>\n\nI was commenting on direct R-to-R communication using sockets +  \n'serialize' in R or the 'snow' package for parallel processing. The  \nlatter could be useful for what you have in mind, because it includes  \na socket-based implementation which allows you to spawn multiple  \nchildren (across multiple machines) and collect their results. It  \nuses regular rsh or ssh to start the jobs, so if can use that, it  \nshould work for you. 'snow' also has PVM and MPI implementations, the  \nPVM one is really easy to setup (on unix) and that was what I was  \nusing for parallel computing in R on a cluster.\n\nRserve is sort of comparable, but in addition it provides the  \nspawning infrastructure due to its client/server concept. What it  \ndoesn't have is the convenience functions that snow provides like  \nclusterApply etc. Thinking of it, it would be actually possible to  \nadd them, although I admit that the original goal of Rserve was not  \nparallel computing :). The idea was to have one Rserve server and  \nmultiple clients whereas in 'snow' you sort of have one client and  \nmultiple servers. You could spawn multiple Rserves on multiple  \nmachines, but Rserve itself doesn't provide any load-balancing out of  \nthe box, so you'd have to do that yourself.\n\nI don't know if that helps... :)\n\nCheers,\nSimon\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}