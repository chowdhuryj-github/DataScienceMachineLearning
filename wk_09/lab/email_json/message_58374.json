{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23658 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_26/source/lib", "body": "Author: vlendec\nDate: 2007-06-29 16:04:26 +0000 (Fri, 29 Jun 2007)\nNew Revision: 23658\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23658\n\nLog:\nOne pstring a day....\n\nThis one was particularly tasty, it was a static one. So 1k less\nfootprint per process.\n\nModified:\n   branches/SAMBA_3_0/source/lib/system.c\n   branches/SAMBA_3_0_26/source/lib/system.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/system.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/system.c\t2007-06-29 13:07:54 UTC (rev 23657)\n+++ branches/SAMBA_3_0/source/lib/system.c\t2007-06-29 16:04:26 UTC (rev 23658)\n@@ -1366,21 +1366,25 @@\n #endif /* NOT CURRENTLY USED - JRA */\n \n /**************************************************************************\n- Extract a command into an arg list. Uses a static pstring for storage.\n- Caller frees returned arg list (which contains pointers into the static pstring).\n+ Extract a command into an arg list.\n ****************************************************************************/\n \n-static char **extract_args(const char *command)\n+static char **extract_args(TALLOC_CTX *mem_ctx, const char *command)\n {\n-\tstatic pstring trunc_cmd;\n+\tchar *trunc_cmd;\n+\tchar *saveptr;\n \tchar *ptr;\n \tint argcl;\n \tchar **argl = NULL;\n \tint i;\n \n-\tpstrcpy(trunc_cmd, command);\n+\tif (!(trunc_cmd = talloc_strdup(mem_ctx, command))) {\n+\t\tDEBUG(0, (\"talloc failed\\n\"));\n+\t\tgoto nomem;\n+\t}\n \n-\tif(!(ptr = strtok(trunc_cmd, \" \\t\"))) {\n+\tif(!(ptr = strtok_r(trunc_cmd, \" \\t\", &saveptr))) {\n+\t\tTALLOC_FREE(trunc_cmd);\n \t\terrno = EINVAL;\n \t\treturn NULL;\n \t}\n@@ -1389,27 +1393,46 @@\n \t * Count the args.\n \t */\n \n-\tfor( argcl = 1; ptr; ptr = strtok(NULL, \" \\t\"))\n+\tfor( argcl = 1; ptr; ptr = strtok_r(NULL, \" \\t\", &saveptr))\n \t\targcl++;\n \n-\tif((argl = (char **)SMB_MALLOC((argcl + 1) * sizeof(char *))) == NULL)\n-\t\treturn NULL;\n+\tTALLOC_FREE(trunc_cmd);\n \n+\tif (!(argl = TALLOC_ARRAY(mem_ctx, char *, argcl + 1))) {\n+\t\tgoto nomem;\n+\t}\n+\n \t/*\n \t * Now do the extraction.\n \t */\n \n-\tpstrcpy(trunc_cmd, command);\n+\tif (!(trunc_cmd = talloc_strdup(mem_ctx, command))) {\n+\t\tgoto nomem;\n+\t}\n \n-\tptr = strtok(trunc_cmd, \" \\t\");\n+\tptr = strtok_r(trunc_cmd, \" \\t\", &saveptr);\n \ti = 0;\n-\targl[i++] = ptr;\n \n-\twhile((ptr = strtok(NULL, \" \\t\")) != NULL)\n-\t\targl[i++] = ptr;\n+\tif (!(argl[i++] = talloc_strdup(argl, ptr))) {\n+\t\tgoto nomem;\n+\t}\n \n+\twhile((ptr = strtok_r(NULL, \" \\t\", &saveptr)) != NULL) {\n+\n+\t\tif (!(argl[i++] = talloc_strdup(argl, ptr))) {\n+\t\t\tgoto nomem;\n+\t\t}\n+\t}\n+\n \targl[i++] = NULL;\n \treturn argl;\n+\n+ nomem:\n+\tDEBUG(0, (\"talloc failed\\n\"));\n+\tTALLOC_FREE(trunc_cmd);\n+\tTALLOC_FREE(argl);\n+\terrno = ENOMEM;\n+\treturn NULL;\n }\n \n /**************************************************************************\n@@ -1483,7 +1506,7 @@\n \t * Extract the command and args into a NULL terminated array.\n \t */\n \n-\tif(!(argl = extract_args(command)))\n+\tif(!(argl = extract_args(NULL, command)))\n \t\tgoto err_exit;\n \n \tentry->child_pid = sys_fork();\n@@ -1525,7 +1548,7 @@\n \t */\n \n \tclose (child_end);\n-\tSAFE_FREE(argl);\n+\tTALLOC_FREE(argl);\n \n \t/* Link into popen_chain. */\n \tentry->next = popen_chain;\n\nModified: branches/SAMBA_3_0_26/source/lib/system.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/system.c\t2007-06-29 13:07:54 UTC (rev 23657)\n+++ branches/SAMBA_3_0_26/source/lib/system.c\t2007-06-29 16:04:26 UTC (rev 23658)\n@@ -1366,21 +1366,25 @@\n #endif /* NOT CURRENTLY USED - JRA */\n \n /**************************************************************************\n- Extract a command into an arg list. Uses a static pstring for storage.\n- Caller frees returned arg list (which contains pointers into the static pstring).\n+ Extract a command into an arg list.\n ****************************************************************************/\n \n-static char **extract_args(const char *command)\n+static char **extract_args(TALLOC_CTX *mem_ctx, const char *command)\n {\n-\tstatic pstring trunc_cmd;\n+\tchar *trunc_cmd;\n+\tchar *saveptr;\n \tchar *ptr;\n \tint argcl;\n \tchar **argl = NULL;\n \tint i;\n \n-\tpstrcpy(trunc_cmd, command);\n+\tif (!(trunc_cmd = talloc_strdup(mem_ctx, command))) {\n+\t\tDEBUG(0, (\"talloc failed\\n\"));\n+\t\tgoto nomem;\n+\t}\n \n-\tif(!(ptr = strtok(trunc_cmd, \" \\t\"))) {\n+\tif(!(ptr = strtok_r(trunc_cmd, \" \\t\", &saveptr))) {\n+\t\tTALLOC_FREE(trunc_cmd);\n \t\terrno = EINVAL;\n \t\treturn NULL;\n \t}\n@@ -1389,27 +1393,46 @@\n \t * Count the args.\n \t */\n \n-\tfor( argcl = 1; ptr; ptr = strtok(NULL, \" \\t\"))\n+\tfor( argcl = 1; ptr; ptr = strtok_r(NULL, \" \\t\", &saveptr))\n \t\targcl++;\n \n-\tif((argl = (char **)SMB_MALLOC((argcl + 1) * sizeof(char *))) == NULL)\n-\t\treturn NULL;\n+\tTALLOC_FREE(trunc_cmd);\n \n+\tif (!(argl = TALLOC_ARRAY(mem_ctx, char *, argcl + 1))) {\n+\t\tgoto nomem;\n+\t}\n+\n \t/*\n \t * Now do the extraction.\n \t */\n \n-\tpstrcpy(trunc_cmd, command);\n+\tif (!(trunc_cmd = talloc_strdup(mem_ctx, command))) {\n+\t\tgoto nomem;\n+\t}\n \n-\tptr = strtok(trunc_cmd, \" \\t\");\n+\tptr = strtok_r(trunc_cmd, \" \\t\", &saveptr);\n \ti = 0;\n-\targl[i++] = ptr;\n \n-\twhile((ptr = strtok(NULL, \" \\t\")) != NULL)\n-\t\targl[i++] = ptr;\n+\tif (!(argl[i++] = talloc_strdup(argl, ptr))) {\n+\t\tgoto nomem;\n+\t}\n \n+\twhile((ptr = strtok_r(NULL, \" \\t\", &saveptr)) != NULL) {\n+\n+\t\tif (!(argl[i++] = talloc_strdup(argl, ptr))) {\n+\t\t\tgoto nomem;\n+\t\t}\n+\t}\n+\n \targl[i++] = NULL;\n \treturn argl;\n+\n+ nomem:\n+\tDEBUG(0, (\"talloc failed\\n\"));\n+\tTALLOC_FREE(trunc_cmd);\n+\tTALLOC_FREE(argl);\n+\terrno = ENOMEM;\n+\treturn NULL;\n }\n \n /**************************************************************************\n@@ -1483,7 +1506,7 @@\n \t * Extract the command and args into a NULL terminated array.\n \t */\n \n-\tif(!(argl = extract_args(command)))\n+\tif(!(argl = extract_args(NULL, command)))\n \t\tgoto err_exit;\n \n \tentry->child_pid = sys_fork();\n@@ -1525,7 +1548,7 @@\n \t */\n \n \tclose (child_end);\n-\tSAFE_FREE(argl);\n+\tTALLOC_FREE(argl);\n \n \t/* Link into popen_chain. */\n \tentry->next = popen_chain;\n\n"}