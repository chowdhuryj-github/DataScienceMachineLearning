{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "\"Patrick R.Michaud (via RT)\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #43231] [BUG] :slurpy :named after :optional fails ", "body": "# New Ticket Created by  Patrick R. Michaud \n# Please include the string:  [perl #43231]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nDefining a .sub with both :optional (positional) and :slurpy :named\nparameters results in an exception \"invalid arg type in \nnamed portion of args\" when called without the optional arg.\n\nExample:\n\n    $ cat x.pir\n    .sub 'main' :main\n        'foo'(123, 'xyz' => 'abc')\n        'foo'('xyz' => 'abc')\n    .end\n    \n    .sub 'foo'\n        .param string posarg       :optional\n        .param int    has_posarg   :opt_flag\n        .param pmc    namedargs    :slurpy :named\n        say posarg\n        $S0 = namedargs['xyz']\n        say $S0\n        .return()\n    .end\n    \n    $ ./parrot x.pir\n    123\n    abc\n    invalid arg type in named portion of args\n    current instr.: 'foo' pc 26 (x.pir:7)\n    called from Sub 'main' pc 21 (x.pir:3)\n    $\n  \nI've entered a (TODO) test for this into t/op/calling.t,\nand will cite this RT# in the test (as soon as I have it).\n\nThanks!\n\nPm \n\n"}