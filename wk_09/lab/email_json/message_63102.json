{"category": "ham", "to_address": "Hubertus <stonemonkey@web.de>", "from_address": "Martin Maechler <maechler@stat.math.ethz.ch>", "subject": "Re: [R] Problem/bug with smooth.spline and all.knots=T", "body": ">>>>> \"H\" == Hubertus  \n>>>>>     on Wed, 4 Jul 2007 14:58:44 +0200 writes:\n\n    H> Dear list,\n    H> if I do\n\n    H> smooth.spline(tmpSec, tmpT, all.knots=T)\n\n    H> with the attached data,\nThanks for providing the data via URL (see below)\n\n    H> with the attached data, I get this error-message:\n    H> Error in smooth.spline(tmpSec, tmpT, all.knots = T) :\n    H> smoothing parameter value too small\n    H> If I do\n    H> smooth.spline(tmpSec[-single arbitrary number], tmpT[-single arbitrary number], all.knots=T)\n\n    H> it works!\n\nnot quite (see below)\n\nI have transformed your reports into something reproducible\n(as *all* such R-help  messages should be!):\n\ndFile <- \"..../sspl_Hub_data.rda\"\n## use a file name you can write to\n\nif(file.exists(dFile)) {\n    load(dFile)\n} else {\n    load(url(\"http://phi.stonemonkey.org/smoothspline.rda\"))\n    d.tmp <- data.frame(Sec = tmpSec, T = tmpT)\n    save(d.tmp, file = dFile)\n}\nstr(d.tmp)\n## 'data.frame':\t2055 obs. of  2 variables:\n##  $ Sec: num  25743 25744 25745 25746 25747 ...\n##  $ T  : num  288 288 288 288 288 ...\n\n## Dear list,\n## if I do\n\nssT <- with(d.tmp, smooth.spline(Sec, T, all.knots=TRUE))\n\n## with the attached data, I get this error-message:\n##   Error in smooth.spline(tmpSec, tmpT, all.knots = T) :\n##         smoothing parameter value too small\n\n## MM: it works \"fine\" for me on 64-bit, RH5 (\"lynne\"),\n##     I but can confirm the problem on my 32-bit Pentium M notebook:\nssT <- with(d.tmp, smooth.spline(Sec, T, all.knots=TRUE,\n                                 control.spar = list(trace = TRUE)))\n## gives (on nb-mm):\n## sbart (ratio =   1.1399039e-11) iterations; initial tol1 = 3.334042e-05 :\n##        spar            GCV      b - a           e  Kind   NEW lspar         crit\n##  -------------------------------------------------------------------------------\n## -0.35410197 0.000220934951 3.0000e+00           0 GS -- 1.61033e-11   0.00027127\n## -0.35410197 0.000220934951 1.8541e+00      1.8541 FP GS 8.47468e-20  1.57859e-05\n## -0.79179607 1.57858803e-05 1.1459e+00     -1.1459 FP GS 9.41382e-22    3.555e-12\n## -1.06230590 3.55500244e-12 7.0820e-01     -0.7082 FP PI 3.86481e-21  2.08386e-10\n## -1.06230590 3.55500244e-12 5.2259e-01    -0.27051 FP PI  1.9073e-21  1.13107e-09\n## -1.06230590 3.55500244e-12 4.8014e-01    0.084898 FP GS 5.83319e-23  1.04372e-18\n## -1.22949017 1.04371872e-18 4.3769e-01    -0.43769 FP PI 2.30006e-22  4.72251e-15\n## -1.22949017 1.04371872e-18 3.5298e-01    -0.16718 FP PI  1.1561e-22  2.37808e-16\n## -1.22949017 1.04371872e-18 3.1163e-01    0.082471 FP PI 7.90222e-23  2.03459e-15\n## -1.22949017 1.04371872e-18 2.8876e-01    0.041121 FP GS  1.0457e-23  2.03459e-15\n##   >>>   1.0457e-23  1.04372e-18\n## Error in smooth.spline(Sec, T, all.knots = TRUE, control.spar = list(trace = 2)) :\n## \tsmoothing parameter value too small\n\n## Where it works, I get\nssT\n## Call:\n## smooth.spline(x = Sec, y = T, all.knots = TRUE)\n\n## Smoothing Parameter  spar= -1.044387  lambda= 1.266990e-21 (22 iterations)\n## Equivalent Degrees of Freedom (Df): 2054.954\n## Penalized Criterion: 4.420969e-20\n\n\n## OTOH, need a relaxed convergence criterion:\nssT. <- with(d.tmp,\n             smooth.spline(Sec, T, all.knots=TRUE,\n                           control.spar = list(trace = TRUE,\n                           tol=1e-4, eps= 0.01)))\nssT.\n##-> Df: 2055.163 --- interpolation !!!!\n\n##------> really almost fails to do spline *interpolation* as a\n##        limiting case.\n\nIn principle that's well know:\nthe smoothing spline solution tends to an interpolation spline\nwhen lambda -> 0, however the formula (algorithm) that is used\nfor smoothing spline fitting( given lambda) is not applicable to\nthe limiting case, lambda=0.\n\nI agree that this is a small remaining flaw of an already\nsomewhat sophisticated algorithm for determining the smoothing\nparameter.\nI'm sure we could fix the algorithm to \"work\" in this case,\nhowever to do the fix in such a way that all other cases remain\nreturning the exact same solution as now, seems a harder task.\nAnd changing the default behavior of smooth.spline() even if only\nslightly, is quite a bit problematic.\nI know it, because I did it many many R versions back... \n\nFor you data, see many possibilities;\n- don't use all.knots = TRUE\n- really use spline interpolation,\n  library(splines)\n  ?interpSpline \n- use 'df = ' if you want to apply it to\n  many datasets\n\n- don't use 'all.knots = TRUE'  or use 'cv=TRUE' or ... :\n\n## What about \"proper\" crossvalidation instead of GCV (default)\n## which I'd recommend anyway on todays fast computers :\nssTg <- with(d.tmp,\n             smooth.spline(Sec, T, all.knots=TRUE, cv= TRUE,\n                           control.spar = list(trace = TRUE)))\n\n## *does* work (interestingly)\nssTg # hmm, also DF = 2055\nplot(T ~ Sec, data = d.tmp, pch = \".\")\nlines(predict(ssTg), col=2)\n\n## don't use all.knots:\nssTg. <- with(d.tmp,\n              smooth.spline(Sec, T, cv= TRUE,\n                            control.spar = list(trace = TRUE)))\n## *does* work too\nssTg. # DF = 103.8\nplot(T ~ Sec, data = d.tmp, pch = \".\")\nlines(predict(ssTg.), col=2)\n\nsfsmisc::TA.plot(ssTg., labels=\"o\")\nsfsmisc::p.ts(residuals(ssTg.))\n## hmm, the residuals *do* look like a time-series\nacf(residuals(ssTg.))\nplot(spectrum(residuals(ssTg.), method = \"ar\"))\n\n--------------------\nRegards,\nMaritn Maechler, ETH Zurich\n\n\n## If I do\n## If I do\n##   smooth.spline(tmpSec[-single arbitrary number], tmpT[-single arbitrary number], all.knots=T)\n## it works!\n\n## MM: *reproducible* code, please!\nN <- nrow(d.tmp)\nset.seed(1)# or any(?) other\nfor(n in 1:100) {\n    i <- sample(N, 1)\n    cat(sprintf(\"i =%5d : \", i))\n    sst.i <- with(d.tmp, smooth.spline(Sec[-i], T[-i], all.knots=TRUE))\n    cat(\" -> df = \", format(sst.i$df),\"\\n\")\n}\n\n## what Hubertus says is not true, already the 3rd example\n## also gives error:\n\n## i =  546 :  -> df =  2054.019\n## i =  765 :  -> df =  2053.997\n## i = 1178 : Error in smooth.spline(Sec[-i], T[-i], all.knots = TRUE) :\n## \tsmoothing parameter value too small\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}