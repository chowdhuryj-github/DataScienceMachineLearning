{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Juerd Waalboer <juerd@convolution.nl>", "subject": "Re: Is Perl 6 too late?", "body": "Thomas Wittek skribis 2007-05-14 22:31 (+0200):\n> $.but! (*adding$ %*characters _+that^# &$might) @#not_ !#be()\n> !&necessary_ *#$doesn't! *(make) !@_it$ =_easier\n\nThose characters are meaningless. The many symbols in Perl 6 have very\ndistinct meanings, which makes them very powerful tools!\n\n> Oh, I thought Perl was a programming language. My fault.\n> Apples and oranges.\n\nThere is a reason that C programmers don't throw away their source code\nafter compiling it.\n\nWhile in some companies, writing software is indeed a unidirectional\nprocess, most companies that wish to survive have to maintain what they\nwrote, and then you also have to read it.\n\nProgramming languages and spoken languages are both read by human\nbeings, so they should still be easily parsed by these creatures.\n\n> Most modern scripting languages don't need the semicolons. I think\n> there's no plausible reason for them.\n\nThey typically have a line continuation character instead of a\nsemicolon, though. However, like the previous sentence, and this one\ntoo, actually, sometimes there is a line break in between.\n\nAgain, written language can be a nice example, because if we had line \\\ncontinuation characters in here, it would suddenly look a lot \\\ndifferent. Did you, while reading this, pause, just before \"different\"?\n-- \nkorajn salutojn,\n\n  juerd waalboer:  perl hacker   \n  convolution:     ict solutions and consultancy \n"}