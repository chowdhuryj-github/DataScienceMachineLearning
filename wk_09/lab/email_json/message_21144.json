{"category": "ham", "to_address": "samba tech <samba-technical@lists.samba.org>", "from_address": "Herb Lewis <hlewis@panasas.com>", "subject": "question about netsamlogon_cache_get", "body": "we have the following code in this function ifdef'ed out.  I don't know\nif it is this or something else causing my problem. If you login as a\nuser that is a member of several groups and then have a file that is\naccessable through only one of those groups, access is granted as\nexpected. If you now remove the user from that group and logout and\nlog back in, access is still granted because of the entry in\nnetsamlogon_cache.tdb. It seems that access will get denied about\n20 minutes later so something else is refreshing the group membership\nbut I'm not sure what. Any ideas where we need to fix this?\n\n#if 0   /* The netsamlogon cache needs to hang around.  Something about\n            this feels wrong, but it is the only way we can get all of the\n            groups.  The old universal groups cache didn't expire either.\n            --jerry */\n         {\n                 time_t          now = time(NULL);\n                 uint32          time_diff;\n\n                 /* is the entry expired? */\n                 time_diff = now - t;\n\n                 if ( (time_diff < 0 ) || (time_diff > \nlp_winbind_cache_time()) ) {\n                         DEBUG(10,(\"netsamlogon_cache_get: cache entry \nexpired \\n\"));\n                         tdb_delete( netsamlogon_tdb, key );\n                         SAFE_FREE( user );\n                 }\n#endif\n\n\n"}