{"category": "ham", "to_address": "\"jerry gay\" <jerry.gay@gmail.com>", "from_address": "\"Paul Cochrane\" <paultcochrane@gmail.com>", "subject": "Re: [perl #42427] [CAGE] cleanup perlcritic errors", "body": "Jerry,\n\n> let me start with a side point, sorry for the early tangent. why isn't\n> perlcritic.t using a Getopt:: module--it should be. that'd be a good\n> cage task, and would make one of my suggestions easier to implement.\n\nAs discussed on #parrot, this was already a TODO ticket and Getopt\nargument parsing has been implemented as of r19319.\n\n> arranging the %policies as a HoH would make it easier to add groupings\n> as we please. something like:\n>   my %policies = ( default => { ... }, extra => { ... }, );\n>\n> have one flag to select which group of policies to run. the special\n> value 'all' would run all groups. 'default' would be the default. for\n> example:\n>   perl t/codingstd/perlcritic.t --group=extra\n\nI've implemented the --group command line argument, but I decided it\nwas easier to implement separate hashes for 'default' and 'extra'\npolicies.  It is then simple to create a general hash for specifying\nwhich policies need to be processed in any given run.  See r19332 for\nmore details.  If you think my implementation can be improved, please\nsay!  I'm always up to learn more :-)\n\nThanks for the feedback!  It helps me sharpen my perl skills.\n\nPaul\n\n"}