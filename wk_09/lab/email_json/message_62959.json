{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23726 - in branches/SAMBA_3_0/source: include\n\tlib libsmb smbd", "body": "Author: vlendec\nDate: 2007-07-05 16:33:37 +0000 (Thu, 05 Jul 2007)\nNew Revision: 23726\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23726\n\nLog:\nExplicitly pass down the FLAGS2 field to srvstr_pull_buf. The next\ncheckin will pull this up to srvstr_get_path. At that point we can get more\nindependent of the inbuf, the base_ptr in pull_string will only be used\nto satisfy UCS2 alignment constraints.\n\n\nModified:\n   branches/SAMBA_3_0/source/include/safe_string.h\n   branches/SAMBA_3_0/source/include/srvstr.h\n   branches/SAMBA_3_0/source/lib/charcnv.c\n   branches/SAMBA_3_0/source/libsmb/clistr.c\n   branches/SAMBA_3_0/source/libsmb/ntlmssp_parse.c\n   branches/SAMBA_3_0/source/libsmb/smbencrypt.c\n   branches/SAMBA_3_0/source/smbd/ipc.c\n   branches/SAMBA_3_0/source/smbd/message.c\n   branches/SAMBA_3_0/source/smbd/nttrans.c\n   branches/SAMBA_3_0/source/smbd/pipes.c\n   branches/SAMBA_3_0/source/smbd/reply.c\n   branches/SAMBA_3_0/source/smbd/sesssetup.c\n   branches/SAMBA_3_0/source/smbd/trans2.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/include/safe_string.h\n===================================================================\n--- branches/SAMBA_3_0/source/include/safe_string.h\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/include/safe_string.h\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -164,7 +164,7 @@\n #define safe_strcpy(dest,src,maxlength)\tsafe_strcpy_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,dest,src,maxlength)\n #define safe_strcat(dest,src,maxlength)\tsafe_strcat_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE,dest,src,maxlength)\n #define push_string(base_ptr, dest, src, dest_len, flags) push_string_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, base_ptr, dest, src, dest_len, flags)\n-#define pull_string(base_ptr, dest, src, dest_len, src_len, flags) pull_string_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, base_ptr, dest, src, dest_len, src_len, flags)\n+#define pull_string(base_ptr, smb_flags2, dest, src, dest_len, src_len, flags) pull_string_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, base_ptr, smb_flags2, dest, src, dest_len, src_len, flags)\n #define clistr_push(cli, dest, src, dest_len, flags) clistr_push_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, cli, dest, src, dest_len, flags)\n #define clistr_pull(cli, dest, src, dest_len, src_len, flags) clistr_pull_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, cli, dest, src, dest_len, src_len, flags)\n #define srvstr_push(base_ptr, dest, src, dest_len, flags) srvstr_push_fn2(SAFE_STRING_FUNCTION_NAME, SAFE_STRING_LINE, base_ptr, dest, src, dest_len, flags)\n@@ -193,10 +193,10 @@\n     ? __unsafe_string_function_usage_here_size_t__() \\\n     : push_string_fn(fn_name, fn_line, base_ptr, dest, src, dest_len, flags))\n \n-#define pull_string_fn2(fn_name, fn_line, base_ptr, dest, src, dest_len, src_len, flags) \\\n+#define pull_string_fn2(fn_name, fn_line, base_ptr, smb_flags2, dest, src, dest_len, src_len, flags) \\\n     (CHECK_STRING_SIZE(dest, dest_len) \\\n     ? __unsafe_string_function_usage_here_size_t__() \\\n-    : pull_string_fn(fn_name, fn_line, base_ptr, dest, src, dest_len, src_len, flags))\n+    : pull_string_fn(fn_name, fn_line, base_ptr, smb_flags2, dest, src, dest_len, src_len, flags))\n \n #define clistr_push_fn2(fn_name, fn_line, cli, dest, src, dest_len, flags) \\\n     (CHECK_STRING_SIZE(dest, dest_len) \\\n\nModified: branches/SAMBA_3_0/source/include/srvstr.h\n===================================================================\n--- branches/SAMBA_3_0/source/include/srvstr.h\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/include/srvstr.h\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -18,14 +18,14 @@\n    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n */\n \n-#define srvstr_pull(base_ptr, dest, src, dest_len, src_len, flags) \\\n-    pull_string(base_ptr, dest, src, dest_len, src_len, flags)\n+#define srvstr_pull(base_ptr, smb_flags2, dest, src, dest_len, src_len, flags) \\\n+    pull_string(base_ptr, smb_flags2, dest, src, dest_len, src_len, flags)\n \n /* pull a string from the smb_buf part of a packet. In this case the\n    string can either be null terminated or it can be terminated by the\n    end of the smbbuf area \n */\n \n-#define srvstr_pull_buf(inbuf, dest, src, dest_len, flags) \\\n-    pull_string(inbuf, dest, src, dest_len, smb_bufrem(inbuf, src), flags)\n+#define srvstr_pull_buf(inbuf, smb_flags2, dest, src, dest_len, flags) \\\n+    pull_string(inbuf, smb_flags2, dest, src, dest_len, smb_bufrem(inbuf, src), flags)\n \n\nModified: branches/SAMBA_3_0/source/lib/charcnv.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/charcnv.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/lib/charcnv.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -1376,16 +1376,24 @@\n  The resulting string in \"dest\" is always null terminated.\n **/\n \n-size_t pull_string_fn(const char *function, unsigned int line, const void *base_ptr, char *dest, const void *src, size_t dest_len, size_t src_len, int flags)\n+size_t pull_string_fn(const char *function, unsigned int line,\n+\t\t      const void *base_ptr, uint16 smb_flags2, char *dest,\n+\t\t      const void *src, size_t dest_len, size_t src_len,\n+\t\t      int flags)\n {\n #ifdef DEVELOPER\n \tif (dest_len != (size_t)-1)\n \t\tclobber_region(function, line, dest, dest_len);\n #endif\n \n+\tif ((base_ptr == NULL) && ((flags & (STR_ASCII|STR_UNICODE)) == 0)) {\n+\t\tsmb_panic(\"No base ptr to get flg2 and neither ASCII nor \"\n+\t\t\t  \"UNICODE defined\");\n+\t}\n+\n \tif (!(flags & STR_ASCII) && \\\n \t    ((flags & STR_UNICODE || \\\n-\t      (SVAL(base_ptr, smb_flg2) & FLAGS2_UNICODE_STRINGS)))) {\n+\t      (smb_flags2 & FLAGS2_UNICODE_STRINGS)))) {\n \t\treturn pull_ucs2(base_ptr, dest, src, dest_len, src_len, flags);\n \t}\n \treturn pull_ascii(dest, src, dest_len, src_len, flags);\n\nModified: branches/SAMBA_3_0/source/libsmb/clistr.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/clistr.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/libsmb/clistr.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -43,7 +43,9 @@\n \t\t   int dest_len, int src_len, \n \t\t   int flags)\n {\n-\treturn pull_string_fn(function, line, cli->inbuf, dest, src, dest_len, src_len, flags);\n+\treturn pull_string_fn(function, line, cli->inbuf,\n+\t\t\t      SVAL(cli->inbuf, smb_flg2), dest, src, dest_len,\n+\t\t\t      src_len, flags);\n }\n \n \n\nModified: branches/SAMBA_3_0/source/libsmb/ntlmssp_parse.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/ntlmssp_parse.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/libsmb/ntlmssp_parse.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -220,9 +220,10 @@\n \t\t\t\t\treturn False;\n \n \t\t\t\tif (0 < len1) {\n-\t\t\t\t\tpull_string(NULL, p, blob->data + ptr, sizeof(p), \n-\t\t\t\t\t\t    len1, \n-\t\t\t\t\t\t    STR_UNICODE|STR_NOALIGN);\n+\t\t\t\t\tpull_string(\n+\t\t\t\t\t\tNULL, 0, p,\n+\t\t\t\t\t\tblob->data + ptr, sizeof(p),\n+\t\t\t\t\t\tlen1, STR_UNICODE|STR_NOALIGN);\n \t\t\t\t\t(*ps) = smb_xstrdup(p);\n \t\t\t\t} else {\n \t\t\t\t\t(*ps) = smb_xstrdup(\"\");\n@@ -248,9 +249,10 @@\n \t\t\t\t\treturn False;\t\n \n \t\t\t\tif (0 < len1) {\n-\t\t\t\t\tpull_string(NULL, p, blob->data + ptr, sizeof(p), \n-\t\t\t\t\t\t    len1, \n-\t\t\t\t\t\t    STR_ASCII|STR_NOALIGN);\n+\t\t\t\t\tpull_string(\n+\t\t\t\t\t\tNULL, 0, p,\n+\t\t\t\t\t\tblob->data + ptr, sizeof(p),\n+\t\t\t\t\t\tlen1, STR_ASCII|STR_NOALIGN);\n \t\t\t\t\t(*ps) = smb_xstrdup(p);\n \t\t\t\t} else {\n \t\t\t\t\t(*ps) = smb_xstrdup(\"\");\n@@ -300,9 +302,10 @@\n \t\t\tif (blob->data + head_ofs < (uint8 *)head_ofs || blob->data + head_ofs < blob->data)\n \t\t\t\treturn False;\t\n \t\n-\t\t\thead_ofs += pull_string(NULL, p, blob->data+head_ofs, sizeof(p), \n-\t\t\t\t\t\tblob->length - head_ofs, \n-\t\t\t\t\t\tSTR_ASCII|STR_TERMINATE);\n+\t\t\thead_ofs += pull_string(\n+\t\t\t\tNULL, 0, p, blob->data+head_ofs, sizeof(p),\n+\t\t\t\tblob->length - head_ofs,\n+\t\t\t\tSTR_ASCII|STR_TERMINATE);\n \t\t\tif (strcmp(s, p) != 0) {\n \t\t\t\treturn False;\n \t\t\t}\n\nModified: branches/SAMBA_3_0/source/libsmb/smbencrypt.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/smbencrypt.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/libsmb/smbencrypt.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -555,7 +555,8 @@\n \t}\n \n \t/* decode into the return buffer.  Buffer length supplied */\n- \t*new_pw_len = pull_string(NULL, new_pwrd, &in_buffer[512 - byte_len], new_pwrd_size, \n+\t*new_pw_len = pull_string(NULL, 0, new_pwrd,\n+\t\t\t\t  &in_buffer[512 - byte_len], new_pwrd_size,\n \t\t\t\t  byte_len, string_flags);\n \n #ifdef DEBUG_PASSWORD\n\nModified: branches/SAMBA_3_0/source/smbd/ipc.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/ipc.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/ipc.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -543,8 +543,8 @@\n \tstate->one_way = BITSETW(inbuf+smb_vwv5,1);\n \n \tmemset(state->name, '\\0',sizeof(state->name));\n-\tsrvstr_pull_buf(inbuf, state->name, smb_buf(inbuf),\n-\t\t\tsizeof(state->name), STR_TERMINATE);\n+\tsrvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), state->name,\n+\t\t\tsmb_buf(inbuf), sizeof(state->name), STR_TERMINATE);\n \t\n \tif ((dscnt > state->total_data) || (pscnt > state->total_param))\n \t\tgoto bad_param;\n\nModified: branches/SAMBA_3_0/source/smbd/message.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/message.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/message.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -134,8 +134,10 @@\n \toutsize = set_message(inbuf,outbuf,0,0,True);\n \n \tp = smb_buf(inbuf)+1;\n-\tp += srvstr_pull_buf(inbuf, msgfrom, p, sizeof(msgfrom), STR_ASCII|STR_TERMINATE) + 1;\n-\tp += srvstr_pull_buf(inbuf, msgto, p, sizeof(msgto), STR_ASCII|STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), msgfrom, p,\n+\t\t\t     sizeof(msgfrom), STR_ASCII|STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), msgto, p,\n+\t\t\t     sizeof(msgto), STR_ASCII|STR_TERMINATE) + 1;\n \n \tmsg = p;\n \n@@ -176,8 +178,10 @@\n \tmsgpos = 0;\n \n \tp = smb_buf(inbuf)+1;\n-\tp += srvstr_pull_buf(inbuf, msgfrom, p, sizeof(msgfrom), STR_ASCII|STR_TERMINATE) + 1;\n-\tp += srvstr_pull_buf(inbuf, msgto, p, sizeof(msgto), STR_ASCII|STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), msgfrom, p,\n+\t\t\t     sizeof(msgfrom), STR_ASCII|STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), msgto, p,\n+\t\t\t     sizeof(msgto), STR_ASCII|STR_TERMINATE) + 1;\n \n \tDEBUG( 3, ( \"SMBsendstrt (from %s to %s)\\n\", msgfrom, msgto ) );\n \n\nModified: branches/SAMBA_3_0/source/smbd/nttrans.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/nttrans.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/nttrans.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -382,7 +382,8 @@\n \tchar *p = NULL;\n \tuint32 flags = IVAL(inbuf,smb_ntcreate_Flags);\n \n-\tsrvstr_pull_buf(inbuf, fname, smb_buf(inbuf), sizeof(fname), STR_TERMINATE);\n+\tsrvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), fname, smb_buf(inbuf),\n+\t\t\tsizeof(fname), STR_TERMINATE);\n \n \tif ((ret = nt_open_pipe(fname, conn, inbuf, outbuf, &pnum)) != 0) {\n \t\treturn ret;\n\nModified: branches/SAMBA_3_0/source/smbd/pipes.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/pipes.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/pipes.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -65,7 +65,8 @@\n \tint i;\n \n \t/* XXXX we need to handle passed times, sattr and flags */\n-\tsrvstr_pull_buf(inbuf, pipe_name, smb_buf(inbuf), sizeof(pipe_name), STR_TERMINATE);\n+\tsrvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), pipe_name,\n+\t\t\tsmb_buf(inbuf), sizeof(pipe_name), STR_TERMINATE);\n \n \t/* If the name doesn't start \\PIPE\\ then this is directed */\n \t/* at a mailslot or something we really, really don't understand, */\n\nModified: branches/SAMBA_3_0/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/reply.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/reply.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -218,9 +218,11 @@\n #endif\n \n \tif (src_len == 0) {\n-\t\tret = srvstr_pull_buf( inbuf, dest, src, dest_len, flags);\n+\t\tret = srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), dest, src,\n+\t\t\t\t      dest_len, flags);\n \t} else {\n-\t\tret = srvstr_pull( inbuf, dest, src, dest_len, src_len, flags);\n+\t\tret = srvstr_pull(inbuf, SVAL(inbuf, smb_flg2), dest, src,\n+\t\t\t\t  dest_len, src_len, flags);\n \t}\n \n \t*contains_wcard = False;\n@@ -255,9 +257,11 @@\n #endif\n \n \tif (src_len == 0) {\n-\t\tret = srvstr_pull_buf( inbuf, dest, src, dest_len, flags);\n+\t\tret = srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), dest, src,\n+\t\t\t\t      dest_len, flags);\n \t} else {\n-\t\tret = srvstr_pull( inbuf, dest, src, dest_len, src_len, flags);\n+\t\tret = srvstr_pull(inbuf, SVAL(inbuf, smb_flg2), dest, src,\n+\t\t\t\t  dest_len, src_len, flags);\n \t}\n \n \tif (SVAL(inbuf,smb_flg2) & FLAGS2_DFS_PATHNAMES) {\n@@ -391,10 +395,13 @@\n \t*service_buf = *password = *dev = 0;\n \n \tp = smb_buf(inbuf)+1;\n-\tp += srvstr_pull_buf(inbuf, service_buf, p, sizeof(service_buf), STR_TERMINATE) + 1;\n-\tpwlen = srvstr_pull_buf(inbuf, password, p, sizeof(password), STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), service_buf, p,\n+\t\t\t     sizeof(service_buf), STR_TERMINATE) + 1;\n+\tpwlen = srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), password, p,\n+\t\t\t\tsizeof(password), STR_TERMINATE) + 1;\n \tp += pwlen;\n-\tp += srvstr_pull_buf(inbuf, dev, p, sizeof(dev), STR_TERMINATE) + 1;\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), dev, p, sizeof(dev),\n+\t\t\t     STR_TERMINATE) + 1;\n \n \tp = strrchr_m(service_buf,'\\\\');\n \tif (p) {\n@@ -478,7 +485,8 @@\n \t\tp = smb_buf(inbuf) + passlen + 1;\n \t}\n \n-\tp += srvstr_pull_buf(inbuf, path, p, sizeof(path), STR_TERMINATE);\n+\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), path, p,\n+\t\t\t     sizeof(path), STR_TERMINATE);\n \n \t/*\n \t * the service name can be either: \\\\server\\share\n@@ -495,7 +503,8 @@\n \telse\n \t\tfstrcpy(service,path);\n \t\t\n-\tp += srvstr_pull(inbuf, client_devicetype, p, sizeof(client_devicetype), 6, STR_ASCII);\n+\tp += srvstr_pull(inbuf, SVAL(inbuf, smb_flg2), client_devicetype, p,\n+\t\t\t sizeof(client_devicetype), 6, STR_ASCII);\n \n \tDEBUG(4,(\"Client requested device type [%s] for share [%s]\\n\", client_devicetype, service));\n \n\nModified: branches/SAMBA_3_0/source/smbd/sesssetup.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/sesssetup.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/sesssetup.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -1057,9 +1057,12 @@\n #endif\n \n \tp2 = inbuf + smb_vwv13 + data_blob_len;\n-\tp2 += srvstr_pull_buf(inbuf, native_os, p2, sizeof(native_os), STR_TERMINATE);\n-\tp2 += srvstr_pull_buf(inbuf, native_lanman, p2, sizeof(native_lanman), STR_TERMINATE);\n-\tp2 += srvstr_pull_buf(inbuf, primary_domain, p2, sizeof(primary_domain), STR_TERMINATE);\n+\tp2 += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), native_os, p2,\n+\t\t\t      sizeof(native_os), STR_TERMINATE);\n+\tp2 += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), native_lanman, p2,\n+\t\t\t      sizeof(native_lanman), STR_TERMINATE);\n+\tp2 += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), primary_domain, p2,\n+\t\t\t      sizeof(primary_domain), STR_TERMINATE);\n \tDEBUG(3,(\"NativeOS=[%s] NativeLanMan=[%s] PrimaryDomain=[%s]\\n\", \n \t\tnative_os, native_lanman, primary_domain));\n \n@@ -1283,7 +1286,9 @@\n \t\t\tplaintext_password.data[passlen1] = 0;\n \t\t}\n \n-\t\tsrvstr_pull_buf(inbuf, user, smb_buf(inbuf)+passlen1, sizeof(user), STR_TERMINATE);\n+\t\tsrvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), user,\n+\t\t\t\tsmb_buf(inbuf)+passlen1, sizeof(user),\n+\t\t\t\tSTR_TERMINATE);\n \t\t*domain = 0;\n \n \t} else {\n@@ -1363,21 +1368,28 @@\n \n \t\t\tif (unic && (passlen2 == 0) && passlen1) {\n \t\t\t\t/* Only a ascii plaintext password was sent. */\n-\t\t\t\tsrvstr_pull(inbuf, pass, smb_buf(inbuf), sizeof(pass),\n-\t\t\t\t\tpasslen1, STR_TERMINATE|STR_ASCII);\n+\t\t\t\tsrvstr_pull(inbuf, SVAL(inbuf, smb_flg2), pass,\n+\t\t\t\t\t    smb_buf(inbuf), sizeof(pass),\n+\t\t\t\t\t    passlen1, STR_TERMINATE|STR_ASCII);\n \t\t\t} else {\n-\t\t\t\tsrvstr_pull(inbuf, pass, smb_buf(inbuf), \n-\t\t\t\t\tsizeof(pass),  unic ? passlen2 : passlen1, \n-\t\t\t\t\tSTR_TERMINATE);\n+\t\t\t\tsrvstr_pull(inbuf, SVAL(inbuf, smb_flg2), pass,\n+\t\t\t\t\t    smb_buf(inbuf), sizeof(pass),\n+\t\t\t\t\t    unic ? passlen2 : passlen1,\n+\t\t\t\t\t    STR_TERMINATE);\n \t\t\t}\n \t\t\tplaintext_password = data_blob(pass, strlen(pass)+1);\n \t\t}\n \t\t\n \t\tp += passlen1 + passlen2;\n-\t\tp += srvstr_pull_buf(inbuf, user, p, sizeof(user), STR_TERMINATE);\n-\t\tp += srvstr_pull_buf(inbuf, domain, p, sizeof(domain), STR_TERMINATE);\n-\t\tp += srvstr_pull_buf(inbuf, native_os, p, sizeof(native_os), STR_TERMINATE);\n-\t\tp += srvstr_pull_buf(inbuf, native_lanman, p, sizeof(native_lanman), STR_TERMINATE);\n+\t\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), user, p,\n+\t\t\t\t     sizeof(user), STR_TERMINATE);\n+\t\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), domain, p,\n+\t\t\t\t     sizeof(domain), STR_TERMINATE);\n+\t\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2), native_os,\n+\t\t\t\t     p, sizeof(native_os), STR_TERMINATE);\n+\t\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2),\n+\t\t\t\t     native_lanman, p, sizeof(native_lanman),\n+\t\t\t\t     STR_TERMINATE);\n \n \t\t/* not documented or decoded by Ethereal but there is one more string \n \t\t   in the extra bytes which is the same as the PrimaryDomain when using \n@@ -1387,7 +1399,10 @@\n \t\t\n \t\tbyte_count = SVAL(inbuf, smb_vwv13);\n \t\tif ( PTR_DIFF(p, save_p) < byte_count)\n-\t\t\tp += srvstr_pull_buf(inbuf, primary_domain, p, sizeof(primary_domain), STR_TERMINATE);\n+\t\t\tp += srvstr_pull_buf(inbuf, SVAL(inbuf, smb_flg2),\n+\t\t\t\t\t     primary_domain, p,\n+\t\t\t\t\t     sizeof(primary_domain),\n+\t\t\t\t\t     STR_TERMINATE);\n \t\telse \n \t\t\tfstrcpy( primary_domain, \"null\" );\n \n\nModified: branches/SAMBA_3_0/source/smbd/trans2.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/trans2.c\t2007-07-05 16:27:47 UTC (rev 23725)\n+++ branches/SAMBA_3_0/source/smbd/trans2.c\t2007-07-05 16:33:37 UTC (rev 23726)\n@@ -4530,7 +4530,8 @@\n \t\treturn NT_STATUS_ACCESS_DENIED;\n \t}\n \n-\tsrvstr_pull(inbuf, link_target, pdata, sizeof(link_target), total_data, STR_TERMINATE);\n+\tsrvstr_pull(inbuf, SVAL(inbuf, smb_flg2), link_target, pdata,\n+\t\t    sizeof(link_target), total_data, STR_TERMINATE);\n \n \t/* !widelinks forces the target path to be within the share. */\n \t/* This means we can interpret the target as a pathname. */\n@@ -6366,7 +6367,8 @@\n \tif(!lp_host_msdfs())\n \t\treturn ERROR_DOS(ERRDOS,ERRbadfunc);\n \n-\tsrvstr_pull(inbuf, pathname, &params[2], sizeof(pathname), total_params - 2, STR_TERMINATE);\n+\tsrvstr_pull(inbuf, SVAL(inbuf, smb_flg2), pathname, &params[2],\n+\t\t    sizeof(pathname), total_params - 2, STR_TERMINATE);\n \tif((reply_size = setup_dfs_referral(conn, pathname,max_referral_level,ppdata,&status)) < 0)\n \t\treturn ERROR_NT(status);\n     \n\n"}