{"category": "ham", "to_address": "bnis@list.cr.yp.to", "from_address": "\"D. J. Bernstein\" <djb@cr.yp.to>", "subject": "fuerer multiplication", "body": "The Schoenhage-Strassen O(n log n log log n) bound is obsolete: Martin\nFuerer, in a paper \"Faster integer multiplication\" to appear at STOC\n2007, has proven a bound of n (log n) 2^(log* n), where log* is the\nnumber of log iterations required to reach 1.\n\nThis was stated as a purely asymptotic result, and an improvement from\nlog log n to 2^(log* n) might not sound noticeable for any reasonable\nvalue of n; but I think that Fuerer's idea is worth investigating for\nmultiplications in practice.\n\nThe core idea, which I'll choose some concrete parameters to illustrate,\nis to perform an FFT of size 1048576 over the ring \\C[x]/(x^16 + 1),\nusing a 32768th root of x in the ring as the 1048576th root of 1. This\ninvolves\n\n   10485760 additions in the ring (so 335544320 additions in \\R),\n   10485760 subtractions in the ring, and\n   10485760 multiplications in the ring.\n\nYou're supposed to know that---as in the split-radix FFT---you can\narrange for most of the multiplications in an FFT to be by \"easy\" roots\nof 1. In this case, most of the multiplications are by powers of x, and\nare thus simple coefficient reshufflings, with negations absorbed into\nsubsequent operations. A small fraction of the multiplications, only\nabout 2 million, are general multiplications in \\C[x]/(x^16+1), which\nasymptotically should be embedded into smaller integer multiplications,\nwith precomputations on the constant inputs.\n\nActually, \\C is unnecessary. The ring \\R[x]/(x^16 + 1) has\n\n   sum_{j = -15, -13, ..., 13, 15}\n     (-1/16) exp(32769pi ij/524288) (x^16+1)/(x-exp(pi ij/16))\n   = 0.00003071362986347767105... x^15\n   - 0.00001565791788919659759... x^14\n   + ...\n   + 0.00003071548037755724105... x\n   + 0.99999999847402000575938...\n\nas a 32768th root of x. You can also replace \\R with \\Z/p for primes p\ncongruent to +-1 mod 1048576, eliminating roundoff error. If p has 56\nbits, for example, then additions mod p will simply be 64-bit machine\nadditions, and multiplications in (\\Z/p)/(x^16 + 1) can be embedded into\nmultiplications mod 2^2048 + 1 with minimal overhead. The traditional\nproblem with number-theoretic transforms, namely the serious slowdown in\nmultiplications mod p, is nicely addressed by Fuerer's user-selectable\nreduction in the frequency of multiplications.\n\nFor comparison, a normal size-16777216 FFT over \\C with the tangent FFT\n(Van Buskirk) would take\n\n   521957832 additions in \\R,\n   521957832 subtractions in \\R, and\n   400167624 multiplications in \\R,\n\nif I've counted correctly. (A traditional split-radix FFT would take\n466033784 multiplications and the same number of additions/subtractions,\nbut would allow 113712244 multiplications to be replaced by additions;\nmaybe a good tradeoff if multiplications are expensive.) A size-16777216\nFFT over \\R is about half the cost. Maybe 184 operations in \\R are less\nexpensive than 1 multiplication in (\\Z/p)/(x^16 + 1), but they also\naccomplish much less, since most of the bits are lost to roundoff error.\nGoing beyond 64-bit precision in \\R makes the multiplications much more\nexpensive.\n\n---D. J. Bernstein, Professor, Mathematics, Statistics,\nand Computer Science, University of Illinois at Chicago\n\n"}