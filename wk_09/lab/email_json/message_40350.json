{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jelmer@samba.org", "subject": "svn commit: samba r23289 - in branches/SAMBA_4_0: .\n\tsource/cluster/ctdb/common source/include source/lib/json\n\tsource/lib/util source/script", "body": "Author: jelmer\nDate: 2007-06-01 12:01:53 +0000 (Fri, 01 Jun 2007)\nNew Revision: 23289\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23289\n\nLog:\nProvide support for GCC attributes _PURE_, _NONNULL_, _DEPRECATED_, _NORETURN_ and _WARN_UNUSED_RESULT_.\nModified:\n   branches/SAMBA_4_0/\n   branches/SAMBA_4_0/source/cluster/ctdb/common/ctdb_util.c\n   branches/SAMBA_4_0/source/include/includes.h\n   branches/SAMBA_4_0/source/lib/json/debug.c\n   branches/SAMBA_4_0/source/lib/json/linkhash.c\n   branches/SAMBA_4_0/source/lib/util/fault.c\n   branches/SAMBA_4_0/source/lib/util/util_str.c\n   branches/SAMBA_4_0/source/script/mkproto.pl\n\n\nChangeset:\n\nProperty changes on: branches/SAMBA_4_0\n___________________________________________________________________\nName: bzr:revision-info\n   - timestamp: Mon 2007-05-28 23:02:10.542000055 +0200\ncommitter: Jelmer Vernooij \nproperties: \n\tbranch-nick: SAMBA_4_0\n\n   + timestamp: Fri 2007-06-01 13:45:21.213999987 +0200\ncommitter: Jelmer Vernooij \nproperties: \n\tbranch-nick: SAMBA_4_0\n\nName: bzr:revision-id-v3\n   - jelmer@samba.org-20070528142122-cf5oh79k3uyecr1j\njelmer@samba.org-20070528210210-rmhpmrglmhpe9aps\n\n   + jelmer@samba.org-20070528142122-cf5oh79k3uyecr1j\njelmer@samba.org-20070528210210-rmhpmrglmhpe9aps\njelmer@samba.org-20070601114521-2xayni5somt1iwse\n\nName: bzr:merge\n...skipped...\n\nModified: branches/SAMBA_4_0/source/cluster/ctdb/common/ctdb_util.c\n===================================================================\n--- branches/SAMBA_4_0/source/cluster/ctdb/common/ctdb_util.c\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/cluster/ctdb/common/ctdb_util.c\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -52,7 +52,7 @@\n /*\n   a fatal internal error occurred - no hope for recovery\n */\n-void ctdb_fatal(struct ctdb_context *ctdb, const char *msg)\n+_NORETURN_ void ctdb_fatal(struct ctdb_context *ctdb, const char *msg)\n {\n \tDEBUG(0,(\"ctdb fatal error: %s\\n\", msg));\n \tfprintf(stderr, \"ctdb fatal error: '%s'\\n\", msg);\n\nModified: branches/SAMBA_4_0/source/include/includes.h\n===================================================================\n--- branches/SAMBA_4_0/source/include/includes.h\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/include/includes.h\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -62,18 +62,46 @@\n #endif\n #endif\n \n-#ifndef NORETURN_ATTRIBUTE\n-#if (__GNUC__ >= 3)\n-#define NORETURN_ATTRIBUTE __attribute__ ((noreturn))\n+#ifndef _DEPRECATED_\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1 )\n+#define _DEPRECATED_ __attribute__ ((deprecated))\n #else\n-#define NORETURN_ATTRIBUTE\n+#define _DEPRECATED_\n #endif\n #endif\n \n-/* mark smb_panic() as noreturn, so static analysers know that it is\n-   used like abort */\n-_PUBLIC_ void smb_panic(const char *why) NORETURN_ATTRIBUTE;\n+#ifndef _WARN_UNUSED_RESULT_\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1 )\n+#define _WARN_UNUSED_RESULT_ __attribute__ ((warn_unused_result))\n+#else\n+#define _WARN_UNUSED_RESULT_\n+#endif\n+#endif\n \n+#ifndef _NORETURN_\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1 )\n+#define _NORETURN_ __attribute__ ((noreturn))\n+#else\n+#define _NORETURN_\n+#endif\n+#endif\n+\n+#ifndef _PURE_\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1)\n+#define _PURE_ __attribute__((pure))\n+#else\n+#define _PURE_\n+#endif\n+#endif\n+\n+#ifndef NONNULL\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1)\n+#define NONNULL(param) param __attribute__((nonnull))\n+#else\n+#define NONNULL(param) param\n+#endif\n+#endif\n+\n #include \"system/time.h\"\n #include \"system/wait.h\"\n \n\nModified: branches/SAMBA_4_0/source/lib/json/debug.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/json/debug.c\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/lib/json/debug.c\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -41,7 +41,7 @@\n   _syslog = syslog;\n }\n \n-void mc_abort(const char *msg, ...)\n+_NORETURN_ void mc_abort(const char *msg, ...)\n {\n   va_list ap;\n   va_start(ap, msg);\n\nModified: branches/SAMBA_4_0/source/lib/json/linkhash.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/json/linkhash.c\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/lib/json/linkhash.c\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -20,7 +20,7 @@\n \n #include \"linkhash.h\"\n \n-void lh_abort(const char *msg, ...)\n+_NORETURN_ void lh_abort(const char *msg, ...)\n {\n \tva_list ap;\n \tva_start(ap, msg);\n\nModified: branches/SAMBA_4_0/source/lib/util/fault.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/fault.c\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/lib/util/fault.c\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -118,7 +118,7 @@\n /**\n  Something really nasty happened - panic !\n **/\n-_PUBLIC_ void smb_panic(const char *why)\n+_PUBLIC_ _NORETURN_ void smb_panic(const char *why)\n {\n \tint result;\n \n\nModified: branches/SAMBA_4_0/source/lib/util/util_str.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/util_str.c\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/lib/util/util_str.c\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -36,16 +36,16 @@\n /**\n  Trim the specified elements off the front and back of a string.\n **/\n-_PUBLIC_ BOOL trim_string(char *s,const char *front,const char *back)\n+_PUBLIC_ bool trim_string(char *s, const char *front, const char *back)\n {\n-\tBOOL ret = False;\n+\tbool ret = false;\n \tsize_t front_len;\n \tsize_t back_len;\n \tsize_t len;\n \n \t/* Ignore null or empty strings. */\n \tif (!s || (s[0] == '\\0'))\n-\t\treturn False;\n+\t\treturn false;\n \n \tfront_len\t= front? strlen(front) : 0;\n \tback_len\t= back? strlen(back) : 0;\n@@ -58,7 +58,7 @@\n \t\t\t * easily overlap. Found by valgrind. JRA. */\n \t\t\tmemmove(s, s+front_len, (len-front_len)+1);\n \t\t\tlen -= front_len;\n-\t\t\tret=True;\n+\t\t\tret=true;\n \t\t}\n \t}\n \t\n@@ -66,7 +66,7 @@\n \t\twhile ((len >= back_len) && strncmp(s+len-back_len,back,back_len)==0) {\n \t\t\ts[len-back_len]='\\0';\n \t\t\tlen -= back_len;\n-\t\t\tret=True;\n+\t\t\tret=true;\n \t\t}\n \t}\n \treturn ret;\n@@ -75,7 +75,7 @@\n /**\n  Find the number of 'c' chars in a string\n **/\n-_PUBLIC_ size_t count_chars(const char *s, char c)\n+_PUBLIC_ _PURE_ size_t count_chars(const char *s, char c)\n {\n \tsize_t count = 0;\n \n@@ -218,7 +218,7 @@\n /** \n  * Parse a hex string and return a data blob. \n  */\n-_PUBLIC_ DATA_BLOB strhex_to_data_blob(const char *strhex) \n+_PUBLIC_ _PURE_ DATA_BLOB strhex_to_data_blob(const char *strhex) \n {\n \tDATA_BLOB ret_blob = data_blob(NULL, strlen(strhex)/2+1);\n \n\nModified: branches/SAMBA_4_0/source/script/mkproto.pl\n===================================================================\n--- branches/SAMBA_4_0/source/script/mkproto.pl\t2007-06-01 10:17:02 UTC (rev 23288)\n+++ branches/SAMBA_4_0/source/script/mkproto.pl\t2007-06-01 12:01:53 UTC (rev 23289)\n@@ -180,7 +180,8 @@\n \t\t}\n \n \t\tnext unless ( $is_public || $line =~ /\n-\t\t\t      (_DEPRECATED_ )?^(void|BOOL|bool|int|struct|char|const|\\w+_[tT]\\s|uint|unsigned|long|NTSTATUS|\n+\t\t\t      (_DEPRECATED_ |_NORETURN_ |_WARN_UNUSED_RESULT_ |_PURE_ )*^(\n+\t\t\t\t  void|BOOL|bool|int|struct|char|const|\\w+_[tT]\\s|uint|unsigned|long|NTSTATUS|\n \t\t\t\t  ADS_STATUS|enum\\s.*\\(|DATA_BLOB|WERROR|XFILE|FILE|DIR|\n \t\t\t      double|TDB_CONTEXT|TDB_DATA|TALLOC_CTX|NTTIME|FN_|init_module|\n \t\t\t      GtkWidget|GType|smb_ucs2_t|krb5_error_code)\n@@ -224,6 +225,10 @@\n }\n \n public(\"#ifndef _PUBLIC_\\n#define _PUBLIC_\\n#endif\\n\\n\");\n+public(\"#ifndef _PURE_\\n#define _PURE_\\n#endif\\n\\n\");\n+public(\"#ifndef _NORETURN_\\n#define _NORETURN_\\n#endif\\n\\n\");\n+public(\"#ifndef _DEPRECATED_\\n#define _DEPRECATED_\\n#endif\\n\\n\");\n+public(\"#ifndef _WARN_UNUSED_RESULT_\\n#define _WARN_UNUSED_RESULT_\\n#endif\\n\\n\");\n \n process_file(\\&public, \\&private, $_) foreach (@ARGV);\n print_footer(\\&public, $public_define);\n\n"}