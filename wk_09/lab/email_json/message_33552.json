{"category": "ham", "to_address": "sugar@laptop.org", "from_address": "Simon McVittie <simon.mcvittie@collabora.co.uk>", "subject": "[sugar] [PATCH] services/presence: buddy: add mapping to/from\n\tTelepathy handles", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n- ---\n services/presence/buddy.py |   38 ++++++++++++++++++++++++++++++++++++++\n 1 files changed, 38 insertions(+), 0 deletions(-)\n\ndiff --git a/services/presence/buddy.py b/services/presence/buddy.py\nindex 53999e8..ab397ef 100644\n- --- a/services/presence/buddy.py\n+++ b/services/presence/buddy.py\n@@ -236,6 +236,28 @@ class Buddy(ExportedGObject):\n             full set of properties, just the changes.\n         \"\"\"\n \n+    @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')\n+    def TelepathyHandleAdded(self, tp_conn_name, tp_conn_path, handle):\n+        \"\"\"Another Telepathy handle has become associated with the buddy.\n+\n+        This must only be emitted for non-channel-specific handles.\n+\n+        tp_conn_name -- The bus name at which the Telepathy connection may be\n+            found\n+        tp_conn_path -- The object path at which the Telepathy connection may\n+            be found\n+        handle -- The handle of type CONTACT, which is not channel-specific,\n+            newly associated with the buddy\n+        \"\"\"\n+\n+    @dbus.service.signal(_BUDDY_INTERFACE, signature='sou')\n+    def TelepathyHandleRemoved(self, tp_conn_name, tp_conn_path, handle):\n+        \"\"\"A Telepathy handle has ceased to be associated with the buddy,\n+        probably because that contact went offline.\n+\n+        The parameters are the same as for TelepathyHandleAdded.\n+        \"\"\"\n+\n     # dbus methods\n     @dbus.service.method(_BUDDY_INTERFACE,\n                         in_signature=\"\", out_signature=\"ay\")\n@@ -294,6 +316,22 @@ class Buddy(ExportedGObject):\n             props[_PROP_CURACT] = \"\"\n         return props\n \n+    @dbus.service.method(_BUDDY_INTERFACE,\n+                         in_signature='', out_signature='a(sou)')\n+    def GetTelepathyHandles(self):\n+        \"\"\"Return a list of non-channel-specific Telepathy contact handles\n+        associated with this Buddy.\n+\n+        :Returns:\n+            An array of triples (connection well-known bus name, connection\n+            object path, handle).\n+        \"\"\"\n+        ret = []\n+        for plugin in self.handles:\n+            conn = plugin.get_connection()\n+            ret.append((str(conn.service_name), conn.object_path,\n+                        self.handles[plugin]))\n+\n     # methods\n     def object_path(self):\n         \"\"\"Retrieve our dbus.ObjectPath object\"\"\"\n- -- \n1.5.2-rc3.GIT\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: OpenPGP key: http://www.pseudorandom.co.uk/2003/contact/ or pgp.net\n\niD8DBQFGUYBnWSc8zVUw7HYRAjzLAJ9tGJwOybMRFgPxzRPHf/bxMxgvgACfRZai\nmrDbiRdLbT5/Sst0u1ruqPw=\n=sLDo\n-----END PGP SIGNATURE-----\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}