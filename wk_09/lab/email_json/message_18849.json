{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r22558 - in branches/SAMBA_4_0/source/auth:\n\tcredentials kerberos", "body": "Author: abartlet\nDate: 2007-04-28 16:38:06 +0000 (Sat, 28 Apr 2007)\nNew Revision: 22558\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22558\n\nLog:\nMove to a static list of enctypes to put into our keytab.  In future,\nI'll allow this to be configured from the secrets.ldb, but it should\nfix some user issues.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\n   branches/SAMBA_4_0/source/auth/kerberos/kerberos_util.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\n===================================================================\n--- branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\t2007-04-28 15:18:25 UTC (rev 22557)\n+++ branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\t2007-04-28 16:38:06 UTC (rev 22558)\n@@ -141,7 +141,10 @@\n \t\ttalloc_free(ccc);\n \t\treturn ret;\n \t}\n-\ttalloc_reference(ccc, ccc->smb_krb5_context);\n+\tif (!talloc_reference(ccc, ccc->smb_krb5_context)) {\n+\t\ttalloc_free(ccc);\n+\t\treturn ENOMEM;\n+\t}\n \n \tif (name) {\n \t\tret = krb5_cc_resolve(ccc->smb_krb5_context->krb5_context, name, &ccc->ccache);\n@@ -218,7 +221,10 @@\n \t\ttalloc_free(ccc);\n \t\treturn ret;\n \t}\n-\ttalloc_reference(ccc, ccc->smb_krb5_context);\n+\tif (!talloc_reference(ccc, ccc->smb_krb5_context)) {\n+\t\ttalloc_free(ccc);\n+\t\treturn ENOMEM;\n+\t}\n \n \tret = krb5_cc_resolve(ccc->smb_krb5_context->krb5_context, ccache_name, &ccc->ccache);\n \tif (ret) {\n@@ -394,6 +400,7 @@\n \tkrb5_error_code ret;\n \tstruct keytab_container *ktc;\n \tstruct smb_krb5_context *smb_krb5_context;\n+\tconst char **enctype_strings;\n \tTALLOC_CTX *mem_ctx;\n \n \tif (cred->keytab_obtained >= (MAX(cred->principal_obtained, \n@@ -416,7 +423,11 @@\n \t\treturn ENOMEM;\n \t}\n \n-\tret = smb_krb5_create_memory_keytab(mem_ctx, cred, smb_krb5_context, &ktc);\n+\tenctype_strings = cli_credentials_get_enctype_strings(cred);\n+\t\n+\tret = smb_krb5_create_memory_keytab(mem_ctx, cred, \n+\t\t\t\t\t    smb_krb5_context, \n+\t\t\t\t\t    enctype_strings, &ktc);\n \tif (ret) {\n \t\ttalloc_free(mem_ctx);\n \t\treturn ret;\n@@ -478,6 +489,7 @@\n \tkrb5_error_code ret;\n \tstruct keytab_container *ktc;\n \tstruct smb_krb5_context *smb_krb5_context;\n+\tconst char **enctype_strings;\n \tTALLOC_CTX *mem_ctx;\n \t\n \tmem_ctx = talloc_new(cred);\n@@ -491,13 +503,15 @@\n \t\treturn ret;\n \t}\n \n+\tenctype_strings = cli_credentials_get_enctype_strings(cred);\n+\t\n \tret = cli_credentials_get_keytab(cred, &ktc);\n \tif (ret != 0) {\n \t\ttalloc_free(mem_ctx);\n \t\treturn ret;\n \t}\n \n-\tret = smb_krb5_update_keytab(mem_ctx, cred, smb_krb5_context, ktc);\n+\tret = smb_krb5_update_keytab(mem_ctx, cred, smb_krb5_context, enctype_strings, ktc);\n \n \ttalloc_free(mem_ctx);\n \treturn ret;\n@@ -594,6 +608,22 @@\n \treturn cred->kvno;\n }\n \n+\n+const char **cli_credentials_get_enctype_strings(struct cli_credentials *cred) \n+{\n+\t/* If this is ever made user-configurable, we need to add code\n+\t * to remove/hide the other entries from the generated\n+\t * keytab */\n+\tstatic const char *default_enctypes[] = {\n+\t\t\"des-cbc-md5\",\n+\t\t\"aes256-cts-hmac-sha1-96\",\n+\t\t\"des3-cbc-sha1\",\n+\t\t\"arcfour-hmac-md5\",\n+\t\tNULL\n+\t};\n+\treturn default_enctypes;\n+}\n+\n const char *cli_credentials_get_salt_principal(struct cli_credentials *cred) \n {\n \treturn cred->salt_principal;\n\nModified: branches/SAMBA_4_0/source/auth/kerberos/kerberos_util.c\n===================================================================\n--- branches/SAMBA_4_0/source/auth/kerberos/kerberos_util.c\t2007-04-28 15:18:25 UTC (rev 22557)\n+++ branches/SAMBA_4_0/source/auth/kerberos/kerberos_util.c\t2007-04-28 16:38:06 UTC (rev 22558)\n@@ -273,17 +273,6 @@\n \treturn 0;\n }\n \n-struct enctypes_container {\n-\tstruct smb_krb5_context *smb_krb5_context;\n-\tkrb5_enctype *enctypes;\n-};\n-\n-static int free_enctypes(struct enctypes_container *etc)\n-{\n-\tfree_kerberos_etypes(etc->smb_krb5_context->krb5_context, etc->enctypes);\n-\treturn 0;\n-}\n-\n static krb5_error_code keytab_add_keys(TALLOC_CTX *parent_ctx,\n \t\t\t\t       const char *princ_string,\n \t\t\t\t       krb5_principal princ,\n@@ -291,45 +280,34 @@\n \t\t\t\t       int kvno,\n \t\t\t\t       const char *password_s,\n \t\t\t\t       struct smb_krb5_context *smb_krb5_context,\n+\t\t\t\t       const char **enctype_strings,\n \t\t\t\t       krb5_keytab keytab)\n {\n \tint i;\n \tkrb5_error_code ret;\n-\tkrb5_enctype *enctypes;\n-\tchar *enctype_string;\n-\tstruct enctypes_container *etc;\n \tkrb5_data password;\n \tTALLOC_CTX *mem_ctx = talloc_new(parent_ctx);\n \tif (!mem_ctx) {\n \t\treturn ENOMEM;\n \t}\n \n-\tetc = talloc(mem_ctx, struct enctypes_container);\n-\tif (!etc) {\n-\t\ttalloc_free(mem_ctx);\n-\t\treturn ENOMEM;\n-\t}\n-\tret = get_kerberos_allowed_etypes(smb_krb5_context->krb5_context, \n-\t\t\t\t\t  &enctypes);\n-\tif (ret != 0) {\n-\t\tDEBUG(1,(\"keytab_add_keys: getting encrption types failed (%s)\\n\",\n-\t\t\t error_message(ret)));\n-\t\ttalloc_free(mem_ctx);\n-\t\treturn ret;\n-\t}\n-\n-\tetc->smb_krb5_context = talloc_reference(etc, smb_krb5_context);\n-\tetc->enctypes = enctypes;\n-\n-\ttalloc_set_destructor(etc, free_enctypes);\n-\n \tpassword.data = discard_const_p(char *, password_s);\n \tpassword.length = strlen(password_s);\n \n-\tfor (i=0; enctypes[i]; i++) {\n+\tfor (i=0; enctype_strings[i]; i++) {\n \t\tkrb5_keytab_entry entry;\n+\t\tkrb5_enctype enctype;\n+\t\tret = krb5_string_to_enctype(smb_krb5_context->krb5_context, enctype_strings[i], &enctype);\n+\t\tif (ret != 0) {\n+\t\t\tDEBUG(1, (\"Failed to interpret %s as a krb5 encryption type: %s\\n\",\t\t\t\t  \n+\t\t\t\t  enctype_strings[i],\n+\t\t\t\t  smb_get_krb5_error_message(smb_krb5_context->krb5_context, \n+\t\t\t\t\t\t\t     ret, mem_ctx)));\n+\t\t\ttalloc_free(mem_ctx);\n+\t\t\treturn ret;\n+\t\t}\n \t\tret = create_kerberos_key_from_string(smb_krb5_context->krb5_context, \n-\t\t\t\t\t\t      salt_princ, &password, &entry.keyblock, enctypes[i]);\n+\t\t\t\t\t\t      salt_princ, &password, &entry.keyblock, enctype);\n \t\tif (ret != 0) {\n \t\t\ttalloc_free(mem_ctx);\n \t\t\treturn ret;\n@@ -338,25 +316,21 @@\n                 entry.principal = princ;\n                 entry.vno       = kvno;\n \t\tret = krb5_kt_add_entry(smb_krb5_context->krb5_context, keytab, &entry);\n-\t\tenctype_string = NULL;\n-\t\tkrb5_enctype_to_string(smb_krb5_context->krb5_context, enctypes[i], &enctype_string);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(1, (\"Failed to add %s entry for %s(kvno %d) to keytab: %s\\n\",\n-\t\t\t\t  enctype_string,\n+\t\t\t\t  enctype_strings[i],\n \t\t\t\t  princ_string,\n \t\t\t\t  kvno,\n \t\t\t\t  smb_get_krb5_error_message(smb_krb5_context->krb5_context, \n \t\t\t\t\t\t\t     ret, mem_ctx)));\n \t\t\ttalloc_free(mem_ctx);\n-\t\t\tfree(enctype_string);\t\t\n \t\t\tkrb5_free_keyblock_contents(smb_krb5_context->krb5_context, &entry.keyblock);\n \t\t\treturn ret;\n \t\t}\n \n \t\tDEBUG(5, (\"Added %s(kvno %d) to keytab (%s)\\n\", \n \t\t\t  princ_string, kvno,\n-\t\t\t  enctype_string));\n-\t\tfree(enctype_string);\t\t\n+\t\t\t  enctype_strings[i]));\n \t\t\n \t\tkrb5_free_keyblock_contents(smb_krb5_context->krb5_context, &entry.keyblock);\n \t}\n@@ -367,12 +341,12 @@\n static int create_keytab(TALLOC_CTX *parent_ctx,\n \t\t\t struct cli_credentials *machine_account,\n \t\t\t struct smb_krb5_context *smb_krb5_context,\n+\t\t\t const char **enctype_strings,\n \t\t\t krb5_keytab keytab,\n \t\t\t BOOL add_old) \n {\n \tkrb5_error_code ret;\n \tconst char *password_s;\n-\tchar *enctype_string;\n \tconst char *old_secret;\n \tint kvno;\n \tkrb5_principal salt_princ;\n@@ -410,11 +384,18 @@\n \t/* Finally, do the dance to get the password to put in the entry */\n \tpassword_s = cli_credentials_get_password(machine_account);\n \tif (!password_s) {\n-\t\t/* If we don't have the plaintext password, try for\n-\t\t * the MD4 password hash */\n-\n \t\tkrb5_keytab_entry entry;\n \t\tconst struct samr_Password *mach_pwd;\n+\n+\t\tif (!str_list_check(enctype_strings, \"arcfour-hmac-md5\")) {\n+\t\t\tDEBUG(1, (\"Asked to create keytab, but with only an NT hash supplied, \"\n+\t\t\t\t  \"but not listing arcfour-hmac-md5 as an enc type to include in the keytab!\\n\"));\n+\t\t\ttalloc_free(mem_ctx);\n+\t\t\treturn EINVAL;\n+\t\t}\n+\n+\t\t/* If we don't have the plaintext password, try for\n+\t\t * the MD4 password hash */\n \t\tmach_pwd = cli_credentials_get_nt_hash(machine_account, mem_ctx);\n \t\tif (!mach_pwd) {\n \t\t\t/* OK, nothing to do here */\n@@ -446,14 +427,9 @@\n \t\t\treturn ret;\n \t\t}\n \t\t\n-\t\tkrb5_enctype_to_string(smb_krb5_context->krb5_context, \n-\t\t\t\t       ETYPE_ARCFOUR_HMAC_MD5,\n-\t\t\t\t       &enctype_string);\n-\t\tDEBUG(5, (\"Added %s(kvno %d) to keytab (%s)\\n\", \n+\t\tDEBUG(5, (\"Added %s(kvno %d) to keytab (arcfour-hmac-md5)\\n\", \n \t\t\t  cli_credentials_get_principal(machine_account, mem_ctx),\n-\t\t\t  cli_credentials_get_kvno(machine_account),\n-\t\t\t  enctype_string));\n-\t\tfree(enctype_string);\t\t\n+\t\t\t  cli_credentials_get_kvno(machine_account)));\n \n \t\tkrb5_free_keyblock_contents(smb_krb5_context->krb5_context, &entry.keyblock);\n \n@@ -465,7 +441,8 @@\n \tkvno = cli_credentials_get_kvno(machine_account);\n \t/* good, we actually have the real plaintext */\n \tret = keytab_add_keys(mem_ctx, princ_string, princ, salt_princ, \n-\t\t\t      kvno, password_s, smb_krb5_context, keytab);\n+\t\t\t      kvno, password_s, smb_krb5_context, \n+\t\t\t      enctype_strings, keytab);\n \tif (!ret) {\n \t\ttalloc_free(mem_ctx);\n \t\treturn ret;\n@@ -483,7 +460,8 @@\n \t}\n \t\n \tret = keytab_add_keys(mem_ctx, princ_string, princ, salt_princ, \n-\t\t\t      kvno - 1, old_secret, smb_krb5_context, keytab);\n+\t\t\t      kvno - 1, old_secret, smb_krb5_context, \n+\t\t\t      enctype_strings, keytab);\n \tif (!ret) {\n \t\ttalloc_free(mem_ctx);\n \t\treturn ret;\n@@ -627,6 +605,7 @@\n int smb_krb5_update_keytab(TALLOC_CTX *parent_ctx,\n \t\t\t   struct cli_credentials *machine_account,\n \t\t\t   struct smb_krb5_context *smb_krb5_context,\n+\t\t\t   const char **enctype_strings,\n \t\t\t   struct keytab_container *keytab_container) \n {\n \tkrb5_error_code ret;\n@@ -635,7 +614,7 @@\n \tif (!mem_ctx) {\n \t\treturn ENOMEM;\n \t}\n-\t\n+\n \tret = remove_old_entries(mem_ctx, machine_account, \n \t\t\t\t smb_krb5_context, keytab_container->keytab, &found_previous);\n \tif (ret != 0) {\n@@ -648,6 +627,7 @@\n \t * Otherwise, add kvno, and kvno -1 */\n \t\n \tret = create_keytab(mem_ctx, machine_account, smb_krb5_context, \n+\t\t\t    enctype_strings, \n \t\t\t    keytab_container->keytab, \n \t\t\t    found_previous ? False : True);\n \ttalloc_free(mem_ctx);\n@@ -655,9 +635,10 @@\n }\n \n _PUBLIC_ int smb_krb5_create_memory_keytab(TALLOC_CTX *parent_ctx,\n-\t\t\t\t  struct cli_credentials *machine_account,\n-\t\t\t\t  struct smb_krb5_context *smb_krb5_context,\n-\t\t\t\t  struct keytab_container **keytab_container) \n+\t\t\t\t\t   struct cli_credentials *machine_account,\n+\t\t\t\t\t   struct smb_krb5_context *smb_krb5_context,\n+\t\t\t\t\t   const char **enctype_strings,\n+\t\t\t\t\t   struct keytab_container **keytab_container) \n {\n \tkrb5_error_code ret;\n \tTALLOC_CTX *mem_ctx = talloc_new(parent_ctx);\n@@ -687,7 +668,7 @@\n \t\treturn ret;\n \t}\n \n-\tret = smb_krb5_update_keytab(mem_ctx, machine_account, smb_krb5_context, *keytab_container);\n+\tret = smb_krb5_update_keytab(mem_ctx, machine_account, smb_krb5_context, enctype_strings, *keytab_container);\n \tif (ret == 0) {\n \t\ttalloc_steal(parent_ctx, *keytab_container);\n \t} else {\n\n"}