{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "mimir@samba.org", "subject": "svn commit: samba r22499 - in\n\tbranches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr: .", "body": "Author: mimir\nDate: 2007-04-24 08:36:41 +0000 (Tue, 24 Apr 2007)\nNew Revision: 22499\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22499\n\nLog:\nUsrCtx should be created within UsersView. Tree widget just\nopens it and passes the domain name(s) to operate on (selectable\nvia combo box).\n\n\nrafal\n\n\nModified:\n   branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Fsm.js\n   branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Gui.js\n   branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/UsersView.js\n\n\nChangeset:\nModified: branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Fsm.js\n===================================================================\n--- branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Fsm.js\t2007-04-24 07:57:44 UTC (rev 22498)\n+++ branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Fsm.js\t2007-04-24 08:36:41 UTC (rev 22499)\n@@ -73,6 +73,13 @@\n \t      \"Transition_Idle_to_Idle_via_tree_selection_changed\"\n           },\n \n+          \"changeSelected\":\n+          {\n+            // this one is dispatched from UsersView widget\n+\t    \"domainName\":\n+              \"Transition_Idle_to_AwaitRpcResult_via_domainName_changed\"\n+          },\n+\t \n \t  \"changeNetCtx\" :\n \t  {\n \t    \"swat.module.netmgr.Gui\" :\n@@ -120,7 +127,7 @@\n   var trans = new qx.util.fsm.Transition(\n     \"Transition_Idle_to_Idle_via_tree_selection_changed\",\n     {\n-      \"nextState\" : \"State_AwaitRpcResult\",\n+      \"nextState\" : \"State_Idle\",\n \n       \"ontransition\" : function(fsm, event)\n       {\n@@ -135,15 +142,14 @@\n         {\n \t  module.setNetCtx(parentNode.netCtx);\n \t}\n-\n+\t\n+\tvar domainName = parentNode.label;\n \tvar nodeName = selectedNode.label;\n-\tvar callName = undefined;               // rpc call name\n-\tvar callArgs = [ gui.getNetCtx() ];       // NetContex goes first\n \n \tswitch (nodeName)\n         {\n \tcase \"Users\":\n-\t  callName = \"UserMgr\";\n+\t  gui.openUserManager(module, domainName);\n \t  break;\n \n \tcase \"Groups\":\n@@ -155,14 +161,26 @@\n \tdefault:\n \t  alert(\"Undefined call selected for node=['\" + nodeName + \"']\");\n \t}\n+      }\n+      \n+    });\n \n-\t// Bail out if no appropriate call name has been found\n-\tif (callName == undefined) return;\n+  // Add the new transition\n+  state.addTransition(trans);\n \n-\tvar req = _this.callRpc(fsm, \"samba.ejsnet\", callName, callArgs);\n+  var trans = new qx.util.fsm.Transition(\n+    \"Transition_Idle_to_AwaitRpcResult_via_domainName_changed\",\n+    {\n+      \"nextState\" : \"State_AwaitRpcResult\",\n+\n+      \"ontransition\" : function(fsm, event)\n+      {\n+\tvar domainName = fsm.getObject(\"domainName\").getValue();\n+\tvar netCtxId = swat.module.netmgr.Gui.getInstance().getNetCtx();\n+\t\n+\tvar req = _this.callRpc(fsm, \"samba.ejsnet\", \"UserMgr\", [ netCtxId, domainName ]);\n \treq.setUserData(\"requestType\", \"UserMgr\");\n       }\n-      \n     });\n \n   // Add the new transition\n@@ -175,7 +193,8 @@\n \n       \"ontransition\" : function(fsm, event)\n       {\n-\tvar netCtxId = 0;\n+\tvar netCtxId = swat.module.netmgr.Gui.getInstance().getNetCtx();\n+\n \tvar req = _this.callRpc(fsm, \"samba.ejsnet\", \"NetContextCreds\", [ netCtxId ]);\n \treq.setUserData(\"requestType\", \"NetContextCreds\");\n       }\n\nModified: branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Gui.js\n===================================================================\n--- branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Gui.js\t2007-04-24 07:57:44 UTC (rev 22498)\n+++ branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/Gui.js\t2007-04-24 08:36:41 UTC (rev 22499)\n@@ -213,6 +213,20 @@\n };\n \n \n+qx.Proto.openUserManager = function(module, domainName)\n+{\n+  // Remove existing panel if there is any\n+  if (this._panel.getChildrenLength() > 0)\n+  {\n+    this._panel.removeAll();\n+  }\n+\n+  // Create user view, pass the context and the view to the panel\n+  var view = new swat.module.netmgr.UsersView(module.fsm, domainName);\n+  this._panel.add(view);\n+};\n+\n+\n qx.Proto._addHostNode = function(module, rpcRequest, local)\n {\n   var fsm = module.fsm;\n@@ -260,14 +274,8 @@\n \n qx.Proto._initUserManager = function(module, rpcRequest)\n {\n-  // Get obtained UsrCtx handle\n+  // Get obtained usrCtx handle\n   var usrCtx = rpcRequest.getUserData(\"result\").data;\n-\n-  // Create user view and pass the context\n-  var view = new swat.module.netmgr.UsersView(module.fsm);\n-  view.setUsrCtx(usrCtx);\n-  \n-  this._panel.add(view);\n };\n \n \n\nModified: branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/UsersView.js\n===================================================================\n--- branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/UsersView.js\t2007-04-24 07:57:44 UTC (rev 22498)\n+++ branches/SAMBA_4_0/webapps/swat/source/class/swat/module/netmgr/UsersView.js\t2007-04-24 08:36:41 UTC (rev 22499)\n@@ -11,7 +11,7 @@\n  * Users View \n  */\n qx.OO.defineClass(\"swat.module.netmgr.UsersView\", qx.ui.layout.HorizontalBoxLayout,\n-function(fsm)\n+function(fsm, domainName)\n {\n   qx.ui.layout.HorizontalBoxLayout.call(this);\n \n@@ -38,6 +38,39 @@\n   var cmbDomain = new qx.ui.form.ComboBox();\n   cmbDomain.setEditable(false);\n \n+  // there's always BUILTIN domain so add it to the list\n+  var item = new qx.ui.form.ListItem(\"BUILTIN\");\n+  cmbDomain.add(item);\n+\n+  var selectedItem = undefined;\n+  \n+  // Simply add the domain name if it is passed as a string\n+  if (typeof(domainName) == \"string\")\n+  {\n+    item = new qx.ui.form.ListItem(domainName);\n+    cmbDomain.add(item);\n+\n+    selectedItem = item;\n+  }\n+  else // if it's not a string we assume it is a list of strings\n+  {\n+    for (var s in domainName)\n+    {\n+      item = new qx.ui.form.ListItem(s);\n+      cmbDomain.add(s);\n+    }\n+\n+    selectedItem = new qx.ui.form.ListItem(domainName[0]);\n+  }\n+\n+  // Add event handling\n+  cmbDomain.addEventListener(\"changeSelected\", fsm.eventListener, fsm);\n+  fsm.addObject(\"domainName\", cmbDomain);\n+\n+  // Set default selection and dispatch the respective event to initialise the view\n+  cmbDomain.setSelected(selectedItem);\n+  cmbDomain.dispatchEvent(new qx.event.type.Event(\"changeSelected\"), true);\n+\n   // Create an empty list view with sample column\n   this._columns = { username : { label: \"Username\", width: 150, type: \"text\" }};\n   this._items = [];\n@@ -60,3 +93,15 @@\n \n // UsrMgr context is required for any operation on user accounts\n qx.OO.addProperty({ name : \"usrCtx\", type : \"number\" });\n+\n+\n+qx.Proto.refreshView = function()\n+{\n+}\n+\n+\n+qx.Proto._initUserManager = function(module, rpcRequest)\n+{\n+  // Get obtained UsrCtx handle\n+  var usrCtx = rpcRequest.getUserData(\"result\").data;\n+};\n\n"}