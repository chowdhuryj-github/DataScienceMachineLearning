{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Can't sort error out; strict refs", "body": "I'm passing two hash references into a subroutine.  One hash is in the format of\n$dept{$env}{$user}.  This contains an amount of time spent by each user on a\ncustomer ($env).  The second hash is in the format of\n$ticCount{$env}{$user}{$ticID}.  This contains a running count of how many times\na user worked on ticket '$ticID' which belongs to customer '$env'.  I won't be\nusing that number though.  What I need is the number of tickets worked on so I\nsimply use 'scalar keys' on this hash.\n\nThe problem I'm encountering though, is that I'm passing the hashes into my\nsubroutine as references.  When I get to the statement that gets the key count I\nget an error: \"Can't use string (\"2\") as a HASH ref while \"strict refs\" in use\nat user_timesheet.pl line 63.\"  Presumably, 2 is the number of keys at\n$ticCount{$env}{$user}{$ticID}.\n\nsub average {\n        my ($users, $count) = @_;\n        my %userAvg;\n        foreach my $env (keys %$count) {\n                foreach my $user (keys %{ $count->{$env} }) {\n                        foreach my $ticID (keys %{ $count->{$env}->{$user} }) {\n                                my $ticCount = scalar keys %{\n$count->{$env}->{$user}->{$ticID}};\n                                my @meantemp;\n                                my @meantime;\n                                my @endtime;\n                                my $temp     = $users->{$env}->{$user};\n                                @meantemp    = split /\\./, ($temp / $ticCount);\n                                # If the time divided by the number of tickets\nhas a decimal\n                                # value round up if that value is greater than\n                                # 0.5.  This will give an even number of minutes\nto figure\n                                # out the mean time with.\n                                if ($meantemp[1]) {\n                                        if ($meantemp[1] >= 5) {\n                                                $meantemp[0]++;\n                                        }\n                                }\n                                @meantime  = split /\\./, ($meantemp[0] / 60);\n                                        $endtime[0]  = $meantime[0];\n                                $endtime[1]  = $meantemp[0] % 60;\n                                $userAvg{$env}{$user} = sprintf '%d:%02d',\n@endtime[0,1];\n                        }\n                }\n        }\n        return %userAvg;\n}\n\nI've run this in the debugger and when I get to the line which assigns $ticCount\nI try to print it out and it's just blank.  If I keep hitting enter it just\nreturns to a blank line.  I get the error when I continue to the next line with 'c'.\n\nMathew\n-- \nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}