{"category": "ham", "to_address": "Tom Phoenix <tom@stonehenge.com>", "from_address": "Always Learning Perl <perl@rocteur.cc>", "subject": "Re: Ram disk filling up - File::COPY", "body": "* Tom Phoenix  [2007-06-07 21:09]:\n> On 6/7/07, Perl WANNABE  wrote:\n> \n> >I'm trying to copy a couple of DBM files from a disk to a RAM disk,\n> >one of the files is 500M the other quite small.\n> \n> Some DBM implementations, if the filesystem supports doing so, will\n> create files with \"holes\" in them; that is, the file may have\n> arbitrarily long gaps in which there's no data. You can even have a\n> file that seems larger than the disk it's stored upon.\n> \n> >Whether I use File::Copy or I roll my own copy by reading and writing the\n> >file the filesystem fills up... If I use system (cp from to) I don't have a\n> >problem.\n> \n> It sounds as if your cp knows how to handle the holes, but File::Copy\n> isn't so smart. It may be worth filing a bug report over this; even if\n> File::Copy isn't fixed, its documentation should mention this.\n> \n> Cheers!\n> \n> --Tom Phoenix\n> Stonehenge Perl Training\n\nThanks Tom and Chas...\n\ndu -sh user.rewrites.*\n37M     file.pag\n\nls -l file.pag \n-rw-r--r--  1 root root 499661824 2007-06-08 10:40 file.pag\n\n\nI can't believe it.. Sometimes the answer is in front of your nose and you don't see it. I'm trying to copy a 500M file into a 248MB Ram disk and I didn't see it because when I used 'cp' it worked.\n\nIf nobody does it before then, I'll fill in a bug report this weekend!\n\nThanks again, especially for the pragmatic reply from Chas Owens!!!!!\n\nGreat weekend everyone!\n\n--\n      _                               Jerry Rocteur\n    _|_|_          Systems Operations & Engineering\n    (0 0)                 \nooO--(_)--Ooo   \n___________________________________________________\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}