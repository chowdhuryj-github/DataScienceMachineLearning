{"category": "ham", "to_address": "James Peach <jpeach@samba.org>", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: should get_nt_acl_no_snum really avoid VFS modules?", "body": "On Thu, May 17, 2007 at 03:17:57PM -0700, James Peach wrote:\n> Hi Jeremy,\n> \n> I just bumped into the get_nt_acl_no_snum() function, and it seems  \n> that this always calls the POSIX ACL implementation.\n> \n> Since there's no guarantee that the file it is checking access to is  \n> on a POSIX filesystem or that the platform even supports POSIX ACLs,  \n> shouldn't this call SMB_VFS_GET_NT_ACL instead of get_nt_acl()?\n\nThis is a local api for local people, there's nothing for\nyou here ! :-).\n\nSeriously it's designed for smbd internal use, knowing it's\naccessing a local filesystem.... So I think it's just expecting\na \"standard\" unix permset to be mapped into an NT ACL. \n\nIt doesn't matter if the path doesn't support POSIX ACLs\nas it'll translate mode_t into an NT ACL.\n\n> And shouldn't it use the dirname of the path it is checking for the  \n> fake connectpath, rather than '/', since they could be different  \n> filesystem types? And even that is a bit wonky, because it probably  \n> assumes that the global ACLs module is appropriate for this path,  \n> which might not be true.\n> \n> If you give me a hint, I'll code up a patch :)\n\nHmmmm. Is it causing you grief at the moment ?\n\nJeremy.\n\n"}