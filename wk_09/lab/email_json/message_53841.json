{"category": "ham", "to_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "from_address": "\"Vahid Moghaddasi\" <vahid.moghaddasi@gmail.com>", "subject": "Re: grep from one file and write to another", "body": "On 6/23/07, Tom Phoenix  wrote:\n> > use File::Copy;\n>\n> Are you actually using File::Copy? I didn't find any call to it in\n> your posted code.\n\nSorry, I left it in by mistake. This code is a small part of a very\nlarge program.\n\n>\n> > use strict;\n> > use warnings;\n>\n> That's good....\n>\n> > $|=1;           # flush output buffer\n> > open (FILTERfh, \"< filter.in\") || die \"Can not open filter.in: $!\\n\";\n> > open PASSWDfh, ' > open PASSWDFILfh, \">passwd.out\";\n>\n> I can't say that I like the style of having filehandle names ending in\n> \"fh\", but it's one way to do it.\n\nI din't want to make mistakes, maybe later I change.\n\nThe actual program writes to STDOUT as well.\n\n>\n>    for my $user (0..$#input) {  # Not 1..$#input, is it?\n\nIf that gives me the same result, then it is less typing. I use field\n0 for something else.\n\n>\n> And, unless you needed an index, you'll be even more likely to get it\n> correct if you use a foreach directly on the array:\n>\n>    for my $user (@input) {  # Now $user is the user, not the index\n>\n> >         print \"$input[$user] is being added.\\n\";\n> >         while () {\n>\n> Now you're reading one file in a loop, inside the loop on FILTERfh. Do\n> you mean to re-read the password file for every line in the outer\n> loop's file? That sounds slow, but you could do it.\n\nFor each field (user) in the filter.in file, I will have to find the\nuser in passwd file, wouldn't I need to re-read the passwd file as\nmuch as there are fields in filter.in file?\n\n> (You'll either need to reopen the file, or use seek() to get back to the start.)\n>\n> A better algorithm would read through the entire FILTERfh datastream,\n> storing away what you'll need. Later, when you read the password file\n> in a single pass, you can compare the data in memory to the data read\n> from the file.\n\nI am not sure how much I can read into memory space without affecting\nother programs but the entire FILTERfh could be a pretty large. Each\nline could have up to 100 fields (users) and there could be 3 or 5\nlines. How would I read them into memory? In an array?\n>\n> Does that get you closer to a solution? Good luck with it!\n>\nHope so. Thanks.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}