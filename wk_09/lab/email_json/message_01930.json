{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11813: - Lazy evaluate variable names. in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11813\nrevision-id: jelmer@samba.org-20070410211714-ofeoaov36zux73tt\nparent: svn-v2:22152@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Tue 2007-04-10 23:17:14 +0200\nmessage:\n  - Lazy evaluate variable names.\n  \n  - Don't set up environments until necessary\n  \n  - Add --resetup-environment option\n  \n  - Add 'none' environment\nmodified:\n  source/script/tests/Samba4.pm  svn-v2:21707@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fSamba4.pm\n  source/script/tests/mk-openldap.sh svn-v2:21069@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmk%2dopenldap.sh\n  source/script/tests/mktestdc.sh svn-v2:21909@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fmktestdc.sh\n  source/script/tests/selftest.pl svn-v2:20693@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fselftest.pl\n  source/script/tests/test_binding_string.sh svn-v2:3032@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_binding_string.sh\n  source/script/tests/test_blackbox.sh svn-v2:20748@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_blackbox.sh\n  source/script/tests/test_echo.sh svn-v2:2305@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_echo.sh\n  source/script/tests/test_ejs.sh svn-v2:8269@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_ejs.sh\n  source/script/tests/test_ldap.sh svn-v2:6549@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_ldap.sh\n  source/script/tests/test_local.sh svn-v2:7434@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_local.sh\n  source/script/tests/test_nbt.sh svn-v2:8735@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_nbt.sh\n  source/script/tests/test_net.sh svn-v2:18017@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_net.sh\n  source/script/tests/test_posix.sh svn-v2:3176@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_posix.sh\n  source/script/tests/test_quick.sh svn-v2:7933@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_quick.sh\n  source/script/tests/test_rpc.sh svn-v2:3393@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_rpc.sh\n  source/script/tests/test_rpc_quick.sh svn-v2:8525@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_rpc_quick.sh\n  source/script/tests/test_session_key.sh svn-v2:7684@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_session_key.sh\n  source/script/tests/test_simple.sh svn-v2:18569@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_simple.sh\n  source/script/tests/tests_all.sh svn-v2:8525@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftests_all.sh\n  source/script/tests/tests_quick.sh svn-v2:8525@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftests_quick.sh\n=== modified file 'source/script/tests/Samba4.pm'\n--- a/source/script/tests/Samba4.pm\t2007-04-04 12:23:10 +0000\n+++ b/source/script/tests/Samba4.pm\t2007-04-10 21:17:14 +0000\n@@ -16,10 +16,14 @@\n \treturn $self;\n }\n \n-sub slapd_start($$$)\n+sub slapd_start($$)\n {\n     my $count = 0;\n-\tmy ($self, $conf, $uri) = @_;\n+\tmy ($self, $env_vars) = @_;\n+\n+\tmy $conf = $env_vars->{SLAPD_CONF};\n+\tmy $uri = $env_vars->{LDAP_URI};\n+\n \t# running slapd in the background means it stays in the same process group, so it can be\n \t# killed by timelimit\n \tif (defined($ENV{FEDORA_DS_PREFIX})) {\n@@ -33,7 +37,7 @@\n \twhile (system(\"$self->{bindir}/ldbsearch -H $uri -s base -b \\\"\\\" supportedLDAPVersion > /dev/null\") != 0) {\n \t        $count++;\n \t\tif ($count > 10) {\n-\t\t    $self->slapd_stop();\n+\t\t    $self->slapd_stop($env_vars);\n \t\t    return 0;\n \t\t}\n \t\tsleep(1);\n@@ -41,13 +45,13 @@\n \treturn 1;\n }\n \n-sub slapd_stop($)\n+sub slapd_stop($$)\n {\n-\tmy ($self) = @_;\n-\tif (defined($ENV{FEDORA_DS_PREFIX})) {\n-\t\tsystem(\"$ENV{LDAPDIR}/slapd-samba4/stop-slapd\");\n+\tmy ($self, $envvars) = @_;\n+\tif (defined($envvars->{FEDORA_DS_PREFIX})) {\n+\t\tsystem(\"$envvars->{LDAPDIR}/slapd-samba4/stop-slapd\");\n \t} else {\n-\t\topen(IN, \"<$ENV{PIDDIR}/slapd.pid\") or \n+\t\topen(IN, \"<$envvars->{PIDDIR}/slapd.pid\") or \n \t\t\tdie(\"unable to open slapd pid file\");\n \t\tkill 9, ;\n \t\tclose(IN);\n@@ -61,7 +65,7 @@\n \n \t# Start slapd before smbd\n \tif ($self->{ldap}) {\n-\t\t$self->slapd_start($ENV{SLAPD_CONF}, $ENV{LDAP_URI}) or \n+\t\t$self->slapd_start($env_vars) or \n \t\t\tdie(\"couldn't start slapd\");\n \n \t\tprint \"LDAP PROVISIONING...\";\n@@ -132,9 +136,9 @@\n \tsystem(\"bin/nmblookup $testenv_vars->{CONFIGURATION} -U $testenv_vars->{SERVER} $testenv_vars->{NETBIOSNAME}\");\n }\n \n-sub provision($$$)\n+sub provision($$)\n {\n-\tmy ($self, $environment, $prefix) = @_;\n+\tmy ($self, $prefix) = @_;\n \tmy %ret = ();\n \tprint \"PROVISIONING...\";\n \topen(IN, \"$RealBin/mktestdc.sh $prefix|\") or die(\"Unable to setup\");\n@@ -156,9 +160,9 @@\n \t\tdie(\"LDAP PROVISIONING failed: $self->{bindir}/smbscript $self->{setupdir}/provision $ENV{PROVISION_OPTIONS} \\\"$ENV{PROVISION_ACI}\\\" --ldap-backend=$ENV{LDAP_URI}\");\n }\n \n-sub stop($)\n+sub teardown_env($$)\n {\n-\tmy ($self) = @_;\n+\tmy ($self, $envvars) = @_;\n \n \tclose(DATA);\n \n@@ -166,22 +170,33 @@\n \n \tmy $failed = $? >> 8;\n \n-\tif (-f \"$ENV{PIDDIR}/smbd.pid\" ) {\n-\t\topen(IN, \"<$ENV{PIDDIR}/smbd.pid\") or die(\"unable to open smbd pid file\");\n+\tif (-f \"$envvars->{PIDDIR}/smbd.pid\" ) {\n+\t\topen(IN, \"<$envvars->{PIDDIR}/smbd.pid\") or die(\"unable to open smbd pid file\");\n \t\tkill 9, ;\n \t\tclose(IN);\n \t}\n \n-\t$self->slapd_stop() if ($self->{ldap});\n+\t$self->slapd_stop($envvars) if ($self->{ldap});\n \n \treturn $failed;\n }\n \n-sub setup_env($$$)\n-{\n-\tmy ($self, $name, $path, $socket_wrapper_dir) = @_;\n-\n-\tmy $env = $self->provision($name, $path);\n+sub setup_env($$$$)\n+{\n+\tmy ($self, $envname, $path, $socket_wrapper_dir) = @_;\n+\t\n+\tif ($envname eq \"dc\") {\n+\t\treturn $self->setup_dc(\"$path/dc\", $socket_wrapper_dir);\n+\t} else {\n+\t\tdie(\"Samba4 can't provide environment $envname\");\n+\t}\n+}\n+\n+sub setup_dc($$$)\n+{\n+\tmy ($self, $path, $socket_wrapper_dir) = @_;\n+\n+\tmy $env = $self->provision($path);\n \n \t$self->check_or_start($env, $socket_wrapper_dir, \n \t\t($ENV{SMBD_MAX_TIME} or 5400));\n@@ -191,4 +206,9 @@\n \treturn $env;\n }\n \n+sub stop($)\n+{\n+\tmy ($self) = @_;\n+}\n+\n 1;\n\n=== modified file 'source/script/tests/mk-openldap.sh'\n--- a/source/script/tests/mk-openldap.sh\t2007-03-13 23:16:09 +0000\n+++ b/source/script/tests/mk-openldap.sh\t2007-04-10 21:17:14 +0000\n@@ -99,7 +99,7 @@\n touch $MODCONF\n \n slaptest -u -f $SLAPD_CONF >&2 || {\n-    echo \"enabling slapd modules\" >&2\n+    # echo \"enabling slapd modules\" >&2\n     cat > $MODCONF < 0) { $err = \", \".($#$suitesfailed+1).\" errors\"; }\n-\tprintf \"[$i/$totalsuites in \" . (time() - $start).\"s$err] $name\\n\";\n+\tprint \"[$i/$totalsuites in \" . (time() - $start).\"s$err] $name\\n\";\n \topen(RESULT, \"$cmd 2>&1|\");\n \tmy $expected_ret = 1;\n \tmy $open_tests = {};\n@@ -335,6 +336,7 @@\n \t\t'testenv' => \\$opt_testenv,\n \t\t'ldap' => \\$opt_ldap,\n \t\t'analyse-cmd=s' => \\$opt_analyse_cmd,\n+\t\t'resetup-environment' => \\$opt_resetup_env,\n \t    );\n \n exit(1) if (not $result);\n@@ -434,28 +436,44 @@\n \t\t\t\t\t\t \"127.0.0.10/8\",\n \t\t\t\t\t\t \"127.0.0.11/8\"));\n \n-my $testenv_vars = $target->setup_env(\"dc\", \"$prefix/dc\", $socket_wrapper_dir);\n-\n my $conffile = \"$prefix/client.conf\";\n-my $abs_srcdir = cwd();\n-open(CF, \">$conffile\");\n-print CF \"[global]\\n\";\n-if (defined($ENV{VALGRIND})) {\n-\tprint CF \"\\ticonv:native = true\\n\";\n-} else {\n-\tprint CF \"\\ticonv:native = false\\n\";\n-}\n-print CF \n+\n+sub write_clientconf($$)\n+{\n+\tmy ($conffile, $vars) = @_;\n+\n+\tmy $abs_srcdir = cwd();\n+\n+\topen(CF, \">$conffile\");\n+\tprint CF \"[global]\\n\";\n+\tif (defined($ENV{VALGRIND})) {\n+\t\tprint CF \"\\ticonv:native = true\\n\";\n+\t} else {\n+\t\tprint CF \"\\ticonv:native = false\\n\";\n+\t}\n+\tprint CF \n \"\tnetbios name = localtest\n \tnetbios aliases = localhost\n-\tworkgroup = $testenv_vars->{DOMAIN}\n-\trealm = $testenv_vars->{REALM}\n-\tpid directory = $testenv_vars->{PIDDIR}\n-\tncalrpc dir = $testenv_vars->{NCALRPCDIR}\n+\";\n+\tif (defined($vars->{DOMAIN})) {\n+\t\tprint CF \"\\tworkgroup = $vars->{DOMAIN}\\n\";\n+\t}\n+\tif (defined($vars->{REALM})) {\n+\t\tprint CF \"\\trealm = $vars->{REALM}\\n\";\n+\t}\n+\tif (defined($vars->{PIDDIR})) {\n+\t\tprint CF \"\\tpid directory = $vars->{PIDDIR}\\n\";\n+\t}\n+\tif (defined($vars->{NCALRPCDIR})) {\n+\t\tprint CF \"\\tncalrpc dir = $vars->{NCALRPCDIR}\\n\";\n+\t}\n+\tif (defined($vars->{WINBINDD_SOCKET_DIR})) {\n+\t\tprint CF \"\\twinbindd socket directory = $vars->{WINBINDD_SOCKET_DIR}\\n\";\n+\t}\n+\tprint CF \"\n \tjs include = $abs_srcdir/scripting/libjs\n-\twinbindd socket directory = $testenv_vars->{WINBINDD_SOCKET_DIR}\n \tname resolve order = bcast\n-\tinterfaces = 127.0.0.1/8\n+\tinterfaces = $interfaces\n \tpanic action = $abs_srcdir/script/gdb_backtrace \\%PID\\% \\%PROG\\%\n \tmax xmit = 32K\n \tnotify:inotify = false\n@@ -465,10 +483,11 @@\n \ttorture:basedir = ./st\n \tgensec:require_pac = true\n \";\n-close(CF);\n+\tclose(CF);\n+}\n+\n \n my @torture_options = ();\n-push (@torture_options, \"--option=interfaces=$interfaces\");\n push (@torture_options, \"--configfile=$conffile\");\n # ensure any one smbtorture call doesn't run too long\n push (@torture_options, \"--maximum-runtime=$torture_maxtime\");\n@@ -480,15 +499,12 @@\n $ENV{TORTURE_OPTIONS} = join(' ', @torture_options);\n print \"OPTIONS $ENV{TORTURE_OPTIONS}\\n\";\n \n-foreach (\"PASSWORD\", \"DOMAIN\", \"SERVER\", \"USERNAME\", \"NETBIOSNAME\") {\n-\t$ENV{$_} = $testenv_vars->{$_};\n-}\n-\n my @todo = ();\n \n my $testsdir = \"$srcdir/script/tests\";\n $ENV{CONFIGURATION} = \"--configfile=$conffile\";\n \n+\n if ($opt_quick) {\n \topen(IN, \"$testsdir/tests_quick.sh|\");\n } else {\n@@ -514,14 +530,44 @@\n my $i = 0;\n $| = 1;\n \n-# The Kerberos tests fail if this variable is set.\n-delete $ENV{DOMAIN};\n-\n-$ENV{KRB5_CONFIG} = $testenv_vars->{KRB5_CONFIG};\n-\n+my %running_envs = ();\n+\n+sub setup_env($)\n+{\n+\tmy ($envname) = @_;\n+\n+\tmy $testenv_vars;\n+\tif (defined($running_envs{$envname})) {\n+\t\t$testenv_vars = $running_envs{$envname};\n+\t} elsif ($envname eq \"none\") {\n+\t\t$testenv_vars = {};\n+\t} else {\n+\t\t$testenv_vars = $target->setup_env($envname, $prefix, $socket_wrapper_dir);\n+\t}\n+\twrite_clientconf($conffile, $testenv_vars);\n+\tforeach (\"PASSWORD\", \"DOMAIN\", \"SERVER\", \"USERNAME\", \"NETBIOSNAME\", \n+\t\t\t \"KRB5_CONFIG\") {\n+\t\tif (defined($testenv_vars->{$_})) {\n+\t\t\t$ENV{$_} = $testenv_vars->{$_};\n+\t\t} else {\n+\t\t\tdelete $ENV{$_};\n+\t\t}\n+\t}\n+\n+\t$running_envs{$envname} = $testenv_vars;\n+\treturn $testenv_vars;\n+}\n+\n+sub teardown_env($)\n+{\n+\tmy ($envname) = @_;\n+\t$target->teardown_env($running_envs{$envname});\n+\tdelete $running_envs{$envname};\n+}\n SocketWrapper::set_default_iface(6);\n \n if ($opt_testenv) {\n+\tmy $testenv_vars = setup_env(\"dc\");\n \t$ENV{PIDDIR} = $testenv_vars->{PIDDIR};\n \tmy $term = ($ENV{TERM} or \"xterm\");\n \tsystem(\"$term -e 'echo -e \\\"Welcome to the Samba4 Test environment\n@@ -533,6 +579,7 @@\n CONFIGURATION=\\$CONFIGURATION\n SERVER=\\$SERVER\n NETBIOSNAME=\\$NETBIOSNAME\\\" && bash'\");\n+\tteardown_env(\"dc\");\n } else {\n \tforeach (@todo) {\n \t\t$i++;\n@@ -547,7 +594,7 @@\n \t\t\tnext;\n \t\t}\n \n-\t\t# $target->setup_env($envname, \"$prefix/$envname\", $socket_wrapper_dir);\n+\t\tsetup_env($envname);\n \n \t\tif ($from_build_farm) {\n \t\t\trun_test_buildfarm($name, $cmd, $i, $suitestotal);\n@@ -558,12 +605,16 @@\n \t\tif (defined($opt_analyse_cmd)) {\n \t\t\tsystem(\"$opt_analyse_cmd \\\"$name\\\"\");\n \t\t}\n+\n+\t\tteardown_env($envname) if ($opt_resetup_env);\n \t}\n }\n \n print \"\\n\";\n \n-my $failed = $target->stop();\n+teardown_env($_) foreach (keys %running_envs);\n+\n+$target->stop();\n \n my $end = time();\n my $duration = ($end-$start);\n@@ -587,6 +638,8 @@\n }\n print \"DURATION: $duration seconds\\n\";\n \n+my $failed = 0;\n+\n # if there were any valgrind failures, show them\n foreach (<$prefix/valgrind.log*>) {\n \tnext unless (-s $_);\n\n=== modified file 'source/script/tests/test_binding_string.sh'\n--- a/source/script/tests/test_binding_string.sh\t2007-03-21 16:26:25 +0000\n+++ b/source/script/tests/test_binding_string.sh\t2007-04-10 21:17:14 +0000\n@@ -1,31 +1,18 @@\n #!/bin/sh\n \n-if [ $# -lt 4 ]; then\n-cat < /dev/null; then\n     p=ldaps\n-    for options in \"\" \"-U$USERNAME%$PASSWORD\"; do\n-\tplantest \"TESTING PROTOCOL $p with options $options\" ldap ../testprogs/blackbox/test_ldb.sh $p $SERVER $options\n+    for options in \"\" \"-U\\$USERNAME%\\$PASSWORD\"; do\n+\tplantest \"TESTING PROTOCOL $p with options $options\" dc ../testprogs/blackbox/test_ldb.sh $p \\$SERVER $options\n     done\n fi\n for t in LDAP-CLDAP LDAP-BASIC LDAP-SCHEMA LDAP-UPTODATENESS\n do\n-\tplantest \"$t\" ldap bin/smbtorture $TORTURE_OPTIONS \"-U$USERNAME%$PASSWORD\" //$SERVER/_none_ $t\n+\tplantest \"$t\" dc bin/smbtorture $TORTURE_OPTIONS \"-U\\$USERNAME%\\$PASSWORD\" //\\$SERVER/_none_ $t\n done\n \n # only do the ldb tests when not in quick mode - they are quite slow, and ldb\n@@ -36,9 +25,9 @@\n test \"$TORTURE_QUICK\" = \"yes\" || {\n    LDBDIR=lib/ldb\n    export LDBDIR\n-   plantest \"ldb\" ldap $LDBDIR/tests/test-tdb.sh\n+   plantest \"ldb\" dc $LDBDIR/tests/test-tdb.sh\n }\n \n SCRIPTDIR=../testprogs/ejs\n \n-plantest \"ejs ldap\" ldap $SCRIPTDIR/ldap.js $CONFIGURATION $SERVER -U$USERNAME%$PASSWORD\n+plantest \"ejs ldap\" dc $SCRIPTDIR/ldap.js $CONFIGURATION \\$SERVER -U\\$USERNAME%\\$PASSWORD\n\n=== modified file 'source/script/tests/test_local.sh'\n--- a/source/script/tests/test_local.sh\t2007-03-21 16:26:25 +0000\n+++ b/source/script/tests/test_local.sh\t2007-04-10 21:17:14 +0000\n@@ -8,13 +8,6 @@\n     local_tests=\"$local_tests LOCAL-ICONV\"\n fi\n \n-if [ $# -lt 0 ]; then\n-cat < \n-EOF\n-exit 1;\n-fi\n-\n-unc=\"$1\"\n-username=\"$2\"\n-password=\"$3\"\n-start=\"$4\"\n-shift 4\n ADDARGS=\"$*\"\n \n incdir=`dirname $0`\n@@ -30,5 +18,5 @@\n \tcontinue;\n     fi\n     start=\"\"\n-    plantest \"$t\" smb $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS $unc -U\"$username\"%\"$password\" $t\n+    plantest \"$t\" dc $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS //\\$SERVER/tmp -U\"\\$USERNAME\"%\"\\$PASSWORD\" $t\n done\n\n=== modified file 'source/script/tests/test_quick.sh'\n--- a/source/script/tests/test_quick.sh\t2007-03-21 16:26:25 +0000\n+++ b/source/script/tests/test_quick.sh\t2007-04-10 21:17:14 +0000\n@@ -1,18 +1,6 @@\n #!/bin/sh\n # run a quick set of filesystem tests\n \n-if [ $# -lt 3 ]; then\n-cat < \n-EOF\n-exit 1;\n-fi\n-\n-unc=\"$1\"\n-username=\"$2\"\n-password=\"$3\"\n-start=\"$4\"\n-shift 4\n ADDARGS=\"$*\"\n \n incdir=`dirname $0`\n@@ -26,10 +14,6 @@\n tests=\"$tests RAW-EAS RAW-STREAMS\"\n \n for t in $tests; do\n-    if [ ! -z \"$start\" -a \"$start\" != $t ]; then\n-\tcontinue;\n-    fi\n-    start=\"\"\n     name=\"$t\"\n-    plantest \"$name\" base $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS $unc -U\"$username\"%\"$password\" $t\n+    plantest \"$name\" base $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS //\\$SERVER/cifs -U\"\\$USERNAME\"%\"\\$PASSWORD\" $t\n done\n\n=== modified file 'source/script/tests/test_rpc.sh'\n--- a/source/script/tests/test_rpc.sh\t2007-04-07 05:19:24 +0000\n+++ b/source/script/tests/test_rpc.sh\t2007-04-10 21:17:14 +0000\n@@ -9,19 +9,6 @@\n slow_ncalrpc_tests=\"RPC-SAMR RPC-SAMR-USERS RPC-SAMR-PASSWORDS RPC-COUNTCALLS RPC-CRACKNAMES\"\n slow_ncacn_ip_tcp_tests=\"RPC-SAMR RPC-SAMR-USERS RPC-SAMR-PASSWORDS RPC-COUNTCALLS RPC-CRACKNAMES\"\n \n-if [ $# -lt 4 ]; then\n-cat < \n-EOF\n-exit 1;\n-fi\n-\n-unc=\"$1\"\n-username=\"$2\"\n-password=\"$3\"\n-start=\"$4\"\n-shift 4\n ADDARGS=\"$*\"\n \n incdir=`dirname $0`\n@@ -21,10 +9,6 @@\n tests=\"BASE-RW1\"\n \n for t in $tests; do\n-    if [ ! -z \"$start\" -a \"$start\" != $t ]; then\n-\tcontinue;\n-    fi\n-    start=\"\"\n     name=\"$t\"\n-    plantest \"$name\" smb $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS $unc -U\"$username\"%\"$password\" $t\n+    plantest \"$name\" dc $VALGRIND bin/smbtorture $TORTURE_OPTIONS $ADDARGS //\\$SERVER/simple -U\"\\$USERNAME\"%\"\\$PASSWORD\" $t\n done\n\n=== modified file 'source/script/tests/tests_all.sh'\n--- a/source/script/tests/tests_all.sh\t2007-03-07 20:33:15 +0000\n+++ b/source/script/tests/tests_all.sh\t2007-04-10 21:17:14 +0000\n@@ -1,15 +1,15 @@\n #!/bin/sh\n- $SRCDIR/script/tests/test_ejs.sh $DOMAIN $USERNAME $PASSWORD $CONFIGURATION\n- $SRCDIR/script/tests/test_ldap.sh $SERVER $USERNAME $PASSWORD\n- $SRCDIR/script/tests/test_nbt.sh $SERVER $USERNAME $PASSWORD\n- $SRCDIR/script/tests/test_rpc.sh $SERVER $USERNAME $PASSWORD $DOMAIN\n- $SRCDIR/script/tests/test_net.sh $SERVER $USERNAME $PASSWORD $DOMAIN\n- $SRCDIR/script/tests/test_session_key.sh $SERVER $USERNAME $PASSWORD $DOMAIN $NETBIOSNAME\n- $SRCDIR/script/tests/test_binding_string.sh $SERVER $USERNAME $PASSWORD $DOMAIN\n- $SRCDIR/script/tests/test_echo.sh $SERVER $USERNAME $PASSWORD $DOMAIN\n- $SRCDIR/script/tests/test_posix.sh //$SERVER/tmp $USERNAME $PASSWORD \"\"\n+ $SRCDIR/script/tests/test_ejs.sh $CONFIGURATION\n+ $SRCDIR/script/tests/test_ldap.sh \n+ $SRCDIR/script/tests/test_nbt.sh\n+ $SRCDIR/script/tests/test_rpc.sh\n+ $SRCDIR/script/tests/test_net.sh\n+ $SRCDIR/script/tests/test_session_key.sh\n+ $SRCDIR/script/tests/test_binding_string.sh\n+ $SRCDIR/script/tests/test_echo.sh\n+ $SRCDIR/script/tests/test_posix.sh\n  $SRCDIR/script/tests/test_local.sh\n  $SRCDIR/script/tests/test_pidl.sh\n- $SRCDIR/script/tests/test_blackbox.sh $SERVER $USERNAME $PASSWORD $DOMAIN $PREFIX\n- $SRCDIR/script/tests/test_simple.sh //$SERVER/simple $USERNAME $PASSWORD \"\"\n+ $SRCDIR/script/tests/test_blackbox.sh $PREFIX/blackbox\n+ $SRCDIR/script/tests/test_simple.sh\n  $SRCDIR/script/tests/test_s3upgrade.sh $PREFIX/upgrade\n\n=== modified file 'source/script/tests/tests_quick.sh'\n--- a/source/script/tests/tests_quick.sh\t2007-04-04 14:24:44 +0000\n+++ b/source/script/tests/tests_quick.sh\t2007-04-10 21:17:14 +0000\n@@ -2,8 +2,8 @@\n TORTURE_QUICK=\"yes\"\n export TORTURE_QUICK\n \n-$SRCDIR/script/tests/test_ejs.sh $DOMAIN $USERNAME $PASSWORD $CONFIGURATION\n-$SRCDIR/script/tests/test_ldap.sh $SERVER $USERNAME $PASSWORD\n-$SRCDIR/script/tests/test_nbt.sh $SERVER $USERNAME $PASSWORD\n-$SRCDIR/script/tests/test_quick.sh //$SERVER/cifs $USERNAME $PASSWORD \"\"\n-$SRCDIR/script/tests/test_rpc_quick.sh $SERVER $USERNAME $PASSWORD $DOMAIN\n+$SRCDIR/script/tests/test_ejs.sh $CONFIGURATION\n+$SRCDIR/script/tests/test_ldap.sh\n+$SRCDIR/script/tests/test_nbt.sh\n+$SRCDIR/script/tests/test_quick.sh\n+$SRCDIR/script/tests/test_rpc_quick.sh\n\n"}