{"category": "ham", "to_address": "\"Qu, Chunxu\" <Chunxu.Qu@STJUDE.ORG>", "from_address": "Zombie Smyth <smyth@wehi.EDU.AU>", "subject": "[R] Sorting the levels of a factor", "body": "Dear Chunxu,\n\nI'm cc'ing my reply to the r-help mailing list. As I said in one of \nmy previous replies to you, your questions really have to do with use \nof factors in R rather than anything specifically to do with the \nlimma package, so they should go to a help list.\n\nThe levels() function in R, when applied to a factor, is simply an \nextractor function. It extracts the levels attribute of the factor (a \nshort character vector) which was setup when the factor itself was \ncreated. It doesn't change the levels in any way. For example, \nconsider the following code:\n\n   >  f <- factor( c(\"a\",\"b\",\"a\",\"b\"), levels=c(\"b\",\"a\"))\n   >  levels(f)\n   [1] \"b\" \"a\"\n\nThe factor() function sets up the factor with levels in a certain \norder. The levels() function simply extracts the previously defined \nlevels without resorting them.\n\nIf targets$Class is a factor, the correct way to extract the levels is\n\n    levels(targets$Class)\n\nYour use of unique() is superfluous. There is no need for you to use \nunique() anywhere in conjunction with factors if you are using \nfactors correctly in R.\n\nWhen you use read.table() to read data into R, that function will \nautomatically convert any character column that it finds in your file \ninto a factor. By default, the factor levels will be the unique \nvalues of the character column in alphabetical order. If that's not \nwhat you want, you can define your factors explicitly, with levels in \nany order that you like, or else you can use read.table() with \nas.is=TRUE to suppress the creation of factors altogether.\n\nYou last comment suggests that you might not be clear on the \ndifference between the values of a factor and its levels. You refer \nto an 'array', but there is no array in your example. Your example \nshows the levels of the factor twice, in exactly the same order each \ntime. The first row of your output is actually the values of the \nfactor created by unique(), not the levels attribute of the factor.\n\nThe reason that the levels of your factor are in alphabetical order \nis because you read your data using read.table() in the first place.\n\nHope this helps\nBest wishes\nZombie\n\nAt 11:21 PM 3/07/2007, Qu, Chunxu wrote:\n>In our Linux cluster, unique did not sort the array but levels did.\n>See below.\n>Chunxu\n>\n> > unique(targets$Class)\n>[1] Normal    Tumor     Tumor_CN  Normal_CN\n>Levels: Normal Normal_CN Tumor Tumor_CN\n> > levels(unique(targets$Class))\n>[1] \"Normal\"    \"Normal_CN\" \"Tumor\"     \"Tumor_CN\"\n>\n>\n>\n>-----Original Message-----\n>From: Zombie Smyth [mailto:smyth@wehi.EDU.AU]\n>Sent: Tuesday, July 03, 2007 2:42 AM\n>To: Qu, Chunxu\n>Subject: RE: limma 2.9.17\n>\n>Dear Chunxu,\n>\n>At 06:32 AM 3/07/2007, Qu, Chunxu wrote:\n...\n> >         if (is.factor(levels))\n> >                 levels = levels(levels)\n> >\n> >This WILL sort the levels.\n>\n>No, this doesn't sort the levels. It simply extracts the levels\n>without changing their order.\n...\n>Best wishes\n>Zombie\n>\n> >Chunxu\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}