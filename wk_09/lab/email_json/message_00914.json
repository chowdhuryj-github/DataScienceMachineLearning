{"category": "ham", "to_address": "\"Paul Gilbert\" <pgilbert@bank-banque-canada.ca>", "from_address": "\"Matthew Keller\" <mckellercran@gmail.com>", "subject": "Re: [R] Rserve and R to R communication", "body": "Hi Paul,\nThanks for your message, but I'm not 100% clear on your meaning. Couldyou unpack your logic a bit? Is this because two (+) sub-processesthat are begun at precisely the same time will both have the sameset.seed value (by default) for any RNG?\nMatt\nOn 4/9/07, Paul Gilbert  wrote:> Matthew Keller wrote:> > Hi Ramon,> >> > I've been interested in responses to your question. I have what I> > think is a similar issue - I have a very large simulation script and> > would like to be able to modularize it by having a main script that> > calls lots of subscripts -> For simulations you need to worry about the random number generator> sequence.  I think snow has a scheme for handling this. If you devise> your own system then be sure to look after this (non-trivial) detail.>> Paul Gilbert> > but I haven't done that yet because the> > only way I could think to do it was to call a subscript, have it run,> > save the objects from the subscript, and then call those objects back> > into the main script, which seems like a very slow and onerous way to> > do it.> >> > Would Rserve do what I'm looking for?> >> > On 4/7/07, Ramon Diaz-Uriarte  wrote:> >> >> Dear All,> >>> >> The \"clients.txt\" file of the latest Rserve package, by Simon Urbanek,> >> says, regarding its R client,> >>> >> \"(...) a simple R client, i.e. it allows you to connect to Rserve from> >> R itself. It is very simple and limited,  because Rserve was not> >> primarily meant for R-to-R communication (there are better ways to do> >> that), but it is useful for quick interactive connection to an Rserve> >> farm.\"> >>> >> Which are those better ways to do it? I am thinking about using Rserve> >> to have an R process send jobs to a bunch of Rserves in different> >> machines. It is like what we could do with Rmpi (or pvm), but without> >> the MPI layer. Therefore, presumably it'd be easier to deal with> >> network problems, machine's failures, using checkpoints, etc. (i.e.,> >> to try to get better fault tolerance).> >>> >> It seems that Rserve would provide the basic infrastructure for doing> >> that and saves me from reinventing the wheel of using sockets, etc,> >> directly from R.> >>> >> However, Simon's comment about better ways of R-to-R communication> >> made me wonder if this idea really makes sense. What is the catch?> >> Have other people tried similar approaches?> >>> >> Thanks,> >>> >> R.> >>> >> --> >> Ramon Diaz-Uriarte> >> Statistical Computing Team> >> Structural Biology and Biocomputing Programme> >> Spanish National Cancer Centre (CNIO)> >> http://ligarto.org/rdiaz> >>> >> ______________________________________________> >> R-help@stat.math.ethz.ch mailing list> >> https://stat.ethz.ch/mailman/listinfo/r-help> >> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html> >> and provide commented, minimal, self-contained, reproducible code.> >>> >>> >> >> >> ====================================================================================>> La version fran\u00e7aise suit le texte anglais.>> ------------------------------------------------------------------------------------>> This email may contain privileged and/or confidential info...{{dropped}}\n______________________________________________R-help@stat.math.ethz.ch mailing listhttps://stat.ethz.ch/mailman/listinfo/r-helpPLEASE do read the posting guide http://www.R-project.org/posting-guide.htmland provide commented, minimal, self-contained, reproducible code.\n\n"}