{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11885: Fix LOCAL-TORTURE (now tested else). in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11885\nrevision-id: jelmer@samba.org-20070417011632-cl2o439n94bit63x\nparent: jelmer@samba.org-20070417010855-8a7r14tmvje1yn44\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Tue 2007-04-17 03:16:32 +0200\nmessage:\n  Fix LOCAL-TORTURE (now tested else).\nmodified:\n  source/torture/local/torture.c svn-v2:16518@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2ftorture%2flocal%2ftorture.c\n  source/torture/util.c          svn-v2:16518@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2ftorture%2futil.c\n=== modified file 'source/torture/local/torture.c'\n--- a/source/torture/local/torture.c\t2007-04-16 20:35:19 +0000\n+++ b/source/torture/local/torture.c\t2007-04-17 01:16:32 +0000\n@@ -40,44 +40,12 @@\n \treturn true;\n }\n \n-static bool test_setup_server(struct torture_context *tctx)\n-{\n-\tpid_t pid;\n-\tTALLOC_CTX *mem_ctx = tctx;\n-\n-\ttorture_assert_ntstatus_ok(tctx, torture_setup_server(mem_ctx, \n-\t\t\t\t\t\t\t\t\t\"setupserver-success\",\n-\t\t\t\t\t\t\t\t\t\"./script/tests/mksamba4server.pl\",\n-\t\t\t\t\t\t\t\t\t\"./bin/smbd\", &pid),\n-\t\t\t\t\t\t\t   \"starting smbd failed\");\n-\n-\ttorture_assert(tctx, pid > 0, \"Pid invalid\");\n-\n-\ttorture_comment(tctx, \"Created smbd with pid %d\\n\", pid);\n-\n-\tkill(pid, SIGINT);\n-\n-\twaitpid(pid, NULL, 0);\n-\n-\ttorture_assert_ntstatus_equal(tctx, torture_setup_server(mem_ctx, \n-\t\t\t\t\t\t\t\t\t\"setupserver-fail\",\n-\t\t\t\t\t\t\t\t\t\"./invalid-script\",\n-\t\t\t\t\t\t\t\t\t\"./bin/smbd\", &pid), \n-\t\t\t\t\t\t\t\t  NT_STATUS_UNSUCCESSFUL,\n-\t\t\t\t\t\t\t   \"invalid script specified\");\n-\n-\ttorture_assert(tctx, pid == -1, \"Pid not -1 after failure\");\n-\treturn true;\n-}\n-\n-\n struct torture_suite *torture_local_torture(TALLOC_CTX *mem_ctx)\n {\n \tstruct torture_suite *suite = torture_suite_create(mem_ctx, \n \t\t\t\t\t\t\t\t\t\t\t\t\t   \"TORTURE\");\n \n \ttorture_suite_add_simple_test(suite, \"tempdir\", test_tempdir);\n-\ttorture_suite_add_simple_test(suite, \"setup server\", test_setup_server);\n \n \treturn suite;\n }\n\n=== modified file 'source/torture/util.c'\n--- a/source/torture/util.c\t2007-04-16 10:04:39 +0000\n+++ b/source/torture/util.c\t2007-04-17 01:16:32 +0000\n@@ -50,77 +50,6 @@\n \treturn *t1 == *t2;\n }\n \n-/**\n- * Provision a Samba installation using @param setupdir_script and start smbd.\n- */\n-NTSTATUS torture_setup_server(TALLOC_CTX *mem_ctx, \n-\t\t\t\t\t\t\t  const char *prefix,\n-\t\t\t\t\t\t\t  const char *setupdir_script,\n-\t\t\t\t\t\t\t  const char *smbd_path,\n-\t\t\t\t\t\t\t  pid_t *smbd_pid)\n-{\n-\tchar *tempdir;\n-\tNTSTATUS status;\n-\tpid_t pid;\n-\tint child_status;\n-\tchar *configfile, *configparam;\n-\tpid_t closed_pid;\n-\n-\t*smbd_pid = -1;\n-\n-\tstatus = torture_temp_dir(mem_ctx, prefix, &tempdir);\n-\tif (NT_STATUS_IS_ERR(status)) {\n-\t\treturn status;\n-\t}\n-\n-\tif ((pid = fork()) == 0) {\n-\t\texecl(setupdir_script, setupdir_script, tempdir, NULL);\n-\t\texit(1);\n-\t} else if (pid == -1) {\n-\t\tDEBUG(0, (\"Unable to fork()\\n\"));\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n-\t}\n-\n-\tclosed_pid = waitpid(pid, &child_status, 0);\n-\n-\tif (closed_pid == -1) {\n-\t\tDEBUG(1, (\"Error waiting for child\"));\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n-\t}\n-\n-\tSMB_ASSERT(closed_pid == pid);\n-\n-\tif (!WIFEXITED(child_status) || WEXITSTATUS(child_status) != 0) {\n-\t\tDEBUG(1, (\"Invalid return code from setup script %s: %d\\n\", \n-\t\t\t\t  setupdir_script,\n-\t\t\t\t  WEXITSTATUS(child_status)));\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n-\t}\n-\n-\tconfigfile = talloc_asprintf(mem_ctx, \"%s/etc/smb.conf\", \n-\t\t\t\t\t\t\t\t tempdir);\n-\tif (!file_exist(configfile)) {\n-\t\tDEBUG(1, (\"Setup script didn't create %s\\n\", configfile));\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n-\t}\n-\n-\tconfigparam = talloc_asprintf(mem_ctx, \"--configfile=%s\", configfile);\n-\ttalloc_free(configfile);\n-\n-\tif ((pid = fork()) == 0) {\n-\t\texecl(smbd_path, smbd_path, \"-i\", \"--model=single\", \n-\t\t\t\t\t\tconfigparam, NULL);\n-\t\texit(1);\n-\t} else if (pid == -1) {\n-\t\tDEBUG(0, (\"Unable to fork()\\n\"));\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n-\t}\n-\n-\t*smbd_pid = pid;\n-\n-\treturn NT_STATUS_OK;\n-}\n-\n NTSTATUS torture_second_tcon(TALLOC_CTX *mem_ctx,\n \t\t\t     struct smbcli_session *session,\n \t\t\t     const char *sharename,\n\n"}