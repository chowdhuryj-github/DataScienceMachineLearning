{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: Reading and matching email ids", "body": "Saravana Kumar wrote:\n> Hi list,\n\nHello,\n\n> I am testing a regex with email ids. I have a list of ids that i want to\n> match against a one more list of ids.\n> \n> I have this:\n> #! /usr/bin/perl\n\nuse warnings;\nuse strict;\n\n\n> $id=\"user1@example.net\";\n\nScalars and arrays are interpolated in double quoted strings so after\ninterpolation your string looks like 'user1.net' which is what is displayed in\nyour 'not found' message below.\n\n\n> while(<>) {\n> chomp($_);print \"$_\\t\";\n> print \"$id found\\n\" if  /$id/;\n> print \"$id not found\\n\" if ! /$id/;\n> }\n\nIf you are going to use $id in a regular expression you need to use quotemeta\nto ensure that the . matches a literal period and you should use anchors so\nthat 'user1@example.net' doesn't match 'luser1@example.net' for example.\n\nprint \"$_\\t$id \", /\\A\\Q$id\\E\\z/ ? '' : 'not ', \"found\\n\";\n\nBut if you are looking for an exact match then you shouldn't be using a\nregular expression at all:\n\nprint \"$_\\t$id \", $_ eq $id ? '' : 'not ', \"found\\n\";\n\n\n> and a file /tmp/sampleids\n> user1@example.net\n> user2@example.net\n> user3@example.net\n> user1\\@example\\.net\n> \n> When i run it i get : \n> user1@example.net       user1.net not found\n> user2@example.net       user1.net not found\n> user3@example.net       user1.net not found\n> user1\\@example\\.net     user1.net not found\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}