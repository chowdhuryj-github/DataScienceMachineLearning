{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "paultcochrane@cvs.develooper.com", "subject": "[svn:parrot-pdd] r18461 - trunk/docs/pdds", "body": "Author: paultcochrane\nDate: Tue May  8 07:34:42 2007\nNew Revision: 18461\n\nModified:\n   trunk/docs/pdds/pdd07_codingstd.pod\n\nLog:\n[docs] Added coding standard text concerning guard preprocessor directives\nin header files.  Patch courtesy of Mike Glines.\n\n\nModified: trunk/docs/pdds/pdd07_codingstd.pod\n==============================================================================\n--- trunk/docs/pdds/pdd07_codingstd.pod\t(original)\n+++ trunk/docs/pdds/pdd07_codingstd.pod\tTue May  8 07:34:42 2007\n@@ -254,6 +254,26 @@\n Variable names must be included for all function parameters in the function\n declarations.\n \n+=item *\n+\n+Header files must be wrapped with guard macros, which must have a PARROT_,\n+followed by some unique and descriptive text identifying the header file, and\n+be followed with a _GUARD suffix.  The matching #endif must have the guard\n+macro name in a comment, to prevent confusion.  For example, a file named\n+parrot/foo.h might look like:\n+\n+    #ifndef PARROT_FOO_H_GUARD\n+    #  define PARROT_FOO_H_GUARD\n+    \n+    #  include \"parrot/config.h\"\n+    #  ifdef PARROT_HAS_FEATURE_FOO\n+    typedef struct foo {\n+    \t...\n+    } foo_t;\n+    #  endif /* PARROT_HAS_FEATURE_FOO */\n+   \n+    #endif /* PARROT_FOO_H_GUARD */\n+\n =back\n \n \n\n"}