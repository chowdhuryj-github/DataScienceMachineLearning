{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r22728 - in branches: SAMBA_3_0/source/libads\n\tSAMBA_3_0/source/utils SAMBA_3_0_26/source/libads\n\tSAMBA_3_0_26/source/utils", "body": "Author: jerry\nDate: 2007-05-06 21:45:53 +0000 (Sun, 06 May 2007)\nNew Revision: 22728\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22728\n\nLog:\nPatch from Danilo Almeida :\n\nWhen asked to create a machine account in an OU as part\nof \"net ads join\" and the account already exists in another \nOU, simply move the machine object to the requested OU.\n\n\n\nModified:\n   branches/SAMBA_3_0/source/libads/ldap.c\n   branches/SAMBA_3_0/source/utils/net_ads.c\n   branches/SAMBA_3_0_26/source/libads/ldap.c\n   branches/SAMBA_3_0_26/source/utils/net_ads.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/libads/ldap.c\n===================================================================\n--- branches/SAMBA_3_0/source/libads/ldap.c\t2007-05-06 21:40:28 UTC (rev 22727)\n+++ branches/SAMBA_3_0/source/libads/ldap.c\t2007-05-06 21:45:53 UTC (rev 22728)\n@@ -1688,6 +1688,76 @@\n \treturn ret;\n }\n \n+/**\n+ * move a machine account to another OU on the ADS server\n+ * @param ads - An intialized ADS_STRUCT\n+ * @param machine_name - the NetBIOS machine name of this account.\n+ * @param org_unit - The LDAP path in which to place this account\n+ * @param moved - whether we moved the machine account (optional)\n+ * @return 0 upon success, or non-zero otherwise\n+**/\n+\n+ADS_STATUS ads_move_machine_acct(ADS_STRUCT *ads, const char *machine_name, \n+                                 const char *org_unit, BOOL *moved)\n+{\n+\tADS_STATUS rc;\n+\tint ldap_status;\n+\tLDAPMessage *res = NULL;\n+\tchar *filter = NULL;\n+\tchar *computer_dn = NULL;\n+\tchar *parent_dn;\n+\tchar *computer_rdn = NULL;\n+\tBOOL need_move = False;\n+\n+\tif (asprintf(&filter, \"(samAccountName=%s$)\", machine_name) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\t/* Find pre-existing machine */\n+\trc = ads_search(ads, &res, filter, NULL);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tgoto done;\n+\t}\n+\n+\tcomputer_dn = ads_get_dn(ads, res);\n+\tif (!computer_dn) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\tparent_dn = ads_parent_dn(computer_dn);\n+\tif (strequal(parent_dn, org_unit)) {\n+\t\tgoto done;\n+\t}\n+\n+\tneed_move = True;\n+\n+\tif (asprintf(&computer_rdn, \"CN=%s\", machine_name) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\tldap_status = ldap_rename2_s(ads->ld, computer_dn, computer_rdn, org_unit, 1);\n+\trc = ADS_ERROR(ldap_status);\n+\n+done:\n+\tads_msgfree(ads, res);\n+\tSAFE_FREE(filter);\n+\tSAFE_FREE(computer_dn);\n+\tSAFE_FREE(computer_rdn);\n+\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tneed_move = False;\n+\t}\n+\n+\tif (moved) {\n+\t\t*moved = need_move;\n+\t}\n+\n+\treturn rc;\n+}\n+\n /*\n   dump a binary result from ldap\n */\n\nModified: branches/SAMBA_3_0/source/utils/net_ads.c\n===================================================================\n--- branches/SAMBA_3_0/source/utils/net_ads.c\t2007-05-06 21:40:28 UTC (rev 22727)\n+++ branches/SAMBA_3_0/source/utils/net_ads.c\t2007-05-06 21:45:53 UTC (rev 22728)\n@@ -1190,28 +1190,50 @@\n static ADS_STATUS net_precreate_machine_acct( ADS_STRUCT *ads, const char *ou )\n {\n \tADS_STATUS rc = ADS_ERROR(LDAP_SERVER_DOWN);\n-\tchar *dn, *ou_str;\n+\tchar *ou_str = NULL;\n+\tchar *dn = NULL;\n \tLDAPMessage *res = NULL;\n+\tBOOL moved;\n \n \tou_str = ads_ou_string(ads, ou);\n-\tif ((asprintf(&dn, \"%s,%s\", ou_str, ads->config.bind_path)) == -1) {\n-\t\tSAFE_FREE(ou_str);\n-\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\tif (asprintf(&dn, \"%s,%s\", ou_str, ads->config.bind_path) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n \t}\n \n \trc = ads_search_dn(ads, &res, dn, NULL);\n-\tads_msgfree(ads, res);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\td_fprintf(stderr, \"The specified OU does not exist.\\n\");\n+\t\tgoto done;\n+\t}\n \n-\tif (ADS_ERR_OK(rc)) {\n \t\t/* Attempt to create the machine account and bail if this fails.\n \t\t   Assume that the admin wants exactly what they requested */\n \n \t\trc = ads_create_machine_acct( ads, global_myname(), dn );\n-\t\tif ( rc.error_type == ENUM_ADS_ERROR_LDAP && rc.err.rc == LDAP_ALREADY_EXISTS ) {\n-\t\t\trc = ADS_SUCCESS;\n+\tif (ADS_ERR_OK(rc)) {\n+\t\tDEBUG(1, (\"machine account created\\n\"));\n+\t\tgoto done;\n \t\t}\n+\tif ( !(rc.error_type == ENUM_ADS_ERROR_LDAP && rc.err.rc == LDAP_ALREADY_EXISTS) ) {\n+\t\tDEBUG(1, (\"machine account creation failed\\n\"));\n+\t\tgoto done;\n \t}\n \n+\trc = ads_move_machine_acct(ads, global_myname(), dn, &moved);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tDEBUG(1, (\"failure to locate/move pre-existing machine account\\n\"));\n+\t\tgoto done;\n+\t}\n+\n+\tif (moved) {\n+\t\td_printf(\"The machine account was moved into the specified OU.\\n\");\n+\t} else {\n+\t\td_printf(\"The machine account already exists in the specified OU.\\n\");\n+\t}\n+\n+done:\n+\tads_msgfree(ads, res);\n \tSAFE_FREE( ou_str );\n \tSAFE_FREE( dn );\n \n@@ -1528,7 +1550,7 @@\n \t\tstatus = net_precreate_machine_acct( ads, create_in_ou );\n \t\tif ( !ADS_ERR_OK(status) ) {\n \t\t\td_fprintf( stderr, \"Failed to pre-create the machine object \"\n-\t\t\t\t\"in OU %s.\\n\", argv[0]);\n+\t\t\t\t\"in OU %s.\\n\", create_in_ou);\n \t\t\tDEBUG(1, (\"error calling net_precreate_machine_acct: %s\\n\", \n \t\t\t\t  ads_errstr(status)));\n \t\t\tnt_status = ads_ntstatus(status);\n\nModified: branches/SAMBA_3_0_26/source/libads/ldap.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/libads/ldap.c\t2007-05-06 21:40:28 UTC (rev 22727)\n+++ branches/SAMBA_3_0_26/source/libads/ldap.c\t2007-05-06 21:45:53 UTC (rev 22728)\n@@ -1688,6 +1688,76 @@\n \treturn ret;\n }\n \n+/**\n+ * move a machine account to another OU on the ADS server\n+ * @param ads - An intialized ADS_STRUCT\n+ * @param machine_name - the NetBIOS machine name of this account.\n+ * @param org_unit - The LDAP path in which to place this account\n+ * @param moved - whether we moved the machine account (optional)\n+ * @return 0 upon success, or non-zero otherwise\n+**/\n+\n+ADS_STATUS ads_move_machine_acct(ADS_STRUCT *ads, const char *machine_name, \n+                                 const char *org_unit, BOOL *moved)\n+{\n+\tADS_STATUS rc;\n+\tint ldap_status;\n+\tLDAPMessage *res = NULL;\n+\tchar *filter = NULL;\n+\tchar *computer_dn = NULL;\n+\tchar *parent_dn;\n+\tchar *computer_rdn = NULL;\n+\tBOOL need_move = False;\n+\n+\tif (asprintf(&filter, \"(samAccountName=%s$)\", machine_name) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\t/* Find pre-existing machine */\n+\trc = ads_search(ads, &res, filter, NULL);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tgoto done;\n+\t}\n+\n+\tcomputer_dn = ads_get_dn(ads, res);\n+\tif (!computer_dn) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\tparent_dn = ads_parent_dn(computer_dn);\n+\tif (strequal(parent_dn, org_unit)) {\n+\t\tgoto done;\n+\t}\n+\n+\tneed_move = True;\n+\n+\tif (asprintf(&computer_rdn, \"CN=%s\", machine_name) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n+\t}\n+\n+\tldap_status = ldap_rename2_s(ads->ld, computer_dn, computer_rdn, org_unit, 1);\n+\trc = ADS_ERROR(ldap_status);\n+\n+done:\n+\tads_msgfree(ads, res);\n+\tSAFE_FREE(filter);\n+\tSAFE_FREE(computer_dn);\n+\tSAFE_FREE(computer_rdn);\n+\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tneed_move = False;\n+\t}\n+\n+\tif (moved) {\n+\t\t*moved = need_move;\n+\t}\n+\n+\treturn rc;\n+}\n+\n /*\n   dump a binary result from ldap\n */\n\nModified: branches/SAMBA_3_0_26/source/utils/net_ads.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/utils/net_ads.c\t2007-05-06 21:40:28 UTC (rev 22727)\n+++ branches/SAMBA_3_0_26/source/utils/net_ads.c\t2007-05-06 21:45:53 UTC (rev 22728)\n@@ -1190,28 +1190,50 @@\n static ADS_STATUS net_precreate_machine_acct( ADS_STRUCT *ads, const char *ou )\n {\n \tADS_STATUS rc = ADS_ERROR(LDAP_SERVER_DOWN);\n-\tchar *dn, *ou_str;\n+\tchar *ou_str = NULL;\n+\tchar *dn = NULL;\n \tLDAPMessage *res = NULL;\n+\tBOOL moved;\n \n \tou_str = ads_ou_string(ads, ou);\n-\tif ((asprintf(&dn, \"%s,%s\", ou_str, ads->config.bind_path)) == -1) {\n-\t\tSAFE_FREE(ou_str);\n-\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\tif (asprintf(&dn, \"%s,%s\", ou_str, ads->config.bind_path) == -1) {\n+\t\trc = ADS_ERROR(LDAP_NO_MEMORY);\n+\t\tgoto done;\n \t}\n \n \trc = ads_search_dn(ads, &res, dn, NULL);\n-\tads_msgfree(ads, res);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\td_fprintf(stderr, \"The specified OU does not exist.\\n\");\n+\t\tgoto done;\n+\t}\n \n-\tif (ADS_ERR_OK(rc)) {\n \t\t/* Attempt to create the machine account and bail if this fails.\n \t\t   Assume that the admin wants exactly what they requested */\n \n \t\trc = ads_create_machine_acct( ads, global_myname(), dn );\n-\t\tif ( rc.error_type == ENUM_ADS_ERROR_LDAP && rc.err.rc == LDAP_ALREADY_EXISTS ) {\n-\t\t\trc = ADS_SUCCESS;\n+\tif (ADS_ERR_OK(rc)) {\n+\t\tDEBUG(1, (\"machine account created\\n\"));\n+\t\tgoto done;\n \t\t}\n+\tif ( !(rc.error_type == ENUM_ADS_ERROR_LDAP && rc.err.rc == LDAP_ALREADY_EXISTS) ) {\n+\t\tDEBUG(1, (\"machine account creation failed\\n\"));\n+\t\tgoto done;\n \t}\n \n+\trc = ads_move_machine_acct(ads, global_myname(), dn, &moved);\n+\tif (!ADS_ERR_OK(rc)) {\n+\t\tDEBUG(1, (\"failure to locate/move pre-existing machine account\\n\"));\n+\t\tgoto done;\n+\t}\n+\n+\tif (moved) {\n+\t\td_printf(\"The machine account was moved into the specified OU.\\n\");\n+\t} else {\n+\t\td_printf(\"The machine account already exists in the specified OU.\\n\");\n+\t}\n+\n+done:\n+\tads_msgfree(ads, res);\n \tSAFE_FREE( ou_str );\n \tSAFE_FREE( dn );\n \n@@ -1528,7 +1550,7 @@\n \t\tstatus = net_precreate_machine_acct( ads, create_in_ou );\n \t\tif ( !ADS_ERR_OK(status) ) {\n \t\t\td_fprintf( stderr, \"Failed to pre-create the machine object \"\n-\t\t\t\t\"in OU %s.\\n\", argv[0]);\n+\t\t\t\t\"in OU %s.\\n\", create_in_ou);\n \t\t\tDEBUG(1, (\"error calling net_precreate_machine_acct: %s\\n\", \n \t\t\t\t  ads_errstr(status)));\n \t\t\tnt_status = ads_ntstatus(status);\n\n"}