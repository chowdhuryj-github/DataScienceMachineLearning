{"category": "ham", "to_address": "Andrew Bartlett <abartlet@samba.org>", "from_address": "\"Stefan (metze) Metzmacher\" <metze@samba.org>", "subject": "Re: svn commit: samba r22874 - in\n branches/SAMBA_4_0/source:\tntvfs/ipc torture/raw", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nAndrew Bartlett schrieb:\n> On Tue, 2007-05-15 at 08:43 +0200, Stefan (metze) Metzmacher wrote:\n>> -----BEGIN PGP SIGNED MESSAGE-----\n>> Hash: SHA1\n>>\n>>>  /*\n>>> @@ -602,6 +609,39 @@\n>>>  static NTSTATUS ipc_qfileinfo(struct ntvfs_module_context *ntvfs,\n>>>  \t\t\t      struct ntvfs_request *req, union smb_fileinfo *info)\n>>>  {\n>>> +\tstruct ipc_private *private = ntvfs->private_data;\n>>> +\tswitch (info->generic.level) {\n>>> +\tcase RAW_FILEINFO_GENERIC: \n>>> +\t{\n>>> +\t\tstruct pipe_state *p;\n>>> +\t\tp = pipe_state_find(private, info->generic.in.file.ntvfs);\n>>> +\t\tif (!p) {\n>>> +\t\t\treturn NT_STATUS_INVALID_HANDLE;\n>>> +\t\t}\n>>> +\t\tZERO_STRUCT(info->generic.out);\n>>> +\t\tinfo->generic.out.attrib = FILE_ATTRIBUTE_NORMAL;\n>>> +\t\tinfo->generic.out.fname.s = strrchr(p->pipe_name, '\\\\');\n>>> +\t\tinfo->generic.out.alloc_size = 4096;\n>>> +\t\tinfo->generic.out.nlink = 1;\n>>> +\t\t/* What the heck?  Match Win2k3: IPC$ pipes are delete pending */\n>>> +\t\tinfo->generic.out.delete_pending = 1;\n>>> +\t\treturn NT_STATUS_OK;\n>>> +\t}\n>>> +\tcase RAW_FILEINFO_ALT_NAME_INFO:\n>>> +\tcase RAW_FILEINFO_ALT_NAME_INFORMATION:\n>>> +\tcase RAW_FILEINFO_STREAM_INFO:\n>>> +\tcase RAW_FILEINFO_STREAM_INFORMATION:\n>>> +\tcase RAW_FILEINFO_COMPRESSION_INFO:\n>>> +\tcase RAW_FILEINFO_COMPRESSION_INFORMATION:\n>>> +\tcase RAW_FILEINFO_NETWORK_OPEN_INFORMATION:\n>>> +\tcase RAW_FILEINFO_ATTRIBUTE_TAG_INFORMATION:\n>>> +\t\treturn NT_STATUS_INVALID_PARAMETER;\n>>> +\tcase  RAW_FILEINFO_ALL_EAS:\n>>> +\t\treturn NT_STATUS_ACCESS_DENIED;\n>>> +\tdefault:\n>>> +\t\treturn ntvfs_map_qfileinfo(ntvfs, req, info);\n>>> +\t}\n>>> +\t\n>> Hi Andrew,\n>>\n>> are you sure that the other levels always give INVALID_PARAMETER and\n>> not INVALID_HANDLE even if the handle isn't valid?\n> \n> I didn't explore that, but that seems reasonable.  Any suggestions on a\n> reliably un-used fnum?  (0xffff)?\n\n0xffff is only valid on flush.\n\nbut a test is what we need\n\nmetze\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.5 (GNU/Linux)\nComment: Using GnuPG with SUSE - http://enigmail.mozdev.org\n\niD8DBQFGSVsqm70gjA5TCD8RAnbMAKCv5UFUEQ0lYqwXwN97p6OhgIyxcgCgpu6/\nGKuIziANDomr/5dxZPR6BPo=\n=za8o\n-----END PGP SIGNATURE-----\n\n"}