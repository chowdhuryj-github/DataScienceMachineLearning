{"category": "ham", "to_address": "Alek Storm <alek.storm@gmail.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: [perl #42430] [PATCH] make :vtable imply :method", "body": "Alek Storm wrote:\n>> >\n>> > So, that still means :method can mean two different things, depending\n>> > on whether :vtable is present or not.  That's still bad.\n>>\n>> How so? Without :vtable, :method adds a method to the class. With\n>> :vtable, :method adds a method to the class.\n> \n> Without :vtable, :method adds a method to the class.  With :vtable,\n> :method doesn't add a method to the class - it makes the sub visible.\n> Two completely different things.\n\nYou've misunderstood how the features work. Vtables and methods are \nstored separately from each other. Both :vtable and :method say \"this \ncode entity isn't a subroutine, and isn't visible as a subroutine\".\n\nPerhaps it would be clearer to you if we were using:\n\n.sub\n.endsub\n\n.method\n.endmethod\n\n.vtable\n.endvtable\n\nAllison\n\n"}