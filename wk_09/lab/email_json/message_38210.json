{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23195 - in branches: SAMBA_3_0/source/include\n\tSAMBA_3_0/source/locking SAMBA_3_0/source/torture\n\tSAMBA_3_0/source/utils SAMBA_3_0_26/source/include\n\tSAMBA_3_0_26/source/locking SAMBA_3_0_26/source/torture\n\tSAMBA_3_0_26/source/utils", "body": "Author: vlendec\nDate: 2007-05-29 13:26:44 +0000 (Tue, 29 May 2007)\nNew Revision: 23195\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23195\n\nLog:\nAdd void *private_data to brl_forall\n\nModified:\n   branches/SAMBA_3_0/source/include/locking.h\n   branches/SAMBA_3_0/source/locking/brlock.c\n   branches/SAMBA_3_0/source/torture/locktest.c\n   branches/SAMBA_3_0/source/torture/locktest2.c\n   branches/SAMBA_3_0/source/utils/status.c\n   branches/SAMBA_3_0_26/source/include/locking.h\n   branches/SAMBA_3_0_26/source/locking/brlock.c\n   branches/SAMBA_3_0_26/source/torture/locktest.c\n   branches/SAMBA_3_0_26/source/torture/locktest2.c\n   branches/SAMBA_3_0_26/source/utils/status.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/include/locking.h\n===================================================================\n--- branches/SAMBA_3_0/source/include/locking.h\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0/source/include/locking.h\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -62,18 +62,6 @@\n \tstruct db_record *record;\n };\n \n-#define BRLOCK_FN_CAST() \\\n-\tvoid (*)(struct file_id id, struct server_id pid, \\\n-\t\t\t\t enum brl_type lock_type, \\\n-\t\t\t\t enum brl_flavour lock_flav, \\\n-\t\t\t\t br_off start, br_off size)\n-\n-#define BRLOCK_FN(fn) \\\n-\tvoid (*fn)(struct file_id id, struct server_id pid, \\\n-\t\t\t\t enum brl_type lock_type, \\\n-\t\t\t\t enum brl_flavour lock_flav, \\\n-\t\t\t\t br_off start, br_off size)\n-\n /* Internal structure in brlock.tdb. \n    The data in brlock records is an unsorted linear array of these\n    records.  It is unnecessary to store the count as tdb provides the\n\nModified: branches/SAMBA_3_0/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0/source/locking/brlock.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0/source/locking/brlock.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -1447,6 +1447,15 @@\n \treturn True;\n }\n \n+struct brl_forall_cb {\n+\tvoid (*fn)(struct file_id id, struct server_id pid,\n+\t\t   enum brl_type lock_type,\n+\t\t   enum brl_flavour lock_flav,\n+\t\t   br_off start, br_off size,\n+\t\t   void *private_data);\n+\tvoid *private_data;\n+};\n+\n /****************************************************************************\n  Traverse the whole database with this function, calling traverse_callback\n  on each lock.\n@@ -1454,14 +1463,13 @@\n \n static int traverse_fn(struct db_record *rec, void *state)\n {\n+\tstruct brl_forall_cb *cb = (struct brl_forall_cb *)state;\n \tstruct lock_struct *locks;\n \tstruct file_id *key;\n \tunsigned int i;\n \tunsigned int num_locks = 0;\n \tunsigned int orig_num_locks = 0;\n \n-\tBRLOCK_FN(traverse_callback) = (BRLOCK_FN_CAST())state;\n-\n \t/* In a traverse function we must make a copy of\n \t   dbuf before modifying it. */\n \n@@ -1493,12 +1501,13 @@\n \t}\n \n \tfor ( i=0; ifn(*key,\n+\t\t       locks[i].context.pid,\n+\t\t       locks[i].lock_type,\n+\t\t       locks[i].lock_flav,\n+\t\t       locks[i].start,\n+\t\t       locks[i].size,\n+\t\t       cb->private_data);\n \t}\n \n \tSAFE_FREE(locks);\n@@ -1509,12 +1518,21 @@\n  Call the specified function on each lock in the database.\n ********************************************************************/\n \n-int brl_forall(BRLOCK_FN(fn))\n+int brl_forall(void (*fn)(struct file_id id, struct server_id pid,\n+\t\t\t  enum brl_type lock_type,\n+\t\t\t  enum brl_flavour lock_flav,\n+\t\t\t  br_off start, br_off size,\n+\t\t\t  void *private_data),\n+\t       void *private_data)\n {\n+\tstruct brl_forall_cb cb;\n+\n \tif (!brlock_db) {\n \t\treturn 0;\n \t}\n-\treturn brlock_db->traverse(brlock_db, traverse_fn, (void *)fn);\n+\tcb.fn = fn;\n+\tcb.private_data = private_data;\n+\treturn brlock_db->traverse(brlock_db, traverse_fn, &cb);\n }\n \n /*******************************************************************\n\nModified: branches/SAMBA_3_0/source/torture/locktest.c\n===================================================================\n--- branches/SAMBA_3_0/source/torture/locktest.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0/source/torture/locktest.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -121,7 +121,8 @@\n \t\t\tenum brl_type lock_type,\n \t\t\tenum brl_flavour lock_flav,\n \t\t\tbr_off start,\n-\t\t\tbr_off size)\n+\t\t\tbr_off size,\n+\t\t\tvoid *private_data)\n {\n #if NASTY_POSIX_LOCK_HACK\n \t{\n@@ -147,7 +148,7 @@\n \n static void show_locks(void)\n {\n-\tbrl_forall(print_brl);\n+\tbrl_forall(print_brl, NULL);\n \t/* system(\"cat /proc/locks\"); */\n }\n \n\nModified: branches/SAMBA_3_0/source/torture/locktest2.c\n===================================================================\n--- branches/SAMBA_3_0/source/torture/locktest2.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0/source/torture/locktest2.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -139,7 +139,8 @@\n static void print_brl(struct file_id id, struct server_id pid, \n \t\t      enum brl_type lock_type,\n \t\t      enum brl_flavour lock_flav,\n-\t\t      br_off start, br_off size)\n+\t\t      br_off start, br_off size,\n+\t\t      void *private_data)\n {\n \tprintf(\"%6d   %s    %s  %.0f:%.0f(%.0f)\\n\", \n \t       (int)procid_to_pid(&pid), file_id_static_string(&id),\n@@ -259,7 +260,7 @@\n \t\t\t       op==READ_LOCK?\"READ_LOCK\":\"WRITE_LOCK\",\n \t\t\t       ret[0], ret[1]);\n \t\t}\n-\t\tif (showall) brl_forall(print_brl);\n+\t\tif (showall) brl_forall(print_brl, NULL);\n \t\tif (ret[0] != ret[1]) return False;\n \t} else if (r2 < LOCK_PCT+UNLOCK_PCT) {\n \t\t/* unset a lock */\n@@ -274,7 +275,7 @@\n \t\t\t       start, start+len-1, len,\n \t\t\t       ret[0], ret[1]);\n \t\t}\n-\t\tif (showall) brl_forall(print_brl);\n+\t\tif (showall) brl_forall(print_brl, NULL);\n \t\tif (!hide_unlock_fails && ret[0] != ret[1]) return False;\n \t} else {\n \t\t/* reopen the file */\n@@ -290,7 +291,7 @@\n \t\tif (showall) {\n \t\t\tprintf(\"reopen conn=%u fstype=%u f=%u\\n\",\n \t\t\t       conn, fstype, f);\n-\t\t\tbrl_forall(print_brl);\n+\t\t\tbrl_forall(print_brl, NULL);\n \t\t}\n \t}\n \treturn True;\n\nModified: branches/SAMBA_3_0/source/utils/status.c\n===================================================================\n--- branches/SAMBA_3_0/source/utils/status.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0/source/utils/status.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -171,7 +171,8 @@\n \t\t\tenum brl_type lock_type,\n \t\t\tenum brl_flavour lock_flav,\n \t\t\tbr_off start,\n-\t\t\tbr_off size)\n+\t\t\tbr_off size,\n+\t\t\tvoid *private_data)\n {\n \tstatic int count;\n \tint i;\n@@ -389,7 +390,7 @@\n \t\td_printf(\"\\n\");\n \n \t\tif (show_brl) {\n-\t\t\tbrl_forall(print_brl);\n+\t\t\tbrl_forall(print_brl, NULL);\n \t\t}\n \t\t\n \t\tlocking_end();\n\nModified: branches/SAMBA_3_0_26/source/include/locking.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/locking.h\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0_26/source/include/locking.h\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -62,18 +62,6 @@\n \tstruct db_record *record;\n };\n \n-#define BRLOCK_FN_CAST() \\\n-\tvoid (*)(struct file_id id, struct server_id pid, \\\n-\t\t\t\t enum brl_type lock_type, \\\n-\t\t\t\t enum brl_flavour lock_flav, \\\n-\t\t\t\t br_off start, br_off size)\n-\n-#define BRLOCK_FN(fn) \\\n-\tvoid (*fn)(struct file_id id, struct server_id pid, \\\n-\t\t\t\t enum brl_type lock_type, \\\n-\t\t\t\t enum brl_flavour lock_flav, \\\n-\t\t\t\t br_off start, br_off size)\n-\n /* Internal structure in brlock.tdb. \n    The data in brlock records is an unsorted linear array of these\n    records.  It is unnecessary to store the count as tdb provides the\n\nModified: branches/SAMBA_3_0_26/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/locking/brlock.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0_26/source/locking/brlock.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -1447,6 +1447,15 @@\n \treturn True;\n }\n \n+struct brl_forall_cb {\n+\tvoid (*fn)(struct file_id id, struct server_id pid,\n+\t\t   enum brl_type lock_type,\n+\t\t   enum brl_flavour lock_flav,\n+\t\t   br_off start, br_off size,\n+\t\t   void *private_data);\n+\tvoid *private_data;\n+};\n+\n /****************************************************************************\n  Traverse the whole database with this function, calling traverse_callback\n  on each lock.\n@@ -1454,14 +1463,13 @@\n \n static int traverse_fn(struct db_record *rec, void *state)\n {\n+\tstruct brl_forall_cb *cb = (struct brl_forall_cb *)state;\n \tstruct lock_struct *locks;\n \tstruct file_id *key;\n \tunsigned int i;\n \tunsigned int num_locks = 0;\n \tunsigned int orig_num_locks = 0;\n \n-\tBRLOCK_FN(traverse_callback) = (BRLOCK_FN_CAST())state;\n-\n \t/* In a traverse function we must make a copy of\n \t   dbuf before modifying it. */\n \n@@ -1493,12 +1501,13 @@\n \t}\n \n \tfor ( i=0; ifn(*key,\n+\t\t       locks[i].context.pid,\n+\t\t       locks[i].lock_type,\n+\t\t       locks[i].lock_flav,\n+\t\t       locks[i].start,\n+\t\t       locks[i].size,\n+\t\t       cb->private_data);\n \t}\n \n \tSAFE_FREE(locks);\n@@ -1509,12 +1518,21 @@\n  Call the specified function on each lock in the database.\n ********************************************************************/\n \n-int brl_forall(BRLOCK_FN(fn))\n+int brl_forall(void (*fn)(struct file_id id, struct server_id pid,\n+\t\t\t  enum brl_type lock_type,\n+\t\t\t  enum brl_flavour lock_flav,\n+\t\t\t  br_off start, br_off size,\n+\t\t\t  void *private_data),\n+\t       void *private_data)\n {\n+\tstruct brl_forall_cb cb;\n+\n \tif (!brlock_db) {\n \t\treturn 0;\n \t}\n-\treturn brlock_db->traverse(brlock_db, traverse_fn, (void *)fn);\n+\tcb.fn = fn;\n+\tcb.private_data = private_data;\n+\treturn brlock_db->traverse(brlock_db, traverse_fn, &cb);\n }\n \n /*******************************************************************\n\nModified: branches/SAMBA_3_0_26/source/torture/locktest.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/torture/locktest.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0_26/source/torture/locktest.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -121,7 +121,8 @@\n \t\t\tenum brl_type lock_type,\n \t\t\tenum brl_flavour lock_flav,\n \t\t\tbr_off start,\n-\t\t\tbr_off size)\n+\t\t\tbr_off size,\n+\t\t\tvoid *private_data)\n {\n #if NASTY_POSIX_LOCK_HACK\n \t{\n@@ -147,7 +148,7 @@\n \n static void show_locks(void)\n {\n-\tbrl_forall(print_brl);\n+\tbrl_forall(print_brl, NULL);\n \t/* system(\"cat /proc/locks\"); */\n }\n \n\nModified: branches/SAMBA_3_0_26/source/torture/locktest2.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/torture/locktest2.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0_26/source/torture/locktest2.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -139,7 +139,8 @@\n static void print_brl(struct file_id id, struct server_id pid, \n \t\t      enum brl_type lock_type,\n \t\t      enum brl_flavour lock_flav,\n-\t\t      br_off start, br_off size)\n+\t\t      br_off start, br_off size,\n+\t\t      void *private_data)\n {\n \tprintf(\"%6d   %s    %s  %.0f:%.0f(%.0f)\\n\", \n \t       (int)procid_to_pid(&pid), file_id_static_string(&id),\n@@ -259,7 +260,7 @@\n \t\t\t       op==READ_LOCK?\"READ_LOCK\":\"WRITE_LOCK\",\n \t\t\t       ret[0], ret[1]);\n \t\t}\n-\t\tif (showall) brl_forall(print_brl);\n+\t\tif (showall) brl_forall(print_brl, NULL);\n \t\tif (ret[0] != ret[1]) return False;\n \t} else if (r2 < LOCK_PCT+UNLOCK_PCT) {\n \t\t/* unset a lock */\n@@ -274,7 +275,7 @@\n \t\t\t       start, start+len-1, len,\n \t\t\t       ret[0], ret[1]);\n \t\t}\n-\t\tif (showall) brl_forall(print_brl);\n+\t\tif (showall) brl_forall(print_brl, NULL);\n \t\tif (!hide_unlock_fails && ret[0] != ret[1]) return False;\n \t} else {\n \t\t/* reopen the file */\n@@ -290,7 +291,7 @@\n \t\tif (showall) {\n \t\t\tprintf(\"reopen conn=%u fstype=%u f=%u\\n\",\n \t\t\t       conn, fstype, f);\n-\t\t\tbrl_forall(print_brl);\n+\t\t\tbrl_forall(print_brl, NULL);\n \t\t}\n \t}\n \treturn True;\n\nModified: branches/SAMBA_3_0_26/source/utils/status.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/utils/status.c\t2007-05-29 13:20:40 UTC (rev 23194)\n+++ branches/SAMBA_3_0_26/source/utils/status.c\t2007-05-29 13:26:44 UTC (rev 23195)\n@@ -171,7 +171,8 @@\n \t\t\tenum brl_type lock_type,\n \t\t\tenum brl_flavour lock_flav,\n \t\t\tbr_off start,\n-\t\t\tbr_off size)\n+\t\t\tbr_off size,\n+\t\t\tvoid *private_data)\n {\n \tstatic int count;\n \tint i;\n@@ -389,7 +390,7 @@\n \t\td_printf(\"\\n\");\n \n \t\tif (show_brl) {\n-\t\t\tbrl_forall(print_brl);\n+\t\t\tbrl_forall(print_brl, NULL);\n \t\t}\n \t\t\n \t\tlocking_end();\n\n"}