{"category": "ham", "to_address": "Beginners List <beginners@perl.org>", "from_address": "\"Mumia W.\" <mumia.w.18.spam+nospam@earthlink.net>", "subject": "Re: character encoding & regex", "body": "On 06/16/2007 02:29 PM, Tom Allison wrote:\n> I'm trying to do some regular expression on strings in email. They could \n> be encoded to something.  But I can't tell because I don't have a utf8 \n> unicode xterm window that will show me anything.  At best I get \n> ?????a??  and other trash like that.  I think this is typical for ascii \n> text renderings of two-bit characters.\n> \n> Not be to deterred by the lack of anything this fancy in xterm I thought \n> I would plug along.\n> \n> I made a character thus:\n> my $string = chr(0x263a);  # reported to be a smiley face...\n> \n> under 'use bytes' this prints as a ':'\n> without bytes this prints to something resembling a, a little box, a \n> little circle.\n> \n> \n> And with unicode and locales and bytes it all gets extremely ugly.\n> \n> \n> I found something that SpamAssassin uses to convert all this \"goo\" into \n> a repeatable set of characters (which is all I'm really after) by \n> running something that looks like this:\n> \n\nWhat do you mean by a \"repeatable set of characters\"? Unicode characters \nare repeatable.\n\n> sub _quote_bytea {\n>     my ($str) = @_;\n>     my $buf = \"\";\n>     foreach my $char (split(//,$str)) {\n>         my $oct = sprintf (\"%lo\", ord($char));\n>         if (length( $oct ) < 2 ) { $oct = '0' . $oct; }\n>         if (length( $oct ) < 3 ) { $oct = '0' . $oct; }\n>         $buf .= '\\\\\\\\\\\\\\\\' . $oct;\n>     }\n>     return $buf;\n> }\n> \n> Which is also \"ugly\" in it's own right.  But I found mention that the \n> \"%lo\" is considered really backward compatable notation and not \n> something you might want to use (or need to) in perldoc -f sprintf.\n> \n\nThe way I read it, it says that %O is a \"backward compatible\" version of \n%lo.\n\n> So one question I have that might be useful is, what alternatives does \n> modern perl offer to \"%lo\" ?\n> \n> I probably have a lot more, but I honestly am not sure if I can get an \n> answer I can live with.  I'm just trying to tokenize email and haven't \n> seen a need to support these other character sets just yet.  I would \n> like to.  But I haven't been able to find any sane way of doing it -- \n> like can I convert everything into utf8 format or just convert \n> everything into octal numbers?  I don't need perfect human-readable \n> conversion, I just need consistent conversions.\n> \n\nYou probably should convert everything to utf8. Also, you need a \nutf8-enabled xterm such as rxvt-unicode or gnome-terminal. On my Debian \nEtch system, the text console seems to be UTF8 by default :-O\n\nBTW, I still have no clue what you mean by tokenize e-mail.\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}