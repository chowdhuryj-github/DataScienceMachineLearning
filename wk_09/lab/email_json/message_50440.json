{"category": "ham", "to_address": "R-help@stat.math.ethz.ch, Scott Hyde <hydes@byuh.edu>", "from_address": "Martin Maechler <maechler@stat.math.ethz.ch>", "subject": "Re: [R] Augment 'Matrix' matrices", "body": ">>>>> \"SH\" == Scott Hyde \n>>>>>     on Mon, 18 Jun 2007 16:59:00 -1000 (HST) writes:\n\n    SH> Martin, How does Matrix implement augmented matrices?  I\n    SH> tried this and got the expected result:\n\n\n{Replying to  R-help,  since this question has come up several\n times }\n\n    >> V=matrix(1,2,3)\n    >> V=cbind(V,V)\n    >> V\n    SH>      [,1] [,2] [,3] [,4] [,5] [,6]\n    SH> [1,]    1    1    1    1    1    1\n    SH> [2,]    1    1    1    1    1    1\n\n    SH> But when I did it with Matrix instead I got:\n\n    >> library(Matrix)\n\n    >> V=Matrix(1,2,3)\n    >> V=cbind(V,V)\n    >> V\n    SH> V V\n    SH> [1,] ? ?\n\ncbind() and rbind() cannot work with S4 objects because their\nfirst formal argument is  '...'\n[ and with S3 objects they only work insofar as S3 generics can\n  \"work\": i.e. they only \"work\" when the first argument is of the\n  respective class, but fail, e.g. for  cbind(1, )\n  when  is of a non-standard S3 class.\n]\nIn earlier versions of Matrix, there was a sophisticated \"hack\"\nthat made  cbind() and rbind()   \"work\".\n\nBut because it was a hack, and some people called it \"horrible\"\nrather than \"sophisticated\", we had to give it up.\n{well, the really compelling argument was an example of\n do.call(rbind, ) which was *very* inefficient}\n\nInstead, cbind2() and rbind2() have been written a\nfew R versions ago to be used as (S4) generic functions. \n-->  help(cbind2)\n\nIn 'Matrix', we also define cBind() and rBind()  to be used as\ndirect (n-argument) substitutes for cbind() or rbind(),\nrespectively.\n\nMartin\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}