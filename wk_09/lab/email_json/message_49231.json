{"category": "ham", "to_address": "beginners perl <beginners@perl.org>", "from_address": "Tom Allison <tom@tacocat.net>", "subject": "character encoding & regex", "body": "I'm trying to do some regular expression on strings in email. They could be \nencoded to something.  But I can't tell because I don't have a utf8 unicode \nxterm window that will show me anything.  At best I get ?????a??  and other \ntrash like that.  I think this is typical for ascii text renderings of two-bit \ncharacters.\n\nNot be to deterred by the lack of anything this fancy in xterm I thought I would \nplug along.\n\nI made a character thus:\nmy $string = chr(0x263a);  # reported to be a smiley face...\n\nunder 'use bytes' this prints as a ':'\nwithout bytes this prints to something resembling a, a little box, a little circle.\n\n\nAnd with unicode and locales and bytes it all gets extremely ugly.\n\n\nI found something that SpamAssassin uses to convert all this \"goo\" into a \nrepeatable set of characters (which is all I'm really after) by running \nsomething that looks like this:\n\nsub _quote_bytea {\n     my ($str) = @_;\n     my $buf = \"\";\n     foreach my $char (split(//,$str)) {\n         my $oct = sprintf (\"%lo\", ord($char));\n         if (length( $oct ) < 2 ) { $oct = '0' . $oct; }\n         if (length( $oct ) < 3 ) { $oct = '0' . $oct; }\n         $buf .= '\\\\\\\\\\\\\\\\' . $oct;\n     }\n     return $buf;\n}\n\nWhich is also \"ugly\" in it's own right.  But I found mention that the \"%lo\" is \nconsidered really backward compatable notation and not something you might want \nto use (or need to) in perldoc -f sprintf.\n\nSo one question I have that might be useful is, what alternatives does modern \nperl offer to \"%lo\" ?\n\nI probably have a lot more, but I honestly am not sure if I can get an answer I \ncan live with.  I'm just trying to tokenize email and haven't seen a need to \nsupport these other character sets just yet.  I would like to.  But I haven't \nbeen able to find any sane way of doing it -- like can I convert everything into \nutf8 format or just convert everything into octal numbers?  I don't need perfect \nhuman-readable conversion, I just need consistent conversions.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}