{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23457 - in branches: SAMBA_3_0/source/smbd\n\tSAMBA_3_0_26/source/smbd", "body": "Author: vlendec\nDate: 2007-06-13 09:55:13 +0000 (Wed, 13 Jun 2007)\nNew Revision: 23457\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23457\n\nLog:\nAfter Jeremy's ack:\n\nThe attached patch removes a little race condition for\npeople with real kernel oplock support, and reduces some\ncode paths. It changes reply_unlink to open_file_ntcreate,\nset_delete_on_close and close_file.\n\nThe race condition happens if we break the oplock in\ncan_delete via open_file_ntcreate, we close the file,\nsomeone else gets a batch oplock and we try to unlink.\n\nIt reduces code paths by calling SMB_VFS_UNLINK in 2 fewer\nplaces.\n\n\nModified:\n   branches/SAMBA_3_0/source/smbd/reply.c\n   branches/SAMBA_3_0_26/source/smbd/reply.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/reply.c\t2007-06-13 05:44:24 UTC (rev 23456)\n+++ branches/SAMBA_3_0/source/smbd/reply.c\t2007-06-13 09:55:13 UTC (rev 23457)\n@@ -1830,11 +1830,11 @@\n }\n \n /*******************************************************************\n- Check if a user is allowed to delete a file.\n-********************************************************************/\n+ * unlink a file with all relevant access checks\n+ *******************************************************************/\n \n-static NTSTATUS can_delete(connection_struct *conn, char *fname,\n-\t\t\t   uint32 dirtype, BOOL can_defer)\n+static NTSTATUS do_unlink(connection_struct *conn, char *fname,\n+\t\t\t  uint32 dirtype, BOOL can_defer)\n {\n \tSMB_STRUCT_STAT sbuf;\n \tuint32 fattr;\n@@ -1935,10 +1935,19 @@\n \t\t\t\t    can_defer ? 0 : INTERNAL_OPEN_ONLY,\n \t\t\t\t    NULL, &fsp);\n \n-\tif (NT_STATUS_IS_OK(status)) {\n-\t\tclose_file(fsp,NORMAL_CLOSE);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tDEBUG(10, (\"open_file_ntcreate failed: %s\\n\",\n+\t\t\t   nt_errstr(status)));\n+\t\treturn status;\n \t}\n-\treturn status;\n+\n+\t/* The set is across all open files on this dev/inode pair. */\n+\tif (!set_delete_on_close(fsp, True, &current_user.ut)) {\n+\t\tclose_file(fsp, NORMAL_CLOSE);\n+\t\treturn NT_STATUS_ACCESS_DENIED;\n+\t}\n+\n+\treturn close_file(fsp,NORMAL_CLOSE);\n }\n \n /****************************************************************************\n@@ -1997,17 +2006,15 @@\n \t\t\treturn status;\n \t\t}\n \n-\t\tstatus = can_delete(conn,directory,dirtype,can_defer);\n+\t\tstatus = do_unlink(conn,directory,dirtype,can_defer);\n \t\tif (!NT_STATUS_IS_OK(status)) {\n \t\t\treturn status;\n \t\t}\n \n-\t\tif (SMB_VFS_UNLINK(conn,directory) == 0) {\n-\t\t\tcount++;\n-\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n-\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n-\t\t\t\t     directory);\n-\t\t}\n+\t\tcount++;\n+\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n+\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n+\t\t\t     directory);\n \t} else {\n \t\tstruct smb_Dir *dir_hnd = NULL;\n \t\tlong offset = 0;\n@@ -2066,19 +2073,17 @@\n \t\t\t\treturn status;\n \t\t\t}\n \n-\t\t\tstatus = can_delete(conn, fname, dirtype, can_defer);\n+\t\t\tstatus = do_unlink(conn, fname, dirtype, can_defer);\n \t\t\tif (!NT_STATUS_IS_OK(status)) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\tif (SMB_VFS_UNLINK(conn,fname) == 0) {\n-\t\t\t\tcount++;\n-\t\t\t\tDEBUG(3,(\"unlink_internals: succesful unlink \"\n-\t\t\t\t\t \"[%s]\\n\",fname));\n-\t\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n-\t\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n-\t\t\t\t\t     fname);\n-\t\t\t}\n-\t\t\t\t\n+\n+\t\t\tcount++;\n+\t\t\tDEBUG(3,(\"unlink_internals: succesful unlink [%s]\\n\",\n+\t\t\t\t fname));\n+\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n+\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n+\t\t\t\t     fname);\n \t\t}\n \t\tCloseDir(dir_hnd);\n \t}\n\nModified: branches/SAMBA_3_0_26/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/reply.c\t2007-06-13 05:44:24 UTC (rev 23456)\n+++ branches/SAMBA_3_0_26/source/smbd/reply.c\t2007-06-13 09:55:13 UTC (rev 23457)\n@@ -1829,11 +1829,11 @@\n }\n \n /*******************************************************************\n- Check if a user is allowed to delete a file.\n-********************************************************************/\n+ * unlink a file with all relevant access checks\n+ *******************************************************************/\n \n-static NTSTATUS can_delete(connection_struct *conn, char *fname,\n-\t\t\t   uint32 dirtype, BOOL can_defer)\n+static NTSTATUS do_unlink(connection_struct *conn, char *fname,\n+\t\t\t  uint32 dirtype, BOOL can_defer)\n {\n \tSMB_STRUCT_STAT sbuf;\n \tuint32 fattr;\n@@ -1934,10 +1934,19 @@\n \t\t\t\t    can_defer ? 0 : INTERNAL_OPEN_ONLY,\n \t\t\t\t    NULL, &fsp);\n \n-\tif (NT_STATUS_IS_OK(status)) {\n-\t\tclose_file(fsp,NORMAL_CLOSE);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tDEBUG(10, (\"open_file_ntcreate failed: %s\\n\",\n+\t\t\t   nt_errstr(status)));\n+\t\treturn status;\n \t}\n-\treturn status;\n+\n+\t/* The set is across all open files on this dev/inode pair. */\n+\tif (!set_delete_on_close(fsp, True, &current_user.ut)) {\n+\t\tclose_file(fsp, NORMAL_CLOSE);\n+\t\treturn NT_STATUS_ACCESS_DENIED;\n+\t}\n+\n+\treturn close_file(fsp,NORMAL_CLOSE);\n }\n \n /****************************************************************************\n@@ -1996,17 +2005,15 @@\n \t\t\treturn status;\n \t\t}\n \n-\t\tstatus = can_delete(conn,directory,dirtype,can_defer);\n+\t\tstatus = do_unlink(conn,directory,dirtype,can_defer);\n \t\tif (!NT_STATUS_IS_OK(status)) {\n \t\t\treturn status;\n \t\t}\n \n-\t\tif (SMB_VFS_UNLINK(conn,directory) == 0) {\n-\t\t\tcount++;\n-\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n-\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n-\t\t\t\t     directory);\n-\t\t}\n+\t\tcount++;\n+\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n+\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n+\t\t\t     directory);\n \t} else {\n \t\tstruct smb_Dir *dir_hnd = NULL;\n \t\tlong offset = 0;\n@@ -2065,19 +2072,17 @@\n \t\t\t\treturn status;\n \t\t\t}\n \n-\t\t\tstatus = can_delete(conn, fname, dirtype, can_defer);\n+\t\t\tstatus = do_unlink(conn, fname, dirtype, can_defer);\n \t\t\tif (!NT_STATUS_IS_OK(status)) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\tif (SMB_VFS_UNLINK(conn,fname) == 0) {\n-\t\t\t\tcount++;\n-\t\t\t\tDEBUG(3,(\"unlink_internals: succesful unlink \"\n-\t\t\t\t\t \"[%s]\\n\",fname));\n-\t\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n-\t\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n-\t\t\t\t\t     fname);\n-\t\t\t}\n-\t\t\t\t\n+\n+\t\t\tcount++;\n+\t\t\tDEBUG(3,(\"unlink_internals: succesful unlink [%s]\\n\",\n+\t\t\t\t fname));\n+\t\t\tnotify_fname(conn, NOTIFY_ACTION_REMOVED,\n+\t\t\t\t     FILE_NOTIFY_CHANGE_FILE_NAME,\n+\t\t\t\t     fname);\n \t\t}\n \t\tCloseDir(dir_hnd);\n \t}\n\n"}