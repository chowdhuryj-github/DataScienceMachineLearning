{"category": "ham", "to_address": "\"Speakup is a screen review system for Linux.\" <speakup@braille.uwo.ca>", "from_address": "cmbrannon@cox.net (C.M. Brannon)", "subject": "Re: spelling was Re: GRML swspeak?", "body": "Michael Prokop  writes:\n\n> * C.M. Brannon  wrote:\n>\n>> There's a very easy fix for this:\n>> renice 3 `ps -e |grep speechd-up |head -1 |cut -d' ' -f1`\n> [...]\n>\n> Are we talking about the same grml version?\n> grml 1.0 automatically does a 'nice -n -20 speechd-up' when invoking\n> swspeak. Does not that fix your issue?\n\nHi Mika,\nI'm using the latest and greatest, version 1.0.\nI have better success when speechd-up has a positive (low)\npriority, rather than a negative one.\nI think this is because a low priority process makes fewer reads to\n/dev/softsynth, so it is more likely to read words, rather than single\ncharacters.  You can actually view this with a packet capture tool,\nreading incoming messages on port 6560 (used by speech-dispatcher).\nWhen speechd-up runs with priority <= 0, I see a speak message\ngenerated and sent to speech-dispatcher for every character in a word,\nbut when it runs with priority > 0, it usually sends a speak message\nto dispatcher containing a whole word or line of text.  I really don't\nhave an explanation for this, especially considering that other people\nare not encountering the same behavior that I am!\nI think the solution lies in modifying the speechd-up sources to use\na different buffering strategy, rather than recompiling kernels and\nchanging process priorities...\n\n-- Chris\n\n\n\n_______________________________________________\nSpeakup mailing list\nSpeakup@braille.uwo.ca\nhttp://speech.braille.uwo.ca/mailman/listinfo/speakup\n\n"}