{"category": "ham", "to_address": "Michael Adam <ma@sernet.de>", "from_address": "\"Gerald (Jerry) Carter\" <jerry@samba.org>", "subject": "Re: Proposal for SAMBA_3_0/README.Coding", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nMichael Adam wrote:\n> On Mon, Jun 25, 2007 at 11:45:57PM -0500, Gerald (Jerry) Carter wrote:\n>> * Use 8 Space Tabs to Indent\n>>   No whitespace filler.\n> \n> To make sure I don't get this wrong:\n> \n> This means that when breaking arguments for functions,\n> they should not be algnend under the parentheses along\n> with the other arguments (using spaces for the last\n> few steps), right?\n> \n> How should on chose the number of tabs to indent for\n> a function etc that needs to have is argument wrapped?\n\nI'm updated the coding style guide.  It's based on what\nemacs does using the Linux kernel style so I don't think\nit contradicts anything we've already agreed on.\n\nIndention & Whitespace & 80 columns\n- -----------------------------------\n\nTo avoid confusion, indentations are to be 8 character with tab (not\n8 ' ' characters.  When wrapping parameters for function calls,\nalignment parameter list with the first parameter on the previous line.\nUse tabs to get as close as possible and then fill in the final 7\ncharacters or less with whitespace.  For example,\n\n\tvar1 = foo(arg1, arg2,\n\t\t   arg3);\n\nThe previous example is intended to illustrate alignment of function\nparameters across lines and not as encourage for gratuitous line\nsplitting.  Never split a line before columns 70 - 79 unless you\nhave a really good reason.  Be smart about formatting.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org\n\niD8DBQFGhAv9IR7qMdg1EfYRAgmOAJ4ib+F2xuMsWxZ//nzvq/rELiwKmwCgrnQf\nyRXJOULcTRUOhyvTmZnF1wU=\n=JGal\n-----END PGP SIGNATURE-----\n\n"}