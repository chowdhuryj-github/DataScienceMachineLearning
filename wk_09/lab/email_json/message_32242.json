{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "jiho <jo.irisson@gmail.com>", "subject": "[R] lapply not reading arguments from the correct environment", "body": "Hello,\n\nI am facing a problem with lapply which I ''''think''' may be a bug.  \nThis is the most basic function in which I can reproduce it:\n\nmyfun <- function()\n{\n\tfoo = data.frame(1:10,10:1)\n\tfoos = list(foo)\n\tfooCollumn=2\n\tcFoo = lapply(foos,subset,select=fooCollumn)\n\treturn(cFoo)\n}\n\nI am building a list of dataframes, in each of which I want to keep  \nonly column 2 (obviously I would not do it this way in real life but  \nthat's just to demonstrate the bug).\nIf I execute the commands inline it works but if I clean my  \nenvironment, then define the function and then execute:\n\t> myfun()\nI get this error:\n\tError in eval(expr, envir, enclos) : object \"fooCollumn\" not found\nwhile fooCollumn is defined, in the function, right before lapply. In  \naddition, if I define it outside the function and then execute the  \nfunction:\n\t> fooCollumn=1\n\t> myfun()\nit works but uses the value defined in the general environment and  \nnot the one defined in the function.\nThis is with R 2.5.0 on both OS X and Linux (Fedora Core 6)\nWhat did I do wrong? Is this indeed a bug? An intended behavior?\nThanks in advance.\n\nJiHO\n---\nhttp://jo.irisson.free.fr/\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}