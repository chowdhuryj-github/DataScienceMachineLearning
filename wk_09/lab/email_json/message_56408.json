{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: retrieving multiple data from the database", "body": "On Jun 27, 8:14 am, almatir...@gmail.com (Alma) wrote:\n\n> I have written a display subroutine in my package .\n\nAnd you have re-written it here.  Please don't do that.  Copy and\npaste your code.  Do not retype it.  For one, you're going to get\ncomments about the typos you've made rather than your actual problem.\nFor two, we have no way of knowing what other mistakes you've made\nhere that you didn't make in your original.\n\n> abc.pm\n>\n> sub display\n\nNo opening curly-brace.  This code does not compile.\n\n> my $self = shift;\n> $id =@_;\n\nThis does not do what you think it does.  This assigns $id to be the\nnumber of arguments passed into this method (not counting $self, which\nyou shifted off already).  You meant one of these:\nmy $id = shift;\nmy ($id) = @_;\nmy $id = $_[0];\n\nI also notice that you're not declaring $id here.  That means that\nevery object of your abc.pm class has the same $id value, and when you\nchange it for one, you change it for every one.\n\n> my $sth=$dbh->prepare(\"select title,name,status from table where\n> id=emp_id and status ='P'\");\n> $sth->execute() or die $databasehandle->errstr;\n\nThe fact that you're using `or die...` on the execute() implies that\n$dbh->{RaiseError} is not turned on, yet you're not checking the\nreturn value of prepare().  If the prepare() fails, Perl will silently\ncontinue and you'll get no useful error message from the execute() (it\nwill tell you you can't call execute() on an undefined value)\n\n> while( my @row=$sth->fetchrow_array()) {\n> foreach($i=0;$i<3;$i++) {\n> return @row;\n\nThis is non sensical.  You're returning out of the function\nimmediately after the first iteration of foreach within the first\niteration of while.\n\nIf you want to return all three rows, create an array before your\nwhile loop, and each time through the while statement, push a\nreference to @row onto your array, and return that array at the very\nend.\n\n\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}