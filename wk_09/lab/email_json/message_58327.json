{"category": "ham", "to_address": "livia <yn19832@msn.com>", "from_address": "\"jim holtman\" <jholtman@gmail.com>", "subject": "Re: [R] cbind", "body": "why don't you use a 'list' as the return value.  The 'cbind' is going to\nassume that each of the 'return[[..]]' have the same length or you are going\nto get error messages:\n\n> cbind(1:3,4:10)\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n[4,]    1    7\n[5,]    2    8\n[6,]    3    9\n[7,]    1   10\nWarning message:\nnumber of rows of result\n        is not a multiple of vector length (arg 1) in: cbind(1, 1:3, 4:10)\n>\n\nI would assume a matrix like above is not what you want.  So why don't you\njust say:\n\nreturn(split(return, list(regimef, assetf)))\n\n\n\nOn 6/29/07, livia  wrote:\n>\n>\n> Hi, I have a series of return data, a and b are factors. I would like to\n> build a matrix which contains each vector of \"returns\". I am thinking\n> about\n> something as following, but I guess there should be a sensible way of\n> doing\n> this.\n>\n> returns <- split(return, list(regimef, assetf))\n> cbind(returns[[1]], returns[[2]],...,returns[[n]])\n>\n> Could anyone give me some advice? Many thanks.\n> --\n> View this message in context:\n> http://www.nabble.com/cbind-tf3999805.html#a11359949\n> Sent from the R help mailing list archive at Nabble.com.\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n\n-- \nJim Holtman\nCincinnati, OH\n+1 513 646 9390\n\nWhat is the problem you are trying to solve?\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}