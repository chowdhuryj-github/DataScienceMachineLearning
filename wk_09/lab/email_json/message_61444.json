{"category": "ham", "to_address": "parrotbug-followup@parrotcode.org", "from_address": "Mark Glines <mark@glines.org>", "subject": "Re: [perl #43481] t/examples/shootout.t (shootout_16.pir) fails on\n gentoo/x86", "body": "On Tue, 03 Jul 2007 09:34:29 -0700\n\"Andy Lester via RT\"  wrote:\n\n> > Sooo... I'm not sure if the \"rep\" argument is NULL for the same\n> > *reason* as the above script (a comment from Coke has made me\n> > paranoid that a DOD run may be to blame), but should this emit an\n> > error message, or fix it up by using '' instead, or punt to the\n> > 3-argument substr() instead, rather than segfaulting?\n> \n> The problem seems to be that string_replace's rep should indeed be NN,\n> not NULLOK.  Do you see when it would make sense to pass in NULL rep\n> to string_replace?\n\nI don't think so, there's a separate string_substr() function for that,\nand the other variants of the \"substr\" op use that one instead of this.\n\nI think the problem is two-fold.\nProblem 1, why does string_replace() crash when passed a NULL rep\nargument?\n\nProblem 2, why is this test case passing a NULL pointer all of a\nsudden, exposing Problem #1?  Presumably, this used to work.\n\nMy simplified test case demonstrates Problem #1, but I've thus far\nfailed to figure Problem #2 out.\n\nMark\n\n"}