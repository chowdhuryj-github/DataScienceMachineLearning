{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 327: merge from ronnie in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 327\nrevision-id: tridge@samba.org-20070519072158-w0efl829gire7qbm\nparent: tridge@samba.org-20070519040701-3yay8tnb8wvo2vmr\nparent: sahlberg@ronnie-20070519065910-liyyxru2wl1eah69\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-05-19 17:21:58 +1000\nmessage:\n  merge from ronnie\nmodified:\n  common/ctdb.c                  ctdb.c-20061127094323-t50f58d65iaao5of-2\n  common/ctdb_monitor.c          ctdb_monitor.c-20070518100625-8jf4ft1mjzmb22ck-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n    ------------------------------------------------------------\n    revno: 326.1.1\n    merged: sahlberg@ronnie-20070519065910-liyyxru2wl1eah69\n    parent: tridge@samba.org-20070519040701-3yay8tnb8wvo2vmr\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Sat 2007-05-19 16:59:10 +1000\n    message:\n      use ctdb_dead_node() instead of reimplementing the same code again\n      this leaves only one single function where a node is marked as dead\n      instead of two places\n=== modified file 'common/ctdb.c'\n--- a/common/ctdb.c\t2007-05-19 04:04:48 +0000\n+++ b/common/ctdb.c\t2007-05-19 07:21:58 +0000\n@@ -380,11 +380,12 @@\n /*\n   called by the transport layer when a node is dead\n */\n-static void ctdb_node_dead(struct ctdb_node *node)\n+void ctdb_node_dead(struct ctdb_node *node)\n {\n \tnode->ctdb->num_connected--;\n \tnode->flags &= ~NODE_FLAGS_CONNECTED;\n \tnode->rx_cnt = 0;\n+\tnode->dead_count = 0;\n \tDEBUG(1,(\"%s: node %s is dead: %d connected\\n\", \n \t\t node->ctdb->name, node->name, node->ctdb->num_connected));\n \tctdb_daemon_cancel_controls(node->ctdb, node);\n@@ -393,9 +394,10 @@\n /*\n   called by the transport layer when a node is connected\n */\n-static void ctdb_node_connected(struct ctdb_node *node)\n+void ctdb_node_connected(struct ctdb_node *node)\n {\n \tnode->ctdb->num_connected++;\n+\tnode->dead_count = 0;\n \tnode->flags |= NODE_FLAGS_CONNECTED;\n \tDEBUG(1,(\"%s: connected to %s - %d connected\\n\", \n \t\t node->ctdb->name, node->name, node->ctdb->num_connected));\n\n=== modified file 'common/ctdb_monitor.c'\n--- a/common/ctdb_monitor.c\t2007-05-19 00:20:19 +0000\n+++ b/common/ctdb_monitor.c\t2007-05-19 07:21:58 +0000\n@@ -43,8 +43,8 @@\n \t\t\n \t\t/* it might have come alive again */\n \t\tif (!(node->flags & NODE_FLAGS_CONNECTED) && node->rx_cnt != 0) {\n-\t\t\tDEBUG(0,(\"Node %u is alive again - marking as connected\\n\", node->vnn));\n-\t\t\tnode->flags |= NODE_FLAGS_CONNECTED;\n+\t\t\tctdb_node_connected(node);\n+\t\t\tcontinue;\n \t\t}\n \n \t\tif (node->rx_cnt == 0) {\n@@ -56,9 +56,7 @@\n \t\tnode->rx_cnt = 0;\n \n \t\tif (node->dead_count >= CTDB_MONITORING_DEAD_COUNT) {\n-\t\t\tDEBUG(0,(\"Node %u is dead - marking as not connected\\n\", node->vnn));\n-\t\t\tnode->flags &= ~NODE_FLAGS_CONNECTED;\n-\t\t\tctdb_daemon_cancel_controls(ctdb, node);\n+\t\t\tctdb_node_dead(node);\n \t\t\t/* maybe tell the transport layer to kill the\n \t\t\t   sockets as well?\n \t\t\t*/\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-19 03:45:24 +0000\n+++ b/include/ctdb_private.h\t2007-05-19 07:21:58 +0000\n@@ -826,5 +826,7 @@\n \n void ctdb_daemon_cancel_controls(struct ctdb_context *ctdb, struct ctdb_node *node);\n void ctdb_call_resend_all(struct ctdb_context *ctdb);\n+void ctdb_node_dead(struct ctdb_node *node);\n+void ctdb_node_connected(struct ctdb_node *node);\n \n #endif\n\n"}