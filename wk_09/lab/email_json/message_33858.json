{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "idra@samba.org", "subject": "svn commit: samba r23051 - in branches: SAMBA_3_0/source/passdb\n\tSAMBA_3_0_26/source/passdb", "body": "Author: idra\nDate: 2007-05-21 20:51:15 +0000 (Mon, 21 May 2007)\nNew Revision: 23051\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23051\n\nLog:\n\nsid_to_[ug]id fixes for smbd\n\n\nModified:\n   branches/SAMBA_3_0/source/passdb/lookup_sid.c\n   branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/passdb/lookup_sid.c\n===================================================================\n--- branches/SAMBA_3_0/source/passdb/lookup_sid.c\t2007-05-21 20:47:22 UTC (rev 23050)\n+++ branches/SAMBA_3_0/source/passdb/lookup_sid.c\t2007-05-21 20:51:15 UTC (rev 23051)\n@@ -1208,12 +1208,6 @@\n \tenum lsa_SidType type;\n \tuint32 rid;\n \n-\tif (sid_peek_check_rid(&global_sid_Unix_Users, psid, &rid)) {\n-\t\tuid_t uid = rid;\n-\t\t*puid = uid;\n-\t\tgoto done;\n-\t}\n-\n \tif (sid_peek_check_rid(get_global_sam_sid(), psid, &rid)) {\n \t\tunion unid_t id;\n \t\tBOOL ret;\n@@ -1259,12 +1253,6 @@\n \tunion unid_t id;\n \tenum lsa_SidType type;\n \n-\tif (sid_peek_check_rid(&global_sid_Unix_Groups, psid, &rid)) {\n-\t\tgid_t gid = rid;\n-\t\t*pgid = gid;\n-\t\tgoto done;\n-\t}\n-\n \tif ((sid_check_is_in_builtin(psid) ||\n \t     sid_check_is_in_wellknown_domain(psid))) {\n \t\tBOOL ret;\n@@ -1379,6 +1367,7 @@\n \n BOOL sid_to_uid(const DOM_SID *psid, uid_t *puid)\n {\n+\tuint32 rid;\n \tgid_t gid;\n \n \tif (fetch_uid_from_cache(puid, psid))\n@@ -1388,6 +1377,18 @@\n \t\treturn False;\n \t}\n \n+\t/* Optimize for the Unix Users Domain\n+\t * as the conversion is straightforward */\n+\tif (sid_peek_check_rid(&global_sid_Unix_Users, psid, &rid)) {\n+\t\tuid_t uid = rid;\n+\t\t*puid = uid;\n+\n+\t\t/* return here, don't cache */\n+\t\tDEBUG(10,(\"sid %s -> uid %u\\n\", sid_string_static(psid),\n+\t\t\t(unsigned int)*puid ));\n+\t\treturn True;\n+\t}\n+\n \tif (!winbind_sid_to_uid(puid, psid)) {\n \t\tif (!winbind_ping()) {\n \t\t\treturn legacy_sid_to_uid(psid, puid);\n@@ -1415,6 +1416,7 @@\n \n BOOL sid_to_gid(const DOM_SID *psid, gid_t *pgid)\n {\n+\tuint32 rid;\n \tuid_t uid;\n \n \tif (fetch_gid_from_cache(pgid, psid))\n@@ -1423,6 +1425,18 @@\n \tif (fetch_uid_from_cache(&uid, psid))\n \t\treturn False;\n \n+\t/* Optimize for the Unix Groups Domain\n+\t * as the conversion is straightforward */\n+\tif (sid_peek_check_rid(&global_sid_Unix_Groups, psid, &rid)) {\n+\t\tgid_t gid = rid;\n+\t\t*pgid = gid;\n+\n+\t\t/* return here, don't cache */\n+\t\tDEBUG(10,(\"sid %s -> gid %u\\n\", sid_string_static(psid),\n+\t\t\t(unsigned int)*pgid ));\n+\t\treturn True;\n+\t}\n+\n \t/* Ask winbindd if it can map this sid to a gid.\n \t * (Idmap will check it is a valid SID and of the right type) */\n \n\nModified: branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\t2007-05-21 20:47:22 UTC (rev 23050)\n+++ branches/SAMBA_3_0_26/source/passdb/lookup_sid.c\t2007-05-21 20:51:15 UTC (rev 23051)\n@@ -1209,12 +1209,6 @@\n \tenum lsa_SidType type;\n \tuint32 rid;\n \n-\tif (sid_peek_check_rid(&global_sid_Unix_Users, psid, &rid)) {\n-\t\tuid_t uid = rid;\n-\t\t*puid = uid;\n-\t\tgoto done;\n-\t}\n-\n \tif (sid_peek_check_rid(get_global_sam_sid(), psid, &rid)) {\n \t\tunion unid_t id;\n \t\tBOOL ret;\n@@ -1260,12 +1254,6 @@\n \tunion unid_t id;\n \tenum lsa_SidType type;\n \n-\tif (sid_peek_check_rid(&global_sid_Unix_Groups, psid, &rid)) {\n-\t\tgid_t gid = rid;\n-\t\t*pgid = gid;\n-\t\tgoto done;\n-\t}\n-\n \tif ((sid_check_is_in_builtin(psid) ||\n \t     sid_check_is_in_wellknown_domain(psid))) {\n \t\tBOOL ret;\n@@ -1380,6 +1368,7 @@\n \n BOOL sid_to_uid(const DOM_SID *psid, uid_t *puid)\n {\n+\tuint32 rid;\n \tgid_t gid;\n \n \tif (fetch_uid_from_cache(puid, psid))\n@@ -1389,6 +1378,18 @@\n \t\treturn False;\n \t}\n \n+\t/* Optimize for the Unix Users Domain\n+\t * as the conversion is straightforward */\n+\tif (sid_peek_check_rid(&global_sid_Unix_Users, psid, &rid)) {\n+\t\tuid_t uid = rid;\n+\t\t*puid = uid;\n+\n+\t\t/* return here, don't cache */\n+\t\tDEBUG(10,(\"sid %s -> uid %u\\n\", sid_string_static(psid),\n+\t\t\t(unsigned int)*puid ));\n+\t\treturn True;\n+\t}\n+\n \tif (!winbind_sid_to_uid(puid, psid)) {\n \t\tif (!winbind_ping()) {\n \t\t\treturn legacy_sid_to_uid(psid, puid);\n@@ -1416,6 +1417,7 @@\n \n BOOL sid_to_gid(const DOM_SID *psid, gid_t *pgid)\n {\n+\tuint32 rid;\n \tuid_t uid;\n \n \tif (fetch_gid_from_cache(pgid, psid))\n@@ -1424,6 +1426,18 @@\n \tif (fetch_uid_from_cache(&uid, psid))\n \t\treturn False;\n \n+\t/* Optimize for the Unix Groups Domain\n+\t * as the conversion is straightforward */\n+\tif (sid_peek_check_rid(&global_sid_Unix_Groups, psid, &rid)) {\n+\t\tgid_t gid = rid;\n+\t\t*pgid = gid;\n+\n+\t\t/* return here, don't cache */\n+\t\tDEBUG(10,(\"sid %s -> gid %u\\n\", sid_string_static(psid),\n+\t\t\t(unsigned int)*pgid ));\n+\t\treturn True;\n+\t}\n+\n \t/* Ask winbindd if it can map this sid to a gid.\n \t * (Idmap will check it is a valid SID and of the right type) */\n \n\n"}