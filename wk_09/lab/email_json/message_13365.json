{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Terry Therneau <therneau@mayo.edu>", "subject": "Re: [R] stringsAsFactor global option (was \"character coerced to a\n\tfactor\")", "body": "--- Gabor Grothendieck \nwrote:\n\n> Just one caveat.  I personally would try to avoid\n> using\n> global options since it can cause conflicts when\n> two different programs assume two different settings\n> of the same global option and need to interact.\n  \n   I see this argument often, and don't buy it.  In any case, for this\nparticular option, the Mayo biostatistics group (~120 users) has had \nstringsAsFactors=F as a global default for 15+ years now with no ill effects.\nIt is much less confusing for both new and old users.\n\n   Johh Kane asked \"Any idea what the rationale was for setting the\noption to TRUE?\"  When factors were first introduced, there was no option\nto turn them off.  Reading between the lines of the white book (Statistical\nModels in S) that introduced them, this is my guess: they made perfect sense for\nthe particular data sets that were being analysed by the authors at the time.\nMany of the defaults in the survival package, which I wrote, have exactly the\nsame rationale --- so let us not be too harsh on an author for not forseeing\nall the future consequences of a default!\n\n  A place where factors really are a pain is when the patient id is a character\nstring.  When, for instance, you subset the data to do an analysis of only\nthe females, having the data set `remember' all of the male id's (the original\nlevels) is non-productive in dozens of ways.  For other variables factors\nwork well and have some nice properties.  In general, I've found in my work\n(medical research) that factors are beneficial for about 1/5 of the character\nvariables, a PITA for 1/4, and a wash for the rest; so prefer to do any\ntransformations myself.\n\nFor the historically curious: \n   In Splus, one originally fixed this with an override of the function\n   \tas.data.frame.character <- as.data.frame.vector\nbefore they added the global option.  In R, unfortunately, this override\ndidn't work due to namespaces, and we had to wait for the option to be\nadded.  (Another dammed-if-you-do dammed-if-you-don't issue.  Normally you\ndon't want users to be able to override a base function, because 9 times out\nof 10 they did it by accident and dont' want it either.  But when a user really\ndoes want to do so ...)  \n\n\tTerry Therneau\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}