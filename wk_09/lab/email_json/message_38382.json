{"category": "ham", "to_address": "\"Barry Rowlingson\" <b.rowlingson@lancaster.ac.uk>", "from_address": "\"Zhiliang Ma\" <zhiliang.ma@gmail.com>", "subject": "Re: [R] search path question", "body": "Thanks, Barry.\nIn fact, I have a function just like yours, and I'm looking for a simple\nalternative function, which is like \"path\" in Matlab.\n\nOn 5/29/07, Barry Rowlingson  wrote:\n>\n> Zhiliang Ma wrote:\n> >  I want to find a function that can simply add\n> > \"C:\\inFiles\\\" into R's search path, so that we I scan a file R will go\n> to\n> > all the search paths to find it. In matlab, path(path,\"C:\\inFiles\") will\n> do\n> > this job, I'm just wondering if there is a similar function in R can do\n> this\n> > job.\n>\n> Something like this (not extensively tested):\n>\n> `sscan` <-\n>    function(name, path=options()$scanpath,...){\n>\n>      for(p in path){\n>        file=file.path(p,name)\n>        if(file.exists(file)){\n>          return(scan(file,...))\n>        }\n>        ## last resort..\n>        return(scan(name,...))\n>      }\n>    }\n>\n> Then do:\n>\n>   options(scanpath=\"/tmp\")\n>\n>   and then:\n>\n>   sscan(\"foo.data\")\n>\n>   will look for /tmp/foo.data first, then if that fails it will do the\n> 'last resort' which is to look in the current directory.\n>\n>   My worry is that this will bite you one day - if you have two files\n> with the same name, it will get the first one in your scanpath - one day\n> this will not be the one you think it is....\n>\n>   Note this only works with 'scan' - you'll have to do the same thing\n> for read.table, source, etc etc if you want them to behave with a search\n> path too. Unless there's a lower-level approach. But that really will\n> bite you!\n>\n> Barry\n>\n>\n> Barry\n>\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}