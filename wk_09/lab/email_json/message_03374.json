{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22195 - in\n\tbranches/SAMBA_4_0/source/torture/rpc: .", "body": "Author: metze\nDate: 2007-04-12 11:59:38 +0000 (Thu, 12 Apr 2007)\nNew Revision: 22195\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22195\n\nLog:\nfix compiler warnings and convert the whole torture/rpc/unixinfo.c code\nto the new torture ui functions\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/torture/rpc/unixinfo.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/rpc/unixinfo.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/rpc/unixinfo.c\t2007-04-12 11:42:09 UTC (rev 22194)\n+++ branches/SAMBA_4_0/source/torture/rpc/unixinfo.c\t2007-04-12 11:59:38 UTC (rev 22195)\n@@ -28,21 +28,18 @@\n /**\n   test the SidToUid interface\n */\n-static BOOL test_sidtouid(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx)\n+static bool test_sidtouid(struct torture_context *tctx, struct dcerpc_pipe *p)\n {\n \tNTSTATUS status;\n \tstruct unixinfo_SidToUid r;\n \tstruct dom_sid *sid;\n \t\n-\tsid = dom_sid_parse_talloc(mem_ctx, \"S-1-5-32-1234-5432\");\n+\tsid = dom_sid_parse_talloc(tctx, \"S-1-5-32-1234-5432\");\n \tr.in.sid = *sid;\n \n-\tstatus = dcerpc_unixinfo_SidToUid(p, mem_ctx, &r);\n+\tstatus = dcerpc_unixinfo_SidToUid(p, tctx, &r);\n \tif (NT_STATUS_EQUAL(NT_STATUS_NONE_MAPPED, status)) {\n-\t} else if (!NT_STATUS_IS_OK(status)) {\n-\t\tprintf(\"SidToUid failed == %s\\n\", nt_errstr(status));\n-\t\treturn False;\n-\t}\n+\t} else torture_assert_ntstatus_ok(tctx, status, \"SidToUid failed\");\n \n \treturn True;\n }\n@@ -50,8 +47,7 @@\n /*\n   test the UidToSid interface\n */\n-static bool test_uidtosid(struct torture_context *tctx, \n-\t\t\t\t\t\t  struct dcerpc_pipe *p)\n+static bool test_uidtosid(struct torture_context *tctx, struct dcerpc_pipe *p)\n {\n \tstruct unixinfo_UidToSid r;\n \tstruct dom_sid sid;\n@@ -60,13 +56,13 @@\n \tr.out.sid = &sid\n \n \ttorture_assert_ntstatus_ok(tctx, dcerpc_unixinfo_UidToSid(p, tctx, &r), \n-\t\t\t\t\t\t\t   \"UidToSid failed\");\n+\t\t\t\t   \"UidToSid failed\");\n \n \treturn true;\n }\n \n static bool test_getpwuid(struct torture_context *tctx, \n-\t\t\t\t\t\t  struct dcerpc_pipe *p)\n+\t\t\t  struct dcerpc_pipe *p)\n {\n \tuint64_t uids[512];\n \tuint32_t num_uids = ARRAY_SIZE(uids);\n@@ -93,40 +89,35 @@\n /*\n   test the SidToGid interface\n */\n-static BOOL test_sidtogid(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx)\n+static bool test_sidtogid(struct torture_context *tctx, struct dcerpc_pipe *p)\n {\n \tNTSTATUS status;\n \tstruct unixinfo_SidToGid r;\n \tstruct dom_sid *sid;\n-\t\n-\tsid = dom_sid_parse_talloc(mem_ctx, \"S-1-5-32-1234-5432\");\n+\n+\tsid = dom_sid_parse_talloc(tctx, \"S-1-5-32-1234-5432\");\n \tr.in.sid = *sid;\n \n-\tstatus = dcerpc_unixinfo_SidToGid(p, mem_ctx, &r);\n+\tstatus = dcerpc_unixinfo_SidToGid(p, tctx, &r);\n \tif (NT_STATUS_EQUAL(NT_STATUS_NONE_MAPPED, status)) {\n-\t} else if (!NT_STATUS_IS_OK(status)) {\n-\t\tprintf(\"SidToGid failed == %s\\n\", nt_errstr(status));\n-\t\treturn False;\n-\t}\n+\t} else torture_assert_ntstatus_ok(tctx, status, \"SidToGid failed\");\n \n-\treturn True;\n+\treturn true;\n }\n \n /*\n   test the GidToSid interface\n */\n-static BOOL test_gidtosid(struct torture_context *tctx, struct dcerpc_pipe *p)\n+static bool test_gidtosid(struct torture_context *tctx, struct dcerpc_pipe *p)\n {\n-\tNTSTATUS status;\n \tstruct unixinfo_GidToSid r;\n \tstruct dom_sid sid;\n \n \tr.in.gid = 1000;\n \tr.out.sid = &sid\n \n-\tstatus = dcerpc_unixinfo_GidToSid(p, tctx, &r);\n-\tif (NT_STATUS_EQUAL(NT_STATUS_NO_SUCH_GROUP, status)) {\n-\t} else torture_assert_ntstatus_ok(tctx, status, \"GidToSid failed\");\n+\ttorture_assert_ntstatus_ok(tctx, dcerpc_unixinfo_GidToSid(p, tctx, &r), \n+\t\t\t\t   \"GidToSid failed\");\n \n \treturn true;\n }\n@@ -138,10 +129,12 @@\n \n \tsuite = torture_suite_create(talloc_autofree_context(), \"UNIXINFO\");\n \ttcase = torture_suite_add_rpc_iface_tcase(suite, \"unixinfo\", \n-\t\t\t\t\t\t\t\t\t\t\t  &dcerpc_table_unixinfo);\n+\t\t\t\t\t\t  &dcerpc_table_unixinfo);\n \n+\ttorture_rpc_tcase_add_test(tcase, \"sidtouid\", test_sidtouid);\n \ttorture_rpc_tcase_add_test(tcase, \"uidtosid\", test_uidtosid);\n \ttorture_rpc_tcase_add_test(tcase, \"getpwuid\", test_getpwuid);\n+\ttorture_rpc_tcase_add_test(tcase, \"sidtogid\", test_sidtogid);\n \ttorture_rpc_tcase_add_test(tcase, \"gidtosid\", test_gidtosid);\n \n \treturn suite;\n\n"}