{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "jeevs <jeevan.ingale@gmail.com>", "subject": "Re: did I get greedy quantifiers wrong ?", "body": "On May 31, 3:02 pm, sharan.basa...@gmail.com (Sharan Basappa) wrote:\n> I seem to be having some conceptual problem with greedy quantifiers ..\n> My understanding is that it matches as much as follows while still\n> allowing rest of the\n> regex to match.\n> But look at the following example :\n> $str = mississippi;\n> $str =~ m/m(.*i)(.*pi)/;\n> print \"one is $1 \\n\";\n> print \"two is $2 \\n\";\n>\n> $str = mississippi;\n> $str =~ m/m(.*i?)(.*pi)/;\n> print \"one is $1 \\n\";\n> print \"two is $2 \\n\";\n>\n> In the first code snippet, I expected first regex (.*i) to match till\n> ississip and leave pi for (.*pi) regex.\n>\n> But what I get as the output of this script is :\n>\n> one is ississi\n> two is ppi\n> one is ississip\n> two is pi\n>\n> Why is that perl is leaving ppi to second regex while it can continue\n> till first p in ppi and can still get the second regex to get a match\n> ?\n> $str =~ m/m(.*i)(.*pi)/;\n\nm - matches m\n(.*i) - matched ississi.  ( IF  u want to match p of ppi u will have\nto write  (.*i.))\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}