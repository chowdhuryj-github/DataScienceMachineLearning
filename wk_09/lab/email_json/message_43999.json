{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #37923\": ;", "from_address": "\"James Keenan via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #37923] [TODO] build - configure framework needs tests ", "body": "On Wed Jun 06 00:45:25 2007, ptc wrote:\n> On Mon Feb 20 14:35:58 2006, jhoblitt wrote:\n> > > [jhoblitt  at hawaii.edu - Wed Dec 14 01:56:56 2005]:\n> > > \n> > > - The framework itself needs tests!!!\n> > > \n> > > Parrot::Configure::Data should be low hanging fruit\n> > \n> > This has been mustly done since Decemeber with the expection of\n> > Parrot::Configure::Step.  Any help that can be offered would be\n> > appreciated there. ;)\n> \n> kid51,\n> \n> you've been working hard on this area, are you able to comment on the \n> current status of the Configure tests?  We might be able to close this \n> ticket :-)\n\nAssuming we would say completeness was one of our primary objectives, I would have to \nsay:  No.\n\nBut you can form your own opinion by consulting the coverage chart here:\nhttp://thenceforward.net/parrot/coverage/configure-build/coverage.html\n\nThis shows the results of running the configuration tests (generally, t/configure/), then \nrunning Configure.pl, then running the postconfiguration (t/postconfigure/) and build tools \ntests (t/tools/pmc2cutils, t/tools/ops2pmutils, t/tools/ops2cutils).  In other words:\n\n      perl Configure.pl --test\n\nThree comments:\n\n1.  Parrot::Configure and Parrot::Configure::Step both still have uncovered subroutines.  I \nwouldn't describe them as \"low-hanging fruit,\" because if they were easy to write tests for, I \nwould have done it already.  But they should be tackled soon.\n\n2.  Large parts of the config/*/* hierarchy are OS-specific.  So running tests and coverage on \nany one OS will not boost coverage across the board.  Nonetheless, there are large parts of \nthat hierarchy that are *not* OS-specific.  I think the main reason to write more tests for \nthem is that by doing so we increase the number of people who understand WTF is going on \nin the configuration process.  And if at some point we have to come up with non-Perl 5 ways \nof configuring Parrot, we need to have more people who understand the objectives of the \nconfiguration, and not just the language implementing that configuration.\n\n3.  The build tools test, mostly in passing, substantial parts of the lib/Parrot/Pmc2c/ \nhierarchy other than Parrot::Pmc2c::Pmc2cMain (f.k.a. Parrot::Pmc2c::Utils).  It would be good \nto have more unit tests for \nParrot::Pmc2c::Library, ::Null, ::Ref, ::SharedRef, ::StandardConst, ::StmRef \nand ::UtilFunctions.   But though those are Perl 5 packages, their focus is very much on C \ncompilation, an area in which others will have to take the lead.\n\n(Perhaps this would be a good spot to plug my talk at YAPC::NA::2007, June 28, 9:00 am:  \nComponent-Focused Testing:  The Case of the Parrot Configuration and Build Tools:  http://\nconferences.mongueurs.net/yn2007/talk/541.  Anyone hoping to work in this area should \nbe able to pick up something there, and I would love to have that opportunity to meet with \nother current and potential Parrot testers.)\n\nkid51\n\n"}