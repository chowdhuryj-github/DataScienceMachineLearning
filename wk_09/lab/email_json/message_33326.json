{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23025 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0_26/source/lib", "body": "Author: vlendec\nDate: 2007-05-20 20:28:45 +0000 (Sun, 20 May 2007)\nNew Revision: 23025\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23025\n\nLog:\nSome logic simplifications\n\nModified:\n   branches/SAMBA_3_0/source/lib/messages.c\n   branches/SAMBA_3_0_26/source/lib/messages.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/messages.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/messages.c\t2007-05-20 20:11:23 UTC (rev 23024)\n+++ branches/SAMBA_3_0/source/lib/messages.c\t2007-05-20 20:28:45 UTC (rev 23025)\n@@ -208,32 +208,36 @@\n \t\terrno = saved_errno;\n \t}\n \n-\tif (ret == -1) {\n-\t\tif (errno == ESRCH) {\n-\t\t\tDEBUG(2,(\"pid %d doesn't exist - deleting messages record\\n\",\n-\t\t\t\t (int)pid));\n-\t\t\ttdb_delete(tdb, message_key_pid(procid));\n+\tif (ret == 0) {\n+\t\treturn NT_STATUS_OK;\n+\t}\n \n-\t\t\t/*\n-\t\t\t * INVALID_HANDLE is the closest I can think of -- vl\n-\t\t\t */\n-\t\t\treturn NT_STATUS_INVALID_HANDLE;\n-\t\t}\n+\t/*\n+\t * Something has gone wrong\n+\t */\n \n-\t\tDEBUG(2,(\"message to process %d failed - %s\\n\", (int)pid,\n-\t\t\t strerror(errno)));\n+\tif (errno == ESRCH) {\n+\t\tDEBUG(2,(\"pid %d doesn't exist - deleting messages record\\n\",\n+\t\t\t (int)pid));\n+\t\ttdb_delete(tdb, message_key_pid(procid));\n \n \t\t/*\n-\t\t * No call to map_nt_error_from_unix -- don't want to link in\n-\t\t * errormap.o into lots of utils.\n+\t\t * INVALID_HANDLE is the closest I can think of -- vl\n \t\t */\n-\n-\t\tif (errno == EINVAL) return NT_STATUS_INVALID_PARAMETER;\n-\t\tif (errno == EPERM)  return NT_STATUS_ACCESS_DENIED;\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n+\t\treturn NT_STATUS_INVALID_HANDLE;\n \t}\n \n-\treturn NT_STATUS_OK;\n+\tDEBUG(2,(\"message to process %d failed - %s\\n\", (int)pid,\n+\t\t strerror(errno)));\n+\n+\t/*\n+\t * No call to map_nt_error_from_unix -- don't want to link in\n+\t * errormap.o into lots of utils.\n+\t */\n+\n+\tif (errno == EINVAL) return NT_STATUS_INVALID_PARAMETER;\n+\tif (errno == EPERM)  return NT_STATUS_ACCESS_DENIED;\n+\treturn NT_STATUS_UNSUCCESSFUL;\n }\n \n /****************************************************************************\n@@ -243,7 +247,6 @@\n static NTSTATUS message_send_pid(struct server_id pid, int msg_type,\n \t\t\t\t const void *buf, size_t len)\n {\n-\tTDB_DATA kbuf;\n \tTDB_DATA dbuf;\n \tstruct message_rec rec;\n \tint ret;\n@@ -266,8 +269,6 @@\n \trec.src = procid_self();\n \trec.len = buf ? len : 0;\n \n-\tkbuf = message_key_pid(pid);\n-\n \tdbuf.dptr = (uint8 *)SMB_MALLOC(len + sizeof(rec));\n \tif (!dbuf.dptr) {\n \t\treturn NT_STATUS_NO_MEMORY;\n@@ -279,7 +280,7 @@\n \n \tdbuf.dsize = len + sizeof(rec);\n \n-\tret = tdb_append(tdb, kbuf, dbuf);\n+\tret = tdb_append(tdb, message_key_pid(pid), dbuf);\n \n \tSAFE_FREE(dbuf.dptr);\n \n@@ -297,14 +298,11 @@\n \n unsigned int messages_pending_for_pid(struct server_id pid)\n {\n-\tTDB_DATA kbuf;\n \tTDB_DATA dbuf;\n \tuint8 *buf;\n \tunsigned int message_count = 0;\n \n-\tkbuf = message_key_pid(pid);\n-\n-\tdbuf = tdb_fetch(tdb, kbuf);\n+\tdbuf = tdb_fetch(tdb, message_key_pid(pid));\n \tif (dbuf.dptr == NULL || dbuf.dsize == 0) {\n \t\tSAFE_FREE(dbuf.dptr);\n \t\treturn 0;\n@@ -337,7 +335,7 @@\n \t*msgs_buf = NULL;\n \t*total_len = 0;\n \n-\tkbuf = message_key_pid(pid_to_procid(sys_getpid()));\n+\tkbuf = message_key_pid(procid_self());\n \n \tif (tdb_chainlock(tdb, kbuf) == -1)\n \t\treturn False;\n\nModified: branches/SAMBA_3_0_26/source/lib/messages.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/messages.c\t2007-05-20 20:11:23 UTC (rev 23024)\n+++ branches/SAMBA_3_0_26/source/lib/messages.c\t2007-05-20 20:28:45 UTC (rev 23025)\n@@ -208,32 +208,36 @@\n \t\terrno = saved_errno;\n \t}\n \n-\tif (ret == -1) {\n-\t\tif (errno == ESRCH) {\n-\t\t\tDEBUG(2,(\"pid %d doesn't exist - deleting messages record\\n\",\n-\t\t\t\t (int)pid));\n-\t\t\ttdb_delete(tdb, message_key_pid(procid));\n+\tif (ret == 0) {\n+\t\treturn NT_STATUS_OK;\n+\t}\n \n-\t\t\t/*\n-\t\t\t * INVALID_HANDLE is the closest I can think of -- vl\n-\t\t\t */\n-\t\t\treturn NT_STATUS_INVALID_HANDLE;\n-\t\t}\n+\t/*\n+\t * Something has gone wrong\n+\t */\n \n-\t\tDEBUG(2,(\"message to process %d failed - %s\\n\", (int)pid,\n-\t\t\t strerror(errno)));\n+\tif (errno == ESRCH) {\n+\t\tDEBUG(2,(\"pid %d doesn't exist - deleting messages record\\n\",\n+\t\t\t (int)pid));\n+\t\ttdb_delete(tdb, message_key_pid(procid));\n \n \t\t/*\n-\t\t * No call to map_nt_error_from_unix -- don't want to link in\n-\t\t * errormap.o into lots of utils.\n+\t\t * INVALID_HANDLE is the closest I can think of -- vl\n \t\t */\n-\n-\t\tif (errno == EINVAL) return NT_STATUS_INVALID_PARAMETER;\n-\t\tif (errno == EPERM)  return NT_STATUS_ACCESS_DENIED;\n-\t\treturn NT_STATUS_UNSUCCESSFUL;\n+\t\treturn NT_STATUS_INVALID_HANDLE;\n \t}\n \n-\treturn NT_STATUS_OK;\n+\tDEBUG(2,(\"message to process %d failed - %s\\n\", (int)pid,\n+\t\t strerror(errno)));\n+\n+\t/*\n+\t * No call to map_nt_error_from_unix -- don't want to link in\n+\t * errormap.o into lots of utils.\n+\t */\n+\n+\tif (errno == EINVAL) return NT_STATUS_INVALID_PARAMETER;\n+\tif (errno == EPERM)  return NT_STATUS_ACCESS_DENIED;\n+\treturn NT_STATUS_UNSUCCESSFUL;\n }\n \n /****************************************************************************\n@@ -243,7 +247,6 @@\n static NTSTATUS message_send_pid(struct server_id pid, int msg_type,\n \t\t\t\t const void *buf, size_t len)\n {\n-\tTDB_DATA kbuf;\n \tTDB_DATA dbuf;\n \tstruct message_rec rec;\n \tint ret;\n@@ -266,8 +269,6 @@\n \trec.src = procid_self();\n \trec.len = buf ? len : 0;\n \n-\tkbuf = message_key_pid(pid);\n-\n \tdbuf.dptr = (uint8 *)SMB_MALLOC(len + sizeof(rec));\n \tif (!dbuf.dptr) {\n \t\treturn NT_STATUS_NO_MEMORY;\n@@ -279,7 +280,7 @@\n \n \tdbuf.dsize = len + sizeof(rec);\n \n-\tret = tdb_append(tdb, kbuf, dbuf);\n+\tret = tdb_append(tdb, message_key_pid(pid), dbuf);\n \n \tSAFE_FREE(dbuf.dptr);\n \n@@ -297,14 +298,11 @@\n \n unsigned int messages_pending_for_pid(struct server_id pid)\n {\n-\tTDB_DATA kbuf;\n \tTDB_DATA dbuf;\n \tuint8 *buf;\n \tunsigned int message_count = 0;\n \n-\tkbuf = message_key_pid(pid);\n-\n-\tdbuf = tdb_fetch(tdb, kbuf);\n+\tdbuf = tdb_fetch(tdb, message_key_pid(pid));\n \tif (dbuf.dptr == NULL || dbuf.dsize == 0) {\n \t\tSAFE_FREE(dbuf.dptr);\n \t\treturn 0;\n@@ -337,7 +335,7 @@\n \t*msgs_buf = NULL;\n \t*total_len = 0;\n \n-\tkbuf = message_key_pid(pid_to_procid(sys_getpid()));\n+\tkbuf = message_key_pid(procid_self());\n \n \tif (tdb_chainlock(tdb, kbuf) == -1)\n \t\treturn False;\n\n"}