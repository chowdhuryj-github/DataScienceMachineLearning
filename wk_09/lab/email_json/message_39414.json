{"category": "ham", "to_address": "\"Charles C. Berry\" <cberry@tajo.ucsd.edu>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Generating Data using Formulas", "body": "On Wed, 30 May 2007, Charles C. Berry wrote:\n\n> Christian,\n>\n> The formula language is not suited to such recursive useage\n> AFAICS.\n\nBut filter() is.  In this case the result is an AR(1) process, so \narima.sim() could be used (and internally that uses filter).\n\nI know this is an exercise, but using 'y0 = 0' is unrealistic: arima.sim \nallows you to do better.\n\n> You can _vectorize_ your code like this:\n>\n> cmat <- outer( 1:25, 1:25, function(y,x) ifelse( x>y, 0, 0.8^(y-x) ) )\n> res <- replicate(1000,{\n> \ty <- 1 + cmat %*% rnorm(25)\n> \tcoef(lm(y[-1]~y[-25]))\n> \t\t\t})\n> rowMeans(res) # mean of 1000 replicates\n>\n> HTH,\n>\n> Chuck\n>\n> On Tue, 29 May 2007, Chrisitan Falde wrote:\n>\n>> Hello,\n>>\n>> My name is Christian Falde.  I am new to R.\n>>\n>> My problem is this.  I am attempting to learn R on my own. In so doing I\n>> am using some problems from Davidson and MacKinnon Econometric Theory\n>> and Methods to do so.  This is because I can already do the some of the\n>> problems in SAS so I am attempting to rework them using R. Seemed\n>> logical to me, now I am stuck and its really bugging me.\n>>\n>>\n>> The problem is this\n>>\n>> Generate a data set sample size of 25 with the formula y=1+.8*y(t-1)+ u.\n>> Where y is the dependent, y(t-1) is the dependent variable lagged one\n>> peroid, and u is the classical error term.  Assume y0=0 and the u is\n>> NID(0,1). Use this sample to compute the OLS estimates B1 (1) and\n>> B2(.8).  Repeat at least 100 times and find the average of the B's.\n>> Use these average to estimate the bias of the ols estimators.\n>>\n>> To start I did the following non lagged program.\n>>\n>> final<-function(i,j){x<-function(i) {10*i}\n>> y<-function(i,j) {1+.8*10*i+100*rnorm(j)}\n>> datathreeone<- data.frame(replicate(100,coef(lm(y(i,j)~x(i)))))\n>> rowMeans(datathreeone)}\n>> final(1:25,25)\n>> final(1:50,50)\n>> final(1:100,100)\n>> final(1:200,200)\n>> final(1:10000,10000)\n>>\n>>\n>> Now the \"only\" thing I need to to is change \".8*10*i\"  which is\n>> exogenous to \".8* y(t-1) \".\n>>\n>> There are two reasons why I did it this way. I needed the rnorm(i) to\n>> generate a new set of u's each replication, and I wanted to be able to\n>> use the function as i did to make the results more concise.\n>>\n>> For the lag in SAS we used an if then else logic relating to the number\n>> of observation.  This in R would have to be linked to the invisable row\n>> number.  I think I need an index variable for the row.  Perhaps, sorry\n>> thinking while typing.\n>>\n>> Another reason why I am stuck, the lag function was seemingly straight forward.\n>>\n>> lag (x, k=1)\n>>\n>> yet x has to be a matrix so when I tried to do it like above with y as a\n>> function R complained.\n>>\n>> I have been working on this for a couple of days now so everything is\n>> begining to not make sense.  It just seems to me to get the matrix to\n>> work out I would need to have two matrices.\n>>\n>> dependent        and           explanatory\n>> y1                 =     sum (  1 +.8*0 + 100*rnorm(i))\n>> y2                 =     sum ( 1 +.8* (dependent row 1) + 100*rnorm(i))\n>> etc\n>>\n>> I just am not sure how to do that.\n>>\n>> Please help and thank you for your time,\n>>\n>> christian falde\n>>\n> [snip]\n>\n> Charles C. Berry                        (858) 534-2098\n>                                          Dept of Family/Preventive Medicine\n> E mailto:cberry@tajo.ucsd.edu\t         UC San Diego\n> http://biostat.ucsd.edu/~cberry/         La Jolla, San Diego 92093-0901\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}