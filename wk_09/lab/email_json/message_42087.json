{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 459: make recovery daemon values tunable in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 459\nrevision-id: tridge@samba.org-20070604102244-fsw0ujymz76j2qd1\nparent: tridge@samba.org-20070604100531-doyjw8gu3hnyvvug\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Mon 2007-06-04 20:22:44 +1000\nmessage:\n  make recovery daemon values tunable\nmodified:\n  common/ctdb.c                  ctdb.c-20061127094323-t50f58d65iaao5of-2\n  common/ctdb_recoverd.c         recoverd.c-20070503213540-bvxuyd9jm1f7ig90-1\n  common/ctdb_tunables.c         ctdb_tunables.c-20070604095258-4m34d7cm1qa7yos9-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n=== modified file 'common/ctdb.c'\n--- a/common/ctdb.c\t2007-06-04 07:46:37 +0000\n+++ b/common/ctdb.c\t2007-06-04 10:22:44 +0000\n@@ -523,14 +523,7 @@\n \tctdb->recovery_lock_fd = -1;\n \tctdb->monitoring_mode  = CTDB_MONITORING_ACTIVE;\n \n-\t/* set default values for tunables */\n-\tctdb->tunable.max_redirect_count = 3;\n-\tctdb->tunable.seqnum_frequency   = 1;\n-\tctdb->tunable.control_timeout    = 60;\n-\tctdb->tunable.traverse_timeout   = 20;\n-\tctdb->tunable.monitoring_timeout = 2;\n-\tctdb->tunable.monitoring_limit   = 3;\n-\tctdb->tunable.max_lacount        = 7;\n+\tctdb_tunables_set_defaults(ctdb);\n \n \treturn ctdb;\n }\n\n=== modified file 'common/ctdb_recoverd.c'\n--- a/common/ctdb_recoverd.c\t2007-06-03 00:29:14 +0000\n+++ b/common/ctdb_recoverd.c\t2007-06-04 10:22:44 +0000\n@@ -35,8 +35,8 @@\n \ttimed_out = 1;\n }\n \n-#define CONTROL_TIMEOUT() timeval_current_ofs(5, 0)\n-#define MONITOR_TIMEOUT() timeval_current_ofs(1, 0)\n+#define CONTROL_TIMEOUT() timeval_current_ofs(ctdb->tunable.recover_timeout, 0)\n+#define MONITOR_TIMEOUT() timeval_current_ofs(ctdb->tunable.monitor_frequency, 0)\n \n static int set_recovery_mode(struct ctdb_context *ctdb, struct ctdb_node_map *nodemap, uint32_t rec_mode)\n {\n@@ -50,7 +50,7 @@\n \t\t}\n \n \t\tif (rec_mode == CTDB_RECOVERY_ACTIVE) {\n-\t\t\tret = ctdb_ctrl_freeze(ctdb, timeval_current_ofs(5, 0), nodemap->nodes[j].vnn);\n+\t\t\tret = ctdb_ctrl_freeze(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn);\n \t\t\tif (ret != 0) {\n \t\t\t\tDEBUG(0, (__location__ \" Unable to freeze node %u\\n\", nodemap->nodes[j].vnn));\n \t\t\t\treturn -1;\n@@ -64,7 +64,7 @@\n \t\t}\n \n \t\tif (rec_mode == CTDB_RECOVERY_NORMAL) {\n-\t\t\tret = ctdb_ctrl_thaw(ctdb, timeval_current_ofs(5, 0), nodemap->nodes[j].vnn);\n+\t\t\tret = ctdb_ctrl_thaw(ctdb, CONTROL_TIMEOUT(), nodemap->nodes[j].vnn);\n \t\t\tif (ret != 0) {\n \t\t\t\tDEBUG(0, (__location__ \" Unable to thaw node %u\\n\", nodemap->nodes[j].vnn));\n \t\t\t\treturn -1;\n@@ -652,14 +652,16 @@\n \n \t/* wait for a few seconds to collect all responses */\n \ttimed_out = 0;\n-\tevent_add_timed(ctdb->ev, mem_ctx, timeval_current_ofs(3, 0), \n+\tevent_add_timed(ctdb->ev, mem_ctx, timeval_current_ofs(ctdb->tunable.election_timeout, 0),\n \t\t\ttimeout_func, ctdb);\n \twhile (!timed_out) {\n \t\tevent_loop_once(ctdb->ev);\n \t}\n }\n \n-\n+/*\n+  the main monitoring loop\n+ */\n void monitor_cluster(struct ctdb_context *ctdb)\n {\n \tuint32_t vnn, num_active, recmode, recmaster;\n@@ -688,6 +690,14 @@\n \t\tevent_loop_once(ctdb->ev);\n \t}\n \n+\t/* get relevant tunables */\n+\tctdb_ctrl_get_tunable(ctdb, CONTROL_TIMEOUT(), CTDB_CURRENT_NODE, \n+\t\t\t      \"RecoverTimeout\", &ctdb->tunable.recover_timeout);\n+\tctdb_ctrl_get_tunable(ctdb, CONTROL_TIMEOUT(), CTDB_CURRENT_NODE, \n+\t\t\t      \"MonitorFrequency\", &ctdb->tunable.monitor_frequency);\n+\tctdb_ctrl_get_tunable(ctdb, CONTROL_TIMEOUT(), CTDB_CURRENT_NODE, \n+\t\t\t      \"ElectionTimeout\", &ctdb->tunable.election_timeout);\n+\n \tvnn = ctdb_ctrl_getvnn(ctdb, CONTROL_TIMEOUT(), CTDB_CURRENT_NODE);\n \tif (vnn == (uint32_t)-1) {\n \t\tDEBUG(0,(\"Failed to get local vnn - retrying\\n\"));\n\n=== modified file 'common/ctdb_tunables.c'\n--- a/common/ctdb_tunables.c\t2007-06-04 09:53:19 +0000\n+++ b/common/ctdb_tunables.c\t2007-06-04 10:22:44 +0000\n@@ -22,17 +22,32 @@\n \n static const struct {\n \tconst char *name;\n-\tsize_t offset;\n+\tuint32_t default_v;\n+\tsize_t offset;\t\n } tunable_map[] = {\n-\t{ \"MaxRedirectCount\",  offsetof(struct ctdb_tunable, max_redirect_count) },\n-\t{ \"SeqnumFrequency\",   offsetof(struct ctdb_tunable, seqnum_frequency) },\n-\t{ \"ControlTimeout\",    offsetof(struct ctdb_tunable, control_timeout) },\n-\t{ \"TraverseTimeout\",   offsetof(struct ctdb_tunable, traverse_timeout) },\n-\t{ \"MonitoringTimeout\", offsetof(struct ctdb_tunable, monitoring_timeout) },\n-\t{ \"MonitoringLimit\",   offsetof(struct ctdb_tunable, monitoring_limit) },\n-\t{ \"MaxLACount\",        offsetof(struct ctdb_tunable, max_lacount) },\n+\t{ \"MaxRedirectCount\",  3,  offsetof(struct ctdb_tunable, max_redirect_count) },\n+\t{ \"SeqnumFrequency\",   1,  offsetof(struct ctdb_tunable, seqnum_frequency) },\n+\t{ \"ControlTimeout\",    60, offsetof(struct ctdb_tunable, control_timeout) },\n+\t{ \"TraverseTimeout\",   20, offsetof(struct ctdb_tunable, traverse_timeout) },\n+\t{ \"MonitoringTimeout\", 2,  offsetof(struct ctdb_tunable, monitoring_timeout) },\n+\t{ \"MonitoringLimit\",   3,  offsetof(struct ctdb_tunable, monitoring_limit) },\n+\t{ \"MaxLACount\",        7,  offsetof(struct ctdb_tunable, max_lacount) },\n+\t{ \"RecoverTimeout\",    5,  offsetof(struct ctdb_tunable, recover_timeout) },\n+\t{ \"MonitorFrequency\",  1,  offsetof(struct ctdb_tunable, monitor_frequency) },\n+\t{ \"ElectionTimeout\",   3,  offsetof(struct ctdb_tunable, election_timeout) },\n };\n \n+/*\n+  set all tunables to defaults\n+ */\n+void ctdb_tunables_set_defaults(struct ctdb_context *ctdb)\n+{\n+\tint i;\n+\tfor (i=0;itunable) = tunable_map[i].default_v;\n+\t}\n+}\n+\n \n /*\n   get a tunable\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-06-04 09:53:19 +0000\n+++ b/include/ctdb_private.h\t2007-06-04 10:22:44 +0000\n@@ -47,6 +47,9 @@\n \tuint32_t monitoring_timeout;\n \tuint32_t monitoring_limit;\n \tuint32_t max_lacount;\n+\tuint32_t recover_timeout;\n+\tuint32_t monitor_frequency;\n+\tuint32_t election_timeout;\n };\n \n /*\n@@ -971,4 +974,6 @@\n int32_t ctdb_control_set_tunable(struct ctdb_context *ctdb, TDB_DATA indata);\n int32_t ctdb_control_list_tunables(struct ctdb_context *ctdb, TDB_DATA *outdata);\n \n+void ctdb_tunables_set_defaults(struct ctdb_context *ctdb);\n+\n #endif\n\n"}