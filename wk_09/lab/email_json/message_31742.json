{"category": "ham", "to_address": "chromatic <chromatic@wgz.org>", "from_address": "\"jerry gay\" <jerry.gay@gmail.com>", "subject": "Re: r18572 - trunk/compilers/imcc", "body": "On 5/17/07, chromatic  wrote:\n> On Thursday 17 May 2007 09:32:01 jerry gay wrote:\n>\n> > this revision breaks parrot on msvc (and i suspect other c89-compliant\n> > compilers--sometimes i wonder if there are any others!)\n>\n> I doubt even MSVC is C89-compliant, to be honest.  It just barfs more often\n> than GCC on certain things.\n>\n> > this situation is *extremely* frustrating. the temporary workaround is\n> > to revert this patch until it works everywhere. the solution is to\n> > find a way to make gcc (and other) compilers comply with our most\n> > important coding standard: C89 compliance.\n>\n> Unfortunately, our headers (and even some system headers) don't follow C89:\n>\nthen what the heck does c89 compliance mean for parrot, if it's beyond\nour control because we can't change system headers? i mean, how do you\nenforce that compliance, if the compiler can't do it for you? maybe\nthis is a case where \"almost\" is good enough--i don't know.\n\n> $ make parrot\n> compilers/imcc/pbc.c\n> In file included from ./include/parrot/parrot.h:30,\n>                  from compilers/imcc/imc.h:21,\n>                  from compilers/imcc/pbc.c:7:\n> ./include/parrot/config.h:82: warning: ISO C90 does not support 'long long'\n> ./include/parrot/config.h:83: warning: ISO C90 does not support 'long long'\n> In file included from ./include/parrot/atomic.h:25,\n>                  from ./include/parrot/thread.h:20,\n>                  from ./include/parrot/pmc.h:19,\n>                  from ./include/parrot/parrot.h:282,\n>                  from compilers/imcc/imc.h:21,\n>                  from compilers/imcc/pbc.c:7:\n> ./include/parrot/atomic/gcc_x86.h:30: error: expected '=', ',', ';', 'asm'\n> or '__attribute__' before 'static'\n> ./include/parrot/atomic/gcc_x86.h:85: error: expected '=', ',', ';', 'asm'\n> or '__attribute__' before 'static\n>\n> Chasing down that problem is... fun.\n>\n> Regardless, does this patch fix the problem for you?\n>\nyes, it does. seems i had blinders on, and missed the assignment\nstatement on the line above.\n\n@@ -918,7 +918,7 @@\n     char     *s  = s_key;\n     *s           = 0;\n\n-    SymReg *reg  = key_reg->set == 'K' ? key_reg->nextkey : key_reg;\n+    reg          = key_reg->set == 'K' ? key_reg->nextkey : key_reg;\n\n     for (key_length = 0; reg ; reg = reg->nextkey, key_length++) {\n         if ((pc - key - 2) >= KEYLEN)\n\nsomehow i missed C<*s = 0;>, which made the declaration illegal. i'm\nnot used to looking at code with '=' sign alignment, maybe that's what\nthrew me off. anyway, it was a stupid mistake on my part.\n\nhowever... why is 's' nulled out, directly after it's initialized to\n's_key'? that looks funny.\ni've applied as r18580, thanks for the fix.\n~jerry\n\n"}