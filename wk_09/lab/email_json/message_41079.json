{"category": "ham", "to_address": "Maria Montez <montez@bu.edu>", "from_address": "Uwe Ligges <ligges@statistik.uni-dortmund.de>", "subject": "Re: [R] object not found inside function", "body": "Maria Montez wrote:\n> Hi!\n> \n> When running the following code I get the message: Error in eval(expr, \n> envir, enclos) : object \"A\" not found\n> \n> fm <- function(p,ydata, env = parent.frame()) {\n> #fit model y ~ (b0+b1x1+...+bpxp)*exp(g2plus*z2plus) where bi and g2plus \n> are parameters\n> \n>   #create design matrix for linear part\n>   fo00 <- paste(\"~\",paste(paste(\"x\",1:p,sep=\"\"),collapse=\"+\"),sep=\"\")\n>   fo0 <- as.formula(fo00)\n>   A <- model.matrix(fo0,data=ydata)\n> \n>  # create z variable\n>   z2plus <- ifelse(totx>1,1,0)\n>   ydata <- data.frame(ydata,z2plus)\n> \n>  #run model\n>   t2 <- nls(y ~ \n> A*exp(g2plus*z2plus),data=ydata,start=c(g2plus=0),alg=\"plinear\")\n> }\n> model <- fm(4,ydata)\n> \n> The code inside the function works if not enclosed in a function. This \n> makes me think that it is a scope problem and I need to specify the \n> environment. Even though I've read about environment and lexical scope I \n> still don't fully understand how it works. Sometimes I can do it others \n> I can't!\n> \n> Can someone help me?\n> \n> I've included below code to create a dataframe that can be used to test \n> my code.\n> \n> Thanks, Maria\n>\n\n[data deleted]\n\nMaria,\n\n1. Do you really want to paste() the formula fo0 together that way?\n2. For me, the functions fails because totx is not known. Please make \nsure to post *reproducible* code (OK, you almost did).\n3. If totx is known, the function works for me, hence I guess you are \nusing an outdated version (< 2.5.0) of R. --> Please always specify the \nversion of R and the OS you are using.\n\nUwe\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}