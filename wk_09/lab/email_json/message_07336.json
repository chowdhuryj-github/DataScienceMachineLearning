{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 121: better error handling in ctdb_ltdb_lock_fetch_requeue() in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 121\nrevision-id: tridge@samba.org-20070417012000-dd8a85395a077110\nparent: tridge@samba.org-20070416231820-74f66bb640e03880\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-04-17 11:20:00 +1000\nmessage:\n  better error handling in ctdb_ltdb_lock_fetch_requeue()\nmodified:\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-04-16 23:18:20 +0000\n+++ b/common/ctdb_ltdb.c\t2007-04-17 01:20:00 +0000\n@@ -244,6 +244,12 @@\n    immediately satisfied until it can get the lock. This means that\n    the main ctdb daemon will not block waiting for a chainlock held by\n    a client\n+\n+   There are 3 possible return values:\n+\n+       0:    means that it got the lock immediately.\n+      -1:    means that it failed to get the lock, and won't retry\n+      -2:    means that it failed to get the lock immediately, but will retry\n  */\n int ctdb_ltdb_lock_fetch_requeue(struct ctdb_db_context *ctdb_db, \n \t\t\t\t TDB_DATA key, struct ctdb_ltdb_header *header, \n@@ -255,6 +261,12 @@\n \t\n \tret = tdb_chainlock_nonblock(tdb, key);\n \n+\tif (ret != 0 &&\n+\t    !(errno == EACCES || errno == EAGAIN || errno == EDEADLK)) {\n+\t\t/* a hard failure - don't try again */\n+\t\treturn -1;\n+\t}\n+\n \t/* first the non-contended path */\n \tif (ret == 0) {\n \t\tret = ctdb_ltdb_fetch(ctdb_db, key, header, hdr, data);\n@@ -273,6 +285,11 @@\n \n \t/* we get an extra reference to the packet here, to \n \t   stop it being freed in the top level packet handler */\n-\t(void)talloc_reference(ctdb_db, hdr);\n-\treturn 0;\n+\tif (talloc_reference(ctdb_db, hdr) == NULL) {\n+\t\ttalloc_free(h);\n+\t\treturn -1;\n+\t}\n+\n+\t/* now tell the caller than we will retry asynchronously */\n+\treturn -2;\n }\n\n"}