{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23443 - in branches/SAMBA_3_0_26/source/smbd: .", "body": "Author: obnox\nDate: 2007-06-12 16:18:19 +0000 (Tue, 12 Jun 2007)\nNew Revision: 23443\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23443\n\nLog:\nMerge r20006 from 3_0:\n\nConvert the registry shares to use the new API (reg_api.c)\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/smbd/service.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/smbd/service.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/service.c\t2007-06-12 16:17:25 UTC (rev 23442)\n+++ branches/SAMBA_3_0_26/source/smbd/service.c\t2007-06-12 16:18:19 UTC (rev 23443)\n@@ -256,15 +256,15 @@\n \n static int load_registry_service(const char *servicename)\n {\n-\tREGISTRY_KEY *key;\n+\tstruct registry_key *key;\n \tchar *path;\n \tWERROR err;\n \n-\tuint32 i, num_values;\n-\tchar **value_names;\n-\tstruct registry_value **values = NULL;\n+\tuint32 i;\n+\tchar *value_name;\n+\tstruct registry_value *value;\n \n-\tint res;\n+\tint res = -1;\n \n \tif (!lp_registry_shares()) {\n \t\treturn -1;\n@@ -274,73 +274,56 @@\n \t\treturn -1;\n \t}\n \n-\terr = regkey_open_internal(NULL, &key, path, get_root_nt_token(),\n-\t\t\t\t   REG_KEY_READ);\n+\terr = reg_open_path(NULL, path, REG_KEY_READ, get_root_nt_token(),\n+\t\t\t    &key);\n \tSAFE_FREE(path);\n \n \tif (!W_ERROR_IS_OK(err)) {\n \t\treturn -1;\n \t}\n \n-\terr = registry_fetch_values(NULL, key, &num_values, &value_names,\n-\t\t\t\t    &values);\n-\n-\tTALLOC_FREE(key);\n-\n-\tif (!W_ERROR_IS_OK(err)) {\n-\t\tgoto error;\n-\t}\n-\n \tres = lp_add_service(servicename, -1);\n \tif (res == -1) {\n \t\tgoto error;\n \t}\n \n-\tfor (i=0; itype) {\n+\tfor (i=0;\n+\t     W_ERROR_IS_OK(reg_enumvalue(key, key, i, &value_name, &value));\n+\t     i++) {\n+\t\tswitch (value->type) {\n \t\tcase REG_DWORD: { \n-\t\t\tchar *val;\n-\t\t\tif (asprintf(&val, \"%d\", values[i]->v.dword) == -1) {\n+\t\t\tchar *tmp;\n+\t\t\tif (asprintf(&tmp, \"%d\", value->v.dword) == -1) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\tlp_do_parameter(res, value_names[i], val);\n-\t\t\tSAFE_FREE(val);\n+\t\t\tlp_do_parameter(res, value_name, tmp);\n+\t\t\tSAFE_FREE(tmp);\n \t\t\tbreak;\n \t\t}\n \t\tcase REG_SZ: {\n-\t\t\tlp_do_parameter(res, value_names[i],\n-\t\t\t\t\tvalues[i]->v.sz.str);\n+\t\t\tlp_do_parameter(res, value_name, value->v.sz.str);\n \t\t\tbreak;\n \t\t}\n \t\tdefault:\n \t\t\t/* Ignore all the rest */\n \t\t\tbreak;\n \t\t}\n-\t}\n \n-\tTALLOC_FREE(value_names);\n-\tTALLOC_FREE(values);\n-\treturn res;\n-\n-\tif (!service_ok(res)) {\n-\t\t/* this is actually never reached, since \n-\t\t * service_ok only returns False if the service\n-\t\t * entry does not have a service name, and we _know_\n-\t\t * we do have a service name here... */\n-\t\tres = -1;\n+\t\tTALLOC_FREE(value_name);\n+\t\tTALLOC_FREE(value);\n \t}\n \n+\tres = 0;\n  error:\n \n-\tTALLOC_FREE(value_names);\n-\tTALLOC_FREE(values);\n-\treturn -1;\n+\tTALLOC_FREE(key);\n+\treturn res;\n }\n \n void load_registry_shares(void)\n {\n-\tREGISTRY_KEY *key;\n-\tREGSUBKEY_CTR *keys;\n+\tstruct registry_key *key;\n+\tchar *name;\n \tWERROR err;\n \tint i;\n \n@@ -348,26 +331,18 @@\n \t\treturn;\n \t}\n \n-\tif (!(keys = TALLOC_ZERO_P(NULL, REGSUBKEY_CTR))) {\n-\t\tgoto done;\n-\t}\n-\n-\terr = regkey_open_internal(keys, &key, KEY_SMBCONF,\n-\t\t\t\t   get_root_nt_token(), REG_KEY_READ);\n+\terr = reg_open_path(NULL, KEY_SMBCONF, REG_KEY_READ,\n+\t\t\t    get_root_nt_token(), &key);\n \tif (!(W_ERROR_IS_OK(err))) {\n-\t\tgoto done;\n+\t\treturn;\n \t}\n \n-\tif (fetch_reg_keys(key, keys) == -1) {\n-\t\tgoto done;\n+\tfor (i=0; W_ERROR_IS_OK(reg_enumkey(key, key, i, &name, NULL)); i++) {\n+\t\tload_registry_service(name);\n+\t\tTALLOC_FREE(name);\n \t}\n \n-\tfor (i=0; inum_subkeys; i++) {\n-\t\tload_registry_service(keys->subkeys[i]);\n-\t}\n-\n- done:\n-\tTALLOC_FREE(keys);\n+\tTALLOC_FREE(key);\n \treturn;\n }\n \n\n"}