{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Juerd Waalboer <juerd@convolution.nl>", "subject": "Sigils by example (was: Re: Is Perl 6 too late?)", "body": "Thomas Wittek skribis 2007-05-14 22:20 (+0200):\n> But I think that the name of an identifier (noun/verb, single/plural,\n> the meaning of the word) already gives enough context to understand what\n> type it is.\n\nSo is \"user_id\" a variable or a type? How about \"substring\" or\n\"document\"?\n\nIs \"new\" a function, or a variable? How about \"old\"?\n\nIs \"is_valid\" a function that determines whether something is valid, or\na variable holding the result of this test?\n\nWhen you have \"update(delete_random)\", where both update and\ndelete_random are functions, does this pass the function \"delete_random\"\nto \"update\", or does it first delete something, and then pass the\nresulting value to update? Don't forget that one of the important\ndecisions in Perl was that we don't always like to use parentheses,\nbecause that clutters code (and you don't want that!!).\n\nGiven \"HTML Element\", is HTML the type and Element the variable of that\ntype, or is Element the type, and HTML the variable (for example, to\nhold the  element object)?\n\nIs \"pid\" a variable you used yourself, for example as the return value\nfrom \"fork\", or does \"pid\" give you the pid of your current process? And\nif the latter, is that by calling the pid function, or because pid is a\nvariable?\n\nDoesn't \"count input\" look wrong to you? It should, because \"count\" is a\nhash! By the way, what would \"input\" be?\n\nAnd how on earth would you write \"object.foo()\", where foo is a variable\nholding a reference to a method, not the name of the method, if you had\nno sigils?\n\n\n...\n\n\n...\n\n\n...\n\n\n...\n\n\n...\n\n| So is \"user_id\" a variable or a type? How about \"substring\" or\n| \"document\"?\n\nThe Perl Way:\n\n$user_id is a variable, $substring is a variable, $document is a\nvariable.\n\nuser_id is not a variable, substring is not a variable, document is not\na variable.\n\n| Is \"new\" a function, or a variable? How about \"old\"?\n\nThe Perl Way:\n\n$new is a variable, $old is a variable.\n\nnew is not a variable, old is not a variable.\n\n| Is \"is_valid\" a function that determines whether something is valid, or\n| a variable holding the result of this test?\n\nThe Perl Way:\n\n$is_valid is a variable.\n\nis_valid is not a variable.\n\n| When you have \"update(delete_random)\", where both update and\n| delete_random are functions, does this pass the function \"delete_random\"\n| to \"update\", or does it first delete something, and then pass the\n| resulting value to update? \n\nThe Perl 6 Way:\n\nupdate(&delete_random) passes the function &delete_random to &update.\n\nupdate(delete_random) calls the function &delete_random, and passes\nwhatever it returned to &update.\n\n| Given \"HTML Element\", is HTML the type and Element the variable of that\n| type, or is Element the type, and HTML the variable (for example, to\n| hold the  element object)?\n\nThe Perl 6 Way:\n\nHTML $Element is a variable of the type HTML.\n\n$HTML Element is a syntax error caught early by the compiler. (And\nthat's really great if your native language makes you think the other\nway around than the programming language wants you to.)\n\n| Is \"pid\" a variable you used yourself, for example as the return value\n| from \"fork\", or does \"pid\" give you the pid of your current process? \n| And if the latter, is that by calling the pid function, or because\n| pid is a variable?\n\nThe Perl Way:\n\n$pid is a variable that you set yourself.\n\npid is not a variable.\n\n$*PID is a variable, that represents the pid of your current process.\n\n| Doesn't \"count input\" look wrong to you? It should, because \"count\" is a\n| hash! By the way, what would \"input\" be?\n\nThe Perl Way:\n\n%count $input (or %count input) looks wrong, error caught even before\ncompile time, programmer time and energy conserved.\n\n| And how on earth would you write \"object.foo()\", where foo is a variable\n| holding a reference to a method, not the name of the method, if you had\n| no sigils?\n\nThe Perl Way:\n\n$object.foo() calls the method called \"foo\".\n\n$object.$foo() calls the method that is in the variable $foo.\n-- \nkorajn salutojn,\n\n  juerd waalboer:  perl hacker   \n  convolution:     ict solutions and consultancy \n"}