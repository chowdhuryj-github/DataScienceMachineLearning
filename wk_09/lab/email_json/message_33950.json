{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r23057 - in branches/SAMBA_4_0/source/libcli/raw:\n\t.", "body": "Author: tridge\nDate: 2007-05-21 23:35:14 +0000 (Mon, 21 May 2007)\nNew Revision: 23057\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23057\n\nLog:\n\nonly call the async recv function for the first pending receive, not\nall pending receives, when the transport dies. This is because the\nasync callback most commonly shuts down the connection (it's the only\nreasonable thing to do when it's dead), and that frees the whole\ncontext. That means that if we loop more than once, we'll end up using\nfreed memory.\n\nModified:\n   branches/SAMBA_4_0/source/libcli/raw/clitransport.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/libcli/raw/clitransport.c\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/raw/clitransport.c\t2007-05-21 23:33:26 UTC (rev 23056)\n+++ branches/SAMBA_4_0/source/libcli/raw/clitransport.c\t2007-05-21 23:35:14 UTC (rev 23057)\n@@ -138,8 +138,11 @@\n \t\tstatus = NT_STATUS_UNEXPECTED_NETWORK_ERROR;\n \t}\n \n-\t/* kill all pending receives */\n-\twhile (transport->pending_recv) {\n+\t/* kill only the first pending receive - this is so that if\n+\t that async function frees the connection we don't die trying\n+\t to use old memory. The caller has to cope with only one\n+\t network error */\n+\tif (transport->pending_recv) {\n \t\tstruct smbcli_request *req = transport->pending_recv;\n \t\treq->state = SMBCLI_REQUEST_ERROR;\n \t\treq->status = status;\n\n"}