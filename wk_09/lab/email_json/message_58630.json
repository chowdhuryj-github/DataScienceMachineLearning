{"category": "ham", "to_address": "Constantine Vetoshev <gepardcv@yahoo.com>,\n   \"Gerald \\(Jerry\\) Carter\" <jerry@samba.org>,\n   David Gutierrez <davegu1@hotmail.com>", "from_address": "Constantine Vetoshev <gepardcv@yahoo.com>", "subject": "Re: Determining a user's remote port in a VFS module", "body": "Constantine Vetoshev  writes:\n\n> > I think the poster was looking for an API call from\n> > Samba VFS layer.  But I unclear as to whether the Q was\n> > about the port to which the client connected or the\n> > src port used by the client.\n> \n> I meant the latter. connection_struct in smb.h has a client_address field, but no corresponding\n> client_port. I looked in util_sock.c, and I see that remote port information isn't being retrieved or\n> set. client_socket_port() seems to return the local port on the Samba server (typically 445). I'm not\n> terribly fluent in socket programming issues---is the remote port even readily available with POSIX\n> APIs? What about low-level kernel calls?\n\nI think I figured it out. Here's a patch against v3-0 in git (thank you so much for making a git repository, by the way---makes life way easier than Subversion).\n\nComments?\n\n\n[PATCH] Added the ability retrieve the remote port of the current connection.\n\nIt's occasionally useful to be able to determine the remote port of\nthe current connection. The util_sock collection of code currently has\na way to determine the remote IP, but the remote port was mysteriously\nmissing.\n\nconnection_struct now has a new field, client_port, to match client_addr.\n---\n source/include/smb.h   |    1 +\n source/lib/util_sock.c |   28 ++++++++++++++++++++++++++++\n source/smbd/service.c  |    1 +\n 3 files changed, 30 insertions(+), 0 deletions(-)\n\ndiff --git a/source/include/smb.h b/source/include/smb.h\nindex 9c7b32f..f5faf0a 100644\n--- a/source/include/smb.h\n+++ b/source/include/smb.h\n@@ -647,6 +647,7 @@ typedef struct connection_struct {\n        uid_t uid; /* uid of user who *opened* this connection */\n        gid_t gid; /* gid of user who *opened* this connection */\n        char client_address[18]; /* String version of client IP address. */\n+       int client_port; /* remote port on the client's side of this connection */\n\n        uint16 vuid; /* vuid of user who *opened* this connection, or UID_FIELD_INVALID */\n\ndiff --git a/source/lib/util_sock.c b/source/lib/util_sock.c\nindex d102e57..88ca03f 100644\n--- a/source/lib/util_sock.c\n+++ b/source/lib/util_sock.c\n@@ -85,6 +85,11 @@ char *client_addr(void)\n        return get_peer_addr(client_fd);\n }\n\n+int client_port(void)\n+{\n+       return get_peer_port(client_fd);\n+}\n+\n char *client_socket_addr(void)\n {\n        return get_socket_addr(client_fd);\n@@ -1270,6 +1275,29 @@ char *get_peer_addr(int fd)\n }\n\n /*******************************************************************\n+ Return the port of the remote end of a socket as an int.\n+ ******************************************************************/\n+\n+int get_peer_port(int fd)\n+{\n+       struct sockaddr sa;\n+       struct sockaddr_in *sockin = (struct sockaddr_in *) (&sa);\n+       socklen_t length = sizeof(sa);\n+       static fstring addr_buf;\n+\n+       if (fd == -1) {\n+               return -1;\n+       }\n+\n+       if (getpeername(fd, &sa, &length) < 0) {\n+               DEBUG(0,(\"getpeername failed. Error was %s\\n\", strerror(errno) ));\n+               return -1;\n+       }\n+\n+       return ntohs(sockin->sin_port);\n+}\n+\n+/*******************************************************************\n  Create protected unix domain socket.\n\n  Some unixes cannot set permissions on a ux-dom-sock, so we\ndiff --git a/source/smbd/service.c b/source/smbd/service.c\nindex 2b84223..9adc9d0 100644\n--- a/source/smbd/service.c\n+++ b/source/smbd/service.c\n@@ -767,6 +767,7 @@ static connection_struct *make_connection_snum(int snum, user_struct *vuser,\n\n        safe_strcpy(conn->client_address, client_addr(),\n                    sizeof(conn->client_address)-1);\n+       conn->client_port = client_port();\n        conn->num_files_open = 0;\n        conn->lastused = conn->lastused_count = time(NULL);\n        conn->used = True;\n--\n1.5.2\n\n\nThanks,\nCV\n\n\n\n       \n____________________________________________________________________________________\nGet the Yahoo! toolbar and be alerted to new email wherever you're surfing.\nhttp://new.toolbar.yahoo.com/toolbar/features/mail/index.php\n\n"}