{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Redirecting file handler to STDOUT", "body": "On Jun 22, 5:57 am, funkyt...@gmail.com (Ben Edwards) wrote:\n> I am opening a log file:\n>\n> open( LOGFILE,  \">>cronlog.txt\" );\n>\n> This is being written to in lots of places.\n>\n> I have been asked to change the program so if -m (manual) flag is\n> passed the stuff that goes to the log file is send to standard out\n> instead.  Is it possible to change the above command to redirect\n> LOGFILE to STDOUT (i.e. make the two the same thing.\n>\n> i.e.\n>\n> if ( defined( $opt_m ) ) {\n>   open( LOGFILE, STDOUT );} else {\n>\n>   open( LOGFILE,  \">>cronlog.txt\" );\n>\n> }\n>\n> I even tried:\n>\n> LOGFILE = STDOUT;\n>\n> But I get:\n>\n> Bareword \"STDOUT\" not allowed while \"strict subs\" in use\n>\n> Whjenever I try to use STDOUT;(\n\nBecause this is the equivalent of saying\n\"LOGFILE\" = \"STDOUT\";\nwhich obviously makes no sense, so by using strict such things are\nprevented.\n\nYou can however assign the typeglob *LOGFILE to *STDOUT:\n\nif (defined( $opt_m) ) {\n   *LOGFILE = *STDOUT;\n}\n\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}