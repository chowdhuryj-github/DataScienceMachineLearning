{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22375 - in\n\tbranches/SAMBA_4_0/source/script/tests: .", "body": "Author: metze\nDate: 2007-04-19 14:54:09 +0000 (Thu, 19 Apr 2007)\nNew Revision: 22375\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22375\n\nLog:\nimplement check_env() logic in the frontend\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/script/tests/Samba3.pm\n   branches/SAMBA_4_0/source/script/tests/Samba4.pm\n   branches/SAMBA_4_0/source/script/tests/selftest.pl\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/script/tests/Samba3.pm\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/Samba3.pm\t2007-04-19 14:51:46 UTC (rev 22374)\n+++ branches/SAMBA_4_0/source/script/tests/Samba3.pm\t2007-04-19 14:54:09 UTC (rev 22375)\n@@ -47,6 +47,14 @@\n \treturn \"\";\n }\n \n+sub check_env($$)\n+{\n+\tmy ($self, $envvars) = @_;\n+\n+\t# TODO ...\n+\treturn 1;\n+}\n+\n sub setup_env($$$)\n {\n \tmy ($self, $envname, $path) = @_;\n\nModified: branches/SAMBA_4_0/source/script/tests/Samba4.pm\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/Samba4.pm\t2007-04-19 14:51:46 UTC (rev 22374)\n+++ branches/SAMBA_4_0/source/script/tests/Samba4.pm\t2007-04-19 14:54:09 UTC (rev 22375)\n@@ -675,6 +675,14 @@\n \treturn $out;\n }\n \n+sub check_env($$)\n+{\n+\tmy ($self, $envvars) = @_;\n+\n+\t# TODO ...\n+\treturn 1;\n+}\n+\n sub setup_env($$$)\n {\n \tmy ($self, $envname, $path) = @_;\n\nModified: branches/SAMBA_4_0/source/script/tests/selftest.pl\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-19 14:51:46 UTC (rev 22374)\n+++ branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-19 14:54:09 UTC (rev 22375)\n@@ -679,11 +679,17 @@\n \tmy $testenv_vars;\n \tif (defined($running_envs{$envname})) {\n \t\t$testenv_vars = $running_envs{$envname};\n+\t\tif (not $target->check_env($testenv_vars)) {\n+\t\t\t$testenv_vars = undef;\n+\t\t}\n \t} elsif ($envname eq \"none\") {\n \t\t$testenv_vars = {};\n \t} else {\n \t\t$testenv_vars = $target->setup_env($envname, $prefix);\n \t}\n+\n+\treturn undef unless defined($testenv_vars);\n+\n \twrite_clientconf($conffile, $testenv_vars);\n \tforeach (\"PASSWORD\", \"DOMAIN\", \"SERVER\", \"USERNAME\", \"NETBIOSNAME\", \n \t\t\t \"KRB5_CONFIG\", \"REALM\") {\n@@ -707,6 +713,13 @@\n \treturn $target->getlog_env($running_envs{$envname});\n }\n \n+sub check_env($)\n+{\n+\tmy ($envname) = @_;\n+\treturn 1 if ($envname eq \"none\");\n+\treturn $target->check_env($running_envs{$envname});\n+}\n+\n sub teardown_env($)\n {\n \tmy ($envname) = @_;\n@@ -750,7 +763,14 @@\n \t\t\tnext;\n \t\t}\n \n-\t\tsetup_env($envname);\n+\t\tmy $envvars = setup_env($envname);\n+\t\tif (not defined($envvars)) {\n+\t\t\tpush(@$suitesfailed, $name);\n+\t\t\t$statistics->{SUITES_FAIL}++;\n+\t\t\t$statistics->{TESTS_ERROR}++;\n+\t\t\tprint \"FAIL: $name (ENV[$envname] not available!)\\n\";\n+\t\t\tnext;\n+\t\t}\n \n \t\trun_test($envname, $name, $cmd, $i, $suitestotal, $msg_ops);\n \n\n"}