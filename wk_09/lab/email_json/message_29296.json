{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Thomas Wittek <mail@gedankenkonstrukt.de>", "subject": "Re: Is Perl 6 too late?", "body": "chromatic wrote:\n>> Global variables with cryptic names, that no beginner can make any sense\n>> of by reading it. And after not working with \"$<\" for some months I\n>> can't remember it either, although I've got quite some Perl experience.\n> \n> Most of those have gone away.\n\nOh, some someone must agree that word characters might be the better choice.\nAs I wrote Moritz, I could only find the replacements for __PACKAGE__ \nand alike. Additionally it would be very nice to group them in packages.\n\n>> Additionally I'm not a friend of sigils:\n> \n> I'm not a friend of potential conflicts between built-in operators and my \n> identifier names (and especially the conflicts between scalar, aggregate, \n> type, and function names).\n\nAs I partially wrote Moritz, I\na) don't think that it's the case very often. you have to write the \nsigil a thousand times where it wouldn't be useful for only 1 case where \nyou'd have a name conflict.\nb) even if there would be a conflict, it might be considered bad style \nto use identical identifiers (besides the sigil) for different things \n(vars/objects/subs/operators/...).\n\n>> I would also like semicolons to be optional.\n> \n> When (smart) people talk about Python's whitespace problem, they don't mean \n> *horizontal* whitespace.\n\nI'm not much into Python. But as at least Ruby, Python, JavaScript, \nGroovy and Lua (which all are relatively young languages) don't force \nyou to write semicolons.\nSo semicolons don't seem to be the best invention since sliced bread. \nThere should be extra-syntax for the rare cases (multiline) and not for \nthe common ones.\n\n>> Some say that there are too much operators in Perl(6). I partially\n>> agree.\n> \n> That's like saying there are too many function calls in Scheme.  Perl's an \n> operator-oriented language!\n\nAnd it should be. I really like the expressive power of most of the \noperators. Especially the new zip/junction/reduce/smart-match ones.\nBut I don't like doing implicit type casting with operators.\nIt's even discouraged in Perl5 as we have a warning for that.\nSo maybe it'd be a good idea to completely drop it.\n\n>> People not only want code that _is_ sexy, but they also want it to\n>> _look_ sexy.\n\nAt least almost everyone to whom I said, that I do most work in Perl, \nresponded with some sentence containing the word \"ugly\" or \"unreadable\".\nTo get away from that image, it's neccessary to do some radical changes \nI think.\n\n-- \nThomas Wittek\nhttp://gedankenkonstrukt.de/\nJabber: streawkceur@jabber.i-pobox.net\n\n"}