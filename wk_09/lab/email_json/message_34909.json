{"category": "ham", "to_address": "<r-help@stat.math.ethz.ch>", "from_address": "\"Waichler, Scott R\" <Scott.Waichler@pnl.gov>", "subject": "Re: [R] Reducing the size of pdf graphics files produced with R", "body": "> as you are using MacOS X, you'll have ghostscript installed anyway. so\n> try in R `dev2bitmap' with `type =pdfwrite'. I believe `gs' _does_\n> include compression. a quick test showed at least a reduction by about\n> a factor of 2 relative to `pdf()'. probably one can fiddle with the\n> ghostscript settings (cf. e.g. `Ps2pdf.htm' in the ghostscipt \n> docs: you\n> can adjust the resolution for images in the pdf file) to\n> improve this, so as a last resort you could indeed export the graphics\n> as postscript and do the conversion to `pdf' by adjusting the `ps2pdf'\n> switches. but even with the default settings the pdf produced via\n> dev2bitmap/ghostscript is the better solution. apart from file size I\n> by and then ran into problems when converting `pdf()' output to\n> postscript later on, for instance.\n\nCan you give an example of dev2bitmap usage?  I tried using it in place\nof a pdf() statement.  An X11 window opened and my figure flew by, but I\ndidn't get the file output.  I also used dev2bitmap after opening a\npdf() and just before the dev.off() statement, since the help says it\nworks on the \"current device\", but again no written output.  What am I\ndoing wrong?\n\nI tried:\n  dev2bitmap(file = plotfile2, type=\"pdfwrite\", width=8.5, height=11,\npointsize=12)\n  print(myplot())\n  dev.off()\n\nand\n\n  pdf(file = plotfile, paper=\"letter\", width=8.5, height=11,\npointsize=12)\n  print(myplot())\n  dev2bitmap(file = plotfile2, type=\"pdfwrite\", width=8.5, height=11,\npointsize=12)\n  dev.off()\n\nThanks,\nScott Waichler\nscott.waichler _at_ pnl.gov\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}