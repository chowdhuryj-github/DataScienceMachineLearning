{"category": "ham", "to_address": "\"Philipp Benner\" <pbenner@uos.de>", "from_address": "\"Deepayan Sarkar\" <deepayan.sarkar@gmail.com>", "subject": "Re: [R] model.frame: how does one use it?", "body": "On 6/15/07, Philipp Benner  wrote:\n>\n> Thanks for your explanation!\n>\n> > With this in mind, either of the following might do what you want:\n> >\n> > badFunction <- function(mydata, myformula) {\n> >    mydata$myweight <- abs(rnorm(nrow(mydata)))\n> >    hyp <-\n> >        rpart(myformula,\n> >              data=mydata,\n> >              weights=myweight,\n> >              method=\"class\")\n> >    prev <- hyp\n> > }\n> >\n> >\n> > badFunction <- function(mydata, myformula) {\n> >    myweight <- abs(rnorm(nrow(mydata)))\n> >    environment(myformula) <- environment()\n> >    hyp <-\n> >        rpart(myformula,\n> >              data=mydata,\n> >              weights=myweight,\n> >              method=\"class\")\n> >    prev <- hyp\n> > }\n>\n> OK, this is what I have now:\n>\n> adaboostBad <- function(formula, data) {\n>   ## local definition of the weight vector (won't work because pima.formula is not defined within this function)\n>   w <- abs(rnorm(nrow(data)))\n>   rpart(formula, data=data, weights=w)\n> }\n>\n> adaboostGood <- function(formula, data) {\n>   ## create weight vector in the data object\n>   data$w <- abs(rnorm(nrow(data)))\n>   rpart(formula, data=data, weights=w)\n> }\n>\n> adaboostBest <- function(formula, data) {\n>   ## associate the current environment (this function's one) with the object `formula'\n>   environment(formula) <- environment()\n>   w <- abs(rnorm(nrow(data)))\n>   rpart(formula, data=data, weights=w)\n> }\n>\n\n\n> As far as I understand this non-standard evaluation stuff,\n> adaboostGood() and adaboostBest() are the only two possibilities to\n> call rpart() with weight vectors. Now suppose that I don't know what\n> `data' contains and suppose further that it already contains a\n> column called `w'.  adaboostGood() would overwrite that column with\n> new data which is then used as weight vector and as training data\n> for rpart(). adaboostBest() would just use the wrong data as weight\n> vector as it finds data$w before the real weight vector. So, in both\n> cases I have to check for `names(data) == \"w\"` and stop if TRUE? Or\n> is there a better way?\n\nWell, that depends on what you want to happen when there is a column\ncalled 'w' in data.  I don't see a situation where it makes sense to\nuse data$w as weights ('w' is just a name you happen to choose inside\nadaboostBest), so I would just go with adaboostGood.\n\nIn case you are worried about overwriting the original data, that may\nnot be happening in the sense you are thinking.  When you say\n\ndata$w <- abs(rnorm(nrow(data)))\n\ninside adaboostGood, that modifies a local copy of the data argument,\nnot the original (R argument semantics are call by value, not call by\nreference).  You are losing data$w in the local copy in your function,\nbut why would you care if you are not using it anyway.\n\nOf course, if your formula contains a reference to 'w' then you will\nget wrong results, so checking for a unique name is always safer.\nIn addition, use an obfuscated name like '.__myWeights' instead\nof 'w', and the check will be almost always irrelevant.\n\n-Deepayan\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}