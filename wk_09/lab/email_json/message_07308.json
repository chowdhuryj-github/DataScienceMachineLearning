{"category": "ham", "to_address": "Perl 6 Internals <perl6-internals@perl.org>", "from_address": "James Keenan <jkeen@verizon.net>", "subject": "Parrot::Configure::_runstep():  What is the purpose of this 'verbose'\n setting?", "body": "In lib/Parrot/Configure.pm there is the following code (trunk:   \nstarting at line 254):\n\n     # XXX cc_build uses this verbose setting, why?\n     $self->data->set( verbose => $verbose ) if $n > 2;\n\n$n is the index in the array of configuration steps of the step  \ncurrently being processed.  $verbose is a value passed to _runsteps()  \nfrom the surrounding method runsteps(), which in turn is the value  \nfor the 'verbose' option passed to Configure.pl:\n\n   sub runsteps {\t# trunk:  line 184\n     my $self = shift;\n\n     my ( $verbose, $verbose_step, $ask ) = $self->options->get(qw \n(verbose verbose-step ask));\n\n     my $n = 0;    # step number\n     foreach my $task ( $self->steps ) {\n         $n++;\n         $self->_runstep( $task, $verbose, $verbose_step, $ask, $n );\n\nSo that means that if we're on the 4th configuration step  \n(init::miniparrot) or later, make the current step's verbose setting  \nhave the value passed into the 'verbose' option to Configure.pl.\n\nMy questions:\n\n1.  Is my interpretation correct?\n2.  If so, why should this only apply beginning with the 4th  \nconfiguration step?  Why not right from the 1st step?\n3.  And what does the XXX comment mean?   cc_build(), which is a  \nmethod from lib/Parrot/Configure/Step.pm, is not the only step  \nutility method that has a verbose setting.  Why should it be singled  \nout here?\n\nThank you very much.\nkid51\n\n"}