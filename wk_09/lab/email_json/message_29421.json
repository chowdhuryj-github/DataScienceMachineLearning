{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22849 - in branches/SAMBA_4_0/source/ntvfs: .", "body": "Author: metze\nDate: 2007-05-14 13:47:03 +0000 (Mon, 14 May 2007)\nNew Revision: 22849\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22849\n\nLog:\nmap smb2 lock to the generic level\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/ntvfs/ntvfs_generic.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/ntvfs/ntvfs_generic.c\n===================================================================\n--- branches/SAMBA_4_0/source/ntvfs/ntvfs_generic.c\t2007-05-14 13:36:14 UTC (rev 22848)\n+++ branches/SAMBA_4_0/source/ntvfs/ntvfs_generic.c\t2007-05-14 13:47:03 UTC (rev 22849)\n@@ -33,6 +33,8 @@\n \n #include \"includes.h\"\n #include \"ntvfs/ntvfs.h\"\n+#include \"libcli/smb2/smb2.h\"\n+#include \"libcli/smb2/smb2_calls.h\"\n \n /* a second stage function converts from the out parameters of the generic\n    call onto the out parameters of the specific call made */\n@@ -960,28 +962,61 @@\n \t\treturn NT_STATUS_INVALID_LEVEL;\n \n \tcase RAW_LOCK_LOCK:\n+\t\tlck2->generic.level = RAW_LOCK_GENERIC;\n+\t\tlck2->generic.in.file.ntvfs= lck->lock.in.file.ntvfs;\n+\t\tlck2->generic.in.mode = 0;\n+\t\tlck2->generic.in.timeout = 0;\n \t\tlck2->generic.in.ulock_cnt = 0;\n \t\tlck2->generic.in.lock_cnt = 1;\n+\t\tlck2->generic.in.locks = locks;\n+\t\tlocks->pid = req->smbpid;\n+\t\tlocks->offset = lck->lock.in.offset;\n+\t\tlocks->count = lck->lock.in.count;\n \t\tbreak;\n \n \tcase RAW_LOCK_UNLOCK:\n+\t\tlck2->generic.level = RAW_LOCK_GENERIC;\n+\t\tlck2->generic.in.file.ntvfs= lck->unlock.in.file.ntvfs;\n+\t\tlck2->generic.in.mode = 0;\n+\t\tlck2->generic.in.timeout = 0;\n \t\tlck2->generic.in.ulock_cnt = 1;\n \t\tlck2->generic.in.lock_cnt = 0;\n+\t\tlck2->generic.in.locks = locks;\n+\t\tlocks->pid = req->smbpid;\n+\t\tlocks->offset = lck->unlock.in.offset;\n+\t\tlocks->count = lck->unlock.in.count;\n \t\tbreak;\n \n \tcase RAW_LOCK_SMB2:\n-\t\treturn NT_STATUS_INVALID_LEVEL;\n+\t\tif (lck->smb2.in.unknown1 != 1) {\n+\t\t\treturn NT_STATUS_INVALID_PARAMETER;\n+\t\t}\n+\n+\t\tlck2->generic.level = RAW_LOCK_GENERIC;\n+\t\tlck2->generic.in.file.ntvfs= lck->smb2.in.file.ntvfs;\n+\t\tif (lck->smb2.in.flags & SMB2_LOCK_FLAG_EXCLUSIV) {\n+\t\t\tlck2->generic.in.mode = 0;\n+\t\t} else {\n+\t\t\tlck2->generic.in.mode = LOCKING_ANDX_SHARED_LOCK;\n+\t\t}\n+\t\tlck2->generic.in.timeout = 0;\n+\t\tif (lck->smb2.in.flags & SMB2_LOCK_FLAG_UNLOCK) {\n+\t\t\tlck2->generic.in.ulock_cnt = 1;\n+\t\t\tlck2->generic.in.lock_cnt = 0;\n+\t\t} else {\n+\t\t\tlck2->generic.in.ulock_cnt = 0;\n+\t\t\tlck2->generic.in.lock_cnt = 1;\n+\t\t}\n+\t\tlck2->generic.in.locks = locks;\n+\t\tlocks->pid = 0;\n+\t\tlocks->offset = lck->smb2.in.offset;\n+\t\tlocks->count = lck->smb2.in.count;\n+\n+\t\t/* initialize output value */\n+\t\tlck->smb2.out.unknown1 = 0;\n+\t\tbreak;\n \t}\n \n-\tlck2->generic.level = RAW_LOCK_GENERIC;\n-\tlck2->generic.in.file.ntvfs= lck->lock.in.file.ntvfs;\n-\tlck2->generic.in.mode = 0;\n-\tlck2->generic.in.timeout = 0;\n-\tlck2->generic.in.locks = locks;\n-\tlocks->pid = req->smbpid;\n-\tlocks->offset = lck->lock.in.offset;\n-\tlocks->count = lck->lock.in.count;\n-\n \t/* \n \t * we don't need to call ntvfs_map_async_setup() here,\n \t * as lock() doesn't have any output fields\n\n"}