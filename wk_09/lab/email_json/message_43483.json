{"category": "ham", "to_address": "James Peach <jpeach@samba.org>", "from_address": "\"Stefan (metze) Metzmacher\" <metze@samba.org>", "subject": "Re: getting rid of mkproto.sh from Samba3", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nJames Peach schrieb:\n> On 05/06/2007, at 5:10 PM, tridge@samba.org wrote:\n> \n>> James,\n>>\n>>> If I have a decent header file, I can see the full interface in a\n>>> single screen, along with comments, macros and typedefs. I don't think\n>>> the argument about the extra typing involved in changing headers by\n>>> hand is very strong, since the code needs to be read and understood\n>>> thousands more times than it needs to be written.\n>>\n>> It is not the extra typing, it's the mistakes. Before we had auto\n>> prototypes in Samba the following mistakes were common:\n>>\n>>  *) leaving a prototype in a header for a function that has been\n>>   removed. I don't know of any tool that will find/remove those.\n>>\n>>  *) getting details in the prototype wrong, especially the varargs\n>>   functions with printf arguments.\n>>\n>>  *) when the arguments to a function change, and the prototype isn't\n>>   updated. This is especially insidious when the new and old arguments\n>>   are type compatible, but change their meaning, so the old prototype\n>>   is completely misleading (ie. is still takes an int as the 3rd\n>>   argument, but now its a set of flags, not a counter)\n>>\n>>  *) once you start breaking up your includes out of a single\n>>   includes.h, then you risk getting the prototype completely wrong if\n>>   the source file of the function doesn't include the prototype\n>>   header. The compiler won't complain.\n>>\n>>  *) programmers add nice comments to the prototype header, which is in\n>>   a completely different file to the code. Those comments will degrade\n>>   over time as the code changes and the comment is not upgraded, so\n>>   those nice docs that you do this month will become completely wrong\n>>   by next year, and the person updating the function will not notice,\n>>   as the prototype is not on the same screen as the code they are\n>>   changing.\n> \n> OK, these are pretty convincing. I'll take a look at integrating the\n> Samba4 mkproto, that seems uncontroversial and likely to improve things.\n\nI think the model we have in samba4 is really nice:\nwe have per subsystem private and public headers generated\n\nBut I think we can do better if we commit the public one's to svn\nand don't generate them by the normal 'make'.\n\nTo keep information only in one place we should improve mkproto.pl\nto also copy doxxygen comments into the proto header.\nThen we should add a the need of on exlicit 'make\nregenerate_public_headers', which will print out warnings about\nchanged headers.\n\nI think this will solve most of the problems. It's impossible\nto change public functions without human interaction and\nprivate functions are as simple as they're now.\nAlso we will have uptodate comments in the headers without\nrisking cut-n-paste or laziness bugs of manually keep\nsource files and headers in sync.\n\nI had also planed to a some diagnostic checks into the samba4 build\nsystem, to automaticly check that the subsystem public header (\nnot only the public proto header) is self containing with the specified\npublic dependencies.\nAnd it'll also check a subsystem links fine only using it's public and\nprivate dependencies.\n\nmetze\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.5 (GNU/Linux)\nComment: Using GnuPG with SUSE - http://enigmail.mozdev.org\n\niD8DBQFGZo4Jm70gjA5TCD8RAuiyAJ940umru00MiZXKD81FuMj3eWPE+wCg0koI\nX2Qb1X8f1SSrxiEYy6E6lT0=\n=tSQt\n-----END PGP SIGNATURE-----\n\n"}