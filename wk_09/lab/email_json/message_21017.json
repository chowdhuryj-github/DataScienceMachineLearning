{"category": "ham", "to_address": "parrot-porters@perl.org", "from_address": "chromatic <chromatic@wgz.org>", "subject": "FOTW: src/pmc/orderedhash.pmc", "body": "The OrderedHash PMC provides keyed and indexed access to its elements.  It's a \nhash that remembers the order of its key/value pair additions and it's an \narray that allows keyed access to (some of) its members.\n\nWhile the naive approach might be to use both a hash and an array underneath, \nthis PMC uses a hash and mangles its keys to encode insertion order.  I'm not \nsure this is necessarily a good idea.  I haven't studied the code in \nsufficient detail to convince myself that the escaping system used (see the \nParrot_sprintf() call in set_pmc_keyed_int(), for example) is free of bugs; \nthere could be collisions.\n\nThe iteration code is complex, but that's due more to the design of our hashes \n(src/hash.c), which expose way too much information.  See the use of \nkey_next() in get_pmc_keyed(), for example.\n\nThe code has some cleverness; the way it handles negative indices is clean and \nclear (once you know what it does).  Again, see get_pmc_keyed_int():\n\n        n = h->entries;\n\n\tif (idx < 0)\n            idx += n;\n\nThere's similar code in set_pmc_keyed_int(), but I don't understand quite what \nthe extra clause does, nor why we need to support it:\n\n\tn = h->entries;\n\n        if (idx < -n)\n            idx = -idx - n - 1;\n        else if (idx < 0)\n            idx += n;\n\nAll of the vtable methods that access keys share their internal logic; there's \na lot of very-near dupication here.  I've almost convinced myself that a \nshort macro would remove this duplication and help avoid bugs in maintenance.\n\nThe same type of duplication is evident in the exists() and defined() methods.\n\nI decided to look into this code while tracking down its behavior for clone().  \nMy questions are:\n\n\t- should this method copy null values?\n\t- are the semantics of delete() sane at all?\n\t- why does this code access the contained hash directly instead of through an \ninterface?\n\t- how are the tests?\n\nI welcome any and all comments on this file.  I've already checked in some \nminor cleanups, though they mostly affected formatting.\n\n-- c\n\n"}