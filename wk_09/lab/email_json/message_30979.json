{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r22942 - in branches: SAMBA_3_0/source/smbd\n\tSAMBA_3_0_26/source/smbd", "body": "Author: vlendec\nDate: 2007-05-16 14:24:06 +0000 (Wed, 16 May 2007)\nNew Revision: 22942\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22942\n\nLog:\nSome message_register -> messaging_register conversions\n\nModified:\n   branches/SAMBA_3_0/source/smbd/conn.c\n   branches/SAMBA_3_0/source/smbd/open.c\n   branches/SAMBA_3_0/source/smbd/server.c\n   branches/SAMBA_3_0_26/source/smbd/conn.c\n   branches/SAMBA_3_0_26/source/smbd/open.c\n   branches/SAMBA_3_0_26/source/smbd/server.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/conn.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/conn.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0/source/smbd/conn.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -319,13 +319,16 @@\n share are unmounted\n the special sharename '*' forces unmount of all shares\n ****************************************************************************/\n-void msg_force_tdis(int msg_type, struct server_id pid, void *buf, size_t len,\n-\t\t    void *private_data)\n+void msg_force_tdis(struct messaging_context *msg,\n+\t\t    void *private_data,\n+\t\t    uint32_t msg_type,\n+\t\t    struct server_id server_id,\n+\t\t    DATA_BLOB *data)\n {\n \tconnection_struct *conn, *next;\n \tfstring sharename;\n \n-\tfstrcpy(sharename, (const char *)buf);\n+\tfstrcpy(sharename, (const char *)data->data);\n \n \tif (strcmp(sharename, \"*\") == 0) {\n \t\tDEBUG(1,(\"Forcing close of all shares\\n\"));\n\nModified: branches/SAMBA_3_0/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/open.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0/source/smbd/open.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -2249,19 +2249,24 @@\n  smbd process.\n ****************************************************************************/\n \n-void msg_file_was_renamed(int msg_type, struct server_id src,\n-\t\t\t  void *buf, size_t len, void *private_data)\n+void msg_file_was_renamed(struct messaging_context *msg,\n+\t\t\t  void *private_data,\n+\t\t\t  uint32_t msg_type,\n+\t\t\t  struct server_id server_id,\n+\t\t\t  DATA_BLOB *data)\n {\n \tfiles_struct *fsp;\n-\tchar *frm = (char *)buf;\n+\tchar *frm = (char *)data->data;\n \tSMB_DEV_T dev;\n \tSMB_INO_T inode;\n \tconst char *sharepath;\n \tconst char *newname;\n \tsize_t sp_len;\n \n-\tif (buf == NULL || len < MSG_FILE_RENAMED_MIN_SIZE + 2) {\n-                DEBUG(0, (\"msg_file_was_renamed: Got invalid msg len %d\\n\", (int)len));\n+\tif (data->data == NULL\n+\t    || data->length < MSG_FILE_RENAMED_MIN_SIZE + 2) {\n+                DEBUG(0, (\"msg_file_was_renamed: Got invalid msg len %d\\n\",\n+\t\t\t  data->length));\n                 return;\n         }\n \n\nModified: branches/SAMBA_3_0/source/smbd/server.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/server.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0/source/smbd/server.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -87,10 +87,14 @@\n  What to do when smb.conf is updated.\n  ********************************************************************/\n \n-static void smb_conf_updated(int msg_type, struct server_id src,\n-\t\t\t     void *buf, size_t len, void *private_data)\n+static void smb_conf_updated(struct messaging_context *msg,\n+\t\t\t     void *private_data,\n+\t\t\t     uint32_t msg_type,\n+\t\t\t     struct server_id server_id,\n+\t\t\t     DATA_BLOB *data)\n {\n-\tDEBUG(10,(\"smb_conf_updated: Got message saying smb.conf was updated. Reloading.\\n\"));\n+\tDEBUG(10,(\"smb_conf_updated: Got message saying smb.conf was \"\n+\t\t  \"updated. Reloading.\\n\"));\n \treload_services(False);\n }\n \n@@ -99,10 +103,13 @@\n  Delete a statcache entry.\n  ********************************************************************/\n \n-static void smb_stat_cache_delete(int msg_type, struct server_id src,\n-\t\t\t\t  void *buf, size_t len, void *private_data)\n+static void smb_stat_cache_delete(struct messaging_context *msg,\n+\t\t\t\t  void *private_data,\n+\t\t\t\t  uint32_t msg_tnype,\n+\t\t\t\t  struct server_id server_id,\n+\t\t\t\t  DATA_BLOB *data)\n {\n-\tconst char *name = (const char *)buf;\n+\tconst char *name = (const char *)data->data;\n \tDEBUG(10,(\"smb_stat_cache_delete: delete name %s\\n\", name));\n \tstat_cache_delete(name);\n }\n@@ -150,9 +157,11 @@\n  somewhere else.\n ****************************************************************************/\n \n-static void msg_sam_sync(int UNUSED(msg_type), struct server_id UNUSED(pid),\n-\t\t\t void *UNUSED(buf), size_t UNUSED(len),\n-\t\t\t void *private_data)\n+static void msg_sam_sync(struct messaging_context *msg,\n+\t\t\t void *private_data,\n+\t\t\t uint32_t msg_type,\n+\t\t\t struct server_id server_id,\n+\t\t\t DATA_BLOB *data)\n {\n         DEBUG(10, (\"** sam sync message received, ignoring\\n\"));\n }\n@@ -162,15 +171,18 @@\n  somewhere else.\n ****************************************************************************/\n \n-static void msg_sam_repl(int msg_type, struct server_id pid,\n-\t\t\t void *buf, size_t len, void *private_data)\n+static void msg_sam_repl(struct messaging_context *msg,\n+\t\t\t void *private_data,\n+\t\t\t uint32_t msg_type,\n+\t\t\t struct server_id server_id,\n+\t\t\t DATA_BLOB *data)\n {\n         uint32 low_serial;\n \n-        if (len != sizeof(uint32))\n+        if (data->length != sizeof(low_serial))\n                 return;\n \n-        low_serial = *((uint32 *)buf);\n+        low_serial = *((uint32 *)data->data);\n \n         DEBUG(3, (\"received sam replication message, serial = 0x%04x\\n\",\n                   low_serial));\n@@ -196,38 +208,44 @@\n \treturn True;\n }\n \n-static void msg_exit_server(int msg_type, struct server_id src,\n-\t\t\t    void *buf, size_t len, void *private_data)\n+static void msg_exit_server(struct messaging_context *msg,\n+\t\t\t    void *private_data,\n+\t\t\t    uint32_t msg_type,\n+\t\t\t    struct server_id server_id,\n+\t\t\t    DATA_BLOB *data)\n {\n \tDEBUG(3, (\"got a SHUTDOWN message\\n\"));\n \texit_server_cleanly(NULL);\n }\n \n #ifdef DEVELOPER\n-static void msg_inject_fault(int msg_type, struct server_id src,\n-\t\t\t    void *buf, size_t len, void *private_data)\n+static void msg_inject_fault(struct messaging_context *msg,\n+\t\t\t     void *private_data,\n+\t\t\t     uint32_t msg_type,\n+\t\t\t     struct server_id src,\n+\t\t\t     DATA_BLOB *data)\n {\n \tint sig;\n \n-\tif (len != sizeof(int)) {\n+\tif (data->length != sizeof(sig)) {\n \t\t\n-\t\tDEBUG(0, (\"Process %llu sent bogus signal injection request\\n\",\n-\t\t\t(unsigned long long)src.pid));\n+\t\tDEBUG(0, (\"Process %s sent bogus signal injection request\\n\",\n+\t\t\t  procid_str_static(&src)));\n \t\treturn;\n \t}\n \n-\tsig = *(int *)buf;\n+\tsig = *(int *)data->data;\n \tif (sig == -1) {\n \t\texit_server(\"internal error injected\");\n \t\treturn;\n \t}\n \n #if HAVE_STRSIGNAL\n-\tDEBUG(0, (\"Process %llu requested injection of signal %d (%s)\\n\",\n-\t\t    (unsigned long long)src.pid, sig, strsignal(sig)));\n+\tDEBUG(0, (\"Process %s requested injection of signal %d (%s)\\n\",\n+\t\t  procid_str_static(&src), sig, strsignal(sig)));\n #else\n-\tDEBUG(0, (\"Process %llu requested injection of signal %d\\n\",\n-\t\t    (unsigned long long)src.pid, sig));\n+\tDEBUG(0, (\"Process %s requested injection of signal %d\\n\",\n+\t\t  procid_str_static(&src), sig));\n #endif\n \n \tkill(sys_getpid(), sig);\n@@ -345,16 +363,22 @@\n \n         /* Listen to messages */\n \n-        message_register(MSG_SMB_SAM_SYNC, msg_sam_sync, NULL);\n-        message_register(MSG_SMB_SAM_REPL, msg_sam_repl, NULL);\n-        message_register(MSG_SHUTDOWN, msg_exit_server, NULL);\n-        message_register(MSG_SMB_FILE_RENAME, msg_file_was_renamed, NULL);\n-\tmessage_register(MSG_SMB_CONF_UPDATED, smb_conf_updated, NULL); \n-\tmessage_register(MSG_SMB_STAT_CACHE_DELETE, smb_stat_cache_delete,\n-\t\t\t NULL);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_SAM_SYNC, msg_sam_sync);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_SAM_REPL, msg_sam_repl);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SHUTDOWN, msg_exit_server);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_FILE_RENAME, msg_file_was_renamed);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_CONF_UPDATED, smb_conf_updated); \n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_STAT_CACHE_DELETE, smb_stat_cache_delete);\n \n #ifdef DEVELOPER\n-\tmessage_register(MSG_SMB_INJECT_FAULT, msg_inject_fault, NULL); \n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_INJECT_FAULT, msg_inject_fault);\n #endif\n \n \t/* now accept incoming connections - forking a new process\n@@ -1071,7 +1095,8 @@\n \tinitialize_async_io_handler();\n \n \t/* register our message handlers */\n-\tmessage_register(MSG_SMB_FORCE_TDIS, msg_force_tdis, NULL);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_FORCE_TDIS, msg_force_tdis);\n \n \tif ((lp_keepalive() != 0)\n \t    && !(event_add_idle(smbd_event_context(), NULL,\n\nModified: branches/SAMBA_3_0_26/source/smbd/conn.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/conn.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0_26/source/smbd/conn.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -311,13 +311,16 @@\n share are unmounted\n the special sharename '*' forces unmount of all shares\n ****************************************************************************/\n-void msg_force_tdis(int msg_type, struct server_id pid, void *buf, size_t len,\n-\t\t    void *private_data)\n+void msg_force_tdis(struct messaging_context *msg,\n+\t\t    void *private_data,\n+\t\t    uint32_t msg_type,\n+\t\t    struct server_id server_id,\n+\t\t    DATA_BLOB *data)\n {\n \tconnection_struct *conn, *next;\n \tfstring sharename;\n \n-\tfstrcpy(sharename, (const char *)buf);\n+\tfstrcpy(sharename, (const char *)data->data);\n \n \tif (strcmp(sharename, \"*\") == 0) {\n \t\tDEBUG(1,(\"Forcing close of all shares\\n\"));\n\nModified: branches/SAMBA_3_0_26/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/open.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0_26/source/smbd/open.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -2253,19 +2253,24 @@\n  smbd process.\n ****************************************************************************/\n \n-void msg_file_was_renamed(int msg_type, struct server_id src,\n-\t\t\t  void *buf, size_t len, void *private_data)\n+void msg_file_was_renamed(struct messaging_context *msg,\n+\t\t\t  void *private_data,\n+\t\t\t  uint32_t msg_type,\n+\t\t\t  struct server_id server_id,\n+\t\t\t  DATA_BLOB *data)\n {\n \tfiles_struct *fsp;\n-\tchar *frm = (char *)buf;\n+\tchar *frm = (char *)data->data;\n \tSMB_DEV_T dev;\n \tSMB_INO_T inode;\n \tconst char *sharepath;\n \tconst char *newname;\n \tsize_t sp_len;\n \n-\tif (buf == NULL || len < MSG_FILE_RENAMED_MIN_SIZE + 2) {\n-                DEBUG(0, (\"msg_file_was_renamed: Got invalid msg len %d\\n\", (int)len));\n+\tif (data->data == NULL\n+\t    || data->length < MSG_FILE_RENAMED_MIN_SIZE + 2) {\n+                DEBUG(0, (\"msg_file_was_renamed: Got invalid msg len %d\\n\",\n+\t\t\t  data->length));\n                 return;\n         }\n \n\nModified: branches/SAMBA_3_0_26/source/smbd/server.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/server.c\t2007-05-16 14:02:04 UTC (rev 22941)\n+++ branches/SAMBA_3_0_26/source/smbd/server.c\t2007-05-16 14:24:06 UTC (rev 22942)\n@@ -86,10 +86,14 @@\n  What to do when smb.conf is updated.\n  ********************************************************************/\n \n-static void smb_conf_updated(int msg_type, struct server_id src,\n-\t\t\t     void *buf, size_t len, void *private_data)\n+static void smb_conf_updated(struct messaging_context *msg,\n+\t\t\t     void *private_data,\n+\t\t\t     uint32_t msg_type,\n+\t\t\t     struct server_id server_id,\n+\t\t\t     DATA_BLOB *data)\n {\n-\tDEBUG(10,(\"smb_conf_updated: Got message saying smb.conf was updated. Reloading.\\n\"));\n+\tDEBUG(10,(\"smb_conf_updated: Got message saying smb.conf was \"\n+\t\t  \"updated. Reloading.\\n\"));\n \treload_services(False);\n }\n \n@@ -98,10 +102,13 @@\n  Delete a statcache entry.\n  ********************************************************************/\n \n-static void smb_stat_cache_delete(int msg_type, struct server_id src,\n-\t\t\t\t  void *buf, size_t len, void *private_data)\n+static void smb_stat_cache_delete(struct messaging_context *msg,\n+\t\t\t\t  void *private_data,\n+\t\t\t\t  uint32_t msg_tnype,\n+\t\t\t\t  struct server_id server_id,\n+\t\t\t\t  DATA_BLOB *data)\n {\n-\tconst char *name = (const char *)buf;\n+\tconst char *name = (const char *)data->data;\n \tDEBUG(10,(\"smb_stat_cache_delete: delete name %s\\n\", name));\n \tstat_cache_delete(name);\n }\n@@ -149,9 +156,11 @@\n  somewhere else.\n ****************************************************************************/\n \n-static void msg_sam_sync(int UNUSED(msg_type), struct server_id UNUSED(pid),\n-\t\t\t void *UNUSED(buf), size_t UNUSED(len),\n-\t\t\t void *private_data)\n+static void msg_sam_sync(struct messaging_context *msg,\n+\t\t\t void *private_data,\n+\t\t\t uint32_t msg_type,\n+\t\t\t struct server_id server_id,\n+\t\t\t DATA_BLOB *data)\n {\n         DEBUG(10, (\"** sam sync message received, ignoring\\n\"));\n }\n@@ -161,15 +170,18 @@\n  somewhere else.\n ****************************************************************************/\n \n-static void msg_sam_repl(int msg_type, struct server_id pid,\n-\t\t\t void *buf, size_t len, void *private_data)\n+static void msg_sam_repl(struct messaging_context *msg,\n+\t\t\t void *private_data,\n+\t\t\t uint32_t msg_type,\n+\t\t\t struct server_id server_id,\n+\t\t\t DATA_BLOB *data)\n {\n         uint32 low_serial;\n \n-        if (len != sizeof(uint32))\n+        if (data->length != sizeof(low_serial))\n                 return;\n \n-        low_serial = *((uint32 *)buf);\n+        low_serial = *((uint32 *)data->data);\n \n         DEBUG(3, (\"received sam replication message, serial = 0x%04x\\n\",\n                   low_serial));\n@@ -195,38 +207,44 @@\n \treturn True;\n }\n \n-static void msg_exit_server(int msg_type, struct server_id src,\n-\t\t\t    void *buf, size_t len, void *private_data)\n+static void msg_exit_server(struct messaging_context *msg,\n+\t\t\t    void *private_data,\n+\t\t\t    uint32_t msg_type,\n+\t\t\t    struct server_id server_id,\n+\t\t\t    DATA_BLOB *data)\n {\n \tDEBUG(3, (\"got a SHUTDOWN message\\n\"));\n \texit_server_cleanly(NULL);\n }\n \n #ifdef DEVELOPER\n-static void msg_inject_fault(int msg_type, struct server_id src,\n-\t\t\t    void *buf, size_t len, void *private_data)\n+static void msg_inject_fault(struct messaging_context *msg,\n+\t\t\t     void *private_data,\n+\t\t\t     uint32_t msg_type,\n+\t\t\t     struct server_id src,\n+\t\t\t     DATA_BLOB *data)\n {\n \tint sig;\n \n-\tif (len != sizeof(int)) {\n+\tif (data->length != sizeof(sig)) {\n \t\t\n-\t\tDEBUG(0, (\"Process %llu sent bogus signal injection request\\n\",\n-\t\t\t(unsigned long long)src.pid));\n+\t\tDEBUG(0, (\"Process %s sent bogus signal injection request\\n\",\n+\t\t\t  procid_str_static(&src)));\n \t\treturn;\n \t}\n \n-\tsig = *(int *)buf;\n+\tsig = *(int *)data->data;\n \tif (sig == -1) {\n \t\texit_server(\"internal error injected\");\n \t\treturn;\n \t}\n \n #if HAVE_STRSIGNAL\n-\tDEBUG(0, (\"Process %llu requested injection of signal %d (%s)\\n\",\n-\t\t    (unsigned long long)src.pid, sig, strsignal(sig)));\n+\tDEBUG(0, (\"Process %s requested injection of signal %d (%s)\\n\",\n+\t\t  procid_str_static(&src), sig, strsignal(sig)));\n #else\n-\tDEBUG(0, (\"Process %llu requested injection of signal %d\\n\",\n-\t\t    (unsigned long long)src.pid, sig));\n+\tDEBUG(0, (\"Process %s requested injection of signal %d\\n\",\n+\t\t  procid_str_static(&src), sig));\n #endif\n \n \tkill(sys_getpid(), sig);\n@@ -441,16 +459,22 @@\n \n         /* Listen to messages */\n \n-        message_register(MSG_SMB_SAM_SYNC, msg_sam_sync, NULL);\n-        message_register(MSG_SMB_SAM_REPL, msg_sam_repl, NULL);\n-        message_register(MSG_SHUTDOWN, msg_exit_server, NULL);\n-        message_register(MSG_SMB_FILE_RENAME, msg_file_was_renamed, NULL);\n-\tmessage_register(MSG_SMB_CONF_UPDATED, smb_conf_updated, NULL); \n-\tmessage_register(MSG_SMB_STAT_CACHE_DELETE, smb_stat_cache_delete,\n-\t\t\t NULL);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_SAM_SYNC, msg_sam_sync);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_SAM_REPL, msg_sam_repl);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SHUTDOWN, msg_exit_server);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_FILE_RENAME, msg_file_was_renamed);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_CONF_UPDATED, smb_conf_updated); \n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_STAT_CACHE_DELETE, smb_stat_cache_delete);\n \n #ifdef DEVELOPER\n-\tmessage_register(MSG_SMB_INJECT_FAULT, msg_inject_fault, NULL); \n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_INJECT_FAULT, msg_inject_fault);\n #endif\n \n \t/* now accept incoming connections - forking a new process\n@@ -1116,7 +1140,8 @@\n \tinitialize_async_io_handler();\n \n \t/* register our message handlers */\n-\tmessage_register(MSG_SMB_FORCE_TDIS, msg_force_tdis, NULL);\n+\tmessaging_register(smbd_messaging_context(), NULL,\n+\t\t\t   MSG_SMB_FORCE_TDIS, msg_force_tdis);\n \n \tsmbd_process();\n \n\n"}