{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Michael Adam <ma@sernet.de>", "subject": "Rev 5361: Make \"include = registry\" effective (only in global\n\tsection): in http://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/", "body": "At http://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/\n\n------------------------------------------------------------\nrevno: 5361\nrevision-id: ma@sernet.de-20070415223033-c85f4b580cdebeac\nparent: ma@sernet.de-20070415222354-a6c6c91479c2cd30\ncommitter: Michael Adam \nbranch nick: SAMBA_3_0-registry.bzr\ntimestamp: Mon 2007-04-16 00:30:33 +0200\nmessage:\n  Make \"include = registry\" effective (only in global section):\n  Parameters are processed by do_parameter.\n  \n  Currently (as with smbd/service.c:load_registry_service(),\n  parameters read from registry are either type sz or type dword\n  and are converted to string (in case of reg type dword).\n  This conversion, which is also present in utils/net_conf.c\n  should really go into one helper function...\nmodified:\n  source/param/loadparm.c        loadparm.c-20060530022627-1efa1edb3eb0e897\n=== modified file 'source/param/loadparm.c'\n--- a/source/param/loadparm.c\t2007-04-13 16:00:33 +0000\n+++ b/source/param/loadparm.c\t2007-04-15 22:30:33 +0000\n@@ -3182,8 +3182,9 @@\n \tchar *regpath = NULL;\n \tWERROR werr = WERR_OK;\n \tstruct registry_key *key = NULL;\n-\tstruct registry_value *valvalue = NULL;\n+\tstruct registry_value *value = NULL;\n \tchar *valname = NULL;\n+\tchar *valstr = NULL;\n \tuint32 idx = 0;\n \tNT_USER_TOKEN *token;\n \n@@ -3216,10 +3217,25 @@\n \n \tfor (idx = 0;\n \t     W_ERROR_IS_OK(werr = reg_enumvalue(ctx, key, idx, &valname,\n-\t\t\t     \t\t\t&valvalue));\n+\t\t\t     \t\t\t&value));\n \t     idx++)\n \t{\n-\t\tDEBUG(1, (\"got global registry parameter '%s'\\n\", valname));\n+\t\tDEBUG(5, (\"got global registry parameter '%s'\\n\", valname));\n+\t\tswitch(value->type) {\n+\t\tcase REG_DWORD:\n+\t\t\tvalstr = talloc_asprintf(ctx, \"%d\", value->v.dword);\n+\t\t\tpfunc(valname, valstr);\n+\t\t\tTALLOC_FREE(valstr);\n+\t\t\tbreak;\n+\t\tcase REG_SZ:\n+\t\t\tpfunc(valname, value->v.sz.str);\n+\t\t\tbreak;\n+\t\tdefault:\n+\t\t\t/* ignore */\n+\t\t\tbreak;\n+\t\t}\n+\t\tTALLOC_FREE(value);\n+\t\tTALLOC_FREE(valstr);\n \t}\n \n \tret = pfunc(\"registry shares\", \"yes\");\n@@ -3239,7 +3255,14 @@\n \tpstrcpy(fname, pszParmValue);\n \n \tif (strequal(fname, INCLUDE_REGISTRY_NAME)) {\n-\t\treturn process_registry_globals(do_parameter);\n+\t\tif (bInGlobalSection) {\n+\t\t\treturn process_registry_globals(do_parameter);\n+\t\t}\n+\t\telse {\n+\t\t\tDEBUG(1, (\"\\\"include = registry\\\" only effective \"\n+\t\t\t\t  \"in %s section\\n\", GLOBAL_NAME));\n+\t\t\treturn False;\n+\t\t}\n \t}\n \n \tstandard_sub_basic(get_current_username(), current_user_info.domain,\n\n"}