{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Matt Diephouse (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #42865] [BUG] There's no way to set a vtable function with a Sub at runtime ", "body": "# New Ticket Created by  Matt Diephouse \n# Please include the string:  [perl #42865]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nThere's no real way to set a vtable function at runtime. It's  \npossible to use the PIR compiler to eval a new function, but there's  \nno way to take an existing sub and add it as a vtable function[1].\n\nBefore :vtable, this operation simply meant adding the sub to the new  \nnamespace under the right name. But since that's going away, we need  \na new way to do things.\n\nI suspect we need some sort of set_vtable opcode.\n\n     set_vtable ['Foo'; 'Bar'], 'get_string', $P0\n\nMaybe there should be set_root_vtable and set_hll_vtable variants to  \ngo along with to match the set_*global opcodes.\n\nI'm not sure how this should interact with PMCs or whether there  \nshould be get_*vtable opcodes. It should be easy enough to return a  \nBound_NCI PMC if the user requests a vtable function from a PMC.\n\n[1] Technically, there is a way, but it's a bug. See RT#42864.\n\n--\nMatt Diephouse\nhttp://matt.diephouse.com\n\n\n"}