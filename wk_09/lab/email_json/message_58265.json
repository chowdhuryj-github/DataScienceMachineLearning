{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23657 - in branches: SAMBA_3_0/source/param\n\tSAMBA_3_0/source/utils SAMBA_3_0_26/source/param\n\tSAMBA_3_0_26/source/utils", "body": "Author: obnox\nDate: 2007-06-29 13:07:54 +0000 (Fri, 29 Jun 2007)\nNew Revision: 23657\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23657\n\nLog:\nPrevent setting of a global option in a share definition\nin \"net conf setparm\".\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0/source/param/loadparm.c\n   branches/SAMBA_3_0/source/utils/net_conf.c\n   branches/SAMBA_3_0_26/source/param/loadparm.c\n   branches/SAMBA_3_0_26/source/utils/net_conf.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/param/loadparm.c\n===================================================================\n--- branches/SAMBA_3_0/source/param/loadparm.c\t2007-06-29 12:30:41 UTC (rev 23656)\n+++ branches/SAMBA_3_0/source/param/loadparm.c\t2007-06-29 13:07:54 UTC (rev 23657)\n@@ -2789,6 +2789,24 @@\n }\n \n /***************************************************************************\n+ Check whether the given name is the name of a global parameter.\n+ Returns True for strings belonging to parameters of class\n+ P_GLOBAL, False for all other strings, also for parametric options\n+ and strings not belonging to any option.\n+***************************************************************************/\n+\n+BOOL lp_parameter_is_global(const char *pszParmName)\n+{\n+\tint num = map_parameter(pszParmName);\n+\n+\tif (num >= 0) {\n+\t\treturn (parm_table[num].p_class == P_GLOBAL);\n+\t}\n+\n+\treturn False;\n+}\n+\n+/***************************************************************************\n  Map a parameter's string representation to something we can use. \n  Returns False if the parameter string is not recognised, else TRUE.\n ***************************************************************************/\n\nModified: branches/SAMBA_3_0/source/utils/net_conf.c\n===================================================================\n--- branches/SAMBA_3_0/source/utils/net_conf.c\t2007-06-29 12:30:41 UTC (rev 23656)\n+++ branches/SAMBA_3_0/source/utils/net_conf.c\t2007-06-29 13:07:54 UTC (rev 23657)\n@@ -178,12 +178,21 @@\n \t}\n \n \tif (registry_smbconf_valname_forbidden(valname)) {\n-\t\td_fprintf(stderr, \"Parameter '%s' not allowed in registry.\\n\", \n+\t\td_fprintf(stderr, \"Parameter '%s' not allowed in registry.\\n\",\n \t\t\t  valname);\n \t\twerr = WERR_INVALID_PARAM;\n \t\tgoto done;\n \t}\n \n+\tif (!strequal(key->key->name, GLOBAL_NAME) &&\n+\t    lp_parameter_is_global(valname))\n+\t{\n+\t\td_fprintf(stderr, \"Global paramter '%s' not allowed in \"\n+\t\t\t  \"service definition.\\n\", valname);\n+\t\twerr = WERR_INVALID_PARAM;\n+\t\tgoto done;\n+\t}\n+\n \twerr = reg_setvalue(key, valname, &val);\n \tif (!W_ERROR_IS_OK(werr)) {\n \t\td_fprintf(stderr,\n\nModified: branches/SAMBA_3_0_26/source/param/loadparm.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/param/loadparm.c\t2007-06-29 12:30:41 UTC (rev 23656)\n+++ branches/SAMBA_3_0_26/source/param/loadparm.c\t2007-06-29 13:07:54 UTC (rev 23657)\n@@ -2790,6 +2790,24 @@\n }\n \n /***************************************************************************\n+ Check whether the given name is the name of a global parameter.\n+ Returns True for strings belonging to parameters of class\n+ P_GLOBAL, False for all other strings, also for parametric options\n+ and strings not belonging to any option.\n+***************************************************************************/\n+\n+BOOL lp_parameter_is_global(const char *pszParmName)\n+{\n+\tint num = map_parameter(pszParmName);\n+\n+\tif (num >= 0) {\n+\t\treturn (parm_table[num].p_class == P_GLOBAL);\n+\t}\n+\n+\treturn False;\n+}\n+\n+/***************************************************************************\n  Map a parameter's string representation to something we can use. \n  Returns False if the parameter string is not recognised, else TRUE.\n ***************************************************************************/\n\nModified: branches/SAMBA_3_0_26/source/utils/net_conf.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/utils/net_conf.c\t2007-06-29 12:30:41 UTC (rev 23656)\n+++ branches/SAMBA_3_0_26/source/utils/net_conf.c\t2007-06-29 13:07:54 UTC (rev 23657)\n@@ -178,12 +178,21 @@\n \t}\n \n \tif (registry_smbconf_valname_forbidden(valname)) {\n-\t\td_fprintf(stderr, \"Parameter '%s' not allowed in registry.\\n\", \n+\t\td_fprintf(stderr, \"Parameter '%s' not allowed in registry.\\n\",\n \t\t\t  valname);\n \t\twerr = WERR_INVALID_PARAM;\n \t\tgoto done;\n \t}\n \n+\tif (!strequal(key->key->name, GLOBAL_NAME) &&\n+\t    lp_parameter_is_global(valname))\n+\t{\n+\t\td_fprintf(stderr, \"Global paramter '%s' not allowed in \"\n+\t\t\t  \"service definition.\\n\", valname);\n+\t\twerr = WERR_INVALID_PARAM;\n+\t\tgoto done;\n+\t}\n+\n \twerr = reg_setvalue(key, valname, &val);\n \tif (!W_ERROR_IS_OK(werr)) {\n \t\td_fprintf(stderr,\n\n"}