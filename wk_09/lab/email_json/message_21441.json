{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Ross Darnell <r.darnell@uq.edu.au>", "subject": "Re: [R] Log-likelihood function", "body": "\nAlternatively  generate the log-likelihood using the sum(dpois(y,\nfitted(model), log = TRUE))\n\n\nRegards\n\nRoss Darnell\n\n\nDoxastic wrote:\n> \n> You're right.  I do need to learn more.  I never learned null/residual\n> deviance.  I know the deviance is equivalent to an anova decompostion. \n> But I've never dealt with it seperated like this.  \n> \n> I understand deviance as the difference between two model's log-likelihood\n> difference between them and the most complex.  I want to compare two\n> models that are not the most complex.  That is why I wanted the\n> log-likelihood.  \n> \n> I am using the poisson distribution because my response is count data, so\n> the link is the log.  If the deviance in R is computed by comparing the\n> fitted model against the most saturated (which would make sense).  Then\n> yes, I can use that.  I just picked the log-likelihood because I'm\n> comparing two models.  And that's the best way.  But, it's equivalent if R\n> compares the fitted to the most complex.\n> \n> I assumed the deviance print out tested the fitted model against the least\n> complex.  This tests whether the current model parameters can be dropped\n> (that's what I thought the null deviance meant).  I'm not sure what the\n> residaul deviance means though.  \n> \n> My main concern is why the likelihood functions differed between SAS and\n> R.  If anyone has encountered this or understands why, I would appreciate\n> some help.\n> \n> \n> \n> Prof Brian Ripley wrote:\n>> \n>> I think you need to learn about deviances, which R does print.\n>> \n>> Log-likelihoods are only defined up to additive constants.  In this case \n>> the conventional constant differs if you view this as a Poisson or as a \n>> product-multinomial log-linear model, and R gives you the log-likelihood \n>> for a Poisson log-linear model (assuming you specified family=poisson). \n>> However, deviances and differences in log-likelihoods do not depend on \n>> which.\n>> \n>> More details and worked examples can be found in MASS (the book, see the \n>> FAQ), including other ways to fit log-linear models in R.\n>> \n>> \n>> On Tue, 1 May 2007, someone ashamed of his real name wrote:\n>> \n>>> I've computed a loglinear model on a categorical dataset.  I would like\n>>> to\n>>> test whether an interaction can be dropped by comparing the\n>>> log-likelihoods\n>>> from two models(the model with the interaction vs. the model without).\n>>> Since R does not immediately print the log-likelihood when I use the\n>>> \"glm\"\n>>> function, I used SAS initially.  After searching for an extracting\n>>> function,\n>>> I found one in R.  But, the log-likelihood given by SAS is different\n>>> from\n>>> the one given by R.  I'm not sure if the \"logLik\" function in R is\n>>> giving me\n>>> something I don't want.  Or if I'm misinterpreting the SAS output.  Can\n>>> anyone help?\n>>>\n>> \n>> -- \n>> Brian D. Ripley,                  ripley@stats.ox.ac.uk\n>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\n>> University of Oxford,             Tel:  +44 1865 272861 (self)\n>> 1 South Parks Road,                     +44 1865 272866 (PA)\n>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595\n>> \n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide\n>> http://www.R-project.org/posting-guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n>> \n>> \n> \n> \n\n-- \nView this message in context: http://www.nabble.com/Log-likelihood-function-tf3678882.html#a10283755\nSent from the R help mailing list archive at Nabble.com.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}