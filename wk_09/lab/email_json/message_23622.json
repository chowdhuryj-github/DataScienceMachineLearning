{"category": "ham", "to_address": "\"Beginners, Perl\" <beginners@perl.org>", "from_address": "Ken Foskey <foskey@optushome.com.au>", "subject": "hash containing a hash, sorting keys help", "body": "I cannot get the syntax right for child lookup, Data::Dumper confirms\nthat I have the structure as I expect (logic may be totally wrong\nthough).  I going to do a webpage pstree command.\n\n    foreach my $child (sort keys( $parent{$pid} )) {\n        dump_process( $child );\n    }\n\nType of arg 1 to keys must be hash (not hash element) at ./visualise.cgi\nline 46, near \"} )\"\n\nInitial $pid is zero and the entry looks like this:\n\n            '0' => {\n                     'ntp' => 1,\n                     'hplip' => 1,\n                     '1' => 1,\n                     'klog' => 1,\n                     'cupsys' => 1,\n                     '101' => 1,\n                     'root' => 1,\n                     '117' => 1,\n                     'avahi' => 1,\n                     'user' => 1\n                   },\n\n\n#!/usr/bin/perl -w\n# vi:set sw=4 ts=4 et cin:\n# $Id:$\n\n=head1 SYNOPSIS\n \nProvide a tree function of processes on a unix server\n \n   usage: visualise.cgi user=username\n\n=head1 DESCRIPTION\n\nUse the PS command to generate a tree of commands on a Unix server.\n\n=head1 AUTHOR\n\nKen Foskey\n\n=head1 COPYRIGHT\n\nCopyright 2007 Salmat\n\n=cut\n\nuse warnings;\nuse strict;\n\nuse CGI qw(:standard);\nuse Data::Dumper::Simple;\n\nmy ( $line, $user, $pid, $ppid, $c, $stime, $tty, $time, $command);\nmy $indent = 0;\n\nmy %parent;\nmy %process;\n\nmy $user_selected = param('user');\n\nsub dump_process\n{\n    my $pid = shift;\n    $indent++;\n    my $spaces = substr( \"            \", 0, $indent );\n    print \"$spaces$process{$pid}\\n\";\n    print \"$spaces\\n\";\n#    foreach my $child (sort keys( $parent{$pid} )) {\n#        dump_process( $child );\n#    }\n    print \"$spaces\\n\";\n    $indent--;\n}\n\nopen( PS, '-|', 'ps -ef' ) or die \"Unable to run PS command $!\";\n\n$line = ;  # ignore heading!\n\nwhile( $line =  ) {\n    chomp $line;\n\n    ($user, $pid, $ppid, $c, $stime, $tty, $time, $command) = split( /\n*/, $line, 8 );\n    if( ! $user_selected or $user_selected eq $user ) {\n        $process{$pid} = $command;\n        if( $ppid eq \"1\" ) {\n            $ppid = $user;  # group users commands under 1.\n            $parent{0}->{$ppid} = 1; # link up to top process.\n        }\n        $parent{$ppid}->{$pid} = 1; \n    }\n}\n\nprint Dumper %parent;\n\n$process{0} = \"*nix\" if( ! $process{0} );\n\ndump_process( '0' );\n\nclose( PS );\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}