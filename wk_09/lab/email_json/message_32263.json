{"category": "ham", "to_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "from_address": "\"Lauri Nikkinen\" <lauri.nikkinen@iki.fi>", "subject": "Re: [R] Simple programming question", "body": "Thank you all for your answers. Actually Gabor's first post was right in\nthat sense that I wanted to have \"low\" to all cases which are lower than\nsecond highest. But how about if I want to convert/recode those \"high\",\n\"mid\" and \"low\" to numeric to make some calculations, e.g. 3, 1, 0\nrespectively. How do I have to modify your solutions? I would also like to\napply this solution to many kinds of recoding situations.\n\n-Lauri\n\n\n2007/5/18, Gabor Grothendieck :\n>\n> There was a problem in the first line in the case that the highest number\n> is not unique within a category.   In this example its not apparent since\n> that never occurs.  At any rate, it should be:\n>\n> f <- function(x) 4 - pmin(3, match(x, sort(unique(x), decreasing = TRUE)))\n> factor(ave(dfr$var3, dfr$categ, FUN = f), lab = c(\"low\", \"mid\", \"high\"))\n>\n> Also note that the factor labels were arranged so that\n> \"low\", \"mid\" and \"high\" correspond to levels 1, 2 and 3\n> respectively.\n>\n> On 5/18/07, Gabor Grothendieck  wrote:\n> > Try this.  f assigns 1, 2 and 3 to the highest, second highest and third\n> highest\n> > within a category.  ave applies f to each category.  Finally we convert\n> it to a\n> > factor.\n> >\n> > f <- function(x) 4 - pmin(3, match(x, sort(x, decreasing = TRUE)))\n> > factor(ave(dfr$var3, dfr$categ, FUN = f), lab = c(\"low\", \"mid\", \"high\"))\n> >\n> >\n> >\n> > On 5/18/07, Lauri Nikkinen  wrote:\n> > > Hi R-users,\n> > >\n> > > I have a simple question for R heavy users. If I have a data frame\n> like this\n> > >\n> > >\n> > > dfr <- data.frame(id=1:16, categ=rep(LETTERS[1:4], 4),\n> > > var3=c(8,7,6,6,5,4,5,4,3,4,3,2,3,2,1,1))\n> > > dfr <- dfr[order(dfr$categ),]\n> > >\n> > > and I want to score values or points in variable named \"var3\"\n> following this\n> > > kind of logic:\n> > >\n> > > 1. the highest value of var3 within category (variable named \"categ\")\n> ->\n> > > \"high\"\n> > > 2. the second highest value -> \"mid\"\n> > > 3. lowest value -> \"low\"\n> > >\n> > > This would be the output of this reasoning:\n> > >\n> > > dfr$score <-\n> > >\n> factor(c(\"high\",\"mid\",\"low\",\"low\",\"high\",\"mid\",\"mid\",\"low\",\"high\",\"mid\",\"low\",\"low\",\"high\",\"mid\",\"low\",\"low\"))\n> > > dfr\n> > >\n> > > The question is how I do this programmatically in R (i.e. if I have\n> 2000\n> > > rows in my dfr)?\n> > >\n> > > I appreciate your help!\n> > >\n> > > Cheers,\n> > > Lauri\n> > >\n> > >        [[alternative HTML version deleted]]\n> > >\n> > > ______________________________________________\n> > > R-help@stat.math.ethz.ch mailing list\n> > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> > > and provide commented, minimal, self-contained, reproducible code.\n> > >\n> >\n>\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}