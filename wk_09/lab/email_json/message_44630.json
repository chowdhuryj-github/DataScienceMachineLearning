{"category": "ham", "to_address": "samba-technical@lists.samba.org", "from_address": "James Peach <jpeach@samba.org>", "subject": "[PATCH 4/4] Update setgroups comments for BSDs. ", "body": "Update the comments that describe BSD setgroups semantics. Apply\nthe setgroups fix to Darwin as well as FreeBSD.\n---\nsource/smbd/sec_ctx.c |   13 ++++++++++---\n1 files changed, 10 insertions(+), 3 deletions(-)\n\ndiff --git a/source/smbd/sec_ctx.c b/source/smbd/sec_ctx.c\nindex d7a229e..ffbfa64 100644\n--- a/source/smbd/sec_ctx.c\n+++ b/source/smbd/sec_ctx.c\n@@ -193,8 +193,15 @@ static BOOL apply_unix_token(const  \nUNIX_USER_TOKEN *ut)\n{\n\tint ngroups = 0;\n-#ifdef FREEBSD\n-\t/* Most (all?) BSD systems expect that the first element in the groups\n+#if defined(FREEBSD) || defined(DARWINOS)\n+\t/* Most BSD systems return the effective gid as the first gid in the\n+\t * list returned by getgroups(2), but only not all expect the\n+\t * first gid in the list passed to setgroups(2) to always contain the\n+\t * effective gid.\n+\t *\n+\t * FreeBSD will ignore the first gid in the setgroups array, and  \nDarwin\n+\t * will use it as the effective gid.\n+\t *\n\t * list passed to setgroups(2) is the effective gid. See also bugzilla\n\t * bug #3990.\n\t */\n@@ -219,7 +226,7 @@ static BOOL apply_unix_token(const  \nUNIX_USER_TOKEN *ut)\n\t\tut->groups[0] = ut->gid;\n\t}\n-#endif /* FREEBSD */\n+#endif /* FREEBSD || DARWINOS */\n\t/* Always truncate the groups list at the system maximum. On most\n\t * systems, setgroups(2) will fail with EINVAL otherwise.\n--\n1.5.2.1\n\n\n--\nJames Peach | jpeach@samba.org\n\n\n"}