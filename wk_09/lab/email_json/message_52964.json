{"category": "ham", "to_address": "Jeremy Allison <jra@samba.org>", "from_address": "Theodore Tso <tytso@mit.edu>", "subject": "Re: avoid leak upon failed realloc", "body": "On Fri, Jun 22, 2007 at 10:27:04AM -0700, Jeremy Allison wrote:\n> > \tThanks for the patch!  I actually automatically build the\n> > tdb.c file from the Samba SVN tree (with a series of patches and\n> > scripts)\n\nIn case people are interested, I've attached the patches and scripts I\nuse to build a single tdb.c/tdb.h file for e2fsprogs.\n\n> Thanks Ted, we fixed this in the generic Samba sources by using\n> realloc wrappers, but tdb has to be separate from these.\n\nHmm.... There are actually several realloc calls in the tdb sources,\nnot just the one which Jim pointed out.  If it's better I can just\nsimply hack one of my patches to provide a realloc wrapper that deals\nwith all of the cases in one fell swoop.\n\n\t\t\t\t\t\t\t- Ted\n\n#!/bin/sh\n# This is a shell archive (produced by GNU sharutils 4.2.1).\n# To extract the files from this archive, save it to some FILE, remove\n# everything before the `!/bin/sh' line above, then type `sh FILE'.\n#\n# Made on 2007-06-22 16:19 EDT by .\n# Source directory was `/usr/projects/samba'.\n#\n# Existing files will *not* be overwritten unless `-c' is specified.\n#\n# This shar contains:\n# length mode       name\n# ------ ---------- ------------------------------------------\n#    849 -rwxr-xr-x tdbsa/build-tdb\n#   4552 -rw-r--r-- tdbsa/patches/static-prototypes\n#    716 -rw-r--r-- tdbsa/patches/copyright\n#     94 -rw-r--r-- tdbsa/patches/series\n#   1892 -rw-r--r-- tdbsa/patches/replace-includes\n#   2265 -rw-r--r-- tdbsa/patches/ext2tdb-rename\n#    674 -rw-r--r-- tdbsa/patches/tdbtool-includes\n#    545 -rw-r--r-- tdbsa/patches/static-functions\n#    232 -rw-r--r-- tdbsa/Makefile\n#\nsave_IFS=\"${IFS}\"\nIFS=\"${IFS}:\"\ngettext_dir=FAILED\nlocale_dir=FAILED\nfirst_param=\"$1\"\nfor dir in $PATH\ndo\n  if test \"$gettext_dir\" = FAILED && test -f $dir/gettext \\\n     && ($dir/gettext --version >/dev/null 2>&1)\n  then\n    set `$dir/gettext --version 2>&1`\n    if test \"$3\" = GNU\n    then\n      gettext_dir=$dir\n    fi\n  fi\n  if test \"$locale_dir\" = FAILED && test -f $dir/shar \\\n     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)\n  then\n    locale_dir=`$dir/shar --print-text-domain-dir`\n  fi\ndone\nIFS=\"$save_IFS\"\nif test \"$locale_dir\" = FAILED || test \"$gettext_dir\" = FAILED\nthen\n  echo=echo\nelse\n  TEXTDOMAINDIR=$locale_dir\n  export TEXTDOMAINDIR\n  TEXTDOMAIN=sharutils\n  export TEXTDOMAIN\n  echo=\"$gettext_dir/gettext -s\"\nfi\nif mkdir _sh05242; then\n  $echo 'x -' 'creating lock directory'\nelse\n  $echo 'failed to create lock directory'\n  exit 1\nfi\n# ============= tdbsa/build-tdb ==============\nif test ! -d 'tdbsa'; then\n  $echo 'x -' 'creating directory' 'tdbsa'\n  mkdir 'tdbsa'\nfi\nif test -f 'tdbsa/build-tdb' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/build-tdb' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/build-tdb' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/build-tdb' &&\n#!/bin/sh\n#\n# This file creates a stand-alone TDB based on a set of sources from \n# Samba\nX\n#BASE_DIR=/usr/projects/samba/samba-4.0.0tp4/source/lib/tdb\nBASE_DIR=/usr/projects/samba/tdb\nX\nrm -rf .pc\nX\nFILES=\"error.c lock.c io.c transaction.c freelist.c \\\nX\tfreelistcheck.c traverse.c dump.c tdb.c open.c\"\nX\n(cd $BASE_DIR/common; svn info ) > .svninfo\necho \"/*\" > tdb.c\ngrep ^URL .svninfo >> tdb.c\ngrep \"^Last Changed Rev\" .svninfo | sed -e 's/Last Changed //' >> tdb.c\ngrep \"^Last Changed Date\" .svninfo >> tdb.c\necho \"*/\" >> tdb.c\nX\ncat $BASE_DIR/common/tdb_private.h >> tdb.c\nfor i in $FILES; do\nX\tif [ `tail -n 1 tdb.c | wc -c` -gt 1 ]; then\nX\t\tprintf \"\\n\" >> tdb.c\nX\tfi\nX\techo \"/* file: $i */\" >> tdb.c\nX\tsed -e '1,/#include \"tdb_private.h\"/d' < $BASE_DIR/common/$i >> tdb.c\ndone\nX\ncp $BASE_DIR/include/tdb.h .\ncp $BASE_DIR/tools/tdbtool.c .\nX\nquilt push -a\nX\nSHAR_EOF\n  chmod 0755 'tdbsa/build-tdb' ||\n  $echo 'restore of' 'tdbsa/build-tdb' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/build-tdb:' 'MD5 check failed'\nda181f5eb74b1b653482317cf94e5138  tdbsa/build-tdb\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/build-tdb'`\"\n    test 849 -eq \"$shar_count\" ||\n    $echo 'tdbsa/build-tdb:' 'original size' '849,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/static-prototypes ==============\nif test ! -d 'tdbsa/patches'; then\n  $echo 'x -' 'creating directory' 'tdbsa/patches'\n  mkdir 'tdbsa/patches'\nfi\nif test -f 'tdbsa/patches/static-prototypes' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/static-prototypes' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/static-prototypes' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/static-prototypes' &&\nIndex: tdbsa/tdb.c\n===================================================================\n--- tdbsa.orig/tdb.c\n+++ tdbsa/tdb.c\n@@ -251,39 +251,39 @@ struct tdb_context {\nX /*\nX   internal prototypes\nX */\n-int tdb_munmap(struct tdb_context *tdb);\n-void tdb_mmap(struct tdb_context *tdb);\n-int tdb_lock(struct tdb_context *tdb, int list, int ltype);\n-int tdb_unlock(struct tdb_context *tdb, int list, int ltype);\n-int tdb_brlock(struct tdb_context *tdb, tdb_off_t offset, int rw_type, int lck_type, int probe, size_t len);\n-int tdb_transaction_lock(struct tdb_context *tdb, int ltype);\n-int tdb_transaction_unlock(struct tdb_context *tdb);\n-int tdb_brlock_upgrade(struct tdb_context *tdb, tdb_off_t offset, size_t len);\n-int tdb_write_lock_record(struct tdb_context *tdb, tdb_off_t off);\n-int tdb_write_unlock_record(struct tdb_context *tdb, tdb_off_t off);\n-int tdb_ofs_read(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n-int tdb_ofs_write(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n-void *tdb_convert(void *buf, u32 size);\n-int tdb_free(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n-tdb_off_t tdb_allocate(struct tdb_context *tdb, tdb_len_t length, struct list_struct *rec);\n-int tdb_ofs_read(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n-int tdb_ofs_write(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n-int tdb_lock_record(struct tdb_context *tdb, tdb_off_t off);\n-int tdb_unlock_record(struct tdb_context *tdb, tdb_off_t off);\n-int tdb_rec_read(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n-int tdb_rec_write(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n-int tdb_do_delete(struct tdb_context *tdb, tdb_off_t rec_ptr, struct list_struct *rec);\n-unsigned char *tdb_alloc_read(struct tdb_context *tdb, tdb_off_t offset, tdb_len_t len);\n-int tdb_parse_data(struct tdb_context *tdb, TDB_DATA key,\n+static int tdb_munmap(struct tdb_context *tdb);\n+static void tdb_mmap(struct tdb_context *tdb);\n+static int tdb_lock(struct tdb_context *tdb, int list, int ltype);\n+static int tdb_unlock(struct tdb_context *tdb, int list, int ltype);\n+static int tdb_brlock(struct tdb_context *tdb, tdb_off_t offset, int rw_type, int lck_type, int probe, size_t len);\n+static int tdb_transaction_lock(struct tdb_context *tdb, int ltype);\n+static int tdb_transaction_unlock(struct tdb_context *tdb);\n+static int tdb_brlock_upgrade(struct tdb_context *tdb, tdb_off_t offset, size_t len);\n+static int tdb_write_lock_record(struct tdb_context *tdb, tdb_off_t off);\n+static int tdb_write_unlock_record(struct tdb_context *tdb, tdb_off_t off);\n+static int tdb_ofs_read(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n+static int tdb_ofs_write(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n+static void *tdb_convert(void *buf, u32 size);\n+static int tdb_free(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n+static tdb_off_t tdb_allocate(struct tdb_context *tdb, tdb_len_t length, struct list_struct *rec);\n+static int tdb_ofs_read(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n+static int tdb_ofs_write(struct tdb_context *tdb, tdb_off_t offset, tdb_off_t *d);\n+static int tdb_lock_record(struct tdb_context *tdb, tdb_off_t off);\n+static int tdb_unlock_record(struct tdb_context *tdb, tdb_off_t off);\n+static int tdb_rec_read(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n+static int tdb_rec_write(struct tdb_context *tdb, tdb_off_t offset, struct list_struct *rec);\n+static int tdb_do_delete(struct tdb_context *tdb, tdb_off_t rec_ptr, struct list_struct *rec);\n+static unsigned char *tdb_alloc_read(struct tdb_context *tdb, tdb_off_t offset, tdb_len_t len);\n+static int tdb_parse_data(struct tdb_context *tdb, TDB_DATA key,\nX \t\t   tdb_off_t offset, tdb_len_t len,\nX \t\t   int (*parser)(TDB_DATA key, TDB_DATA data,\nX \t\t\t\t void *private_data),\nX \t\t   void *private_data);\n-tdb_off_t tdb_find_lock_hash(struct tdb_context *tdb, TDB_DATA key, u32 hash, int locktype,\n+static tdb_off_t tdb_find_lock_hash(struct tdb_context *tdb, TDB_DATA key, u32 hash, int locktype,\nX \t\t\t   struct list_struct *rec);\n-void tdb_io_init(struct tdb_context *tdb);\n-int tdb_expand(struct tdb_context *tdb, tdb_off_t size);\n-int tdb_rec_free_read(struct tdb_context *tdb, tdb_off_t off,\n+static void tdb_io_init(struct tdb_context *tdb);\n+static int tdb_expand(struct tdb_context *tdb, tdb_off_t size);\n+static int tdb_rec_free_read(struct tdb_context *tdb, tdb_off_t off,\nX \t\t      struct list_struct *rec);\nX \nX \nSHAR_EOF\n  chmod 0644 'tdbsa/patches/static-prototypes' ||\n  $echo 'restore of' 'tdbsa/patches/static-prototypes' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/static-prototypes:' 'MD5 check failed'\n5b95bfff8fac41ff13583defa06614de  tdbsa/patches/static-prototypes\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/static-prototypes'`\"\n    test 4552 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/static-prototypes:' 'original size' '4552,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/copyright ==============\nif test -f 'tdbsa/patches/copyright' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/copyright' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/copyright' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/copyright' &&\nIndex: tdbsa/tdb.c\n===================================================================\n--- tdbsa.orig/tdb.c\n+++ tdbsa/tdb.c\n@@ -4,11 +4,11 @@ Rev: 23371\nX Last Changed Date: 2007-06-06 20:14:06 -0400 (Wed, 06 Jun 2007)\nX */\nX  /* \n-   Unix SMB/CIFS implementation.\n+   trivial database library - standalone version\nX \n-   trivial database library - private includes\n-\n-   Copyright (C) Andrew Tridgell              2005\n+   Copyright (C) Andrew Tridgell              1999-2005\n+   Copyright (C) Jeremy Allison               2000-2006\n+   Copyright (C) Paul `Rusty' Russell         2000\nX    \nX      ** NOTE! The following LGPL license applies to the tdb\nX      ** library. This does NOT imply that all of Samba is released\nSHAR_EOF\n  chmod 0644 'tdbsa/patches/copyright' ||\n  $echo 'restore of' 'tdbsa/patches/copyright' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/copyright:' 'MD5 check failed'\na9c26eb26660c38d55c025525e33e4be  tdbsa/patches/copyright\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/copyright'`\"\n    test 716 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/copyright:' 'original size' '716,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/series ==============\nif test -f 'tdbsa/patches/series' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/series' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/series' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/series' &&\ncopyright\nreplace-includes\nstatic-prototypes\nstatic-functions\ntdbtool-includes\next2tdb-rename\nSHAR_EOF\n  chmod 0644 'tdbsa/patches/series' ||\n  $echo 'restore of' 'tdbsa/patches/series' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/series:' 'MD5 check failed'\nd7407665a70fe6d73b9e2adf24371e3a  tdbsa/patches/series\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/series'`\"\n    test 94 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/series:' 'original size' '94,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/replace-includes ==============\nif test -f 'tdbsa/patches/replace-includes' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/replace-includes' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/replace-includes' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/replace-includes' &&\nIndex: tdbsa/tdb.c\n===================================================================\n--- tdbsa.orig/tdb.c\n+++ tdbsa/tdb.c\n@@ -29,11 +29,80 @@ Last Changed Date: 2007-06-06 20:14:06 -\nX    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\nX */\nX \n-#include \"replace.h\"\n-#include \"system/filesys.h\"\n-#include \"system/time.h\"\n-#include \"system/shmem.h\"\n-#include \"system/select.h\"\n+#ifdef CONFIG_STAND_ALONE\n+#define HAVE_MMAP\n+#define HAVE_STRDUP\n+#define HAVE_SYS_MMAN_H\n+#define HAVE_UTIME_H\n+#define HAVE_UTIME\n+#endif\n+#define _XOPEN_SOURCE 500\n+\n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#ifdef HAVE_UTIME_H\n+#include \n+#endif\n+#include \n+#include \n+#include \n+\n+#ifdef HAVE_SYS_MMAN_H\n+#include \n+#endif\n+\n+#ifndef MAP_FILE\n+#define MAP_FILE 0\n+#endif\n+\n+#ifndef MAP_FAILED\n+#define MAP_FAILED ((void *)-1)\n+#endif\n+\n+#ifndef HAVE_STRDUP\n+#define strdup rep_strdup\n+static char *rep_strdup(const char *s)\n+{\n+\tchar *ret;\n+\tint length;\n+\tif (!s)\n+\t\treturn NULL;\n+\n+\tif (!length)\n+\t\tlength = strlen(s);\n+\n+\tret = malloc(length + 1);\n+\tif (ret) {\n+\t\tstrncpy(ret, s, length);\n+\t\tret[length] = '\\0';\n+\t}\n+\treturn ret;\n+}\n+#endif\n+\n+#ifndef PRINTF_ATTRIBUTE\n+#if (__GNUC__ >= 3) && (__GNUC_MINOR__ >= 1 )\n+/** Use gcc attribute to check printf fns.  a1 is the 1-based index of\n+ * the parameter containing the format, and a2 the index of the first\n+ * argument. Note that some gcc 2.x versions don't handle this\n+ * properly **/\n+#define PRINTF_ATTRIBUTE(a1, a2) __attribute__ ((format (__printf__, a1, a2)))\n+#else\n+#define PRINTF_ATTRIBUTE(a1, a2)\n+#endif\n+#endif\n+\n+typedef int bool;\n+\nX #include \"tdb.h\"\nX \nX #ifndef u32\nSHAR_EOF\n  chmod 0644 'tdbsa/patches/replace-includes' ||\n  $echo 'restore of' 'tdbsa/patches/replace-includes' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/replace-includes:' 'MD5 check failed'\n19be597cb884df5399b9f43fb5cacd2e  tdbsa/patches/replace-includes\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/replace-includes'`\"\n    test 1892 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/replace-includes:' 'original size' '1892,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/ext2tdb-rename ==============\nif test -f 'tdbsa/patches/ext2tdb-rename' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/ext2tdb-rename' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/ext2tdb-rename' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/ext2tdb-rename' &&\nIndex: tdbsa/tdb.h\n===================================================================\n--- tdbsa.orig/tdb.h\n+++ tdbsa/tdb.h\n@@ -76,6 +76,51 @@ typedef struct TDB_DATA {\nX #endif\nX #endif\nX \n+/* ext2fs tdb renames */\n+#define tdb_open ext2fs_tdb_open\n+#define tdb_open_ex ext2fs_tdb_open_ex\n+#define tdb_set_max_dead ext2fs_tdb_set_max_dead\n+#define tdb_reopen ext2fs_tdb_reopen\n+#define tdb_reopen_all ext2fs_tdb_reopen_all\n+#define tdb_set_logging_function ext2fs_tdb_set_logging_function\n+#define tdb_error ext2fs_tdb_error\n+#define tdb_errorstr ext2fs_tdb_errorstr\n+#define tdb_fetch ext2fs_tdb_fetch\n+#define tdb_parse_record ext2fs_tdb_parse_record\n+#define tdb_delete ext2fs_tdb_delete\n+#define tdb_store ext2fs_tdb_store\n+#define tdb_append ext2fs_tdb_append\n+#define tdb_close ext2fs_tdb_close\n+#define tdb_firstkey ext2fs_tdb_firstkey\n+#define tdb_nextkey ext2fs_tdb_nextkey\n+#define tdb_traverse ext2fs_tdb_traverse\n+#define tdb_traverse_read ext2fs_tdb_traverse_read\n+#define tdb_exists ext2fs_tdb_exists\n+#define tdb_lockall ext2fs_tdb_lockall\n+#define tdb_unlockall ext2fs_tdb_unlockall\n+#define tdb_lockall_read ext2fs_tdb_lockall_read\n+#define tdb_unlockall_read ext2fs_tdb_unlockall_read\n+#define tdb_name ext2fs_tdb_name\n+#define tdb_fd ext2fs_tdb_fd\n+#define tdb_log_fn ext2fs_tdb_log_fn\n+#define tdb_get_logging_private ext2fs_tdb_get_logging_private\n+#define tdb_transaction_start ext2fs_tdb_transaction_start\n+#define tdb_transaction_commit ext2fs_tdb_transaction_commit\n+#define tdb_transaction_cancel ext2fs_tdb_transaction_cancel\n+#define tdb_transaction_recover ext2fs_tdb_transaction_recover\n+#define tdb_get_seqnum ext2fs_tdb_get_seqnum\n+#define tdb_hash_size ext2fs_tdb_hash_size\n+#define tdb_map_size ext2fs_tdb_map_size\n+#define tdb_get_flags ext2fs_tdb_get_flags\n+#define tdb_chainlock ext2fs_tdb_chainlock\n+#define tdb_chainunlock ext2fs_tdb_chainunlock\n+#define tdb_chainlock_read ext2fs_tdb_chainlock_read\n+#define tdb_chainunlock_read ext2fs_tdb_chainunlock_read\n+#define tdb_dump_all ext2fs_tdb_dump_all\n+#define tdb_printfreelist ext2fs_tdb_printfreelist\n+#define tdb_validate_freelist ext2fs_tdb_validate_freelist\n+\n+\nX /* this is the context structure that is returned from a db open */\nX typedef struct tdb_context TDB_CONTEXT;\nX \nSHAR_EOF\n  chmod 0644 'tdbsa/patches/ext2tdb-rename' ||\n  $echo 'restore of' 'tdbsa/patches/ext2tdb-rename' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/ext2tdb-rename:' 'MD5 check failed'\n13d7bf0a02ad81f08cf3e44c30d0614a  tdbsa/patches/ext2tdb-rename\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/ext2tdb-rename'`\"\n    test 2265 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/ext2tdb-rename:' 'original size' '2265,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/tdbtool-includes ==============\nif test -f 'tdbsa/patches/tdbtool-includes' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/tdbtool-includes' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/tdbtool-includes' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/tdbtool-includes' &&\nIndex: tdbsa/tdbtool.c\n===================================================================\n--- tdbsa.orig/tdbtool.c\n+++ tdbsa/tdbtool.c\n@@ -21,10 +21,21 @@\nX    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\nX */\nX \n-#include \"replace.h\"\n-#include \"system/locale.h\"\n-#include \"system/time.h\"\n-#include \"system/filesys.h\"\n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+#include \n+\nX #include \"tdb.h\"\nX \nX static int do_command(void);\nSHAR_EOF\n  chmod 0644 'tdbsa/patches/tdbtool-includes' ||\n  $echo 'restore of' 'tdbsa/patches/tdbtool-includes' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/tdbtool-includes:' 'MD5 check failed'\n65f421c38dfe742c56d4cde7b4dcc2ca  tdbsa/patches/tdbtool-includes\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/tdbtool-includes'`\"\n    test 674 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/tdbtool-includes:' 'original size' '674,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/patches/static-functions ==============\nif test -f 'tdbsa/patches/static-functions' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/patches/static-functions' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/patches/static-functions' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/patches/static-functions' &&\nIndex: tdbsa/tdb.c\n===================================================================\n--- tdbsa.orig/tdb.c\n+++ tdbsa/tdb.c\n@@ -2254,7 +2254,7 @@ int tdb_transaction_recover(struct tdb_c\nX /* file: freelist.c */\nX \nX /* read a freelist record and check for simple errors */\n-int tdb_rec_free_read(struct tdb_context *tdb, tdb_off_t off, struct list_struct *rec)\n+static int tdb_rec_free_read(struct tdb_context *tdb, tdb_off_t off, struct list_struct *rec)\nX {\nX \tif (tdb->methods->tdb_read(tdb, off, rec, sizeof(*rec),DOCONV()) == -1)\nX \t\treturn -1;\nSHAR_EOF\n  chmod 0644 'tdbsa/patches/static-functions' ||\n  $echo 'restore of' 'tdbsa/patches/static-functions' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/patches/static-functions:' 'MD5 check failed'\n090a51902b70a4433ba24b8ad98847e1  tdbsa/patches/static-functions\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/patches/static-functions'`\"\n    test 545 -eq \"$shar_count\" ||\n    $echo 'tdbsa/patches/static-functions:' 'original size' '545,' 'current size' \"$shar_count!\"\n  fi\nfi\n# ============= tdbsa/Makefile ==============\nif test -f 'tdbsa/Makefile' && test \"$first_param\" != -c; then\n  $echo 'x -' SKIPPING 'tdbsa/Makefile' '(file already exists)'\nelse\n  $echo 'x -' extracting 'tdbsa/Makefile' '(text)'\n  sed 's/^X//' << 'SHAR_EOF' > 'tdbsa/Makefile' &&\nall: tdbtool\nX\ntdb.c tdb.h tdbtool.c: \nX\t./build-tdb\nX\ntdbtool.o: tdbtool.c\nX\tgcc -c tdbtool.c\nX\ntdbtool: tdb.o tdbtool.o\nX\tgcc -o tdbtool tdb.o tdbtool.o\nX\nclean:\nX\trm -f tdb.c tdb.h tdb.o tdbtool tdbtool.c tdbtool.o .svninfo\nX\trm -rf .pc\nX\nSHAR_EOF\n  chmod 0644 'tdbsa/Makefile' ||\n  $echo 'restore of' 'tdbsa/Makefile' 'failed'\n  if ( md5sum --help 2>&1 | grep 'sage: md5sum \\[' ) >/dev/null 2>&1 \\\n  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then\n    md5sum -c << SHAR_EOF >/dev/null 2>&1 \\\n    || $echo 'tdbsa/Makefile:' 'MD5 check failed'\nd60a39bdfc602833f2ab64d04840da3c  tdbsa/Makefile\nSHAR_EOF\n  else\n    shar_count=\"`LC_ALL= LC_CTYPE= LANG= wc -c < 'tdbsa/Makefile'`\"\n    test 232 -eq \"$shar_count\" ||\n    $echo 'tdbsa/Makefile:' 'original size' '232,' 'current size' \"$shar_count!\"\n  fi\nfi\nrm -fr _sh05242\nexit 0\n\n"}