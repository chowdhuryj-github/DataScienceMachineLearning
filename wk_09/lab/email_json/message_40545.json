{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Matching of filename regular expression (was:pr warn die question)", "body": "On Jun 1, 12:04 pm, funkyt...@gmail.com (Ben Edwards) wrote:\n> Thanks everybody for there help, did a little more dinging and came up with:-\n>\n>     eval {\n>       $ftp = Net::FTP->new( $remote_host ) or die \"faild to connect to\n> $remote_host\";\n>       $ftp->login( $remote_user, $remote_password ) or die \"failed to\n> login $remote_user\";\n>       $ftp->cwd( $remote_dir ) or die \"fail to cwd to $remote_dir\";\n>       my @f = $ftp->ls or die \"failed to ls $remote_dir\";\n>       foreach $file ( @f ) {\n>         if ( $file =~ /$flist/ ) {\n>           print LOGFILE \"        Getting $file\";\n>           $ftp->get( $file, $local_dir  ) or die \"failed to get $file\";\n>         } else {\n>           print LOGFILE \"        Skipping $file\";\n>         }\n>       }\n>       $ftp->quit;\n>     };\n>\n>     if ($@) {\n>       print LOGFILE \"Error:$@\\n\";\n>       return(1);\n>     }\n>\n> Witch almost works.  The problem is:-\n>\n> if ( $file =~ /$flist/ ) {\n>\n> Which gived the error:-\n>\n> Error:Quantifier follows nothing in regex; marked by <-- HERE in m/*\n> <-- HERE .csv/ at ./subs2pubsub_cron.pl line 786.\n>\n> The variable $flist has something like '*.cvs' in it which I guess is\n> almost but not quite a regular expresion.\n\nIt's not a regular expression at all.  It's a fileglob pattern,\nintended to be parsed by the shell, not by perl.\n\n> Any idea how I can find out if $file matches the filename 'mask'\n> $flist.  Alternatively is there a way of doing a ls and specifying a\n> file mask?\n\nThis is an XY problem.  You have problem X, you've decided upon\nsolution Y, and you're asking us how to do Y instead of how to solve\nX.  Fortunately, unlike most XY problems, you've actually told us what\nX is - You have a fileglob pattern where you want a regular\nexpression.\n\n1) Preferred solution - start off with a regexp to begin with.  Where\nis $flist coming from?  Change your code so that $flist is assigned to\nqr/.*\\.csv$/ rather than \"*.csv\".  If that's not possible for your\nsituation, see Solution #2:\n\n2) Translate the fileglob to a Perl regexp.  Here's the subroutine the\nbuiltin find2perl uses to do just that:\n\nsub fileglob_to_re {\n    my $x = shift;\n    $x =~ s#([./^\\$()])#\\\\$1#g;\n    $x =~ s#([?*])#.$1#g;\n    \"^$x\\\\z\";\n}\n\nPaul Lalli\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}