{"category": "ham", "to_address": "Alma <almatirkey@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: authentication check from file", "body": "On 6/1/07, Alma  wrote:\n\n> I have to store the authentication details like the user_id & password\n> in a file .\n\nYou're saying, you're going to have a file which contains one or more\nuser_id and password pairs, yes?\n\n> I am using postgres db & apache2.. , my search has landed me to\n> mod_auth_pgsql.\n\nYou probably want to use the standard authentication system that\nApache includes, most likely with an .htaccess file or something\nsimilar. Check with your webmaster or system administrator. If the\nthat person is you, check the Apache documentation, or an Apache help\nforum.\n\nBut if you somehow need to do this from Perl code, it's not hard. You\ncan use the crypt() built-in function to scramble the password, then\ncheck it something like this.\n\n  # These come from the user, somehow\n  my $username = 'claimed username';\n  my $attempt = 'password attempt from user';\n\n  # Get this one from the file\n  my $scrambled = &scrambled_password_for($username);\n\n  if ($scrambled ne crypt($attempt, $scrambled)) {\n    &deal_with_bad_password;\n    exit;\n  }\n  # Clear sailing from here\n\nThere are other functions you could use instead of crypt, too. But\ngoing with the tried-and-true Apache authentication beats\nrolling-your-own for security, six days a week and twice on Sundays.\n\nHope this helps!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}