{"category": "ham", "to_address": "\"Perl Beginners\" <beginners@perl.org>", "from_address": "=?iso-8859-1?Q?Thomas_B=E4tzler?= <t.baetzler@bringe.com>", "subject": "RE: Regarding files", "body": "Hi, \n\nDharshana Eswaran  wrote:\n> Keeping the classic (state machine) approach in mid, i tried \n> writing a logic for the same\n> \n> But i am not able to retrieve the lines accurately,\n> \n> Can you please help me with a small piece of code for the \n> same logic which you mentioned?\n\nThis example uses an array as a ring buffer to store\nprevious lines from the input. It'll match lines that\ncontain the string \"foobar\".\n\n$. contains the number of the current line read from the\nlast used file handle. This value is in the range of 1..n.\n\n$howmany is the ring buffer size and determines how many\nlines of text (including the match) are shown.\n\nSample usage (assuming you're saving this as linebuf.pl):\n\n$ ./linebuf.pl < linebuf.pl \n   12:   $buf[ $. % $howmany ] = $line;\n   13: \n   14:   if( $line =~ m/foobar/ ){\n\n#!/usr/bin/perl -w\n\nuse strict;\n\nmy @buf;\n\n# number of context lines including matching line\nmy $howmany = 3;\n\nwhile( my $line = <> ){\n  # store current line in ring buffer\n  $buf[ $. % $howmany ] = $line;\n\n  if( $line =~ m/foobar/ ){\n\n    # if we have a match, retrieve the previous\n    # lines from the ring buffer.\n    for( my $i = $howmany - 1; $i >= 0; $i-- ){\n      # number of the line we're retrieving\n      my $lineno = $. - $i;\n      # show fewer (or no) context lines for a match\n      # near (or at) the start of the input\n      next unless $lineno >= 1;\n      printf \"%5d: %s\", $lineno, $buf[ $lineno % $howmany ];\n    }\n  }\n}\n__END__\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}