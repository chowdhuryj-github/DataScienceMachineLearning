{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "mfrumin <michael@frumin.net>", "subject": "[R] Lookups in R", "body": "\nHey all; I'm a beginner++ user of R, trying to use it to do some processing\nof data sets of over 1M rows, and running into a snafu.  imagine that my\ninput is a huge table of transactions, each linked to a specif user id.  as\nI run through the transactions, I need to update a separate table for the\nusers, but I am finding that the traditional ways of doing a table lookup\nare way too slow to support this kind of operation.\n\ni.e:\n\nfor(i in 1:1000000) {\n   userid = transactions$userid[i];\n   amt = transactions$amounts[i];\n   users[users$id == userid,'amt'] += amt;\n}\n\nI assume this is a linear lookup through the users table (in which there are\n10's of thousands of rows), when really what I need is O(constant time), or\nat worst O(log(# users)).\n\nis there any way to manage a list of ID's (be they numeric, string, etc) and\nhave them efficiently mapped to some other table index?\n\nI see the CRAN package for SQLite hashes, but that seems to be going a bit\ntoo far.\n\nthanks,\nMike\n\nIntern, Oyster Card Group, Transport for London\n(feel free to email back to this address, I'm posting through NAbble so I\nhope it works).\n-- \nView this message in context: http://www.nabble.com/Lookups-in-R-tf4026062.html#a11435994\nSent from the R help mailing list archive at Nabble.com.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}