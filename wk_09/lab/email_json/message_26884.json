{"category": "ham", "to_address": "<r-help@stat.math.ethz.ch>", "from_address": "\"Rory Martin\" <rory.martin@comcast.net>", "subject": "Re: [R] how to control the sampling to make each sample unique", "body": "I think you're asking a design question about a Monte Carlo simulation.  You\nhave a \"population\" (size 10,000) from which you're defining an empirical\ndistribution, and you're sampling from this to create pairs of training and\ntest samples.\n\nYou need to ensure that each specific pair of training and test samples is\ndisjoint, meaning no observations in common.  Normally, you wouldn't want to\nmake the different training samples disjoint, if that's what you meant by\nthem being \"unique\".  Or were you using it to mean \"identical\"?\n\nRegards\nRory Martin\n\n\n> From: HelponR  Date: Wed, 09 May 2007 17:28:19\n>\n> I have a dataset of 10000 records which I want to use to compare two\n> prediction models.\n>\n> I split the records into test dataset (size = ntest) and training dataset\n> (size = ntrain). Then I run the two models.\n>\n> Now I want to shuffle the data and rerun the models. I want many shuffles.\n>\n> I know that the following command\n>\n> sample ((1:10000), ntrain)\n>\n> can pick ntrain numbers from 1 to 10000. Then I just use these rows as the\n> training dataset.\n>\n> But how can I make sure each run of sample produce different results? I\n> want the data output be unique each time. I tested sample(). and found it\n> usually produce different combinations. But can I control it some how? Is\n> there a better way to write this?\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}