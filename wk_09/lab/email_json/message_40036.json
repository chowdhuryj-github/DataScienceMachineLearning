{"category": "ham", "to_address": "\"Darren Duncan\" <darren@darrenduncan.net>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: propose renaming Hash to Dict", "body": "On 5/31/07, Darren Duncan  wrote:\n> Barring some better name, I highly recommend/propose renaming Hash to Dict.\n\nAnd lets rename Perl to Python. This is just change for the sake of change.\n\nsnip\n> The term Dict (as a short form of \"dictionary\") is well understood by\n> general people and is the term used for associative arrays in some\n> other languages, so it is easy to learn, and easy to explain to\n> people in Learning Perl.\nsnip\n\nDict also makes it sound like you are talking about pornography.  Of\ncourse, hash makes it sound like you are talking about getting high.\n\nsnip\n> The term Dict is easier for new people to Perl, either new\n> programmers or visitors from other languages, to learn than Hash is.\n> It allows more self-documenting code where one is used.  And writing\n> Learning Perl should be easier.\nsnip\n\nPlease provide the peer-reviewed study that proves this as it goes\nagainst my experience.\n\nsnip\n> For Perl 5 people, it should be very easy to adapt, or for the most\n> part they may not notice any difference save for documentation\n> references.\nsnip\n\nThe Perl 5 people are already annoyed that . is changing to ~, sigils\nare becoming invariant, etc.  Why not change the name of one of the\ndata structures too?  If we give them too many things to complain\nabout they won't be able to decide where to start!\n\nsnip\n> You also have equal huffmanization since the terms Hash and Dict are\n> both of the same length, and they are also equally easy to type.\nsnip\n\nThey may be the same number of characters, but I can type hash without\nleaving the home row on QWERTY keyboards, I don't know about Dvorak.\n\nsnip\n> And aside from the 4 letter word, all the other details associated\n> with hashes, eg the % sigil and {} constructor, and parts named\n> keys,values,pairs,kv et al can/should remain the same as they are.\nsnip\n\nRight, because dictionaries have keys and values not terms and\ndefinitions.  Of course, it all makes sense now.\n\nsnip\n> In fact, since many users of Perl don't refer to the data type by the\n> name Hash but rather just by % or {}, the change may not take from\n> their useability at all or they may not even notice that a change\n> occurred at all, so easy to adapt.\nsnip\n\nExcept of course those poor schmucks who foolishly wrote code like\n\nif (ref $arg eq 'HASH') { ... }\n\n"}