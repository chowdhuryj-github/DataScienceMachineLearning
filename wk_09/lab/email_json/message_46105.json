{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23415 - in branches/SAMBA_3_0_26/source: . utils", "body": "Author: obnox\nDate: 2007-06-11 10:46:25 +0000 (Mon, 11 Jun 2007)\nNew Revision: 23415\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23415\n\nLog:\nMerge introduction of lib/util_reg.c from r16945.\n(Can't find logs/diffs from trunk anymore.)\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/Makefile.in\n   branches/SAMBA_3_0_26/source/utils/net_rpc_printer.c\n   branches/SAMBA_3_0_26/source/utils/net_rpc_registry.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/Makefile.in\n===================================================================\n--- branches/SAMBA_3_0_26/source/Makefile.in\t2007-06-11 10:28:23 UTC (rev 23414)\n+++ branches/SAMBA_3_0_26/source/Makefile.in\t2007-06-11 10:46:25 UTC (rev 23415)\n@@ -267,7 +267,7 @@\n \t  lib/ufc.o lib/genrand.o lib/username.o \\\n \t  lib/util_pw.o lib/access.o lib/smbrun.o \\\n \t  lib/bitmap.o lib/crc32.o lib/dprintf.o \\\n-\t  lib/xfile.o lib/wins_srv.o \\\n+\t  lib/xfile.o lib/wins_srv.o lib/util_reg.o \\\n \t  lib/util_str.o lib/clobber.o lib/util_sid.o lib/util_uuid.o \\\n \t  lib/util_unistr.o lib/util_file.o lib/data_blob.o \\\n \t  lib/util.o lib/util_sock.o lib/sock_exec.o lib/util_sec.o \\\n\nModified: branches/SAMBA_3_0_26/source/utils/net_rpc_printer.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/utils/net_rpc_printer.c\t2007-06-11 10:28:23 UTC (rev 23414)\n+++ branches/SAMBA_3_0_26/source/utils/net_rpc_printer.c\t2007-06-11 10:46:25 UTC (rev 23415)\n@@ -129,18 +129,23 @@\n \t\tbreak;\n \n \tcase REG_MULTI_SZ: {\n-\t\tuint16 *curstr = (uint16 *) value.data_p;\n-\t\tuint8 *start = value.data_p;\n-\t\td_printf(\"\\t[%s:%s]: REG_MULTI_SZ:\\n\", subkey, value.valuename);\n-\t\twhile ((*curstr != 0) && \n-\t\t       ((uint8 *) curstr < start + value.size)) {\n-\t\t\trpcstr_pull(text, curstr, sizeof(text), -1, \n-\t\t\t\t    STR_TERMINATE);\n-\t\t\td_printf(\"%s\\n\", text);\n-\t\t\tcurstr += strlen(text) + 1;\n+\t\tint i, num_values;\n+\t\tchar **values;\n+\n+\t\tif (!NT_STATUS_IS_OK(reg_pull_multi_sz(NULL, value.data_p,\n+\t\t\t\t\t\t       value.size,\n+\t\t\t\t\t\t       &num_values,\n+\t\t\t\t\t\t       &values))) {\n+\t\t\td_printf(\"reg_pull_multi_sz failed\\n\");\n+\t\t\tbreak;\n \t\t}\n+\n+\t\tfor (i=0; ibuffer, sizeof(string), -1, STR_TERMINATE );\n \t\td_printf(\"%s\\n\", string);\n \t\tbreak;\n-\tcase REG_MULTI_SZ:\n+\tcase REG_MULTI_SZ: {\n+\t\tint i, num_values;\n+\t\tchar **values;\n+\n \t\td_printf(\"\\n\");\n+\n+\t\tif (!NT_STATUS_IS_OK(reg_pull_multi_sz(NULL, buffer->buffer,\n+\t\t\t\t\t\t       buffer->buf_len,\n+\t\t\t\t\t\t       &num_values,\n+\t\t\t\t\t\t       &values))) {\n+\t\t\td_printf(\"reg_pull_multi_sz failed\\n\");\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\tfor (i=0; ibuffer, 0 );\n \t\td_printf( \"0x%x\\n\", value );\n@@ -113,16 +101,17 @@\n \t\n \tresult = rpccli_reg_connect(pipe_hnd, mem_ctx, hive, MAXIMUM_ALLOWED_ACCESS, &pol_hive );\n \tif ( !W_ERROR_IS_OK(result) ) {\n-\t\td_fprintf(stderr, \"Unable to connect to remote registry\\n\");\n+\t\td_fprintf(stderr, \"Unable to connect to remote registry: \"\n+\t\t\t  \"%s\\n\", dos_errstr(result));\n \t\treturn werror_to_ntstatus(result);\n \t}\n \t\n-\tif ( strlen( subpath ) != 0 ) {\n-\t\tresult = rpccli_reg_open_entry(pipe_hnd, mem_ctx, &pol_hive, subpath, MAXIMUM_ALLOWED_ACCESS, &pol_key );\n-\t\tif ( !W_ERROR_IS_OK(result) ) {\n-\t\t\td_fprintf(stderr, \"Unable to open [%s]\\n\", argv[0]);\n-\t\t\treturn werror_to_ntstatus(result);\n-\t\t}\n+\tresult = rpccli_reg_open_entry(pipe_hnd, mem_ctx, &pol_hive, subpath,\n+\t\t\t\t       MAXIMUM_ALLOWED_ACCESS, &pol_key );\n+\tif ( !W_ERROR_IS_OK(result) ) {\n+\t\td_fprintf(stderr, \"Unable to open [%s]: %s\\n\", argv[0],\n+\t\t\t  dos_errstr(result));\n+\t\treturn werror_to_ntstatus(result);\n \t}\n \t\n \t/* get the subkeys */\n@@ -173,7 +162,7 @@\n \t\t}\n \t\t\t\n \t\td_printf(\"Valuename  = %s\\n\", name );\n-\t\td_printf(\"Type       = %s\\n\", dump_regval_type(type) );\n+\t\td_printf(\"Type       = %s\\n\", reg_type_lookup(type));\n \t\td_printf(\"Data       = \" );\n \t\tdump_regval_buffer( type, &value );\n \t\td_printf(\"\\n\" );\n@@ -279,7 +268,7 @@\n \n \tfor ( i=0; inum_values; i++ ) {\n \t\td_printf( \"\\\"%s\\\" = \", nk->values[i].valuename ? nk->values[i].valuename : \"(default)\" );\n-\t\td_printf( \"(%s) \", dump_regval_type( nk->values[i].type ) );\n+\t\td_printf( \"(%s) \", reg_type_lookup( nk->values[i].type ) );\n \n \t\tdata_size = nk->values[i].data_size & ~VK_DATA_IN_OFFSET;\n \t\tswitch ( nk->values[i].type ) {\n\n"}