{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: Simplification of the code", "body": "Nath, Alok (STSD) wrote:\n >\n >   Can anybody help me to simplify the for loops here ?\n >   It parses the excel file.\n >\n >\n >   foreach my $col (1..10){\n >     push @row_1, $Sheet->Cells(1, $col)->{'Value'} ;\n >   }\n >   my @node_names = th(\\@row_1);\n >\n >   foreach my $col (1..10){\n >     push @row_2, $Sheet->Cells(2, $col)->{'Value'} ;\n >   }\n >   my @workstations = td(\\@row_2);\n >\n >\n >   foreach my $col (1..10){\n >     push @row_3, $Sheet->Cells(3, $col)->{'Value'} ;\n >   }\n >   my @cards = td(\\@row_3);\n >\n >\n >   I am using the above for loops to create a table -finally.\n >\n >\n >   print table({-border=>undef,-width=>'100%'},\n >             caption(b('My table')),\n >             Tr(\\@node_names),\n >             Tr(\\@workstations),\n >             Tr(\\@cards),\n >   }\n\nIs everybody trying for an obfuscation award here?\n\nIn your code, Alok, the output from th() and td() is a single piece of HTML\ntext and so doesn't need storing in an array. Instead put the Excel table\nvalues into your arrays and build all the HTML at once. Like this.\n\nHTH,\n\nRob\n\n\n\nmy (@node_names, @workstations, @cards);\n\nforeach my $col (1 .. 10) {\n   push @node_names,   $Sheet->Cells(1, $col)->{'Value'};\n   push @workstations, $Sheet->Cells(2, $col)->{'Value'} ;\n   push @cards,        $Sheet->Cells(3, $col)->{'Value'} ;\n}\n\nprint table({-border=>undef,-width=>'100%'},\n   caption(b('My table')),\n   Tr(th(\\@node_names)),\n   Tr(td(\\@workstations)),\n   Tr(td(\\@cards)),\n);\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}