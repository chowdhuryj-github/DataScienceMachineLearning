{"category": "ham", "to_address": "\"Booman, M\" <m.booman@path.umcg.nl>", "from_address": "\"Christophe Pallier\" <christophe@pallier.org>", "subject": "Re: [R] Wilcoxon test on data matrix", "body": "   wilcox.test(data.matrix[i,] ~ data.cl)$p.value\n\nwill return the p.value for row 'i'.\n\nWith a loop:\n\n   pv = rep(0,42)\n   for (i in 1:42) { pv[i]=wilcox.test(data.matrix[i,] ~ data.cl)$p.value }\n\nIs this what you wanted?\n\nChristophe\n\n\n\n\nOn 6/14/07, Booman, M  wrote:\n>\n> Dear everyone,\n> I am trying to do a Wilcoxon one-sided test on my gene expression data.\n> These are the data i have in R:\n> data.matrix (matrix, numeric) containing all gene expression data (42\n> rows=genes,  42 columns=tumors), no column header or row names\n> data.cl (vector, numeric) consisting of 42 0's and 1's to indicate class 0\n> or class 1 for each column in data.matrix\n>\n> I want to do a Wilcoxon one-sided test on the data from class 0 versus the\n> data from class 1, for each row (gene) of the data set.\n> My first try:\n>\n> #to make separate matrices for both classes:\n> data.matrix.0 <- data.matrix[,data.cl==0]\n> data.matrix.1 <- data.matrix[,data.cl==1]\n>\n> # to run the wilcox.test function for each row:\n> rawp <- apply(data.matrix.0, 1, wilcox.test, y=data.matrix.1,\n> alternative=\"less\")\n>\n>\n> The result of printing rawp is:\n> $`1`\n>\n>         Wilcoxon rank sum test with continuity correction\n>\n> data:  newX[, i] and data.matrix.1\n> W = 7585, p-value = 1\n> alternative hypothesis: true location shift is less than 0\n>\n>\n> $`2`\n>\n>         Wilcoxon rank sum test with continuity correction\n>\n> data:  newX[, i] and data.matrix.1\n> W = 6700, p-value = 0.9983\n> alternative hypothesis: true location shift is less than 0\n>\n>\n> Etcetera for each row of the data matrix.\n> I can get the p value for one row (gene) using:\n> rawp.1 <- rawp$'1'$p.value\n>\n> But how can I get these p-values in one list? I have tried:\n> rawp <- NULL\n> for (i in 1:42) {\n>         a <- paste(\"'\", i, \"'\", sep=\"\")\n>         rawp <- rbind(rawp, test$a$p.value)\n> }\n>\n> but that doesn't work (no errors but rawp stays NULL)\n>\n> There must be an easier way to do a wilcoxon analysis on a matrix!\n> I'd appreciate your help with this...\n>\n> Marije\n>\n>\n> De inhoud van dit bericht is vertrouwelijk en alleen bestemd voor de\n> geadresseerde(n). Anderen dan de geadresseerde mogen geen gebruik maken van\n> dit bericht, het openbaar maken of op enige wijze verspreiden of\n> vermenigvuldigen. Het UMCG kan niet aansprakelijk gesteld worden voor een\n> incomplete aankomst of vertraging van dit verzonden bericht.\n>\n> The contents of this message are confidential and only intended for the\n> eyes of the addressee(s). Others than the addressee(s) are not allowed to\n> use this message, to make it public or to distribute or multiply this\n> message in any way. The UMCG cannot be held responsible for incomplete\n> reception or delay of this transferred message.\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n>\n\n\n-- \nChristophe Pallier (http://www.pallier.org)\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}