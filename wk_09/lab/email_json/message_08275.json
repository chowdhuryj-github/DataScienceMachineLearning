{"category": "ham", "to_address": "parrot-porters@perl.org, \"Perl 6 announce list\" <perl6-announce@perl.org>,\n   perl6-language@perl.org, perl5-porters@perl.org", "from_address": "\"Matt Diephouse\" <mddiep@gmail.com>", "subject": "Parrot 0.4.11 released", "body": "On behalf of the Parrot team, I'm proud to announce Parrot 0.4.11\n\"Tax Bird.\" Parrot (http://parrotcode.org/) is a virtual machine aimed\nat running all dynamic languages.\n\nParrot 0.4.11 can be obtained via CPAN (soon), or follow the\ndownload instructions at http://parrotcode.org/source.html.\nFor those who would like to develop on Parrot, or help develop\nParrot itself, we recommend using Subversion or SVK on the\nsource code repository to get the latest and best Parrot code.\n\nParrot 0.4.11 News:\n- Compilers:\n + IMCC: added documentation for C-based Parrot Calling Conventions,\n   refactorings and bug fixes\n + PGE: new perl6regex front end reflecting recent S05 syntax changes\n + PIRC: new prototype PIR parser\n- Languages:\n + Updated Lua, PHP (\"Plumhead\"), BASIC, pynie\n + Lua implements environment\n- Design:\n + PDD15 \"Objects\" - details added, and draft approved\n- Documentation:\n + Added guidelines for PMC documentation\n- Implementation:\n + PDD15 implementation is largely complete, including role-based composition,\n   introspection, and C3 method resolution order\n + new Exporter PMC for importing globals between namespaces\n + new string utilities for radix conversion\n + PCCINVOKE and Parrot_PCCINVOKE allow calling using the full Parrot Calling\n   Conventions from PMCs and C code respectively\n- Build:\n + Refactorings and improvements in test coverage for 'Configure.pl'\n- Misc:\n + many bugfixes, enhancements, and code cleanup\n + added example subversion config file\n + extended support for gcc, icc, and other compilers\n + extended support for Solaris and other platforms\n\n\nThanks to all our contributors for making this possible, and our\nsponsors for supporting this project.\n\nEnjoy!\n\n-- \nMatt Diephouse\n\n"}