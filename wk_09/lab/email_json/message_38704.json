{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 400: - use a CTDB_BROADCAST_ALL for the attach message so it\n\tgoes to currently disconnected nodes in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 400\nrevision-id: tridge@samba.org-20070530043522-e7fwbj5jcoq6m8b1\nparent: tridge@samba.org-20070530032650-s6oop81di7yafp2n\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Wed 2007-05-30 14:35:22 +1000\nmessage:\n  - use a CTDB_BROADCAST_ALL for the attach message so it goes to currently disconnected nodes\n  - start node monitoring only after transport starts\n  - check if a node is already disconnected in the node dead function\nmodified:\n  common/ctdb.c                  ctdb.c-20061127094323-t50f58d65iaao5of-2\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n=== modified file 'common/ctdb.c'\n--- a/common/ctdb.c\t2007-05-29 06:23:47 +0000\n+++ b/common/ctdb.c\t2007-05-30 04:35:22 +0000\n@@ -371,6 +371,12 @@\n */\n void ctdb_node_dead(struct ctdb_node *node)\n {\n+\tif (!(node->flags & NODE_FLAGS_CONNECTED)) {\n+\t\tDEBUG(1,(\"%s: node %s is already marked disconnected: %u connected\\n\", \n+\t\t\t node->ctdb->name, node->name, \n+\t\t\t node->ctdb->num_connected));\n+\t\treturn;\n+\t}\n \tnode->ctdb->num_connected--;\n \tnode->flags &= ~NODE_FLAGS_CONNECTED;\n \tnode->rx_cnt = 0;\n@@ -385,6 +391,12 @@\n */\n void ctdb_node_connected(struct ctdb_node *node)\n {\n+\tif (node->flags & NODE_FLAGS_CONNECTED) {\n+\t\tDEBUG(1,(\"%s: node %s is already marked connected: %u connected\\n\", \n+\t\t\t node->ctdb->name, node->name, \n+\t\t\t node->ctdb->num_connected));\n+\t\treturn;\n+\t}\n \tnode->ctdb->num_connected++;\n \tnode->dead_count = 0;\n \tnode->flags |= NODE_FLAGS_CONNECTED;\n\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-05-30 03:26:50 +0000\n+++ b/common/ctdb_daemon.c\t2007-05-30 04:35:22 +0000\n@@ -50,6 +50,9 @@\n \t\tDEBUG(0,(\"Failed to start recovery daemon\\n\"));\n \t\texit(11);\n \t}\n+\n+\t/* start monitoring for dead nodes */\n+\tctdb_start_monitoring(ctdb);\n }\n \n /* go into main ctdb loop */\n@@ -772,9 +775,6 @@\n \n \tctdb->ev = event_context_init(NULL);\n \n-\t/* start monitoring for dead nodes */\n-\tctdb_start_monitoring(ctdb);\n-\n \t/* start frozen, then let the first election sort things out */\n \tif (!ctdb_blocking_freeze(ctdb)) {\n \t\tDEBUG(0,(\"Failed to get initial freeze\\n\"));\n\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-05-29 03:48:30 +0000\n+++ b/common/ctdb_ltdb.c\t2007-05-30 04:35:22 +0000\n@@ -425,7 +425,7 @@\n \t}\n \t\n \t/* tell all the other nodes about this database */\n-\tctdb_daemon_send_control(ctdb, CTDB_BROADCAST_VNNMAP, 0,\n+\tctdb_daemon_send_control(ctdb, CTDB_BROADCAST_ALL, 0,\n \t\t\t\t CTDB_CONTROL_DB_ATTACH, 0, CTDB_CTRL_FLAG_NOREPLY,\n \t\t\t\t indata, NULL, NULL);\n \n\n"}