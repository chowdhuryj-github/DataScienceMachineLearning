{"category": "ham", "to_address": "christian.ritter@shell.com", "from_address": "Thomas Lumley <tlumley@u.washington.edu>", "subject": "Re: [R] Looking for R-code for non-negative matrix factorization in\n the presence of Gaussian or Poisson noise", "body": "On Mon, 11 Jun 2007, christian.ritter@shell.com wrote:\n\n>\n> Hi all,\n>\n> Has any of you implemented code for non-negative matrix factorization to \n> solve\n>\n> Y=T P' +E; dim(Y)=n,p ; dim(T)=n,nc; dim (P)=(p,nc); dim(E)=n,p\n>\n> where T and P must be non-negative and E either Gaussian or Poisson noise.\n>\n> I'm looking for two variants:\n>\n> 1. Easy (I think), T is known (that is we just want to solve the general \n> inverse problem)\n\nThis is non-negative least squares, a quadratic programming problem, for \nwhich there is code (at least if n and nc are not too big)\n\n>\n> 2. Harder (?), T is unknown (under some restrictions) [as an \n> intermediate, we may want to fix nc]\n>\n\nEven with fixed nc this is Distinctly Non-trivial. It often isn't \nidentifiable, for a start.\n\nI've encountered this problem in air pollution source apportionment, where \npeople use an algorithm due to Paatero (1999) JCGS 8:854-8, which is a \nconjugate gradient algorithm that handles the constraints by creative \nabuse of preconditioning.  The algorithm seems fairly well-behaved, \nalthough the statistical properties of the estimates are not \nwell-understood [at least, I don't understand them, and I have simulations \nthat appear to contradict the views of people who claim to understand \nthem].\n\nThe difficulty probably depends on the size of the problem -- the air \npollution problems have n~1000, p~20, nc~7, or larger.\n\n \t-thomas\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}