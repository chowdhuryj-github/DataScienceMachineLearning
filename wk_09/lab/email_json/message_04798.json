{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "Re: What should file test operators return?", "body": "In article <20070413164207.GA21915@wall.org>, Larry Wall\n wrote:\n\n> On Thu, Apr 12, 2007 at 01:52:50PM -0500, brian d foy wrote:\n\n> : Here's my code example that motivates this question. For a Llama6\n> : exercise with file test operators, I wanted to create a little table:\n> : \n> :    for @files -> $file {\n> :       printf \"%-70s  %s  %s  %s\\n\",\n> :          $file,\n\n\n\n\n> I think I would now write that more like:\n> \n>     for @files -> $file {\n>  given stat $file {\n>    printf \"%-70s  %s  %s  %s\\n\", $file, .:r, .:w, .:x;      \n>  }\n>     }\n\n\nHmmm, that's a good little bit of code, as was Damian's use of the\nhyper-operator. The trick is to figure how how much I can use in Llama\n6 without scaring off the reader. :)\n\nI'm actually starting at the back of the book so I know what I have to\nput in the front of the book to get that far. In previous Llamas the\nfile tests operators came before stat, but maybe this answer is a good\nend-of-chapter sorta thing.\n\nI'll also have to think about using given {} merely as a topicalizer\ntoo, I guess, although showing it next to an explicit assignment to $_.\n\n:)\n\n"}