{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Felix Wave <felix-wave@vr-web.de>", "subject": "[R] Dataimport with readLines using skip= and nlines= ?", "body": "Hello,\nI have a problem with readLines.\nI have a data file with many informations added with a different number of measurments (example at the end).\nI only want to read the measurments witch start with \"START OF HEIGHT DATA\" and end with \"END OF HEIGHT DATA\". \n\nThe difficulty is: \n-I want to read the file with \"readLines\", because the measurments have letters and \nnumbers (e.g. S=0.00012) witch have to be filtered for using a matrix (scan make errors). \n-The second problem is, that the number of measurments is variable.\n\nMy idea. I have the position (skip=r2) of the beginning of the measurments, the length (nlines=r1) and the number of all measurments (for (i in i:r3)).\n\nMy problem and question. I need a command to read my measurments.\nThe readLine command has no possibility to skip lines. And the read.file command\ncan't filter my data.dat for (S= , S=, x=, y=).\n\nI hope you have an idea.\nThank's for all.\nFelix\n\n\n\nMy R Code:\n--------------\n\n#################################################\n#R Code to find to measurments in the data file #\n#################################################\nlocation <- my.read.file( \"dat.dat\" )  \n    \nmy.read.file <- function(file=file){                               \na1 <- readLines( con=file, n=-1 )                                    \na2 <- grep(\"START OF HEIGHT DATA|END OF HEIGHT DATA\", a1 )          \na3 <- matrix(a2, ncol=2)              #matrix with the location of START & END                                          \n}   \n                                                                \nr1 <- location[,2] - location[,1]    #distance between START & END                                 \nr2 <- location[,1]                         #position of START\nr3 <- length(location) / 2             #number of START & ENDs \n\n\n################################################\n# R Code to read the measurments ###############\n################################################\nfor (i in 1:r3)\n\nMeasure[i] <- meas.read.file( \"dat.dat\" )                    #single matrix for every measurment\n\nmeas.read.file <-  function(file=file){                           #HERE IS MY PROBLEM                         \n#v1 <- read.table(\"dat.dat\", skip=r2[i], nlines=r3[i])  #HERE IS MY PROBLEM  \nv2 <- readLines( con=file, n=-1)                                         \nv3 <- gsub(\" \", \"\", v2)                                                   \nv4 <- gsub( \"S=|y=|x=\", \" \", v3 )                                         \nv5 <- gsub(\"^ \", \"\", v4)                                                  \n                                                                          \nm <- t( sapply( strsplit(v5, split=\" \"), as.numeric ) )                   \ncolnames(m) <- c(\"S\", \"y\", \"x\" )                                          \nreturn(m)                                                                 \n}            \n\n\n\n\nMy Datafile:\n########                                                        \n\n\nEXAM NUM:2\n-----------------\nEXAM #1\nASTIG:-2.4D\nAXIS:4.8\nSTART OF HEIGHT DATA\nS= 0 y=0.0 x=0.00000000\nS= 0 y=0.1 x=0.00055643\nS= 9 y=4.9 x=1.67278117\nS= 9 y=5.0 x=1.74873257\nS=10 y=0.0 x=0.00000000\nS=10 y=0.1 x=0.00075557\nS=99 y=5.3 x=1.94719490\nEND OF HEIGHT DATA\nX POS:-0.299mm\nY POS:0.442mm\nZ POS:-0.290mm\n-----------------\nEXAM #2\nASTIG:-2.4D\nAXIS:4.8\nSTART OF HEIGHT DATA\nS= 0 y=0.0 x=0.00000000\nS= 0 y=0.1 x=0.00055643\nS= 9 y=4.9 x=1.67278117\nS= 9 y=5.0 x=1.74873257\nS=10 y=0.0 x=0.00000000\nS=10 y=0.1 x=0.00075557\nS=99 y=5.3 x=1.94719490\nEND OF HEIGHT DATA\nX POS:-0.299mm\nY POS:0.442mm\nZ POS:-0.290mm\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}