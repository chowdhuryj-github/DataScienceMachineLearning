{"category": "ham", "to_address": "<R-help@stat.math.ethz.ch>", "from_address": "\"Muenchen, Robert A (Bob)\" <muenchen@utk.edu>", "subject": "[R] do.call vs. lapply for lists", "body": "Hi All,\n\nI'm trying to understand the difference between do.call and lapply for\napplying a function to a list. Below is one of the variations of\nprograms (by Marc Schwartz) discussed here recently to select the first\nand last n observations per group.\n\nI've looked in several books, the R FAQ and searched the archives, but I\ncan't find enough to figure out why lapply doesn't do what do.call does\nin this case. The help files & newsletter descriptions of do.call sound\nlike it would do the same thing, but I'm sure that's due to my lack of\nunderstanding about their specific terminology. I would appreciate it if\nyou could take a moment to enlighten me. \n\nThanks,\nBob\n\nmydata <- data.frame(\n  id      = c('001','001','001','002','003','003'),\n  math    = c(80,75,70,65,65,70),\n  reading = c(65,70,88,NA,90,NA)\n)\nmydata\n\nmylast <- lapply( split(mydata,mydata$id), tail, n=1)\nmylast\nclass(mylast) #It's a list, so lapply will so *something* with it.\n\n#This gets the desired result:\ndo.call(\"rbind\", mylast)\n\n#This doesn't do the same thing, which confuses me:\nlapply(mylast,rbind)\n\n#...and data.frame won't fix it as I've seen it do in other\ncircumstances:\ndata.frame( lapply(mylast,rbind) )\n\n=========================================================\n  Bob Muenchen (pronounced Min'-chen), Manager  \n  Statistical Consulting Center\n  U of TN Office of Information Technology\n  200 Stokely Management Center, Knoxville, TN 37996-0520\n  Voice: (865) 974-5230  \n  FAX:   (865) 974-4810\n  Email: muenchen@utk.edu\n  Web:   http://oit.utk.edu/scc, \n  News:  http://listserv.utk.edu/archives/statnews.html\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}