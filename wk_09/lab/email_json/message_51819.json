{"category": "ham", "to_address": "Yuchen Luo <realityrandom@gmail.com>, r-help@stat.math.ethz.ch", "from_address": "Moshe Olshansky <m_olshansky@yahoo.com>", "subject": "Re: [R] \"if\" within a function", "body": "Hi Yuchen,\n\nIn R, if you do not put an explicit return statement\nin the function, the value the function returns is the\nvalue of the last statement in the function.  Unlike\nVB, it does not matter whether you assign this value\nto aaa (which is identical to your function name) or b\nor c or x etc.\nSo either use an explicit return statement or make\nsure that the last statement in the function produces\nthe right result.\n\n--- Yuchen Luo  wrote:\n\n> Dear Friends.\n> I found a puzzling phenomenon in R when you use 'if'\n> within a function:\n> \n> # defining a function aaa\n> aaa=function(a)\n> {if (a==1) {aaa=1};\n>  if (a!=1) {aaa=2}\n>  }\n> \n> # using the function:\n> > b=20\n> > bbb=aaa(b)\n> > bbb\n> [1] 2\n> > typeof(bbb)\n> [1] \"double\"\n> >\n> >\n> > c=1\n> > ccc=aaa(c)\n> > ccc\n> NULL\n> > typeof(ccc)\n> [1] \"NULL\"\n> \n> It seems that only the last 'if' phrase works. Is it\n> an instrinsic weakness\n> of R? Is there a way to get around it? ( I use\n> 'elseif' to get around this\n> when there are only two cases to choose from, but\n> what if there are more\n> than two cases to choose from?)\n> \n> Best\n> Yuchen\n> \n> \t[[alternative HTML version deleted]]\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained,\n> reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}