{"category": "ham", "to_address": "Chas Owens <chas.owens@gmail.com>, Tom Allison <tom@tacocat.net>", "from_address": "Jeff Pang <pangj@earthlink.net>", "subject": "Re: forking problem with dbd::mysql", "body": "-----Original Message-----\n>From: Chas Owens \n>In his case there is not a portability issue.  What is not portable is\n>using the parent's handle inside the child, but he is opening a new\n>handle inside the child.  The problem was the auto-close behavior\n>which is made a non-problem by the flag.  You should never expect to\n>be able to use a database handle from one process inside another; it\n>may be possible, but you should not be surprised when it breaks.\n\n\nLet me also give a simple conclusion,\n\n1) Using InactiveDestroy to disable auto-close is the correct way.Where the dbh object go away first,then put the InactiveDestroy there.For example,this could work,\n\nuse MyDB;  # a simple db class encapsulated from DBI\n\nmy $db = MyDB->new;\nmy $pid = fork;\n\nunless ($pid) {  # in child\n    $db->{dbh}->{InactiveDestroy} = 1;  # in child the dbh object would go away first\n    sleep 3;\n    exit 0;\n} else {  # in parent\n    while(1) {\n        my ($re) = $db->get_line(\"select 1\");\n        print $re,\"\\n\";\n        sleep 1;\n    }\n}\n\n__END__\n\nBut this couldn't work,\n\nuse MyDB;  # a simple db class encapsulated from DBI\n\nmy $db = MyDB->new;\nmy $pid = fork;\n\nunless ($pid) {  # in child\n    sleep 3;\n    exit 0;\n} else {  # in parent\n    $db->{dbh}->{InactiveDestroy} = 1;  # not useful here,dbh would break due to child exiting\n    while(1) {\n        my ($re) = $db->get_line(\"select 1\");\n        print $re,\"\\n\";\n        sleep 1;\n    }\n}\n\n__END__\n\n2) Not using InactiveDestroy,but re-creating a dbh object in child (the process go away first),is not useful.The dbh object in parent (the process which keep alive) would still break.Case is shown below,\n\nuse MyDB;  # a simple db class encapsulated from DBI\n\nmy $db = MyDB->new;\nmy $pid = fork;\n\nunless ($pid) {  # in child\n    my $db = MyDB->new;  # re-create a dbh object\n    sleep 3;\n    exit 0;\n} else {  # in parent\n    while(1) {\n        my ($re) = $db->get_line(\"select 1\");\n        print $re,\"\\n\";\n        sleep 1;\n    }\n}\n\n__END__\n\n\n--\nmailto:pangj@earthlink.net\nhttp://home.arcor.de/jeffpang/\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}