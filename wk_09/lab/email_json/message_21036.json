{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "(Ted Harding) <ted.harding@nessie.mcc.ac.uk>", "subject": "Re: [R] to draw a smooth arc", "body": "This thread prompts me to ask about something I've\nbeen pondering for a while, as to whether there's an\nimplementation somewhere ticked away in the R resources.\n\nSo far, people have been responding to the original query\nin terms of increasing the numbers of points, and joining\nthese by lines.\n\nHowever, if you're using PostScript output, you can draw\nreally smooth curves by exploiting PS's \"curveto\" operator.\nThis draws a cubic-curve segment in the following way:\n\nThe two points you want to join with a curve will be denoted\nby (X0,Y0) and (X3,Y3) in the following (for reasons which\nwill appear). The PS command is of the form\n\n  x1 y1  x2 y2  X3 Y3  curevto\n\nAt (X0,Y0) the tangent to the curve (as it departs from (X0,Y0)\nis in the direction of the directed line from (X0,Y0) to (x1,y1),\nand at (X3,Y3) (as it arrives) the tangent to the curve is\nin the direction of the directed line from (x2,y3) to (X3,Y3).\n\nThe location of (X0,Y0) is not part of the command, since\nit is implicit in the PS \"currentpoint\" which is the starting\npoint of the curve.\n\nThe result is (in theory, and in practice to within the resolution\nof the output device) a perfectly smooth curve, provided the\nconsecutive cubic segments have the same tangent at each of\nthe points being joined. This can be achieved by appropriate\nchoice of the \"intermediate\" points -- (x1,y2), (x2,y2) above.\n\nSo far, when I've done this myself (including when using the\noutput from R to give the points being joined), I've done the\ncomputation of the \"intermediate\" points \"by hand\". This basically\ninvolves deciding, at each of the points being joined, what the\ntangent to the smooth curve shouold be.\n\nOf course, there is an element of arbitrariness in this, unless\nthere is an analytic representation of the curve on which the\npoints lie (e.g. you're plotting sin(x)/x every pi/8, and\nwant to join them smoothly), when all you need is the derivatives\nat the points.\n\nCrudely, you might evaluate the direction at a point in terms\nos a weighted average of the directions to its two immediate\nneighbours (the nearer meghbour ges the greater weight); less\ncrudely, you might fit a quadratic through the point and its\n2 neighbours and use the gradient at the middle point; and so on.\n\nOnce you've decided on the tangent at each point, it's then\nstraightforward to compute suitable \"intermediate points\"\nto serve as (x1,y2) and (x2,y2).\n\n(One application where this sort of approach is needed is in\njoining computed points on iso-contours, where the individual\npoints have been determined by interpolation of spot-measurements\nat nearby measuring stations).\n\nAnyway. The Question: is there a general function for the\nabove kind of smooth curve-drawing?\n\nWith thanks,\nTed.\n\n--------------------------------------------------------------------\nE-Mail: (Ted Harding) \nFax-to-email: +44 (0)870 094 0861\nDate: 01-May-07                                       Time: 14:50:38\n------------------------------ XFMail ------------------------------\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}