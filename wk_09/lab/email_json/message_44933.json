{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23388 - in\n\tbranches/SAMBA_3_0_26/source/registry: .", "body": "Author: obnox\nDate: 2007-06-08 14:29:30 +0000 (Fri, 08 Jun 2007)\nNew Revision: 23388\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23388\n\nLog:\nStart merging the newer registry code.\n\nI found some checkins that apply almost seamlessly: \nr19837, r19838, r19839\nThere is not much flesh to these. - Inteded do reduce \nthe diff for subsequent merges.\n\n* reformat some long lines \n* in regdb_store_keys(), delete value record too when deleting \n  old keys, otherwise the old values will pop up again when\n  re-creating the key.\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/registry/reg_db.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/registry/reg_db.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/registry/reg_db.c\t2007-06-08 12:32:13 UTC (rev 23387)\n+++ branches/SAMBA_3_0_26/source/registry/reg_db.c\t2007-06-08 14:29:30 UTC (rev 23388)\n@@ -396,7 +396,8 @@\n \tREGSUBKEY_CTR *subkeys, *old_subkeys;\n \tchar *oldkeyname;\n \t\n-\t/* fetch a list of the old subkeys so we can determine if any were deleted */\n+\t/* fetch a list of the old subkeys so we can determine if any were\n+\t * deleted */\n \t\n \tif ( !(old_subkeys = TALLOC_ZERO_P( ctr, REGSUBKEY_CTR )) ) {\n \t\tDEBUG(0,(\"regdb_store_keys: talloc() failure!\\n\"));\n@@ -408,7 +409,8 @@\n \t/* store the subkey list for the parent */\n \t\n \tif ( !regdb_store_keys_internal( key, ctr ) ) {\n-\t\tDEBUG(0,(\"regdb_store_keys: Failed to store new subkey list for parent [%s}\\n\", key ));\n+\t\tDEBUG(0,(\"regdb_store_keys: Failed to store new subkey list \"\n+\t\t\t \"for parent [%s]\\n\", key ));\n \t\treturn False;\n \t}\n \t\n@@ -421,6 +423,10 @@\n \t\t\tpstr_sprintf( path, \"%s%c%s\", key, '/', oldkeyname );\n \t\t\tnormalize_reg_path( path );\n \t\t\ttdb_delete_bystring( tdb_reg, path );\n+\t\t\tpstr_sprintf( path, \"%s/%s/%s\", VALUE_PREFIX, key,\n+\t\t\t\t      oldkeyname );\n+\t\t\tnormalize_reg_path( path );\n+\t\t\ttdb_delete_bystring( tdb_reg, path );\n \t\t}\n \t}\n \n@@ -430,7 +436,8 @@\n \t\n \tnum_subkeys = regsubkey_ctr_numkeys( ctr );\n \tfor ( i=0; i<num_subkeys; i++ ) {\n-\t\tpstr_sprintf( path, \"%s%c%s\", key, '/', regsubkey_ctr_specific_key( ctr, i ) );\n+\t\tpstr_sprintf( path, \"%s%c%s\", key, '/',\n+\t\t\t      regsubkey_ctr_specific_key( ctr, i ) );\n \n \t\tif ( !(subkeys = TALLOC_ZERO_P( ctr, REGSUBKEY_CTR )) ) {\n \t\t\tDEBUG(0,(\"regdb_store_keys: talloc() failure!\\n\"));\n@@ -440,7 +447,8 @@\n \t\tif ( regdb_fetch_keys( path, subkeys ) == -1 ) {\n \t\t\t/* create a record with 0 subkeys */\n \t\t\tif ( !regdb_store_keys_internal( path, subkeys ) ) {\n-\t\t\t\tDEBUG(0,(\"regdb_store_keys: Failed to store new record for key [%s}\\n\", path ));\n+\t\t\t\tDEBUG(0,(\"regdb_store_keys: Failed to store \"\n+\t\t\t\t\t \"new record for key [%s]\\n\", path ));\n \t\t\t\tTALLOC_FREE( subkeys );\n \t\t\t\treturn False;\n \t\t\t}\n\n"}