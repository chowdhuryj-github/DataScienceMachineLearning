{"category": "ham", "to_address": "\"Allison Randal\" <allison@perl.org>", "from_address": "\"Alek Storm\" <alek.storm@gmail.com>", "subject": "Re: [perl #42430] [PATCH] make :vtable imply :method", "body": "On 4/18/07, Allison Randal  wrote:\n> Alek Storm wrote:\n> >\n> >> Again, the only part of :method that :vtable needs to imply is the\n> >> part that\n> >> sets the invocant in the proper register and makes 'self' available\n> >> within\n> >> the body of the method.\n> >\n> > So, that still means :method can mean two different things, depending\n> > on whether :vtable is present or not.  That's still bad.\n>\n> How so? Without :vtable, :method adds a method to the class. With\n> :vtable, :method adds a method to the class.\n\nWithout :vtable, :method adds a method to the class.  With :vtable,\n:method doesn't add a method to the class - it makes the sub visible.\nTwo completely different things.\n\n-- \nAlek Storm\n\n"}