{"category": "ham", "to_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "from_address": "\"Alberto Monteiro\" <albmont@centroin.com.br>", "subject": "Re: [R] Testing for existence inside a function", "body": "\nDuncan Murdoch wrote:\n> \n>> Try this:\n>> \n>> f <- function(x) x + 1\n>> f(y.does.not.exist)\n>> y.does.not.exist\n>> \n>> The error message is (almost) the same, and it happens when\n>> parsing the line. There's no way to change f to change this.\n> \n> That description is true in some languages, but not in R.  R doesn't \n> check that args to functions are valid until it needs to use them. \n>  For example:\n> \n>  > f <- function(y) 1  # doesn't care if y exists\n>  > f(y.does.not.exist)\n> [1] 1\n>\nOk, I guess R optimizes every call to f, ignoring its arguments\nunless needed.\n\nf <- function(y) 1 # doesn't care if y exists\ng <- function() cat(\"g was called\\n\")\nf(g())\n[1] 1\n# g was not called\n\nAnother test:\n\nf1 <- function(x, y) if (x == 0) y else 1\nf1(1, y.does.not.exist)\nf1(1, g())\n\nThe y-argument is never called.\n\nSo maybe it _might_ be possible to test if y exists inside the \nfunction...\n\nAlberto Monteiro\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}