{"category": "ham", "to_address": "\"Amichai Teumim\" <amichai@teumim.com>, beginners@perl.org", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: shuffling cards", "body": "On 6/28/07, Martin Barth  wrote:\nsnip\n> > #!/usr/bin/perl\n\nYou are missing two lines here.\n\nuse strict;\nuse warnings;\n\nIf you don't put those two lines you will be surprised by what Perl\ndoes with your code.\n\n> >\n> > @startingdeck = (\"A H\",\"2 H\",\"3 H\",\"4 H\",\"5 H\",\"6 H\",\"7 H\",\"8 H\",\n> >                  \"9 H\",\"10 H\",\"J H\",\"Q H\",\"K H\",\n> >                  \"A D\",\"2 D\",\"3 D\",\"4 D\",\"5 D\",\"6 D\",\"7 D\",\"8 D\",\n> >                  \"9 D\",\"10 D\",\"J D\",\"Q D\",\"K D\",\n> >                  \"A C\",\"2 C\",\"3 C\",\"4 C\",\"5 C\",\"6 C\",\"7 C\",\"8 C\",\n> >                  \"9 C\",\"10 C\",\"J C\",\"Q C\",\"K C\",\n> >                  \"A S\",\"2 S\",\"3 S\",\"4 S\",\"5 S\",\"6 S\",\"7 S\",\"8 S\",\n> >                  \"9 S\",\"10 S\",\"J S\",\"Q S\",\"K S\");\n> >\n> > for ($x=0;$x<100;$x++){\n\nDon't do this.  This is a C style for loop.  C style for loops are bad\nfor a number of reasons I will go into if you ask.  Instead use the\nPerl style for loop:\n\nfor my $x (0 .. 99) {\n\n> >\n> >    $shuffle1 = shift(@startingdeck);\n> >    $ahuffle2 = shift(@startingdeck);\n> >    $ahuffle3 = pop(@startingdeck);\n> >    $ahuffle4 = pop(@startingdeck);\n> >\n> >    push(@startingdeck,$shuffle1,$shuffle3,$shuffle2,$shuffle4);\n\nRemember how I said you would be surprised?  Well, here you are\nassigning $ahuffle2 and later you are using $shuffle2.  Without the\nstrict pragma Perl thinks this is just fine and uses the empty\nvariable $shuffle2 even though you meant it to use $affulle2.  Also,\nnever number your variables like this.  It is sign you are using the\nwrong type of variable.  What yo really need is an array:\n\nmy @shuffle = shift(@startingdeck), shift(@startingdeck),\npop(@startingdeck), pop(@startingdeck);\npush @startingdeck, @shuffle;\n\n> >    print \"@startingdeck\\n\";\n> > }\n> >\n> > I get it all shuffled up the way I want. I just want now the top five cards\n> > printed. Which when running this script:\nsnip\n\nWell, you have a couple options.  You could use a slice:\n\nprint \"@startingdeck[0 .. 4]\\n\";\n\nYou could use indexes:\n\nprint \"$startingdeck[0] $startingdeck[1] $startingdeck[2]\n$startingdeck[3] $startingdeck[4]\\n\";\n\nYou could use a loop\n\nfor my $i (0 .. 4) {\n   print shift $startingdeck;\n}\nprint \"\\n\";\n\nYou could flatten the list into a string and take a substr of it\n\nprint substr(\"@startingdeck\", 0, 4*5), \"\\n\"; #four characters five times\n\nAnd a bunch of other ways.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}