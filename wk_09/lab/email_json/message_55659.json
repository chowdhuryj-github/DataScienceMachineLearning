{"category": "ham", "to_address": "\"Perl List\" <beginners@perl.org>", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: XML Parsing", "body": "From: \"Mike Blezien\" \n> I need to parse a fairly large XML response file and would like some suggestions \n> on which XML module would work the best. We've been using the XML::Simple \n> module, but I don't think that's the right one for the job. Below is the XML \n> file we need to parse. In particular getting the data from the elements within \n> the \n\nYou might (or maybe not ;-) want to have a look at XML::Rules. It \nlet's you specify just what part of the data in a tag to remember, it \nlet's you process the data once a convenient tag gets fully parsed \nincluding the children and closing tags etc.\n\nIn this case something like\n\nuse XML::Rules;\n\nmy $parser = XML::Rules->new(\n rules => [\n  message => 'content array',\n  'raiserisklevel,lowerrisklevel,informational' => sub { $_[0] => \n$_[1]->{message}},\n  messaging => sub {\n    do something with @{$_[1]->{raiserisklevel}}, @{$_[1]-\n>{lowerrisklevel}} and @{$_[1]->{informational}}\n  },\n  ...\n ]\n);\n\n$parser->parse( $filename);\n\nJenda\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}