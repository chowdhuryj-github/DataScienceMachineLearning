{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "brian d foy <brian.d.foy@gmail.com>", "subject": "Re: = at Start of Line ([svn:perl6-synopsis] r14421 - doc/trunk/design/syn)", "body": "In article <20070616084404.GF6900@stripey.com>, Smylers\n wrote:\n\n> brian d foy writes:\n> \n> > In article\n> > <832f158a0706141722o5f68cf09l724d4f4520ee146@mail.gmail.com>, Damian\n> > Conway  wrote:\n> > \n> > > No. It's Pod. *Any* line that begins with '=begin' always starts a Pod\n> > > block. Always.\n> > \n> > As you know, one of the biggest complaints about Perl is that you have\n> > to have a lot of special rules knowledge to figure some things out.\n> \n> Indeed.  What's much nicer is to be able to state that a given rule\n> \"always\" applies.\n\nWell, now explain literal strings :)  This isn't about one rule, it's\nabout an ecosystem.\n\nThe rules for Pod5 always applied too, so I don't see what we've gained\nhere as far as the simplicity of rules (but let's not go\nround-and-round on that since we've both already explained our\npositions).\n\n> Like Damian has just done here.\n\nThis is a point where a lot of people will disagree, I suppose, and\nit's a fundamental sort of disagreeement where neither side will really\nbe convinced otherwise. I don't think this is stubbornness either, but\nreflects what people value most. That is, nobody is really wrong,\nbecause we'd have to define some way to measure that, and we're really\ndisagreeing on the yard stick.\n\nPutting aside this particular situation, the argument comes down to\nwhere does the water balloon pooch out? We haven't lost any complexity,\nit's just in different places. Maybe some places need less complexity\nand some places could stand a little more.\n\nNow, in this particular situation, Pod is much easier to extract, but\nliteral strings now have extra baggage to consider. That's not what\nwe're debating though. The real debate is whether you think moving the\ncomplexity around like that is worth it. \n\nPersonally, extracting Pod from Perl 5 hasn't been a problem for me\n(and I do a lot of Pod work and write lots of custom Pod translators),\nso I don't think this re-distribution is worth it. I don't have to\nanswer many questions about extracting Pod, and I don't see many normal\npeople (meaning, not us) asking for easier ways to do this. I don't see\na motivation, for the perspective of normal people, for this. When we\nthrough around terms like \"natural language\", normal people matter. :)\n\nYou and Damian have explained the other side very well. I understand\nit, and it's very easy for me to understand and even deal with. We just\ndisagree on the consequences. \n\nI tend to think that people like us are here to do the hard work so\nother people don't have to think about this sort of stuff, so I don't\nmind putting the complexity in the the parser if it takes it out of the\ncommon program elements such as strings.\n\n"}