{"category": "ham", "to_address": "\"Paul Lalli\" <mritty@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: zero width lookahead match", "body": "On 30 May 2007 08:53:54 -0700, Paul Lalli  wrote:\nsnip\n> I got confused by this too.  I think Sharan's question comes down to\n> \"why isn't this an infinite loop?\"  That is, why does pos() move ahead\n> one character when it matches 0 characters?  This is not limited to\n> look-ahead assertions.  The behavior can be seen in other constructs\n> as well.  For example:\n>\n> $ perl -wle'\n> $string = \"abc\";\n> while ($string =~ /(.*?)/g) {\n>   print pos($string), \": \", $1;\n> }\n> '\n> 0:\n> 1: a\n> 1:\n> 2: b\n> 2:\n> 3: c\n> 3:\n\nBecause /.*?/ matches nothing as well as a, b, and c.  So it matches\nnothing, then a, then nothing, then b, then nothing, then c. then\nnothing.\n\n>\n> It appears that Perl is actually dividing the string up into\n> \"characters\" and \"slots between character\", and allowing pos() to move\n> to each of them in sequence.  So at the beginning, it's at the slot\n> before the first character, and it can successfully match 0\n> characters.  Then pos() moves to the first character, and the fewest\n> characters it can find is that one character, so $1 gets 'a'.  Then it\n> moves to the slot between 'a' and 'b'.  Etc.\n\nYes, otherwise \\b wouldn't work very well.\n\nperldoc perlre\n    A word boundary (\"\\b\") is a spot between two characters that has a \"\\w\"\n    on one side of it and a \"\\W\" on the other side of it (in either order),\n    counting the imaginary characters off the beginning and end of the string\n    as matching a \"\\W\".\n\nsnip\n> Here's another, that doesn't allow any characters to be matched:\n> $ perl -wle'\n> $string = \"abc\";\n> while ($string =~ /(.{0})/g) {\n>   print pos($string), \": \", $1;\n> }\n> '\n> 0:\n> 1:\n> 2:\n> 3:\n>\n> Would the above be an accurate description of what's happening?  And\n> if so, is this behavior documented anywhere?  I couldn't find it in a\n> cursory examanation of either perlop or perlre...\nsnip\n\nYou are matching the nothing between the characters.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}