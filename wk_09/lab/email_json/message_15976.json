{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: cat (.sh) in Perl", "body": "yitzle wrote:\n> `cat m.top.html m.mid.html m.arc.html m.bot.html > blah`\n> How can this be done without a system call?\n> \n> Here's my first guess:\n\nuse warnings;\nuse strict;\n\n> @doc = ();\n\nmy @doc;\n\n> for (qw/m.top.html m.mid.html m.arc.html m.bot.html/) {\n>     open $FILE,\"<\",\"$root/$_\";\n\nWhere is $root defined and what does it contain?  You should *ALWAYS* verify\nthat the file opened correctly.\n\n      open my $FILE, '<', \"$root/$_\" or die \"Cannot open '$root/$_' $!\";\n\n>     my @tmp = <$FILE>;\n>     @doc = (@doc,@tmp);\n\n      push @doc, <$FILE>;\n\n>     close $FILE;\n> }\n> open $FILE,\">\",\"blah\";\n\nYou should *ALWAYS* verify that the file opened correctly.\n\nopen my $FILE, '>', 'blah' or die \"Cannot open 'blah' $!\";\n\n> print $FILE $_ foreach(@doc);\n\nOr just:\n\nprint $FILE @doc;\n\n> close $FILE;\n> \n> Is there something I'm missing?\n\nYou could use the magical <> operator:\n\nuse warnings;\nuse strict;\n\n@ARGV = qw/ m.top.html m.mid.html m.arc.html m.bot.html /;\n\nopen my $FILE, '>', 'blah' or die \"Cannot open 'blah' $!\";\n\nprint $FILE $_ while <>;\n\n__END__\n\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}