{"category": "ham", "to_address": "\"'DEEPANKAR BASU'\" <basu.15@osu.edu>,\n   \"'Peter Dalgaard'\" <p.dalgaard@biostat.ku.dk>", "from_address": "\"Ravi Varadhan\" <rvaradhan@jhmi.edu>", "subject": "Re: [R] Estimates at each iteration of optim()?", "body": "Deepankar,\n\nHere is an example using BFGS:\n\n> fr <- function(x) {   ## Rosenbrock Banana function\n+     x1 <- x[1]\n+     x2 <- x[2]\n+     100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n+ }\n> grr <- function(x) { ## Gradient of 'fr'\n+     x1 <- x[1]\n+     x2 <- x[2]\n+     c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1),\n+        200 *      (x2 - x1 * x1))\n+ }\n> optim(c(-1.2,1), fr, grr, method = \"BFGS\", control=list(trace=TRUE))\ninitial  value 24.200000 \niter  10 value 1.367383\niter  20 value 0.134560\niter  30 value 0.001978\niter  40 value 0.000000\nfinal  value 0.000000 \nconverged\n$par\n[1] 1 1\n\n$value\n[1] 9.594955e-18\n\n$counts\nfunction gradient \n     110       43 \n\n$convergence\n[1] 0\n\n$message\nNULL\n\n> \n\nThis example shows that the parameter estimates are printed out every 10\niterations.  However, trying different integer values for trace from 2 to 10\n(trace = 1 behaves the same as trace=TRUE) did not change anything.  If you\nwant to get estimates at every iteration, look at the source code for BFGS\n(which I assume is in FORTRAN). You may have to modify the source code and\nrecompile it yourself to get more detailed trace for BFGS. \n\nHowever, you can get parameter iterates at every step for \"L-BFGS-B\" using\ntrace=6, although this gives a lot more information than just the parameter\nestimates.  Alternatively, you can use the \"CG\" methods with trace=TRUE or\ntrace=1, which is a generally a lot slower than BFGS or L-BFGS-B.\n\nWhy do you want to look at parameter estimates for each step, anyway?\n\n\nRavi.\n\n----------------------------------------------------------------------------\n-------\n\nRavi Varadhan, Ph.D.\n\nAssistant Professor, The Center on Aging and Health\n\nDivision of Geriatric Medicine and Gerontology \n\nJohns Hopkins University\n\nPh: (410) 502-2619\n\nFax: (410) 614-9625\n\nEmail: rvaradhan@jhmi.edu\n\nWebpage:  http://www.jhsph.edu/agingandhealth/People/Faculty/Varadhan.html\n\n \n\n----------------------------------------------------------------------------\n--------\n\n-----Original Message-----\nFrom: r-help-bounces@stat.math.ethz.ch\n[mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of DEEPANKAR BASU\nSent: Monday, April 23, 2007 11:34 AM\nTo: Peter Dalgaard\nCc: r-help@stat.math.ethz.ch\nSubject: Re: [R] Estimates at each iteration of optim()?\n\nI read the description of the trace control parameter in ?optim and then\nalso looked at the examples given at the end. In one of the examples I found\nthat they had used \"trace=TRUE\"  with the method \"SANN\". I am using the\nmethod \"BFGS\" and I tried using \"trace=TRUE\" too but I did not get the\nparameter estimates at each iteration. As you say, it might be method\ndependent. I tried reading the source code for \"optim\" but could not find\nout what I was looking for. Hence, I was wondering if anyone could tell me\nwhat option to use with the method \"BFGS\" to get the parameter estimates at\neach iteration of the optimization.\n\nDeepankar\n\n\n----- Original Message -----\nFrom: Peter Dalgaard \nDate: Monday, April 23, 2007 2:46 am\nSubject: Re: [R] Estimates at each iteration of optim()?\n\n> DEEPANKAR BASU wrote:\n> > I am trying to maximise a complicated loglikelihood function with \n> the \"optim\" command. Is there some way to get to know the estiamtes \n> at each iteration? When I put \"control=list(trace=TRUE)\" as an \n> option in \"optim\", I just got the initial and final values of the \n> loglikelihood, number of iterations and whether the routine has \n> converged or not. I need to know the estimate values at each \n> iteration.>\n> >   \n> It might help if you actually _read_ the description of the trace \n> control parameter (hint: it is not an on/off switch) in ?optim... \n> And, \n> as it says, this is method dependent, so you may have to study the \n> source code.\n> \n> > Deepankar\n> >\n> > ______________________________________________\n> > R-help@stat.math.ethz.ch mailing list\n> > https://stat.ethz.ch/mailman/listinfo/r-help\n> > PLEASE do read the posting guide http://www.R-project.org/posting-\n> guide.html> and provide commented, minimal, self-contained, \n> reproducible code.\n> >   \n> \n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}