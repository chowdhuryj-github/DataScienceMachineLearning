{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "Leopold Toetsch <lt@toetsch.at>", "subject": "Re: My brain dump for the PMCs PDD", "body": "Am Montag, 23. April 2007 23:18 schrieb Jonathan Worthington:\n> Proposal: PMCs can have attributes just as classes in HLLs have\n> attributes. This is somewhat related to variable sized PMCs; note you\n> can leave PMC headers fixed size and just have a pmc_ext like structure\n> that is the variable sized bit. The implementation of attributes and\n> attribute inheritance would be pretty standard.\n\nThe variable-sized proposal just allocates differently (non-resizable) PMCs. \nSame thing as we are already allocating differently sized GC-able items \n(PObjs) namely: PMC, Buffer, String, and Buffer-like. The only differences \nare some flag bits and the presence of a vtable.\n\n> == Introspection\n> While every instance of an object instantiated from a Parrot Class has\n> the Class available for introspection purposes, PMCs do not. This needs\n> to change, and here's something I think will work.\n\nThis is what the cstruct-Proposal is for. The cstruct is describing the \ninternals of a PMC (which happen to consist of C structure items)\n\nleo\n\n"}