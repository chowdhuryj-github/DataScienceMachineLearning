{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jelmer@samba.org", "subject": "svn commit: samba r22328 - in branches/SAMBA_4_0: . source/param\n\tsource/torture/local", "body": "Author: jelmer\nDate: 2007-04-18 01:17:30 +0000 (Wed, 18 Apr 2007)\nNew Revision: 22328\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22328\n\nLog:\nAdd initial testsuite for share code.\nAdded:\n   branches/SAMBA_4_0/source/torture/local/share.c\nModified:\n   branches/SAMBA_4_0/\n   branches/SAMBA_4_0/source/param/share.c\n   branches/SAMBA_4_0/source/torture/local/config.mk\n   branches/SAMBA_4_0/source/torture/local/local.c\n\n\nChangeset:\n\nProperty changes on: branches/SAMBA_4_0\n___________________________________________________________________\nName: bzr:revprop:branch-nick\n   - real4\n   + SAMBA_4_0\nName: bzr:merge\n...skipped...\n\nModified: branches/SAMBA_4_0/source/param/share.c\n===================================================================\n--- branches/SAMBA_4_0/source/param/share.c\t2007-04-18 00:34:10 UTC (rev 22327)\n+++ branches/SAMBA_4_0/source/param/share.c\t2007-04-18 01:17:30 UTC (rev 22328)\n@@ -131,11 +131,13 @@\n \treturn NT_STATUS_OK;\n }\n \n-NTSTATUS share_get_context(TALLOC_CTX *mem_ctx, struct share_context **ctx)\n+NTSTATUS share_get_context_by_name(TALLOC_CTX *mem_ctx, \n+\t\t\t\t\t\t\t\t   const char *backend_name,\n+\t\t\t\t\t\t\t\t   struct share_context **ctx)\n {\n \tconst struct share_ops *ops;\n \n-\tops = share_backend_by_name(lp_share_backend());\n+\tops = share_backend_by_name(backend_name);\n \tif (!ops) {\n \t\tDEBUG(0, (\"share_init_connection: share backend [%s] not found!\\n\", lp_share_backend()));\n \t\treturn NT_STATUS_INTERNAL_ERROR;\n@@ -144,6 +146,11 @@\n \treturn ops->init(mem_ctx, ops, ctx);\n }\n \n+NTSTATUS share_get_context(TALLOC_CTX *mem_ctx, struct share_context **ctx)\n+{\n+\treturn share_get_context_by_name(mem_ctx, lp_share_backend(), ctx);\n+}\n+\n /*\n   initialise the SHARE subsystem\n */\n\nModified: branches/SAMBA_4_0/source/torture/local/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/torture/local/config.mk\t2007-04-18 00:34:10 UTC (rev 22327)\n+++ branches/SAMBA_4_0/source/torture/local/config.mk\t2007-04-18 01:17:30 UTC (rev 22328)\n@@ -32,6 +32,7 @@\n \t\tsddl.o \\\n \t\t../../lib/tdr/testsuite.o \\\n \t\tevent.o \\\n+\t\tshare.o \\\n \t\tlocal.o \\\n \t\tdbspeed.o \\\n \t\ttorture.o\n@@ -46,7 +47,8 @@\n \t\tPOPT_CREDENTIALS \\\n \t\tTORTURE_AUTH \\\n \t\tTORTURE_UTIL\n-PRIVATE_DEPENDENCIES = TORTURE_NDR\n+PRIVATE_DEPENDENCIES = TORTURE_NDR \\\n+\t\t\t\t\t   share\n # End SUBSYSTEM TORTURE_LOCAL\n #################################\n \n\nModified: branches/SAMBA_4_0/source/torture/local/local.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/local/local.c\t2007-04-18 00:34:10 UTC (rev 22327)\n+++ branches/SAMBA_4_0/source/torture/local/local.c\t2007-04-18 01:17:30 UTC (rev 22328)\n@@ -45,6 +45,7 @@\n \ttorture_local_sddl,\n \ttorture_local_ndr, \n \ttorture_local_tdr, \n+\ttorture_local_share,\n \ttorture_local_charset,\n \ttorture_local_compression,\n \ttorture_local_event, \n\nAdded: branches/SAMBA_4_0/source/torture/local/share.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/local/share.c\t2007-04-18 00:34:10 UTC (rev 22327)\n+++ branches/SAMBA_4_0/source/torture/local/share.c\t2007-04-18 01:17:30 UTC (rev 22328)\n@@ -0,0 +1,79 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+\n+   local testing of share code\n+\n+   Copyright (C) Jelmer Vernooij 2007\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+#include \"includes.h\"\n+#include \"param/share.h\"\n+#include \"torture/torture.h\"\n+\n+static bool test_list_empty(struct torture_context *tctx, \n+\t\t\t\t\t\t\tvoid *tcase_data, \n+\t\t\t\t\t\t\tvoid *test_data)\n+{\n+\tstruct share_context *ctx = tcase_data;\n+\tint count;\n+\tconst char **names;\n+\n+\ttorture_assert_ntstatus_ok(tctx, share_list_all(tctx, ctx, &count, &names),\n+\t\t\t\t\t\t\t   \"share_list_all failed\");\n+\n+\treturn true;\n+}\n+\n+static void tcase_add_share_tests(struct torture_tcase *tcase)\n+{\n+\ttorture_tcase_add_test(tcase, \"list_empty\", test_list_empty, NULL);\n+}\n+\n+static BOOL setup_ldb(struct torture_context *tctx, void **data)\n+{\n+\treturn NT_STATUS_IS_OK(share_get_context_by_name(tctx, \"ldb\", data));\n+}\n+\n+static BOOL setup_classic(struct torture_context *tctx, void **data)\n+{\n+\treturn NT_STATUS_IS_OK(share_get_context_by_name(tctx, \"classic\", data));\n+}\n+\n+static BOOL teardown(struct torture_context *tctx, void *data)\n+{\n+\ttalloc_free(data);\n+\treturn true;\n+}\n+\n+struct torture_suite *torture_local_share(TALLOC_CTX *mem_ctx)\n+{\n+\tstruct torture_suite *suite = torture_suite_create(mem_ctx, \n+\t\t\t\t\t\t\t\t\t\t\t\t\t   \"SHARE\");\n+\tstruct torture_tcase *tcase;\n+\n+\tshare_init();\n+\n+\ttcase = torture_suite_add_tcase(suite, \"ldb\");\n+\ttorture_tcase_set_fixture(tcase, setup_ldb, teardown);\n+\ttcase_add_share_tests(tcase);\n+\n+\ttcase = torture_suite_add_tcase(suite, \"classic\");\n+\ttorture_tcase_set_fixture(tcase, setup_classic, teardown);\n+\ttcase_add_share_tests(tcase);\n+\n+\treturn suite;\n+}\n\n"}