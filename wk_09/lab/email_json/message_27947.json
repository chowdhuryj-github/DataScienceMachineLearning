{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: yet another regex", "body": "Chas Owens wrote:\n> On 5/11/07, Chas Owens  wrote:\n>> On 5/11/07, Chas Owens  wrote:\n>> > On 5/11/07, Steve Finkelstein  wrote:\n>> > > Oh, so it goes through each and every character in the original\n>> string\n>> > > passed. I thought it takes in the string as one entity and just\n>> captures\n>> > > the first digit it can.\n>> > >\n>> > > Does -p make it iterate over each character?\n>> >\n>> > No, the -ple causes it to write the code like this:\n>> >\n>> > $\\ = $/;\n>> > LOOP:\n>> > WHILE (<>) {\n>> >     s/|(\\d)|length(9 x $1)|eg;\n>> > }\n>> >\n>> > The g on the end of the regex causes it to apply the pattern multiple\n>> > times.  The e on the end of the regex makes it treat the replacement\n>> > like code instead of a string.\n>>\n>> Whoops, that should be\n>>\n>> $\\ = $/;\n>> LOOP:\n>> WHILE (<>) {\n>>    chomp;\n>>    s/|(\\d)|length(9 x $1)|eg;\n>> }\n> \n> Durn it, I will get it right eventually.\n> \n> $\\ = $/;\n> LOOP:\n> WHILE (<>) {\n>   chomp;\n>   s/|(\\d)|length(9 x $1)|eg;\n>   print;\n> }\n\nThat should (correctly) be:\n\n$\\ = $/;\nLOOP:\nwhile ( <> ) {  # case matters - there is no WHILE\n    chomp;\n    s/|(\\d)|length(9 x $1)|eg;\n    }\ncontinue {\n    print;\n    }\n\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}