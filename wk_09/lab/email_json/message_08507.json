{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 151: simpler shutdown process. The reply is not actually needed,\n\tand in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 151\nrevision-id: tridge@samba.org-20070418053541-815ac1776bf2937f\nparent: tridge@samba.org-20070418052738-c581c86e6c27b24e\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Wed 2007-04-18 15:35:41 +1000\nmessage:\n  simpler shutdown process. The reply is not actually needed, and\n  occasionally leads to problems if an immediate send on the socket\n  causes a context switch and the client exiting before the daemon. We\n  now exit the client when the daemon goes away.\nmodified:\n  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n=== modified file 'common/ctdb_client.c'\n--- a/common/ctdb_client.c\t2007-04-18 04:08:45 +0000\n+++ b/common/ctdb_client.c\t2007-04-18 05:35:41 +0000\n@@ -93,19 +93,6 @@\n }\n \n /*\n-  called in the client when we receive a CTDB_REPLY_SHUTDOWN from the daemon\n-\n-  This packet comes in response to a CTDB_REQ_SHUTDOWN request packet. It\n-  contains any reply data from the call\n-*/\n-void ctdb_reply_shutdown(struct ctdb_context *ctdb, struct ctdb_req_header *hdr)\n-{\n-\ttalloc_free(ctdb);\n-\n-\texit(10);\n-}\n-\n-/*\n   this is called in the client, when data comes in from the daemon\n  */\n static void ctdb_client_read_cb(uint8_t *data, size_t cnt, void *args)\n@@ -121,9 +108,13 @@\n \ttmp_ctx = talloc_new(ctdb);\n \ttalloc_steal(tmp_ctx, hdr);\n \n+\tif (cnt == 0) {\n+\t\tDEBUG(2,(\"Daemon has exited - shutting down client\\n\"));\n+\t\texit(0);\n+\t}\n+\n \tif (cnt < sizeof(*hdr)) {\n-\t\tctdb_set_error(ctdb, \"Bad packet length %d in client\\n\", cnt);\n-\t\texit(1); /* XXX - temporary for debugging */\n+\t\tDEBUG(0,(\"Bad packet length %d in client\\n\", cnt));\n \t\tgoto done;\n \t}\n \tif (cnt != hdr->length) {\n@@ -159,10 +150,6 @@\n \t\tctdb_reply_fetch_lock(ctdb, hdr);\n \t\tbreak;\n \n-\tcase CTDB_REPLY_SHUTDOWN:\n-\t\tctdb_reply_shutdown(ctdb, hdr);\n-\t\tbreak;\n-\n \tdefault:\n \t\tDEBUG(0,(\"bogus operation code:%d\\n\",hdr->operation));\n \t}\n\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-04-18 04:08:45 +0000\n+++ b/common/ctdb_daemon.c\t2007-04-18 05:35:41 +0000\n@@ -197,7 +197,6 @@\n static void daemon_request_shutdown(struct ctdb_client *client, \n \t\t\t\t      struct ctdb_req_shutdown *f)\n {\n-\tstruct ctdb_reply_shutdown rs;\n \tstruct ctdb_context *ctdb = talloc_get_type(client->ctdb, struct ctdb_context);\n \tint len;\n \tuint32_t node;\n@@ -240,16 +239,6 @@\n \t\tevent_loop_once(ctdb->ev);\n \t}\n \n-\t/* send a shutdown reply back to the client */\n-\tlen = sizeof(struct ctdb_reply_shutdown);\n-\tZERO_STRUCT(rs);\n-\trs.hdr.length       = len;\n-\trs.hdr.ctdb_magic   = CTDB_MAGIC;\n-\trs.hdr.ctdb_version = CTDB_VERSION;\n-\trs.hdr.operation    = CTDB_REPLY_SHUTDOWN;\n-\tctdb_queue_send(client->queue, (uint8_t *)&(rs.hdr), rs.hdr.length);\n-\t/* XXX we should wait here until the packet has been sent to the client */\n-\n \t/* all daemons have requested to finish - we now exit */\n \tDEBUG(1,(\"All daemons finished - exiting\\n\"));\n \t_exit(0);\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-04-18 02:39:03 +0000\n+++ b/include/ctdb_private.h\t2007-04-18 05:35:41 +0000\n@@ -222,8 +222,7 @@\n \tCTDB_REPLY_CONNECT_WAIT = 1002,\n \tCTDB_REQ_FETCH_LOCK     = 1003,\n \tCTDB_REPLY_FETCH_LOCK   = 1004,\n-\tCTDB_REQ_SHUTDOWN       = 1005,\n-\tCTDB_REPLY_SHUTDOWN     = 1006,\n+\tCTDB_REQ_SHUTDOWN       = 1005\n };\n \n #define CTDB_MAGIC 0x43544442 /* CTDB */\n\n"}