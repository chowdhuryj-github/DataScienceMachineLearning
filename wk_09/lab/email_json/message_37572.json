{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: Accessing hash", "body": "jeevs wrote:\n> why is it that when i write\n> my %hash = (jeevan=>'ingale', sarika=>'bere' );\n> my @arr = @hash{jeevan, sarika};\n> print @arr;\n> \n> prints ingale bere ....\n> can someone explain me how an @sign is used and what exactly goes in\n> the secongline of thecode.\n> \n> contrary when i try something like replacing the @ sign in second line\n> with % sign which seems more logical it doesnt work\n> \n> my %hash = (jeevan=>'ingale', sarika=>'bere' );\n> my @arr = %hash{jeevan, sarika};\n> print @arr;\n> \n> if any1 can direct me to document .. it would be helpfull\n\nFirstly, /always/\n\n  use strict;\n  use warnings;\n\nafter which you wil have to write\n\n  my @arr = @hash{'jeevan', 'sarika'};\n\ninstead. You will find it resolves a lot of simple problems without you\nhaving to ask for help.\n\n\nYou are using a /slice/ of the hash data. Look at\n\nperldoc perldata\n\n(find for the section titled 'Slices')\n\nIf you access a single element of the hash, you use a dollar sign like the\nscalar variable prefix:\n\n  $hash{'jeevan'}\n\nIf you want to access multiple elements at the same time, resulting in a list\nof values, you must use an at sign, like the array variable prefix:\n\n  @hash{'jeevan', 'sarika'}\n\nusing a percent sign, as in %hash{'jeevan', 'sarika'} is meaningless as the sign\nin this context doesn't denote a variable type but a mode of accessing the data,\nand must be either $ if you're indexing a single element or @ if you want multiple\nelements.\n\nHTH,\n\nRob\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}