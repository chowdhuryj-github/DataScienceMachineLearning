{"category": "ham", "to_address": "debian-laptop@lists.debian.org", "from_address": "bob@proulx.com (Bob Proulx)", "subject": "Re: ipw2200 on Gateway 4522 running etch", "body": "Wayne Topa wrote:\n> I installed the ipw2200-source package and went to the sourceforge\n> site for the firmware.  I put the firmware in /lib/firmware.\n\nI recently installed Etch onto a Thinkpad T42 that has the Intel\n2200BG wireless in it.  The process was similar for me.  However I had\nan Ubuntu live cd handy and because Ubuntu includes the non-free\nfirmware blobs I simply booted the Ubuntu live cd and copied the\nipw2200* firmware blobs from the running system into /lib/firmware.\nFor me that was simplest and upon reboot the wireless was fully\nfunctional.\n\n[Note that in Ubuntu the files are in /lib/firmware/$(uname -r) so\nthat they can be packaged with the kernel without creating file\nconflicts.  But it is okay to put them in /lib/firmware without the\n$(uname -r) differentiator when simply copying them as files.]\n\n> I then used module-assistant to compile the source (m-a prepare :\n> m-a a-i ipw2100 in my case).  m-a does it all for you, extracts the\n> source, compiles it, and installs the modules.  See man\n> module-assistant.  After that it's just a matter of finding out what\n> the card can do and how to tell it to do it.  :-)\n\nI did not need to recompile the driver.  The free driver currently in\nthe Etch kernel will load the firmware blobs if they are present.  Not\nneeding to recompile the driver that makes things a little bit easier.\n\nI have heard rumors that the non-free firmware blobs are getting\naddressed in some way to make them free blobs in the future but have\nno other information on it.\n\nBob\n\n\n-- \nTo UNSUBSCRIBE, email to debian-laptop-REQUEST@lists.debian.org\nwith a subject of \"unsubscribe\". Trouble? Contact listmaster@lists.debian.org\n\n"}