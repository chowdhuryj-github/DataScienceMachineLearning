{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 215: added status all and debug all control operations in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 215\nrevision-id: tridge@samba.org-20070428151330-t6lvd3jhu28vr1gl\nparent: tridge@samba.org-20070428151302-5gdl26m1r156w6xb\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-04-28 17:13:30 +0200\nmessage:\n  added status all and debug all control operations\nmodified:\n  common/ctdb_call.c             ctdb_call.c-20061128065342-to93h6eejj5kon81-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'common/ctdb_call.c'\n--- a/common/ctdb_call.c\t2007-04-28 08:50:32 +0000\n+++ b/common/ctdb_call.c\t2007-04-28 15:13:30 +0000\n@@ -729,12 +729,14 @@\n \t\t\t\t\t   struct ctdb_req_call);\n \tCTDB_NO_MEMORY_NULL(ctdb, state->c);\n \tstate->c->hdr.destnode  = header->dmaster;\n-\t/*\n-\t   always sending the remote call straight to the lmaster\n+\n+#if 0\n+\t/*always sending the remote call straight to the lmaster\n \t   improved performance slightly in some tests.\n \t   worth investigating further in the future\n+\t*/\n \tstate->c->hdr.destnode  = ctdb_lmaster(ctdb_db->ctdb, &(call->key));\n-\t*/\n+#endif\n \n \n \t/* this limits us to 16k outstanding messages - not unreasonable */\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-04-28 13:15:21 +0000\n+++ b/include/ctdb_private.h\t2007-04-28 15:13:30 +0000\n@@ -157,6 +157,7 @@\n \tuint32_t pending_calls;\n \tuint32_t lockwait_calls;\n \tuint32_t pending_lockwait_calls;\n+\tuint32_t __last_uint32; /* hack for control_status_all */\n \tuint32_t max_redirect_count;\n \tdouble max_call_latency;\n \tdouble max_lockwait_latency;\n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-04-28 13:15:21 +0000\n+++ b/tools/ctdb_control.c\t2007-04-28 15:13:30 +0000\n@@ -35,8 +35,8 @@\n \tprintf(\"\\nControls:\\n\");\n \tprintf(\"  ping\\n\");\n \tprintf(\"  process-exists            see if a process exists\\n\");\n-\tprintf(\"  status                        show ctdb status on a node\\n\");\n-\tprintf(\"  debug                  set ctdb debug level on a node\\n\");\n+\tprintf(\"  status                    show ctdb status on a node\\n\");\n+\tprintf(\"  debug              set ctdb debug level on a node\\n\");\n \tprintf(\"  debuglevel                         display ctdb debug levels\\n\");\n \tprintf(\"  getvnnmap                     display ctdb vnnmap\\n\");\n \tprintf(\"  setvnnmap    *\\n\");\n@@ -106,6 +106,41 @@\n }\n \n /*\n+  display remote ctdb status combined from all nodes\n+ */\n+static int control_status_all(struct ctdb_context *ctdb)\n+{\n+\tint ret, i;\n+\tstruct ctdb_status status;\n+\tZERO_STRUCT(status);\n+\n+\tfor (i=0;inum_nodes;i++) {\n+\t\tstruct ctdb_status s1;\n+\t\tint j;\n+\t\tuint32_t *v1 = (uint32_t *)&s1\n+\t\tuint32_t *v2 = (uint32_t *)&status\n+\t\tuint32_t num_ints = \n+\t\t\toffsetof(struct ctdb_status, __last_uint32) / sizeof(uint32_t);\n+\t\tret = ctdb_status(ctdb, i, &s1);\n+\t\tif (ret != 0) {\n+\t\t\tprintf(\"Unable to get status from node %u\\n\", i);\n+\t\t\treturn ret;\n+\t\t}\n+\t\tfor (j=0;jnum_nodes;i++) {\n+\t\t\tret = ctdb_set_debuglevel(ctdb, i, level);\n+\t\t\tif (ret != 0) {\n+\t\t\t\tprintf(\"Unable to set debug level on node %u\\n\", i);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t\treturn 0;\n+\t}\n+\n+\tvnn = strtoul(argv[0], NULL, 0);\n \tret = ctdb_set_debuglevel(ctdb, vnn, level);\n \tif (ret != 0) {\n \t\tprintf(\"Unable to set debug level on node %u\\n\", vnn);\n \t}\n+\n \treturn 0;\n }\n \n\n"}