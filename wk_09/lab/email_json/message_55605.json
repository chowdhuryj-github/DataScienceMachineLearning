{"category": "ham", "to_address": "Jelmer Vernooij <jelmer@samba.org>", "from_address": "\"Gerald (Jerry) Carter\" <jerry@samba.org>", "subject": "Re: Comparision of Git & Bzr [was Re: Short HOWTO on using git for\n Samba development]", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nJelmer Vernooij wrote:\n\n> On Mon, Jun 25, 2007 at 04:25:10PM -0500, Gerald (Jerry) Carter wrote:\n>>\n>> Other than tracking renames, what else do you mean by\n>> \"correctness\".  I haven't followed all the DSCM bake-offs\n>> and debates.\n>\n> I think the Bazaar model is a bit easier to understand \n> than the git one,  especially for people coming from (for\n> example) Subversion. The UI is also much nicer. For example,\n> there's no need to worry about sha1s as a regular user\n> and the commands make a little bit more sense. It's usable\n> easily in a centralized fashion.\n\nAgreed, but I can live with this.\n\n> Git's data format and representation are intermixed - \n> there's no way of upgrading the repository format without\n> changing the revision ids, as they are checksums tied to\n> the format. Bazaar has infrastructure for upgrading to\n> newer formats and thus can support things like nested trees\n> in the future without breaking everybody's existing branches.\n\nHmmm...I'll have to think about this.  It's a good point.\n\n> Git is really fast and efficient at what it is supposed \n> to do: merge between and store snapshots of code on POSIX systems.\n> It does not aim to do more than that; for example, win32 will\n> be tricky to get fast because it relies on platform-specific\n> features and its heavy integration with the current\n> data format means it's hard to add new features such as\n> nested trees. Bazaar is trying to be more generic.\n\nI mentioned this before but I'm curious, do people\nconsider win32 support a requirement for our SCM?\n\n>> The things I like about git are:\n> \n>> * git-svnimport and git-svn (for now)\n>> * fast-forwards and rebasing branches\n>\n> I've never really understood what's so nice about \n> fast-forwards or rebasing. What's so useful about it?\n\nMaybe this is just a nice thing currently working with\ngit-svn but rebasing keeps the hist in the svn tree linear\nand conceptually only maintaining a branch point where it\nreally matters.\n\n>> Questions about bzr are\n> \n>> * Will svn2bzr.py actually work on the Samba sv repo now ?\n> Not sure about svn2bzr.py, but svn-import (similar command from\n> bzr-svn) does.\n\nCool.\n\n>> * What would the resulting size be?\n> \n> I think it was about half the size of the Samba Subversion \n> repository last time I tried it.  Obviously, it would be a\n> lot less when lazy repositories would be supported.\n\nReally ?  Does the revision sharing in a repository gain\nyou that much? My SAMBA_4_0.bzr diff/patch mirror from svn is\n312MB alone.  And the entire Samba svn repo is only about\n550MB.\n\n>> * What is the status of bzr repositories and cheap \n>>   branching?\n> \n> It's high on the list for the summer. Most of the current \n> focus is on performance.\n> \n> \"bzr switch\" changes the branch that is used by the \n> current working tree, much in the way you can do so with git.\n> It doesn't change directory or anything.\n\nHelp me to understand something about repositories.  The way\nI read things, \"bzr init-repo\" just gives me a way of sharing\nrevision history between branches but does not provide a way\nto do the equivalent of \"git-clone\" where I get the entire\nrepo and branches.  I can only \"bzr clone\" a single branch\nat a time.\n\nSo a repo is a nice for a single developer or a shared\nrepository where people do checkouts, but not as a means of\npublicaly sharing branches in a project.\n\nAm I right?\n\n\n\n\n\n\ncheers, jerry\n=====================================================================\nSamba                                    ------- http://www.samba.org\nCenteris                         -----------  http://www.centeris.com\n\"What man is a man who does not make the world better?\"      --Balian\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.6 (GNU/Linux)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org\n\niD8DBQFGgSI7IR7qMdg1EfYRAoUkAJ9e/fCjEypBvk/XDgXgu68x116/+QCgrbB8\n82P5BV6mKdYDOzZqM/4gdaM=\n=O5id\n-----END PGP SIGNATURE-----\n\n"}