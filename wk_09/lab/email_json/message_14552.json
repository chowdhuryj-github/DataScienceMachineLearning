{"category": "ham", "to_address": "\"Horace Tso\" <Horace.Tso@pgn.com>", "from_address": "\"Henrik Bengtsson\" <hb@stat.berkeley.edu>", "subject": "Re: [R] Size of an object in workspace", "body": "See ll() in R.oo (that is two L:s), e.g.\n\n> ll()\n  member data.class dimension objectSize\n1 author  character         1        120\n2 myfunc   function      NULL        512\n3      x     matrix   c(3,11)        248\n4      y      array  c(5,7,1)        264\n\nll() is quite flexible so you can create your on functions to query\nobjects for whatever properties you want.  It can also be passed to\nsubset():\n\n> subset(ll(), objectSize > 250)\n  member data.class dimension objectSize\n2 myfunc   function      NULL        512\n4      y      array  c(5,7,1)        264\n\nHope this help\n\nHenrik\n\n\nOn 4/24/07, Horace Tso  wrote:\n> Hi folks,\n>\n> Is there a function to show the size of an R object? eg. in Kbytes?\n>\n> Couple months ago Bendix Carstensen posted this marvelous little function lls(), which shows all objects in the current workspace by mode, class and 'size'. This is a wonderful enhancement to the build-in ls() already and I now have it sourced in my Rprofile.site at startup.\n>\n> The only drawback is, 'size' is just the length/dim of an object. For matrices and data frames this is good enough. But for a list, knowing how many elements in there doesn't help much. I need to know the totality of the content in a common unit, eg. byte.\n>\n> Thanks in advance.\n>\n> Horace\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}