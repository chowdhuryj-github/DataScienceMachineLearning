{"category": "ham", "to_address": "Mark Glines <mark@glines.org>", "from_address": "Andy Spieherty <spiehera@lafayette.edu>", "subject": "Re: GC bug on freebsd/x86, triggered by a perl6 test", "body": "On Mon, 4 Jun 2007, Mark Glines wrote:\n\n> On Mon, 4 Jun 2007 13:07:18 -0700\n> chromatic  wrote:\n> \n> > On Monday 04 June 2007 12:49:45 Mark Glines wrote:\n> > \n> > > (the LD_LIBRARY_PATH bit is required on freebsd so parrot can find\n> > > libparrot.so.)\n> > \n> > The GNU linker supports a flag to mark a relocatable shared library.\n> > From my Makefile:\n> > \n> > \t -Wl,-rpath=/home/chromatic/dev/parrot/blib/lib\n> > \n> > I don't know which linker you use on FreeBSD, but is there a similar\n> > flag?  If so, using it could clear up some of the dynamic loading\n> > problems (especially for dynops and dynpmcs).\n> \n> $ ld --version\n> GNU ld version 2.15 [FreeBSD] 2004-05-23\n> \n> So it probably supports that flag.  I know next to nothing about\n> FreeBSD, but here's how libparrot.so.* is currently linked:\n> \n> cc -shared  -L/usr/local/lib -Wl,-E -L/usr/local/lib -o blib/lib/libparrot.so.0.4.12 -Wl,-soname=libparrot.so.0.4.12 [list of objects] -lm -lcrypt -lutil -pthread -lreadline\n> \n> Soo... is that just something missing from the freebsd hints file,\n> then?\n\nIn my opinion, you shouldn't bother with the shared libparrot at the \nmoment anyway, and should just delete the parrot_is_shared setting from \nthe freebsd hints file.  The -rpath stuff is a temporary hack anyway.  \nWhen parrot is finally installed, you don't want the installed parrot \nlooking in your build directory.  This is a problem that must be addressed \neventually, of course, but there are more pressing issues to worry about \nnow (such as the GC bug at the beginning of this thread).\n\n-- \n    Andy Spieherty\t\tspiehera@lafayette.edu\n\n"}