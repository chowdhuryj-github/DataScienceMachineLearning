{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22389 - in branches/SAMBA_3_0/source: lib libsmb\n\tsmbd", "body": "Author: jra\nDate: 2007-04-19 20:50:49 +0000 (Thu, 19 Apr 2007)\nNew Revision: 22389\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22389\n\nLog:\nStart preparing for multiple encryption contexts in the\nserver. Allow server to reflect back to calling client\nthe encryption context that was sent.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/lib/util.c\n   branches/SAMBA_3_0/source/libsmb/smb_seal.c\n   branches/SAMBA_3_0/source/smbd/aio.c\n   branches/SAMBA_3_0/source/smbd/blocking.c\n   branches/SAMBA_3_0/source/smbd/process.c\n   branches/SAMBA_3_0/source/smbd/reply.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/util.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/util.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/lib/util.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -533,14 +533,20 @@\n  Set the length and marker of an smb packet.\n ********************************************************************/\n \n-void smb_setlen(char *buf,int len)\n+void smb_setlen(char *buf,int len,const char *frombuf)\n {\n \t_smb_setlen(buf,len);\n \n-\tSCVAL(buf,4,0xFF);\n-\tSCVAL(buf,5,'S');\n-\tSCVAL(buf,6,'M');\n-\tSCVAL(buf,7,'B');\n+\tif (frombuf) {\n+\t\tif (buf != frombuf) {\n+\t\t\tmemcpy(buf+4, frombuf+4, 4);\n+\t\t}\n+\t} else {\n+\t\tSCVAL(buf,4,0xFF);\n+\t\tSCVAL(buf,5,'S');\n+\t\tSCVAL(buf,6,'M');\n+\t\tSCVAL(buf,7,'B');\n+\t}\n }\n \n /*******************************************************************\n@@ -554,7 +560,7 @@\n \t}\n \tSCVAL(buf,smb_wct,num_words);\n \tSSVAL(buf,smb_vwv + num_words*SIZEOFWORD,num_bytes);  \n-\tsmb_setlen(buf,smb_size + num_words*2 + num_bytes - 4);\n+\tsmb_setlen(buf,smb_size + num_words*2 + num_bytes - 4, NULL);\n \treturn (smb_size + num_words*2 + num_bytes);\n }\n \n@@ -566,7 +572,7 @@\n {\n \tint num_words = CVAL(buf,smb_wct);\n \tSSVAL(buf,smb_vwv + num_words*SIZEOFWORD,num_bytes);  \n-\tsmb_setlen(buf,smb_size + num_words*2 + num_bytes - 4);\n+\tsmb_setlen(buf,smb_size + num_words*2 + num_bytes - 4, NULL);\n \treturn (smb_size + num_words*2 + num_bytes);\n }\n \n\nModified: branches/SAMBA_3_0/source/libsmb/smb_seal.c\n===================================================================\n--- branches/SAMBA_3_0/source/libsmb/smb_seal.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/libsmb/smb_seal.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -93,10 +93,11 @@\n \t}\n \n \tmemcpy(buf + 8, inbuf + 8 + NTLMSSP_SIG_SIZE, data_len);\n-\tSAFE_FREE(inbuf);\n \n \t/* Reset the length. */\n-\tsmb_setlen(buf, data_len + 4);\n+\tsmb_setlen(buf, data_len + 4, inbuf);\n+\n+\tSAFE_FREE(inbuf);\n \treturn NT_STATUS_OK;\n }\n \n@@ -203,7 +204,7 @@\n \t}\n \n \tmemcpy(buf + 8, out_buf.value, out_buf.length);\n-\tsmb_setlen(buf, out_buf.length + 4);\n+\tsmb_setlen(buf, out_buf.length + 4, out_buf.value);\n \n \tgss_release_buffer(&minor, &out_buf);\n \treturn NT_STATUS_OK;\n\nModified: branches/SAMBA_3_0/source/smbd/aio.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/aio.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/smbd/aio.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -49,8 +49,10 @@\n  of the aio_read call.\n *****************************************************************************/\n \n-static struct aio_extra *create_aio_ex_read(files_struct *fsp, size_t buflen,\n-\t\t\t\t\t    uint16 mid)\n+static struct aio_extra *create_aio_ex_read(files_struct *fsp,\n+\t\t\t\t\t\tsize_t buflen,\n+\t\t\t\t\t\tuint16 mid,\n+\t\t\t\t\t\tconst char *inbuf)\n {\n \tstruct aio_extra *aio_ex = SMB_MALLOC_P(struct aio_extra);\n \n@@ -66,6 +68,14 @@\n \t\tSAFE_FREE(aio_ex);\n \t\treturn NULL;\n \t}\n+\t/* Save the first 8 bytes of inbuf for possible enc data. */\n+\taio_ex->inbuf = SMB_MALLOC_ARRAY(char, 8);\n+\tif (!aio_ex->inbuf) {\n+\t\tSAFE_FREE(aio_ex->outbuf);\n+\t\tSAFE_FREE(aio_ex);\n+\t\treturn NULL;\n+\t}\n+\tmemcpy(aio_ex->inbuf, inbuf, 8);\n \tDLIST_ADD(aio_list_head, aio_ex);\n \taio_ex->fsp = fsp;\n \taio_ex->read_req = True;\n@@ -408,7 +418,7 @@\n \t\t\t    aio_ex->acb.aio_nbytes, (int)nread ) );\n \n \t}\n-\tsmb_setlen(outbuf,outsize - 4);\n+\tsmb_setlen(outbuf,outsize - 4,aio_ex->inbuf);\n \tshow_msg(outbuf);\n \tif (!send_smb(smbd_server_fd(),outbuf)) {\n \t\texit_server_cleanly(\"handle_aio_read_complete: send_smb \"\n\nModified: branches/SAMBA_3_0/source/smbd/blocking.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/blocking.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/smbd/blocking.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -237,13 +237,15 @@\n  Return a smd with a given size.\n *****************************************************************************/\n \n-static void send_blocking_reply(char *outbuf, int outsize)\n+static void send_blocking_reply(char *outbuf, int outsize, const char *inbuf)\n {\n-\tif(outsize > 4)\n-\t\tsmb_setlen(outbuf,outsize - 4);\n+\tif(outsize > 4) {\n+\t\tsmb_setlen(outbuf,outsize - 4, inbuf);\n+\t}\n \n-\tif (!send_smb(smbd_server_fd(),outbuf))\n+\tif (!send_smb(smbd_server_fd(),outbuf)) {\n \t\texit_server_cleanly(\"send_blocking_reply: send_smb failed.\");\n+\t}\n }\n \n /****************************************************************************\n@@ -272,7 +274,7 @@\n \n \toutsize += chain_size;\n \n-\tsend_blocking_reply(outbuf,outsize);\n+\tsend_blocking_reply(outbuf,outsize,inbuf);\n }\n \n /****************************************************************************\n\nModified: branches/SAMBA_3_0/source/smbd/process.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/process.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/smbd/process.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -1039,8 +1039,9 @@\n \n \toutsize += chain_size;\n \n-\tif(outsize > 4)\n-\t\tsmb_setlen(outbuf,outsize - 4);\n+\tif(outsize > 4) {\n+\t\tsmb_setlen(outbuf,outsize - 4, inbuf);\n+\t}\n \treturn(outsize);\n }\n \n@@ -1219,7 +1220,7 @@\n \t}\n \n \t/* And set it in the header. */\n-\tsmb_setlen(inbuf2, new_size);\n+\tsmb_setlen(inbuf2, new_size, inbuf);\n \n \t/* create the out buffer */\n \tconstruct_reply_common(inbuf2, outbuf2);\n\nModified: branches/SAMBA_3_0/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/reply.c\t2007-04-19 20:00:40 UTC (rev 22388)\n+++ branches/SAMBA_3_0/source/smbd/reply.c\t2007-04-19 20:50:49 UTC (rev 22389)\n@@ -303,7 +303,7 @@\n \t\n \tmemset(outbuf,'\\0',smb_size);\n \n-\tsmb_setlen(outbuf,0);\n+\tsmb_setlen(outbuf,0,inbuf);\n \t\n \tswitch (msg_type) {\n \tcase 0x81: /* session request */\n@@ -1182,7 +1182,7 @@\n \tSSVAL(outbuf,smb_flg2, (SVAL(outbuf, smb_flg2) & (~FLAGS2_UNICODE_STRINGS)));\n \t  \n \toutsize += DIR_STRUCT_SIZE*numentries;\n-\tsmb_setlen(outbuf,outsize - 4);\n+\tsmb_setlen(outbuf,outsize - 4,inbuf);\n   \n \tif ((! *directory) && dptr_path(dptr_num))\n \t\tslprintf(directory, sizeof(directory)-1, \"(%s)\",dptr_path(dptr_num));\n@@ -3538,7 +3538,7 @@\n \tfor (seq_num =1 ; seq_num <= smb_reverb ; seq_num++) {\n \t\tSSVAL(outbuf,smb_vwv0,seq_num);\n \n-\t\tsmb_setlen(outbuf,outsize - 4);\n+\t\tsmb_setlen(outbuf,outsize - 4,inbuf);\n \n \t\tshow_msg(outbuf);\n \t\tif (!send_smb(smbd_server_fd(),outbuf))\n@@ -5846,7 +5846,7 @@\n \n \tif (write_through && tcount==nwritten) {\n \t\t/* We need to send both a primary and a secondary response */\n-\t\tsmb_setlen(outbuf,outsize - 4);\n+\t\tsmb_setlen(outbuf,outsize - 4,inbuf);\n \t\tshow_msg(outbuf);\n \t\tif (!send_smb(smbd_server_fd(),outbuf))\n \t\t\texit_server_cleanly(\"reply_writebmpx: send_smb failed.\");\n\n"}