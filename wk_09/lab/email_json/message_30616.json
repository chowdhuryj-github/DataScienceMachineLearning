{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Bruno Schroeder\" <bschroeder@brq.com>", "subject": "Re: File Handling. Reading and Writting.", "body": "Thank you Tom!\nWe realy have lots of ways to do everything. In this case, is easier to use \n$^I functionality, and I did. Although, it is very nice to see this code \nbellow.\n\nCheers!\n\n\"\"Tom Phoenix\"\"  wrote in message \nnews:31086b240705151159v3983a85cn9efd303b20947c77@mail.gmail.com...\n> On 5/15/07, Bruno Schroeder  wrote:\n>\n>> I tryed to use seek but it did not work. Can you help me on that, please? \n>> I\n>> am using Windows XP. The following example writes at the end of the file.\n>>\n>> use strict;\n>> my $file = \"teste_rw.txt\";\n>> open (FILE, \"+<\", $file) or die \"Can not open $file: $!.\";\n>> for my $line () {\n>>     print $line;\n>>     seek(FILE, 0, 1);\n>>     print FILE \"b\\n\";\n>>     seek(FILE, 0, 1);\n>> }\n>> my $a_while = 2;\n>> sleep($a_while);\n>> seek(FILE, tell(FILE), 0);\n>> close FILE;\n>\n> Here's some untested code that may do something resembling what you want:\n>\n>  my $file = \"teste_rw.txt\";\n>  open (FILE, \"+<\", $file) or die \"Can not open '$file' r/w: $!\";\n>\n>  # $next_loc is the location of the next line to process\n>  my $next_loc = tell FILE;  # probably 0\n>\n>  while (1) {\n>\n>    my $current_loc = $next_loc;\n>    # seek before each read or write\n>    seek(FILE, $current_loc, 0) or die;\n>    my $line = ;\n>    last if not defined $line;  # undef at eof\n>    $next_loc = tell FILE;\n>\n>    print $line;\n>\n>    # Get the replacement string (somehow).\n>    my $repl = &replacement_for($line);\n>\n>    die \"Can't replace '$line' with '$repl'\"\n>      unless length($line) == length($repl);\n>\n>    # seek before each read or write\n>    seek(FILE, $current_loc, 0) or die;\n>    print FILE $repl;\n>  }\n>\n>  close FILE;\n>\n> I'm not sure why your code used sleep, so I omitted it. Cheers!\n>\n> --Tom Phoenix\n> Stonehenge Perl Training \n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}