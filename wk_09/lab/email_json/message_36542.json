{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r23153 - in\n\tbranches/SAMBA_4_0/source/lib/messaging: .", "body": "Author: tridge\nDate: 2007-05-26 08:47:27 +0000 (Sat, 26 May 2007)\nNew Revision: 23153\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23153\n\nLog:\n\na first cut at a fix for the dgram flood problem that volker\nfound. Not sure this is the best solution, but it should work.\n\nModified:\n   branches/SAMBA_4_0/source/lib/messaging/messaging.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/messaging/messaging.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/messaging/messaging.c\t2007-05-26 03:24:08 UTC (rev 23152)\n+++ branches/SAMBA_4_0/source/lib/messaging/messaging.c\t2007-05-26 08:47:27 UTC (rev 23153)\n@@ -48,11 +48,12 @@\n \tuint32_t num_types;\n \tstruct idr_context *dispatch_tree;\n \tstruct messaging_rec *pending;\n+\tstruct messaging_rec *retry_queue;\n \tstruct irpc_list *irpc;\n \tstruct idr_context *idr;\n \tconst char **names;\n \tstruct timeval start_time;\n-\n+\tstruct timed_event *retry_te;\n \tstruct {\n \t\tstruct event_context *ev;\n \t\tstruct fd_event *fde;\n@@ -83,6 +84,7 @@\n \t} *header;\n \n \tDATA_BLOB packet;\n+\tuint32_t retries;\n };\n \n \n@@ -168,6 +170,7 @@\n \trec->path          = msg->path;\n \trec->header        = (struct messaging_header *)packet.data;\n \trec->packet        = packet;\n+\trec->retries       = 0;\n \n \tif (packet.length != sizeof(*rec->header) + rec->header->length) {\n \t\tDEBUG(0,(\"messaging: bad message header size %d should be %d\\n\", \n@@ -211,6 +214,26 @@\n }\n \n /*\n+  retry backed off messages\n+*/\n+static void msg_retry_timer(struct event_context *ev, struct timed_event *te, \n+\t\t\t    struct timeval t, void *private)\n+{\n+\tstruct messaging_context *msg = talloc_get_type(private, \n+\t\t\t\t\t\t\tstruct messaging_context);\n+\tmsg->retry_te = NULL;\n+\n+\t/* put the messages back on the main queue */\n+\twhile (msg->retry_queue) {\n+\t\tstruct messaging_rec *rec = msg->retry_queue;\n+\t\tDLIST_REMOVE(msg->retry_queue, rec);\n+\t\tDLIST_ADD_END(msg->pending, rec, struct messaging_rec *);\n+\t}\n+\n+\tEVENT_FD_WRITEABLE(msg->event.fde);\t\n+}\n+\n+/*\n   handle a socket write event\n */\n static void messaging_send_handler(struct messaging_context *msg)\n@@ -220,8 +243,23 @@\n \t\tNTSTATUS status;\n \t\tstatus = try_send(rec);\n \t\tif (NT_STATUS_EQUAL(status, STATUS_MORE_ENTRIES)) {\n+\t\t\trec->retries++;\n+\t\t\tif (rec->retries > 3) {\n+\t\t\t\t/* we're getting continuous write errors -\n+\t\t\t\t   backoff this record */\n+\t\t\t\tDLIST_REMOVE(msg->pending, rec);\n+\t\t\t\tDLIST_ADD_END(msg->retry_queue, rec, \n+\t\t\t\t\t      struct messaging_rec *);\n+\t\t\t\tif (msg->retry_te == NULL) {\n+\t\t\t\t\tmsg->retry_te = \n+\t\t\t\t\t\tevent_add_timed(msg->event.ev, msg, \n+\t\t\t\t\t\t\t\ttimeval_current_ofs(1, 0), \n+\t\t\t\t\t\t\t\tmsg_retry_timer, msg);\n+\t\t\t\t}\n+\t\t\t}\n \t\t\tbreak;\n \t\t}\n+\t\trec->retries = 0;\n \t\tif (!NT_STATUS_IS_OK(status)) {\n \t\t\tDEBUG(1,(\"messaging: Lost message from %u to %u of type %u - %s\\n\", \n \t\t\t\t rec->header->from.id, rec->header->to.id, rec->header->msg_type, \n@@ -281,6 +319,7 @@\n \trec->path          = msg->path;\n \trec->header        = (struct messaging_header *)packet.data;\n \trec->packet        = packet;\n+\trec->retries       = 0;\n \n \tif (msize != sizeof(*rec->header) + rec->header->length) {\n \t\tDEBUG(0,(\"messaging: bad message header size %d should be %d\\n\", \n@@ -415,6 +454,7 @@\n \t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n+\trec->retries       = 0;\n \trec->msg              = msg;\n \trec->header           = (struct messaging_header *)rec->packet.data;\n \trec->header->version  = MESSAGING_VERSION;\n\n"}