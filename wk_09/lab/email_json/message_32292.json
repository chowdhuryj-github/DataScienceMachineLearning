{"category": "ham", "to_address": "jiho <jo.irisson@gmail.com>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] lapply not reading arguments from the correct environment", "body": "In particular, we can use \"[\" directly instead of subset.  This is the\nsame as your function except for the line marked ### :\n\nmyfun2 <- function() {\n       foo = data.frame(1:10,10:1)\n       foos = list(foo)\n       fooCollumn=2\n       cFoo = lapply(foos, \"[\", fooCollumn) ###\n       return(cFoo)\n}\nmyfun2() # test\n\nOn 5/18/07, Prof Brian Ripley  wrote:\n> You need to study carefully what the semantics of 'subset' are.  The\n> function body of myfun is not in the evaluation environment.  (The issue\n> is 'subset', not 'lapply': select is an *expression* and not a value.)\n>\n> Hint: using subset() programmatically is almost always a mistake.  R's\n> subsetting function is '[': subset is a convenience wrapper.\n>\n> On Fri, 18 May 2007, jiho wrote:\n>\n> > Hello,\n> >\n> > I am facing a problem with lapply which I ''''think''' may be a bug.\n> > This is the most basic function in which I can reproduce it:\n> >\n> > myfun <- function()\n> > {\n> >       foo = data.frame(1:10,10:1)\n> >       foos = list(foo)\n> >       fooCollumn=2\n> >       cFoo = lapply(foos,subset,select=fooCollumn)\n> >       return(cFoo)\n> > }\n> >\n> > I am building a list of dataframes, in each of which I want to keep\n> > only column 2 (obviously I would not do it this way in real life but\n> > that's just to demonstrate the bug).\n> > If I execute the commands inline it works but if I clean my\n> > environment, then define the function and then execute:\n> >       > myfun()\n> > I get this error:\n> >       Error in eval(expr, envir, enclos) : object \"fooCollumn\" not found\n> > while fooCollumn is defined, in the function, right before lapply. In\n> > addition, if I define it outside the function and then execute the\n> > function:\n> >       > fooCollumn=1\n> >       > myfun()\n> > it works but uses the value defined in the general environment and\n> > not the one defined in the function.\n> > This is with R 2.5.0 on both OS X and Linux (Fedora Core 6)\n> > What did I do wrong? Is this indeed a bug? An intended behavior?\n>\n> It is a bug, in your function.\n>\n> --\n> Brian D. Ripley,                  ripley@stats.ox.ac.uk\n> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\n> University of Oxford,             Tel:  +44 1865 272861 (self)\n> 1 South Parks Road,                     +44 1865 272866 (PA)\n> Oxford OX1 3TG, UK                Fax:  +44 1865 272595\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}