{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "nahoo82@gmail.com", "subject": "Re: Limiting Exported Symbols on GCC", "body": "On Thu, Apr 12, 2007 at 09:13:14AM -0500, Steve Peters wrote:\n> On Thu, Apr 12, 2007 at 01:37:24PM +0200, Ron Blaschke wrote:\n> > While poking the GCC documentation I found that there's a feature \n> > available to limit the exported symbols (with GCC >= 3.3).  Maybe worth \n> > considering?\n> > It's probably a design decision.  If there's an option to limit the \n> > exported symbols or make all available, which one should be taken?\n> > \n> > http://gcc.gnu.org/wiki/Visibility\n> > http://gcc.gnu.org/onlinedocs/gcc-3.3.6/gcc/Function-Attributes.html#Function-Attributes\n> > \n> > This can be done by adding C<-fvisibility=hidden> to CFLAGS and setting \n> > PARROT_API to C<__attribute__ ((visibility(\"default\")))>.\n> > \n> > \n> \n> I think that we need to tread very carefully with adding additional \n> gcc-isms to Parrot, lest we break compatibility with additional compilers\n> even further.  If Parrot will run everywhere, we need to think about \n> working more towards ANSI and POSIX compliance.\n\nI think that the same effect can be achieved using a linker script (although\nI don't know much about them), in wich case you are not depending on a \ncompiler feature.\n\n"}