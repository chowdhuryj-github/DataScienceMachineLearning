{"category": "ham", "to_address": "Tom Phoenix <tom@stonehenge.com>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Re: Problem with runaway format", "body": "Tom Phoenix wrote:\n> On 7/2/07, Mathew  wrote:\n> \n>> foreach my $date (@searchDate) {\n>>         while (my $ticket = $tix->Next) {\n> \n> Seeing this worries me. I don't know enough about what's going on to\n> tell whether it's wrong or not, but it looks wrong. When the outer\n> loop goes on to the second iteration, what does $tix->Next yield? (You\n> could use the debugger to find out.)\n> \n>> # Format the time spent on each ticket as hh:mm\n>> foreach my $user (keys %tickets) {\n>>         foreach my $env (keys %{ $tickets{$user} }) {\n>>                 foreach my $tikID (keys %{ $tickets{$user}{$env} }) {\n>>                         foreach my $subject (keys %{\n>> $tickets{$user}{$env}{$tikID} }) {\n> \n> You're doing the same dereferencing, just getting deeper each time.\n> You'll save some time if you make some of those into temporary\n> variables. That fourth nested loop could look more like this, but\n> possibly with better variable names:\n> \n>        my $subjects_hash = $envs_hash->{$env};\n>        foreach my $subject (keys %$subjects_hash) {\n> \n\nCan you explain the reason for skipping the {$id} portion and assigning the\n{$env} portion to %subjects_hash?  The logic eludes me.\n\n>>                                 my @endTime;\n>> #                               my $temp          =\n>> $tickets{$user}{$env}{$tikID};\n>>                                 my $temp          =\n>> $tickets{$user}{$env}{$tikID}{$subject};\n>>                                 my $temp2         = $temp / 60;\n>>                                 my @temp          = split /\\./, $temp2;\n>>                                 $endTime[0]       = $temp[0];\n>>                                 $endTime[1]       = $temp % 60;\n>> #                               $tickets{$user}{$env}{$tikID} =\n>> sprintf '%d:%02d', @endTime[0,1];\n>>                                \n>> $tickets{$user}{$env}{$tikID}{$subject} = sprintf '%d:%02d',\n>> @endTime[0,1];\n> \n> That looks like a difficult way to do it. Maybe something like this?\n> \n>          $subjects_hash->{$subject} =\n> time_format($subjects_hash->{$subject});\n> \n> sub time_format {\n>    my $arg = shift;\n>    return sprintf '%d:%02d', int($arg / 60), $arg % 60;\n> }\n> \n> That code assumes, as did the original, that the number to be\n> formatted is a non-negative integer of seconds or minutes.\n> \n> Good luck with it!\n> \n> --Tom Phoenix\n> Stonehenge Perl Training\n> \n\n\nThanks\nMathew\n-- \nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}