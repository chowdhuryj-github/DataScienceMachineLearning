{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #39784\": ;", "from_address": "\"Allison Randal via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #39784] Make Parrot's default namespace be untyped ", "body": "On Mon Jul 10 17:25:13 2006, chip wrote:\n> Parrot's default namespace implementation should be 100% untyped --\n> basically just a hash with some additional methods.\n> \n> Making this happen requires solving the problem of Parrot's currently\n> requiring classes and class method namespaces to have the same name.\n> \n> e.g. the current situation is:\n> \n>     find_global 'MyClass'                # 'MyClass' is class object\n>     find_global ['MyClass'], 'mymethod'  # 'MyClass' is namespace object\n> \n> Depending on a typed namespace in the core of Parrot is Not OK.\n\nIt shouldn't be untyped, it should just consistently be a namespace\nobject. Under the new object metamodel, you can retrieve the class\nobject (when it exists) by calling a method on the namespace object.\nAnd, you no longer look up methods in the global namespace anyway, you\nhave to look them up on the class object.\n\nThis ticket represents an alternate way to address some problems in the\nearlier object system (a solution we considered at one point in the\npast, but it wasn't a complete solution). So, I've marked the ticket as\nrejected.\n\n"}