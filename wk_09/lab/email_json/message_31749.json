{"category": "ham", "to_address": "\"jerry gay\" <jerry.gay@gmail.com>", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: r18572 - trunk/compilers/imcc", "body": "On Thursday 17 May 2007 11:13:45 jerry gay wrote:\n\n> On 5/17/07, chromatic  wrote:\n\n> > Unfortunately, our headers (and even some system headers) don't follow\n> > C89:\n\n> then what the heck does c89 compliance mean for parrot, if it's beyond\n> our control because we can't change system headers? i mean, how do you\n> enforce that compliance, if the compiler can't do it for you? maybe\n> this is a case where \"almost\" is good enough--i don't know.\n\nHopefully we can get to a state where the only problems remaining are \nwarnings.  That would require someone with more C experience across platforms \nand compilers (*cough*NicholasSteveAndy*cough*) to interject more wisdom, I \nfear.\n\n> somehow i missed C<*s = 0;>, which made the declaration illegal. i'm\n> not used to looking at code with '=' sign alignment, maybe that's what\n> threw me off.\n\nYou should get used to it.  It's nice.\n\n> anyway, it was a stupid mistake on my part. \n\nDitto mine, especially because I was *trying* to get closer to C89.\n\n> however... why is 's' nulled out, directly after it's initialized to\n> 's_key'? that looks funny.\n\nThe first is a pointer assignment and the second is a pointee assignment.  I'm \nnot sure how useful the second is, but it was in the original code, so I left \nit.\n\n-- c\n\n"}