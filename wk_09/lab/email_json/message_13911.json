{"category": "ham", "to_address": "matt@diephouse.com", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #42320] [BUG] Memory leak with String pmc", "body": "On Monday 23 April 2007 16:41, Matt Diephouse wrote:\n\n> Leopold Toetsch  wrote:\n> > Am Montag, 23. April 2007 20:23 schrieb chromatic:\n\n> > > > .sub main :main\n> > > > loop:\n> > > >     $P0 = new .String\n> > > >     goto loop\n> > > > .end\n> >\n> > That's an endless loop. How does one measure, if it's leaking memory?\n\n> Presumably, every iteration of the loop uses the same \"physical\"\n> register. This should free up the String from the previous iteration\n> for collection. If there's a leak, memory would climb higher and\n> higher; if there's not, it should level out.\n\nI also threw in my favorite:\n\n\t$P1 = getinterp\n\t...\n\t$P1.'run_gc'()\n\ntop still showed ever-increasing virtual set sizes.\n\nI'll trace what compact_pool() does to see if that sheds any light.\n\n-- c\n\n"}