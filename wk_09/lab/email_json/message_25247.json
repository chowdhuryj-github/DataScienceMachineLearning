{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22757 - in branches/SAMBA_4_0/source/lib/talloc:\n\t.", "body": "Author: metze\nDate: 2007-05-08 08:49:52 +0000 (Tue, 08 May 2007)\nNew Revision: 22757\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22757\n\nLog:\ntest if calling talloc_free() works on parent elements from within a destrutor\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/lib/talloc/testsuite.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/talloc/testsuite.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/talloc/testsuite.c\t2007-05-08 04:38:16 UTC (rev 22756)\n+++ branches/SAMBA_4_0/source/lib/talloc/testsuite.c\t2007-05-08 08:49:52 UTC (rev 22757)\n@@ -993,7 +993,7 @@\n \ts4 = talloc_array_ptrtype(top, s4, 10);location4 = __location__;\n \n \tif (talloc_get_size(s4) != (sizeof(struct struct1 **) * 10)) {\n-\t\tprintf(\"failure: TALLOC PTRTYPE [\\n\"\n+\t\tprintf(\"failure: ptrtype [\\n\"\n \t\t      \"talloc_array_ptrtype() allocated the wrong size \"\n \t\t       \"%lu (should be %lu)\\n]\\n\",\n \t\t\t   (unsigned long)talloc_get_size(s4),\n@@ -1010,6 +1010,45 @@\n \treturn true;\n }\n \n+static int _test_talloc_free_in_destructor(void **ptr)\n+{\n+\ttalloc_free(*ptr);\n+\treturn 0;\n+}\n+\n+static bool test_talloc_free_in_destructor(void)\n+{\n+\tvoid *level0;\n+\tvoid *level1;\n+\tvoid *level2;\n+\tvoid *level3;\n+\tvoid *level4;\n+\tvoid **level5;\n+\n+\tprintf(\"test: free_in_destructor [\\nTALLOC FREE IN DESTRUCTOR\\n]\\n\");\n+\n+\tlevel0 = talloc_new(NULL);\n+\tlevel1 = talloc_new(level0);\n+\tlevel2 = talloc_new(level1);\n+\tlevel3 = talloc_new(level2);\n+\tlevel4 = talloc_new(level3);\n+\tlevel5 = talloc(level4, void *);\n+\n+\t*level5 = level3;\n+\t(void)talloc_reference(level0, level3);\n+\t(void)talloc_reference(level3, level3);\n+\t(void)talloc_reference(level5, level3);\n+\n+\ttalloc_set_destructor(level5, _test_talloc_free_in_destructor);\n+\n+\ttalloc_free(level1);\n+\n+\ttalloc_free(level0);\n+\n+\tprintf(\"success: free_in_destructor\\n\");\n+\treturn true;\n+}\n+\n static bool test_autofree(void)\n {\n #if _SAMBA_BUILD_ < 4\n@@ -1055,6 +1094,7 @@\n \tret &= test_loop();\n \tret &= test_free_parent_deny_child(); \n \tret &= test_talloc_ptrtype();\n+\tret &= test_talloc_free_in_destructor();\n \n \tif (ret) {\n \t\tret &= test_speed();\n\n"}