{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Dr.Ruud\" <rvtol+news@isolution.nl>", "subject": "Re: character encoding & regex", "body": "Tom Allison schreef:\n\n> I don't require actual character comparison, comparison of \\{263a} is\n> sufficient.\n\nA Perl string contains characters (not octets).\nThe codepoint U+263a is represented by the character \"\\x{263a}\".\nWhether that takes 1 or 2 or 3 or even more octets in the string,\nshouldn't matter. Read perlunitut.\n\nIf you convert your data first to proper UTF-8, then the next steps are\nfar easier.\n\n\n> And it's rather difficult to determine in raw email what the correct\n> charset is to use for each string.  I find that email sometimes\n> passes multiple encodings in one message making it more difficult to\n> pick apart.\n\nThere are plenty of tools available to do that for you. I have never\nlooked for it, but I wouldn't be surprised that someone already did\nexactly that: convert an e-mail message (including of course all encoded\nheader lines, and all MIME parts) to an UTF-8 version.\n\n\n> As for SpamAssassin.  I'm trying to stay away from that because it's\n> very large\n\nhttp://wiki.apache.org/spamassassin/OutOfMemoryProblems\nhttp://wiki.apache.org/spamassassin/SURBL\n\n> and from a development perspective -- badly documented in\n> the code.  Basically, SpamAssassin is capable for what it does, but I\n> don't exactly want to do that.  Similar, yet, but not exactly.\n\nDid you look into SA \"custom rules\"? I find them quite easy to use.\nhttp://mywebpages.comcast.net/mkettler/sa/SA-rules-howto.txt\nhttp://www.askdavetaylor.com/how_do_i_add_custom_spamassassin_rules_for_content_filtering.html\nhttp://wiki.apache.org/spamassassin/CustomRulesets\nhttp://www.rulesemporium.com/rules.htm\n\n-- \nAffijn, Ruud\n\n\"Gewoon is een tijger.\"\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}