{"category": "ham", "to_address": "\"Zack Weinberg\" <zackw@panix.com>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] wrapping lattice xyplot", "body": "I am not entirely happy with this solution but it does seem to work.\nIn pg we pick groups out of its parent.frame and we place the\nentire body of graph2 in eval.parent(substitute(...))\n\npg <- function(x, y, subscripts, ..., group.number) {\n   panel.xyplot(x, y, ...)\n   panel.text(2, unique(y[x==2]),\n              levels(parent.frame()$groups)[group.number],\n              pos=4, cex=0.5)\n }\n\ngraph2 <- function (x, data, groups, xlab)\n eval.parent(substitute({\n xyplot(x, data=data, groups=groups,\n             type='l',\n             ylab=list(cex=1.1, label='Mean RT (ms)'),\n             xlab=list(cex=1.1, label=xlab),\n             scales=list(\n               x=list(alternating=c(1,1), tck=c(1,0)),\n               y=list(alternating=c(1,0))\n               ),\n             panel=panel.superpose,\n             panel.groups=pg)\n}))\ngraph2(uptake ~ conc, CO2, Treatment, \"X\")\n\n\nOn 6/8/07, Zack Weinberg  wrote:\n> This is an expanded version of the question I tried to ask last night\n> - I thought I had it this morning, but it's still not working and I\n> just do not understand what is going wrong.\n>\n> What I am trying to do is write a wrapper for lattice xyplot() that\n> passes a whole bunch of its secondary arguments, so that I can produce\n> similarly formatted graphs for several different data sets.  This is\n> what I've got:\n>\n> graph <- function (x, data, groups, xlab) {\n>  g <- eval(substitute(groups), data, parent.frame())\n>\n>  pg <- function(x, y, group.number, ...) {\n>    panel.xyplot(x, y, ..., group.number=group.number)\n>    panel.text(2, unique(y[x==2]),\n>               levels(g)[group.number],\n>               pos=4, cex=0.5)\n>  }\n>\n>  xyplot(x, data=data, groups=substitute(g),\n>              type='l',\n>              ylab=list(cex=1.1, label='Mean RT (ms)'),\n>              xlab=list(cex=1.1, label=xlab),\n>              scales=list(\n>                x=list(alternating=c(1,1), tck=c(1,0)),\n>                y=list(alternating=c(1,0))\n>                ),\n>              panel=panel.superpose,\n>              panel.groups=pg\n>              )\n> }\n>\n> \"pg\" is supposed to pick \"g\" up from the lexical enclosure. I have no\n> idea whether that actually works, because it never gets that far.  A\n> typical call to this function looks like so:\n>\n> > graph(est ~ pro | hemi, sm, obs, \"Probe type\")\n>\n> (where 'sm' is a data frame that really does contain all four columns\n> 'est', 'pro', 'hemi', and 'obs', pinky swear) and, as it stands above,\n> invariably gives me this error:\n>\n> Error in eval(expr, envir, enclos) : object \"est\" not found\n>\n> I tried substitute(x) (as that seems to have cured a similar problem\n> with \"g\") but then x is not a formula and method dispatch fails.\n>\n> Help?\n> zw\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}