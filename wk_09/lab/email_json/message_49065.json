{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23518 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0/source/smbd SAMBA_3_0_26/source/lib\n\tSAMBA_3_0_26/source/smbd", "body": "Author: vlendec\nDate: 2007-06-16 11:48:11 +0000 (Sat, 16 Jun 2007)\nNew Revision: 23518\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23518\n\nLog:\nRemove the silly assumption that string_replace requires a pstring.\n\nJeremy, I am always very confused about the different length arguments\nin convert_string and friends. Can you take a look at the change in\nstring_replace and verify it's ok? Thanks!\n\nWhile at it, remove the pstring limit for strhasupper and strhaslower.\n\n\nModified:\n   branches/SAMBA_3_0/source/lib/util_str.c\n   branches/SAMBA_3_0/source/smbd/notify.c\n   branches/SAMBA_3_0_26/source/lib/util_str.c\n   branches/SAMBA_3_0_26/source/smbd/notify.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/util_str.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/util_str.c\t2007-06-16 10:02:51 UTC (rev 23517)\n+++ branches/SAMBA_3_0/source/lib/util_str.c\t2007-06-16 11:48:11 UTC (rev 23518)\n@@ -126,8 +126,6 @@\n \treturn ret;\t\n }\n \n-static uint16 tmpbuf[sizeof(pstring)];\n-\n void set_first_token(char *ptr)\n {\n \tlast_ptr = ptr;\n@@ -394,9 +392,11 @@\n  NOTE: oldc and newc must be 7 bit characters\n **/\n \n-void string_replace( pstring s, char oldc, char newc )\n+void string_replace( char *s, char oldc, char newc )\n {\n \tchar *p;\n+\tsmb_ucs2_t *tmp;\n+\tsize_t src_len, len;\n \n \t/* this is quite a common operation, so we want it to be\n \t   fast. We optimise for the ascii case, knowing that all our\n@@ -418,9 +418,14 @@\n \t/* With compose characters we must restart from the beginning. JRA. */\n \tp = s;\n #endif\n-\tpush_ucs2(NULL, tmpbuf, p, sizeof(tmpbuf), STR_TERMINATE);\n-\tstring_replace_w(tmpbuf, UCS2_CHAR(oldc), UCS2_CHAR(newc));\n-\tpull_ucs2(NULL, p, tmpbuf, -1, sizeof(tmpbuf), STR_TERMINATE);\n+\tsrc_len = strlen(p);\n+\tlen = push_ucs2_allocate(&tmp, p);\n+\tif (len == -1) {\n+\t\treturn;\n+\t}\n+\tstring_replace_w(tmp, UCS2_CHAR(oldc), UCS2_CHAR(newc));\n+\tpull_ucs2(NULL, p, tmp, src_len+1, -1, STR_TERMINATE);\n+\tSAFE_FREE(tmp);\n }\n \n /**\n@@ -584,12 +589,22 @@\n \n BOOL strhasupper(const char *s)\n {\n-\tsmb_ucs2_t *ptr;\n-\tpush_ucs2(NULL, tmpbuf,s, sizeof(tmpbuf), STR_TERMINATE);\n-\tfor(ptr=tmpbuf;*ptr;ptr++)\n-\t\tif(isupper_w(*ptr))\n-\t\t\treturn True;\n-\treturn(False);\n+\tsmb_ucs2_t *tmp, *p;\n+\tBOOL ret;\n+\n+\tif (push_ucs2_allocate(&tmp, s) == -1) {\n+\t\treturn False;\n+\t}\n+\n+\tfor(p = tmp; *p != 0; p++) {\n+\t\tif(isupper_w(*p)) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+\tret = (*p != 0);\n+\tSAFE_FREE(tmp);\n+\treturn ret;\n }\n \n /**\n@@ -598,12 +613,22 @@\n \n BOOL strhaslower(const char *s)\n {\n-\tsmb_ucs2_t *ptr;\n-\tpush_ucs2(NULL, tmpbuf,s, sizeof(tmpbuf), STR_TERMINATE);\n-\tfor(ptr=tmpbuf;*ptr;ptr++)\n-\t\tif(islower_w(*ptr))\n-\t\t\treturn True;\n-\treturn(False);\n+\tsmb_ucs2_t *tmp, *p;\n+\tBOOL ret;\n+\n+\tif (push_ucs2_allocate(&tmp, s) == -1) {\n+\t\treturn False;\n+\t}\n+\n+\tfor(p = tmp; *p != 0; p++) {\n+\t\tif(islower_w(*p)) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+\tret = (*p != 0);\n+\tSAFE_FREE(tmp);\n+\treturn ret;\n }\n \n /**\n@@ -2628,7 +2653,7 @@\n char *escape_shell_string(const char *src)\n {\n \tsize_t srclen = strlen(src);\n-\tchar *ret = SMB_MALLOC((srclen * 2) + 1);\n+\tchar *ret = SMB_MALLOC_ARRAY(char, (srclen * 2) + 1);\n \tchar *dest = ret;\n \tBOOL in_s_quote = False;\n \tBOOL in_d_quote = False;\n\nModified: branches/SAMBA_3_0/source/smbd/notify.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/notify.c\t2007-06-16 10:02:51 UTC (rev 23517)\n+++ branches/SAMBA_3_0/source/smbd/notify.c\t2007-06-16 11:48:11 UTC (rev 23518)\n@@ -328,7 +328,7 @@\n static void notify_fsp(files_struct *fsp, uint32 action, const char *name)\n {\n \tstruct notify_change *change, *changes;\n-\tpstring name2;\n+\tchar *tmp;\n \n \tif (fsp->notify == NULL) {\n \t\t/*\n@@ -337,9 +337,6 @@\n \t\treturn;\n \t}\n \n-\tpstrcpy(name2, name);\n-\tstring_replace(name2, '/', '\\\\');\n-\n \t/*\n \t * Someone has triggered a notify previously, queue the change for\n \t * later.\n@@ -370,11 +367,14 @@\n \n \tchange = &(fsp->notify->changes[fsp->notify->num_changes]);\n \n-\tif (!(change->name = talloc_strdup(changes, name2))) {\n+\tif (!(tmp = talloc_strdup(changes, name))) {\n \t\tDEBUG(0, (\"talloc_strdup failed\\n\"));\n \t\treturn;\n \t}\n \n+\tstring_replace(tmp, '/', '\\\\');\n+\tchange->name = tmp;\t\n+\n \tchange->action = action;\n \tfsp->notify->num_changes += 1;\n \n\nModified: branches/SAMBA_3_0_26/source/lib/util_str.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/util_str.c\t2007-06-16 10:02:51 UTC (rev 23517)\n+++ branches/SAMBA_3_0_26/source/lib/util_str.c\t2007-06-16 11:48:11 UTC (rev 23518)\n@@ -126,8 +126,6 @@\n \treturn ret;\t\n }\n \n-static uint16 tmpbuf[sizeof(pstring)];\n-\n void set_first_token(char *ptr)\n {\n \tlast_ptr = ptr;\n@@ -397,6 +395,8 @@\n void string_replace( pstring s, char oldc, char newc )\n {\n \tchar *p;\n+\tsmb_ucs2_t *tmp;\n+\tsize_t len;\n \n \t/* this is quite a common operation, so we want it to be\n \t   fast. We optimise for the ascii case, knowing that all our\n@@ -418,9 +418,13 @@\n \t/* With compose characters we must restart from the beginning. JRA. */\n \tp = s;\n #endif\n-\tpush_ucs2(NULL, tmpbuf, p, sizeof(tmpbuf), STR_TERMINATE);\n-\tstring_replace_w(tmpbuf, UCS2_CHAR(oldc), UCS2_CHAR(newc));\n-\tpull_ucs2(NULL, p, tmpbuf, -1, sizeof(tmpbuf), STR_TERMINATE);\n+\tlen = push_ucs2_allocate(&tmp, p);\n+\tif (len == -1) {\n+\t\treturn;\n+\t}\n+\tstring_replace_w(tmp, UCS2_CHAR(oldc), UCS2_CHAR(newc));\n+\tpull_ucs2(NULL, p, tmp, len/2, -1, STR_TERMINATE);\n+\tSAFE_FREE(tmp);\n }\n \n /**\n@@ -584,12 +588,22 @@\n \n BOOL strhasupper(const char *s)\n {\n-\tsmb_ucs2_t *ptr;\n-\tpush_ucs2(NULL, tmpbuf,s, sizeof(tmpbuf), STR_TERMINATE);\n-\tfor(ptr=tmpbuf;*ptr;ptr++)\n-\t\tif(isupper_w(*ptr))\n-\t\t\treturn True;\n-\treturn(False);\n+\tsmb_ucs2_t *tmp, *p;\n+\tBOOL ret;\n+\n+\tif (push_ucs2_allocate(&tmp, s) == -1) {\n+\t\treturn False;\n+\t}\n+\n+\tfor(p = tmp; *p != 0; p++) {\n+\t\tif(isupper_w(*p)) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+\tret = (*p != 0);\n+\tSAFE_FREE(tmp);\n+\treturn ret;\n }\n \n /**\n@@ -598,12 +612,22 @@\n \n BOOL strhaslower(const char *s)\n {\n-\tsmb_ucs2_t *ptr;\n-\tpush_ucs2(NULL, tmpbuf,s, sizeof(tmpbuf), STR_TERMINATE);\n-\tfor(ptr=tmpbuf;*ptr;ptr++)\n-\t\tif(islower_w(*ptr))\n-\t\t\treturn True;\n-\treturn(False);\n+\tsmb_ucs2_t *tmp, *p;\n+\tBOOL ret;\n+\n+\tif (push_ucs2_allocate(&tmp, s) == -1) {\n+\t\treturn False;\n+\t}\n+\n+\tfor(p = tmp; *p != 0; p++) {\n+\t\tif(islower_w(*p)) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n+\tret = (*p != 0);\n+\tSAFE_FREE(tmp);\n+\treturn ret;\n }\n \n /**\n@@ -2628,7 +2652,7 @@\n char *escape_shell_string(const char *src)\n {\n \tsize_t srclen = strlen(src);\n-\tchar *ret = SMB_MALLOC((srclen * 2) + 1);\n+\tchar *ret = SMB_MALLOC_ARRAY(char, (srclen * 2) + 1);\n \tchar *dest = ret;\n \tBOOL in_s_quote = False;\n \tBOOL in_d_quote = False;\n\nModified: branches/SAMBA_3_0_26/source/smbd/notify.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/notify.c\t2007-06-16 10:02:51 UTC (rev 23517)\n+++ branches/SAMBA_3_0_26/source/smbd/notify.c\t2007-06-16 11:48:11 UTC (rev 23518)\n@@ -327,7 +327,7 @@\n static void notify_fsp(files_struct *fsp, uint32 action, const char *name)\n {\n \tstruct notify_change *change, *changes;\n-\tpstring name2;\n+\tchar *tmp;\n \n \tif (fsp->notify == NULL) {\n \t\t/*\n@@ -336,9 +336,6 @@\n \t\treturn;\n \t}\n \n-\tpstrcpy(name2, name);\n-\tstring_replace(name2, '/', '\\\\');\n-\n \t/*\n \t * Someone has triggered a notify previously, queue the change for\n \t * later.\n@@ -369,11 +366,14 @@\n \n \tchange = &(fsp->notify->changes[fsp->notify->num_changes]);\n \n-\tif (!(change->name = talloc_strdup(changes, name2))) {\n+\tif (!(tmp = talloc_strdup(changes, name))) {\n \t\tDEBUG(0, (\"talloc_strdup failed\\n\"));\n \t\treturn;\n \t}\n \n+\tstring_replace(tmp, '/', '\\\\');\n+\tchange->name = tmp;\t\n+\n \tchange->action = action;\n \tfsp->notify->num_changes += 1;\n \n\n"}