{"category": "ham", "to_address": "\"Vahid Moghaddasi\" <vahid.moghaddasi@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: grep from one file and write to another", "body": "On 6/23/07, Vahid Moghaddasi  wrote:\n\n> For each field (user) in the filter.in file, I will have to find the\n> user in passwd file, wouldn't I need to re-read the passwd file as\n> much as there are fields in filter.in file?\n\nProbably not. For one solution, you might be able to use getpwnam to\nget the information for each username individually, so you never need\nto read from the password file at all.\n\n    my($name, $passwd, $uid, $gid,\n          $quota, $comment, $gcos, $dir, $shell, $expire)\n        = getpwnam($username);\n\nBut maybe you need the actual password file.\n\n> I am not sure how much I can read into memory space without affecting\n> other programs but the entire FILTERfh could be a pretty large. Each\n> line could have up to 100 fields (users) and there could be 3 or 5\n> lines. How would I read them into memory? In an array?\n\n300 to 500 usernames? If every username is meant to be unique, this\nsounds like it's asking to be a hash. A hash with hundreds of\nkey-value pairs is easy for Perl to handle, so unless each value is\nvery large you shouldn't have memory issues.\n\nOnce you've built the hash, you can traverse the password file (or use\ngetpwent) and quickly identify the matching usernames from the hash.\n\nCheers!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}