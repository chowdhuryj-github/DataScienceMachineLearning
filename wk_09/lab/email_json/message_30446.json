{"category": "ham", "to_address": "\"Jameson C. Burt\" <jameson@coost.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: qx() won't accept over (about) 128,000 characters", "body": "On 5/15/07, Jameson C. Burt  wrote:\n\n> Letting my imagination loose,\n> I ponder that  qx()  could have a fixed buffer size, which cannot be exceeded;\n> or Unix takes in a block of size 2^16 but not of size 2^17.\n> But I am probably only cluttering my mind with possibilities,\n> when the problem is a simple looking  large-number-of-characters problem.\n> Any ideas?\n\nIt seems that you've stumbled upon an undocumented implementation\nlimitation. Perl doesn't have too many of those, and it probably\nshouldn't have any. Now that you have a test case, I encourage you to\nrun perlbug to submit it with a request that it be fixed or\ndocumented. (I suspect, though, that the real limitation is in your OS\nor shell, rather than Perl; so the only fix will be to the\ndocumentation.)\n\nBut what's in the qx``, an entire shell script? Maybe there's a better\nway to do whatever you're trying to do.\n\nWhen a string within qx`` contains shell metacharacters, the string is\npassed to /bin/sh on Unix systems. So you're starting a shell, and\ngiving it a large program to run. The shell is going to launch one or\nmore other programs. Maybe your program could launch those programs\ndirectly, leaving the shell out of things, and saving that much memory\nand time, not to mention bypassing any limitations the shell imposes.\n\nGood luck with it!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}