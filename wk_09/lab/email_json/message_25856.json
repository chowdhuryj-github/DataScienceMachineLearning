{"category": "ham", "to_address": "Alek Storm <alek.storm@gmail.com>, Allison Randal <allison@perl.org>,\n   chromatic <chromatic@wgz.org>", "from_address": "Will Coleda <will@coleda.com>", "subject": "Re: [perl #42905] [PATCH] implement vtable overriding for PDD15, bugfix", "body": "\nOn May 8, 2007, at 6:02 PM, Alek Storm wrote:\n\n> On 5/8/07, chromatic  wrote:\n>>\n>> With :vtable, you define a sub of the appropriate name and use  \n>> the :vtable\n>> attribute.\n>>\n>> Without :vtable, you define a sub of any name, add :anon so as not to\n>> pollute\n>> your namespace, somehow magically get that sub in a PMC, get the\n>> appropriate\n>> class in a PMC, and then call add_method on that class object with  \n>> the sub\n>> object, being sure to do all of this at load or instantiation time  \n>> so that\n>> people can use the right vtable entry any time during the program.\n>\n>\n> No, with :vtable you define a sub of any name and use the :vtable  \n> attribute,\n> specifying which vtable method it overrides if the name doesn't  \n> match the\n> vtable name.  Then you create a Class PMC and call 'add_method' on it,\n> passing the name, sub, flag that it's a vtable method, and flag  \n> that it's\n> anonymous.  However, since it's anonymous, the name parameter doesn't\n> matter.\n>\n> Without :vtable, you define a sub of any name.  Then you create a  \n> Class PMC\n> and call 'add_vtable_method' on it, passing the vtable name and sub.\n>\n> Remember that this patch is for PDD15, not the old object system.   \n> Even so,\n> classes are *already* manually created at load time in both the  \n> PDD15 and\n> old object systems - that's where we stick the 'newclass' opcode.\n\nLooking at PDD15, I see this paragraph...\n\n > To override a vtable function, either add the :vtable pragma to the\n > declaration of the method, or pass a named parameter \"vtable\" into  \nthe\n > add_method method on a class or role.\n\n... which is kind of lonely, since, as you point out, there is no way  \nin PDD15 to *declare* a method (and not that vtable ISA method, either.)\n\nIf we're keeping :vtable, we need to update this verbiage (and  \ninclude an example) to avoid confusion.\n\nOn a related note, :method is mentioned in docs/compiler_faq.pod &  \ndocs/imcc/calling_conventions.pod. If it's dead, it needs to be  \ndeprecated; if it's not, it should probably be mentioned in PDD15.\n\n> -- \n> Alek Storm\n\n--\nWill \"Coke\" Coleda\nwill@coleda.com\n\n\n"}