{"category": "ham", "to_address": "brian d foy <brian.d.foy@gmail.com>", "from_address": "Steve Peters <steve@fisharerojo.org>", "subject": "Re: Should a dirhandle be a filehandle-like iterator?", "body": "On Fri, Apr 13, 2007 at 07:43:23PM -0500, brian d foy wrote:\n> As I was playing around with dirhandles, I thought \"What if...\" (which\n> is actualy sorta fun to do in Pugs, where Perl 5 has everything\n> documented somewhere even if nobody has read it).\n> \n> My goal is modest: explain fewer things in the Llama. If dirhandles\n> were like filehandles, there's a couple of pages of explanation I don't\n> need to go through.\n> \n> Witness:\n> \n> I can iterate through the elements of a named array with =@array:\n> \n>    my @a = < 1 2 3 4 5 >;\n>    for =@a { .say }   # but not =< 1 2 3 4 5 > :(\n> \n> and I can read lines from a file:\n> \n>    for =$fh { .say }\n> \n> Should I be able to go through a directory handle that way too? A \"yes\"\n> answer would be very pleasing :)\n> \n>    my $dh = \"doc\".opendir;\n>    for =$dh { .say }    # doesn't work in pugs\n> \n> And, since we're using objects now, .closedir can really just be\n> .close, right? \n> \n> And, maybe this has been already done, but wrapping a lazy filter\n> around anything that can return items. I'm not proposing this as a\n> language feature, but if many things shared the same way of getting the\n> next item, perhaps I could wrap it in a lazy map-ish thingy:\n> \n>    my $general_iterator = lazy_mappish_thingy( \"doc\".opendir ); \n> \n>    for =$general_iterator { .say }\n> \n>    $general_iterator.close;  # or .end, or .whatever\n> \n> That last part is definetely not Llama material, but maybe I'll at\n> least hit the haystack.\n\nOne of the things done for Perl 5.10 is to make dirhandles be a little\nbit more like filehandles.  On OS's that allow it, things like\n\n    stat DIRHANDLE\n    -X DIRHANDLE\n    chdir DIRHANDLE\n\nall make sense and do what you'd think they'd do.  \n\nSteve Peters\nsteve@fisharerojo.org\n\n"}