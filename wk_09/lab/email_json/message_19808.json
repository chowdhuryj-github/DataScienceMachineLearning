{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22586 - in branches: SAMBA_3_0/source/rpc_server\n\tSAMBA_3_0_25/source/rpc_server", "body": "Author: jra\nDate: 2007-04-30 00:53:17 +0000 (Mon, 30 Apr 2007)\nNew Revision: 22586\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22586\n\nLog:\nAdd a modified version of Simo's patch.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\n   branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:48:20 UTC (rev 22585)\n+++ branches/SAMBA_3_0/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n@@ -949,6 +949,7 @@\n \tif (num_account == 0) {\n \t\tDEBUG(5, (\"_samr_enum_dom_users: enumeration handle over \"\n \t\t\t  \"total entries\\n\"));\n+\t\tinit_samr_r_enum_dom_users(r_u, q_u->start_idx, 0);\n \t\treturn NT_STATUS_OK;\n \t}\n \n@@ -1708,7 +1709,7 @@\n \tUNIHDR *hdr_name = NULL;\n \tUNISTR2 *uni_name = NULL;\n \tDOM_SID pol_sid;\n-\tint num_rids = q_u->num_rids1;\n+\tint num_rids = (int)q_u->num_rids1;\n \tuint32 acc_granted;\n \tint i;\n \n@@ -1726,12 +1727,18 @@\n \t\treturn NT_STATUS_UNSUCCESSFUL;\n \t}\n \n-\tnames = TALLOC_ZERO_ARRAY(p->mem_ctx, const char *, num_rids);\n-\tattrs = TALLOC_ZERO_ARRAY(p->mem_ctx, enum lsa_SidType, num_rids);\n-\twire_attrs = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_rids);\n+\tif (num_rids) {\n+\t\tnames = TALLOC_ZERO_ARRAY(p->mem_ctx, const char *, num_rids);\n+\t\tattrs = TALLOC_ZERO_ARRAY(p->mem_ctx, enum lsa_SidType, num_rids);\n+\t\twire_attrs = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_rids);\n \n-\tif ((num_rids != 0) && ((names == NULL) || (attrs == NULL) || (wire_attrs==NULL)))\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif ((names == NULL) || (attrs == NULL) || (wire_attrs==NULL))\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tnames = NULL;\n+\t\tattrs = NULL;\n+\t\twire_attrs = NULL;\n+\t}\n \n \tbecome_root();  /* lookup_sid can require root privs */\n \tr_u->status = pdb_lookup_rids(&pol_sid, num_rids, q_u->rid,\n@@ -3803,10 +3810,14 @@\n \t    !sid_check_is_builtin(&info->sid))\n \t\treturn NT_STATUS_OBJECT_TYPE_MISMATCH;\n \n-\tmembers = TALLOC_ARRAY(p->mem_ctx, DOM_SID, q_u->num_sids1);\n+\tif (q_u->num_sids1) {\n+\t\tmembers = TALLOC_ARRAY(p->mem_ctx, DOM_SID, q_u->num_sids1);\n \n-\tif (members == NULL)\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif (members == NULL)\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tmembers = NULL;\n+\t}\n \n \tfor (i=0; inum_sids1; i++)\n \t\tsid_copy(&members[i], &q_u->sid[i].sid);\n@@ -3864,10 +3875,14 @@\n \t\treturn status;\n \t}\n \n-\tsid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_sids);\t\n-\tif (num_sids!=0 && sid == NULL) {\n-\t\tSAFE_FREE(sids);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (num_sids) {\n+\t\tsid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_sids);\t\n+\t\tif (sid == NULL) {\n+\t\t\tSAFE_FREE(sids);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tsid = NULL;\n \t}\n \n \tfor (i = 0; i < num_sids; i++) {\n\nModified: branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:48:20 UTC (rev 22585)\n+++ branches/SAMBA_3_0_25/source/rpc_server/srv_samr_nt.c\t2007-04-30 00:53:17 UTC (rev 22586)\n@@ -964,6 +964,7 @@\n \tif (num_account == 0) {\n \t\tDEBUG(5, (\"_samr_enum_dom_users: enumeration handle over \"\n \t\t\t  \"total entries\\n\"));\n+\t\tinit_samr_r_enum_dom_users(r_u, q_u->start_idx, 0);\n \t\treturn NT_STATUS_OK;\n \t}\n \n@@ -1723,7 +1724,7 @@\n \tUNIHDR *hdr_name = NULL;\n \tUNISTR2 *uni_name = NULL;\n \tDOM_SID pol_sid;\n-\tint num_rids = q_u->num_rids1;\n+\tint num_rids = (int)q_u->num_rids1;\n \tuint32 acc_granted;\n \tint i;\n \t\n@@ -1741,12 +1742,18 @@\n \t\treturn NT_STATUS_UNSUCCESSFUL;\n \t}\n \n-\tnames = TALLOC_ZERO_ARRAY(p->mem_ctx, const char *, num_rids);\n-\tattrs = TALLOC_ZERO_ARRAY(p->mem_ctx, enum lsa_SidType, num_rids);\n-\twire_attrs = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_rids);\n+\tif (num_rids) {\n+\t\tnames = TALLOC_ZERO_ARRAY(p->mem_ctx, const char *, num_rids);\n+\t\tattrs = TALLOC_ZERO_ARRAY(p->mem_ctx, enum lsa_SidType, num_rids);\n+\t\twire_attrs = TALLOC_ZERO_ARRAY(p->mem_ctx, uint32, num_rids);\n \n-\tif ((num_rids != 0) && ((names == NULL) || (attrs == NULL) || (wire_attrs==NULL)))\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif ((names == NULL) || (attrs == NULL) || (wire_attrs==NULL))\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tnames = NULL;\n+\t\tattrs = NULL;\n+\t\twire_attrs = NULL;\n+\t}\n \n \tbecome_root();  /* lookup_sid can require root privs */\n \tr_u->status = pdb_lookup_rids(&pol_sid, num_rids, q_u->rid,\n@@ -3818,10 +3825,14 @@\n \t    !sid_check_is_builtin(&info->sid))\n \t\treturn NT_STATUS_OBJECT_TYPE_MISMATCH;\n \n-\tmembers = TALLOC_ARRAY(p->mem_ctx, DOM_SID, q_u->num_sids1);\n+\tif (q_u->num_sids1) {\n+\t\tmembers = TALLOC_ARRAY(p->mem_ctx, DOM_SID, q_u->num_sids1);\n \n-\tif (members == NULL)\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\t\tif (members == NULL)\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tmembers = NULL;\n+\t}\n \n \tfor (i=0; inum_sids1; i++)\n \t\tsid_copy(&members[i], &q_u->sid[i].sid);\n@@ -3879,10 +3890,14 @@\n \t\treturn status;\n \t}\n \n-\tsid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_sids);\t\n-\tif (num_sids!=0 && sid == NULL) {\n-\t\tSAFE_FREE(sids);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (num_sids) {\n+\t\tsid = TALLOC_ZERO_ARRAY(p->mem_ctx, DOM_SID2, num_sids);\t\n+\t\tif (sid == NULL) {\n+\t\t\tSAFE_FREE(sids);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tsid = NULL;\n \t}\n \n \tfor (i = 0; i < num_sids; i++) {\n\n"}