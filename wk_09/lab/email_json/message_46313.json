{"category": "ham", "to_address": "\"Ravi Varadhan\" <rvaradhan@jhmi.edu>,\n   \"'Spencer Graves'\" <spencer.graves@pdf.com>", "from_address": "\"Jeremy Goldhaber-Fiebert\" <JGOLDHAB@hsph.harvard.edu>", "subject": "Re: [R] Fwd: Using odesolve to produce non-negative solutions", "body": "Hi Ravi,\n\nThanks for your response. I tried this in Berkeley Madonna and in Matlab. In Berkeley Madonna I did not have the problem (RK4 solver). In Matlab (ode45 solver), I had the problem if I did not use their NonNegative option. My thought was that NonNegative uses something like an additional piece of logic in modifying step size (maybe something like: if stepsize * derivative + current condition is negative, then reduce step size), but I don't know.\n\nMy original application was to generate ode output for a variety of unknown parameters, comparing the output to observed data and thereby using a likelihood-based approach to identify unknown parameter combinations that are most consistent with observed data given the uncertainty. First, I wanted to get a sense of how the model performed over a range of parameters that seem plausible based on literature review. I had originally thought to do this in Matlab and built a little proof of concept searching program, but given that R is free and has many other great packages for doing optimization and statistical analysis (and is easy to setup which is great for cluster computing situations), I thought it would be better to do it in R. When I did this, I got negative values and hence sent to the list.\n\nOnce again, thanks for your help. Not sure if this clarification email will generate other suggestions or thoughts.\n\nBest,\nJeremy\n\n>>> \"Ravi Varadhan\"  6/11/2007 2:11 PM >>>\nHi Jeremy,\n\nA smaller step size may or may not help.  If the issue is simply truncation\nerror, that is the error involved in discretizing the differential\nequations, then a smaller step size would help.  If, however, the true\nsolution to the differential equation is negative, for some t, then the\nnumerical solution should also be negative.  If the negative solution does\nnot make sense, then the system of equation needs to be examined to see when\nand why negative solutions arise.  Perhaps, I am just making this up - there\nneeds to be a \"dampening function\" that slows down the trajectory as it\napproaches zero from its initial value. It is also possible that only\ncertain regions of the parameter space (note that initial conditions are\nalso parameters) are allowed in the sense that only there the solution is\nfeasible for all t.  So, in your example, the parameters might not be\nrealistic.  In short, if you are sure that the numerical solution is\naccurate, then you need to go back to your system of equations and analyze\nthem carefully.  \n\n\nRavi.\n\n\n----------------------------------------------------------------------------\n-------\n\nRavi Varadhan, Ph.D.\n\nAssistant Professor, The Center on Aging and Health\n\nDivision of Geriatric Medicine and Gerontology \n\nJohns Hopkins University\n\nPh: (410) 502-2619\n\nFax: (410) 614-9625\n\nEmail: rvaradhan@jhmi.edu \n\nWebpage:  http://www.jhsph.edu/agingandhealth/People/Faculty/Varadhan.html \n\n \n\n----------------------------------------------------------------------------\n--------\n\n\n-----Original Message-----\nFrom: r-help-bounces@stat.math.ethz.ch \n[mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of Jeremy\nGoldhaber-Fiebert\nSent: Monday, June 11, 2007 11:47 AM\nTo: Spencer Graves\nCc: r-help@stat.math.ethz.ch \nSubject: Re: [R] Fwd: Using odesolve to produce non-negative solutions\n\nHi Spencer,\n\nThank you for your response. I also did not see anything on the lsoda help\npage which is the reason that I wrote to the list.\n\n>From your response, I am not sure if I asked my question clearly.\n\nI am modeling a group of people (in a variety of health states) moving\nthrough time (and getting infected with an infectious disease). This means\nthat the count of the number of people in each state should be positive at\nall times. \n\nWhat appears to happen is that lsoda asks for a derivative at a given point\nin time t and then adjusts the state of the population. However, perhaps due\nto numerical instability, it occasionally lower the population count below 0\nfor one of the health states (perhaps because it's step size is too big or\nsomething). \n\nI have tried both the logarithm trick and also changing the relative and\nabsolute tolerance inputs but I still get the problem for certain\ncombinations of parameters and initial conditions. \n\nIt occurs both under MS Windows XP Service Pack 2 and on a Linux cluster so\nI am pretty sure it is not platform specific.\n\nMy real question to the group is if there is not a work around in lsoda are\nthere other ode solvers in R that will allow the constraint of solutions to\nthe ODEs remain non-negative?\n\nBest regards,\nJeremy\n      \n\n>>> Spencer Graves  6/8/2007 9:51 AM >>>\nOn the 'lsoda' help page, I did not see any option to force some \nor all parameters to be nonnegative. \n\n      Have you considered replacing the parameters that must be \nnonnegative with their logarithms?  This effective moves the 0 lower \nlimit to (-Inf) and seems to have worked well for me in the past.  \nOften, it can even make the log likelihood or sum of squares surface \nmore elliptical, which means that the standard normal approximation for \nthe sampling distribution of parameter estimates will likely be more \naccurate. \n\n      Hope this helps. \n      Spencer Graves\np.s.  Your example seems not to be self contained.  If I could have \neasily copied it from your email and run it myself, I might have been \nable to offer more useful suggestions. \n\nJeremy Goldhaber-Fiebert wrote:\n> Hello,\n>\n> I am using odesolve to simulate a group of people moving through time and\ntransmitting infections to one another. \n>\n> In Matlab, there is a NonNegative option which tells the Matlab solver to\nkeep the vector elements of the ODE solution non-negative at all times. What\nis the right way to do this in R?\n>\n> Thanks,\n> Jeremy\n>\n> P.S., Below is a simplified version of the code I use to try to do this,\nbut I am not sure that it is theoretically right \n>\n> dynmodel <- function(t,y,p) \n> { \n> ## Initialize parameter values\n>\n> \tbirth <- p$mybirth(t)\n> \tdeath <- p$mydeath(t)\n> \trecover <- p$myrecover\n> \tbeta <- p$mybeta\n> \tvaxeff <- p$myvaxeff\n> \tvaccinated <- p$myvax(t)\n>\n> \tvax <- vaxeff*vaccinated/100\n>\n> ## If the state currently has negative quantities (shouldn't have), then\nreset to reasonable values for computing meaningful derivatives\n>\n> \tfor (i in 1:length(y)) {\n> \t\tif (y[i]<0) {\n> \t\t\ty[i] <- 0\n> \t\t}\n> \t}\n>\n> \tS <- y[1]\n> \tI <- y[2]\n> \tR <- y[3]\n> \tN <- y[4]\n>\n> \tshat <- (birth*(1-vax)) - (death*S) - (beta*S*I/N)\n> \tihat <- (beta*S*I/N) - (death*I) - (recover*I)\n> \trhat <- (birth*(vax)) + (recover*I) - (death*R)\n>\n> ## Do we overshoot into negative space, if so shrink derivative to bring\nstate to 0 \n> ## then rescale the components that take the derivative negative\n>\n> \tif (shat+S<0) {\n> \t\tshat_old <- shat\n> \t\tshat <- -1*S\n> \t\tscaled_transmission <- (shat/shat_old)*(beta*S*I/N)\n> \t\tihat <- scaled_transmission - (death*I) - (recover*I)\n> \t\t\n> \t}\t\n> \tif (ihat+I<0) {\n> \t\tihat_old <- ihat\n> \t\tihat <- -1*I\n> \t\tscaled_recovery <- (ihat/ihat_old)*(recover*I)\n> \t\trhat <- scaled_recovery +(birth*(vax)) - (death*R)\n> \t\n> \t}\t\n> \tif (rhat+R<0) {\n> \t\trhat <- -1*R\n> \t}\t\n>\n> \tnhat <- shat + ihat + rhat\n>\n> \tif (nhat+N<0) {\n> \t\tnhat <- -1*N\t\n> \t}\t\n>\n> ## return derivatives\n>\n> \tlist(c(shat,ihat,rhat,nhat),c(0))\n>\n> }\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help \n> PLEASE do read the posting guide\nhttp://www.R-project.org/posting-guide.html \n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help \nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html \nand provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}