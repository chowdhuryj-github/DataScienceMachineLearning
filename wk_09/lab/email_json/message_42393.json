{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: freeze after <STDIN>", "body": "On Jun 3, 10:35 pm, cry...@stny.rr.com (Ryan) wrote:\n> I thought the * character needed a backslash to be taken literally.  But\n> I guess that's only in regular expressions?  I was confused about that.\n\nCorrect.  * is not special in a double quoted string.  The only\ncharacter that always need to be backslashed in a double-quoted string\nare:\n$ (otherwise, it's the start of a scalar variable, array element, or\nhash element)\n@ (otherwise, it's the start of an array or slice)\n\\ (otherwise, it's the indication that the next character is to be\nescaped)\nCharacters that *sometimes* need to be backslashed in a double quoted\nstring include:\n\" (if and only if you're actually using \" as your string delimiter)\n' (if it is both preceded by an interpolated variable, and followed by\nword characters)\n: (if it is both preceded by an interpolated variable, and followed by\na second :, and then word characters)\nWhatever delimiter you're using if you use the qq{} operator.\n\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}