{"category": "ham", "to_address": "James Keenan <jkeen@verizon.net>", "from_address": "Andy Spieherty <spiehera@lafayette.edu>", "subject": "Re:  Re: Odd failure in t/postconfigure/02-revision_no_DEVELOPING.t", "body": "On Tue, 8 May 2007, James Keenan wrote:\n\n> Andy Spieherty wrote:\n> > The following oddity turned up today:\n> >\n> > t/postconfigure/02-revision_no_DEVELOPING........\n> > #     Failed test (t/postconfigure/02-revision_no_DEVELOPING.t at line 51)\n> > #     '0'\n> > #         ne\n> > #     '0'\n> > # Looks like you failed 1 test of 16.\n> > dubious\n> > \tTest returned status 1 (wstat 256, 0x100)\n> >\n> > I really don't understand this message.\n> >\n> \n> 1.  Can you say a bit more about the context in which you ran this test?\n> 'make test'?  'prove t/postconfigure/*.t'?  In particular, did you run it\n> *before* running Configure.pl or *afterwards*?\n\nI get that with either 'make test' or with\n    perl -Ilib t/postconfigure/02-revision_no_DEVELOPING.t\n\n> 2.  If you do 'make clean', then 'svn update', then re-run the test, do you\n> still get the error?\n\nMake clean doesn't affect it at all.  I am not running from an svn \nrepository, which may be part of the problem.  I'm running from a\nsnapshot.  (Actually, that's not quite right either.  I run the test from a\ndirectory built from the MANIFEST in a snapshot.)\n\nThere are also a pile of errors about svn and svk not being found, but\nthey don't result in failed tests.  I have svn installed; it's just not\nin my $PATH.  (And it doesn't work well anyway, which is why I don't use\nit.)\n\nYou should be able to reproduce the error by running from a snapshot.\n\nOne truly odd thing is the way the test output reads.  (Though this is\nperhaps more of a Test::Whatever rant than a testing bug.)  Here's the full \noutput of the test:\n\nnot ok 14 - current and config differ\n#     Failed test (t/postconfigure/02-revision_no_DEVELOPING.t at line 51)\n#     '0'\n#         ne\n#     '0'\n\nIf you've written the test yourself, you might remember what that means.\nBut, if you read only the output you see on the screen, you see a 'no\nok' message, followed by a statement that 'current and config differ'.\nA naive reading of this line in the output is that 'current' and\n'config' differ, and this is not ok.  It is further followed by the\ncurious statement that '0' ne '0', when, of course, '0' eq '0'.\n\nI would recommend replacing the 'current and config differ' statement by\na statement of what *should* happen  (e.g. 'current and config should\ndiffer', or perhaps \"current and config shouldn't equal\" to better match\nwith the actual test performed.\n\n\n> 3.  This test was tricky, and, in the course of developing it, I got this same\n> error several times.  The trickiness arises from the fact that the underlying\n> code being tested, lib/Parrot/Revision.pm, has the name of a file in the\n> Parrot distribution hard-coded into its major subroutine:\n> \n> sub __get_revision {\n>     return 0 unless ( -e 'DEVELOPING' );\n>     ...\n> }\n\nPerhaps that function should be changed.  In perl5, all the snapshots\nhave a .patch file which can be used to get the revision number.  Perhaps\nthe scheme that generates the snapshots for parrot could be revised to\ninclude a .revision file (or other such file) with the revision number.\nIt already includes a .timestamp file, so this isn't a radical suggestion.\nThen you wouldn't have two code branches to worry about and there wouldn't\nbe yet-another-difference between the developer and released versions.\n\nOr perhaps I'm the only one who ever uses a snapshot and so you can\nsafely ignore them.  I don't know.\n\nMore generally, though, my larger point is this:  your work on\nConfigure.pl plays an important role in not only ensuring it will continue\nto work, but it also offers you unique opportunities to re-think how\nand why things are done.\n\n-- \n    Andy Spieherty\t\tspiehera@lafayette.edu\n\n"}