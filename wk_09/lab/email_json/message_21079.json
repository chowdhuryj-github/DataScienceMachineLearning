{"category": "ham", "to_address": "p6l <perl6-language@perl.org>", "from_address": "Larry Wall <larry@wall.org>", "subject": "Re: Default filehandles, or topicalizing filehandles, or something", "body": "On Tue, May 01, 2007 at 05:45:26PM -0400, Mark J. Reed wrote:\n: Right.  Something akin to P5's $SIG{__WARN__} and $SIG{__DIE__} would\n: also work, but that never seemed to be quite the right way to do that,\n: to me.\n\nNever seemed quite right to me either.  Er, except way back when it did... :/\n\nIn P6 such hooks are unnecessary for two reasons:\n\n    * Exception handlers are executed before the stack is unwound, so\n\ta surrounding dynamic scope can get control at that point.\n\n    * Warnings are just exceptions that default to restarting, so the same\n\tconsiderations apply.\n\nAnd even if we did decide to install some kind of temporizable\nglobal hook for such callbacks, I wouldn't put it into %SIG\nthese days.  I'm not even sure signals belong in %SIG anymore.\nSeems to me they should just be event objects coming in via some\nfeed to the event-driven underbelly of the program, assuming\nwe go ahead with a unified events/threads model as suggested by\nhttp://www.seas.upenn.edu/~lipeng/homepage/unify.html.\n\nLarry\n\n"}