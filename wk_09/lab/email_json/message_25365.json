{"category": "ham", "to_address": "p6l <perl6-language@perl.org>", "from_address": "\"Mark J. Reed\" <markjreed@mail.com>", "subject": "Re: In(tro)spection and line counting", "body": "On 5/2/07, Larry Wall  wrote:\n> : 2. The question I was trying to answer by poking around: what is/will\n> : be the P6 equivalent of P5's $. ?  I assume the answer is a method on\n> : the filehandle object, but called what?  Should it keep the P5\n> : IO::Handle name (input_line_number)?  Or something else perhaps a\n> : little less unwieldy  (lineno, recno, ...)\n>\n> Probably something shorter.  The problem with \"lines\" is that they aren't\n> necessarily lines.  But \"records\" is so 1960s...\n\n\"chunks\"?\n\n> Also, anything that names the units could be seen as the count of those units in the file\n> as a whole rather that the number read up till now.\n\nYeah, that's why I suggested the names with \"...no\". Although that's\nnot necessarily clear, especially to non-native English speakers.\n\"...num\" might be better...\n\n> Tempted to have $io.sofar or some such...\n\nMaybe there could be different (adverbial?) variants of .tell for\ndifferent units?  Bytes, lines (actual lines irrespective of whatever\nthe record separator is set to), chunks?\n\n> There's a prototype synopsis on variables out in pugs/docs/AES but it's\n> still pretty rudimentary.\n\nAh, thanks!  Missed that.\n\n> As for $. itself as a variable, it's dead.\n\nYeah, kinda figured.\n\n> there are very, very few punctuational variables in Perl 6 compared to Perl 5.  Most of\n> 'em are just gone.\n\nAnd a cheer went up from the multitude... :)\n\nThanks again for the reply.\n\n-- \nMark J. Reed \n"}