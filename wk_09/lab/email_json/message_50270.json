{"category": "ham", "to_address": "Patrick Connolly <p_connolly@ihug.co.nz>,\n   (Ted Harding) <Ted.Harding@manchester.ac.uk>", "from_address": "(Ted Harding) <ted.harding@nessie.mcc.ac.uk>", "subject": "Re: [R] Unix-like permissions to allow a user to update recommen", "body": "On 18-Jun-07 20:27:56, Patrick Connolly wrote:\n> On Mon, 18-Jun-2007 at 11:53AM +0100, Ted Harding wrote:\n> \n>|> On 18-Jun-07 10:11:43, Patrick Connolly wrote:\n>|> > I installed R from the tar.gz file (as root) in a directory under\n>|> > /usr/local.  The recommended packages are installed in a library in\n>|> > that directory whereas additional packages I install in a directory\n>|> > under the /home directory as a user.\n>|> > \n>|> > Updating the additional packages is very easy with\n>|> > update.packages()\n>|> > as a non-root user, but the recommended packages cannot be done so\n>|> > readily because of file permissions.\n>|> > \n>|> > My question is how do I set the permissions or ownerships in the\n>|> > /usr/local/R-2.5.0 directory so that everything necessary can be\n>|> > writable by a user?  Should I make a group for R users (total of\n>|> > one\n>|> > member) or is it simpler than that?\n>|> \n>|> Since you have root access, do you need to segregate the additional\n>|> packages to a particular user?\n> \n> It's handy to not have to reload packages that don't change between\n> versions of the basic installation.\n> \n>|> \n>|> Though I don't run R as root for general use, I always install/update\n>|> by running R CMD as root. This makes all of R (\"recommended\" and also\n>|> any extras) available system-wide, and no pemission problems arise.\n>|> \n>|> This of course does not stop you from setting up a special .Rprofile\n>|> for each user, since this by definition lives in the user's home\n>|> directory.\n>|> \n>|> Does this help? Or are there issues you haven't mentioned which make\n>|> such an approach not feasible?\n> \n> I don't exactly have issues.  It's not a huge problem I'm dealing\n> with.  It's simple enough for me to use update.packages() as a user\n> which will download the appropriate packages.  Though they won't be\n> installed, they are all in the one place in the /tmp/ directory from\n> where I can install them as root.  I just thought there must be a more\n> elegant way to set permissions so that users could write to the\n> subdirectories under /usr/local/R-2.xxx/.  So much of the installation\n> process of R and its packages is so elegant, I'd like to retain some\n> of that elegance.\n\nOn my Linux, all the places where components of R might normally\nbe installed (/usr/lib or /usr/local/lib) are user=root, group=root,\nand when I look under them practically everything is writeable\nonly by user=root. So you'd have to change a lot of permissions\nbefore any other user got rights to write to these directories.\nEven adding a user to group=root wouldn't change things, since\ngroup does not have write permissions (unless user=root too).\n\nI'm still wondering, though, why you don't just run the command\nupdate.packages() as root. You have root access, and you said\n(in the \"adding user to group\" context) that only one user is\ninvolved (presumably yourself?). In that case, why not start R\nas root and run update.packages()?\n\nOr am I missing something?\n\nBest wishes,\nTed.\n\n--------------------------------------------------------------------\nE-Mail: (Ted Harding) \nFax-to-email: +44 (0)870 094 0861\nDate: 18-Jun-07                                       Time: 22:25:18\n------------------------------ XFMail ------------------------------\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}