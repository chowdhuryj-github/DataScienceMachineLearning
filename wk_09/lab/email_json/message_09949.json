{"category": "ham", "to_address": "\"'Alberto Monteiro'\" <albmont@centroin.com.br>,\n   <ted.harding@manchester.ac.uk>, <r-help@stat.math.ethz.ch>", "from_address": "\"Ravi Varadhan\" <rvaradhan@jhmi.edu>", "subject": "Re: [R] convergence", "body": "No.\n\n----------------------------------------------------------------------------\n-------\n\nRavi Varadhan, Ph.D.\n\nAssistant Professor, The Center on Aging and Health\n\nDivision of Geriatric Medicine and Gerontology \n\nJohns Hopkins University\n\nPh: (410) 502-2619\n\nFax: (410) 614-9625\n\nEmail: rvaradhan@jhmi.edu\n\nWebpage:  http://www.jhsph.edu/agingandhealth/People/Faculty/Varadhan.html\n\n \n\n----------------------------------------------------------------------------\n--------\n\n-----Original Message-----\nFrom: r-help-bounces@stat.math.ethz.ch\n[mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of Alberto Monteiro\nSent: Thursday, April 19, 2007 9:24 AM\nTo: ted.harding@manchester.ac.uk; r-help@stat.math.ethz.ch\nSubject: Re: [R] convergence\n\n\nTed Harding wrote:\n> \n> There are various ways round this, but a 'for' loop with\n> a fixed number of iterations is not usully one of them!\n> \n> The simplest is to use while(). A possibly strategy is\n> \n>   Y.old <- initial.Y\n>   while(TRUE){\n>     Y <- compute.Y(Y.old, ...)\n>     if(abs(Y - Y.old) < small.number) break\n>     Y.old <- Y\n>   }\n> \n> This will loop indefinitely until the convergence criterion\n> \n>   abs(Y - Y.old) < small.number\n> \n> is met, and then stop.\n> \nI guess some precaution must be taken to prevent that the loop\nruns forever.\n\nThose algorithms that must optimize something, but run the risk \nof running forever, sound like the \"chess playing\" engine: we\nknow that a deterministic solution exists (there is a finite number\nof chess positions), but it's not practical to check all of them.\n\nI read somewhere that computer loop problems are treated as if\nthe computer was \"playing chess\" agains Murphy: it tries hard to\nsolve the problem, but sometimes he must give up a path and backtrack\nto a less optimum but faster solution.\n\nDo I make any sense?\n\nAlberto Monteiro\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}