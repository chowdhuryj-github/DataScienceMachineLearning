{"category": "ham", "to_address": "\"Joshua Isom\" <jrisom@gmail.com>,\n   \"Perl 6 Internals\" <perl6-internals@perl.org>", "from_address": "\"jerry gay\" <jerry.gay@gmail.com>", "subject": "Re: Limiting Exported Symbols on GCC", "body": "On 4/12/07, Nicholas Clark  wrote:\n> On Thu, Apr 12, 2007 at 01:50:09PM -0500, Joshua Isom wrote:\n> >\n> > On Apr 12, 2007, at 9:29 AM, Nicholas Clark wrote:\n>\n> > My view of this is something along these lines.  You can use any\n> > function you want at all, but if it's not documented as part of the\n> > supported API, there's nothing saying I won't purposely break your code\n> > in the next release.  In big bold red letters of course.\n> >\n> > >Particularly given that on some platforms (such as Win32) API\n> > >functions need\n> > >to be exported explicitly, resulting in modules written on *nix\n> > >platforms\n> > >not working on Win32.\n>\n> The problem is that between now and that next release, someone inevitably\n> writes something on Linux that doesn't work on Win32, and they blame everyone\n> but themselves.\n>\n> I'd much prefer to nip the problem in the bud by preventing the code from\n> ever being shipped.\n>\ni sit on nicholas's side of the fence. maybe i've been working on\nwindows too long, but this is the behavior i've come to expect. if a\nfunction is not meant for public consumption, why is it available?\nlet's learn from the mistakes of previous designers and earlier\ntechnologies.\n\nwhen designing and implementing parrot's embedding/extending api, it'd\nbe nice if the linker failed on platforms other than windows. this\npatch will accomplish that nicely.\n~jerry\n\n"}