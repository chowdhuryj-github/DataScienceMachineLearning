{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Joshua Isom (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #42792] GC bug added in r18323 ", "body": "# New Ticket Created by  Joshua Isom \n# Please include the string:  [perl #42792]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nMy current svn repository uses a patch that I sent to the list about a \nweek ago, in which the pge tests would run with gc on if the file \nDEVELOPING existed.  Since I updated to over 18323, \nt/compilers/pge/p5regex/p5rx.t segfaults after test 553.  The \ncurrent_cont in the interp's ctx is null, and results in a segfault \ninside of set_returns.  It doesn't happen on my darwin-ppc system, so I \ndon't know how specific it is, and if rebooting will fix it(as often \nhappens with the gc bugs in my experience).  But it is failing on my \nfreebsd-amd64 system.  Since odds are r18323 just exposed a bug instead \nof adding one, maybe other people will get the crash as well.  You will \nhave to remove -G in t/compilers/pge/p5regex.t/p5rx.t to get it to \nfail, as with -G it succeeds(and with -t too).\n\nI've learned a lot lately about how to use gdb, and all I've come to \nlearn is that if \ninterp->ctx.state->current_cont->obj.u._ptrs._struct_val is null, \nparrot isn't happy, of course that's with macro expansion, and that \ngetting the level of debugging information I'd like to be able to write \nlittle tools to process an analyze it better isn't easy.\n\n"}