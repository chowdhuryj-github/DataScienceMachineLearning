{"category": "ham", "to_address": "Alma <almatirkey@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Passing arguments", "body": "On 6/2/07, Alma  wrote:\n> Hi,\n>\n> I need to pass id as parameters to a subroutine\n>\n> testsub(35);\n>\n> sub testsub($)\n>    {\n>    my $self = shift;\n>    my $id = @_;\n>    print \"$id\";\n> }\n>\n> Its printing 3 . am i going wrong in prototype .\n\nFirst off, don't use prototypes until you know exactly what they do.\nThey don't do what you think the do*.  Don't worry about this though\nsince they don't do what most people would expect them to (it is all\ngetting fixed in Perl 6).\n\nSecond off, it looks like your subroutine is written in Object\nOriented Style, but you are calling it in Procedural Style.  If this\nis not supposed to be an OO method than you should lose the \"my $self\n= shift;\" part.  Also, going back to the first issue, prototypes are\nignored for OO methods.\n\nThird off, \"my $id = @_;\" puts the array @_ in scalar context.  That\nmeans it returns the number of elements in side of it, not the\nelements themselves.  If you are indeed printing 3, then this is the\nlikely culprit.  Context is incredibly important in Perl and you must\nalways be careful that you are calling functions and accessing .  You\nshould say\n\nmy ($id) = @_;\n\n* http://groups.google.com/group/comp.lang.perl.modules/msg/84484de5eb01085b\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}