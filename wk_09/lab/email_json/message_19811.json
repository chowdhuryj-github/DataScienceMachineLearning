{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"Matthew J. Avitable\" <mja@richweb.com>", "subject": "Re: creating hash from scalar variable", "body": "Given the original string ...\n> my $test =\n>   'NAS-IP-Address = 192.168.42.1\n>   .......\n>   Acct-Unique-Session-Id = \"87d380e1881d226c\"\n>   Timestamp = 1177282824';\n>\n\nYou could also invoke perl 5.8's ability to treat an in-memory string as \na file:\n\n## get a filehandle on $test\nopen(my $fh, '<', \\$test) or die \"Unable to open scalar ref for reading: \n$!\";\n\nwhile (my $line = <$fh>) {\n\n    ## split on '=' with a max of two resulting fields, clear spaces \nadjacent to '='.\n    ## clear newlines as well.\n    chomp ( my ($k, $v) = split(/\\s*=\\s*/, $line, 2) );\n\n    ## clear out the quotes in the value\n    $v =~ s/\"//og;\n\n    ## do something with your key and value:\n    print \"Key is $k,  Value is: $v\\n\";\n\n}\n\nclose $fh;\n\n\nReading a file line by line is a fairly recognizable pattern to perl \nprogrammers of all levels, so it may assist future maintainers.\n\nHope this helps!\n\n-m\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}