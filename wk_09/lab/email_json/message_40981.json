{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Passing arguments", "body": "On Jun 2, 3:54 am, almatir...@gmail.com (Alma) wrote:\n> Hi,\n>\n> I need to pass id as parameters to a subroutine\n>\n> testsub(35);\n>\n> sub testsub($)\n>    {\n>    my $self = shift;\n>    my $id = @_;\n>    print \"$id\";\n>\n> }\n>\n> Its printing 3\n\nThat's just a lie.  Why are you lying to us?  Why are you not running\nthe code you're posting?\n\n> am i going wrong in prototype\n\nYes, but not for the reasons you think you are.  For one, stop using\nprototypes.  They don't work the way you think they do, and they\nprovide a false sense of security.  And in the example you've given,\nit's completely ignored anyway (since you called it before you defined\nthe subroutine).\n\nSecond, stop thinking that every subroutine should start with \"my\n$self = shift;\".  That only applies to methods.  Not \"normal\"\nsubroutines.\n\nThird, using ANY array, including @_, in a scalar context produces the\nsize of that array.  In your example, that size is 0, since you\nalready shifted 35 off of @_ and assigned it to $self.  Therefore,\nyour code prints 0, not 3.\n\nThat subroutine should be written:\n\ntestsub(35);\n\nsub testsub {\n   my $id = shift;\n   print $id;\n}\n\nYou should really have a read of:\nperldoc perlsub\n\nrather than just finding other code to copy and paste.\n\nPaul Lalli\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}