{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r23247 - in branches/SAMBA_3_0_26/source: include\n\trpc_client", "body": "Author: jerry\nDate: 2007-05-30 21:41:07 +0000 (Wed, 30 May 2007)\nNew Revision: 23247\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23247\n\nLog:\nremove two of the hand written echo pipe files missed in the previous commit\nRemoved:\n   branches/SAMBA_3_0_26/source/include/rpc_echo.h\n   branches/SAMBA_3_0_26/source/rpc_client/cli_echo.c\n\n\nChangeset:\nDeleted: branches/SAMBA_3_0_26/source/include/rpc_echo.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/rpc_echo.h\t2007-05-30 21:37:43 UTC (rev 23246)\n+++ branches/SAMBA_3_0_26/source/include/rpc_echo.h\t2007-05-30 21:41:07 UTC (rev 23247)\n@@ -1,75 +0,0 @@\n-/* \n-   Unix SMB/CIFS implementation.\n-\n-   Samba rpcecho definitions.\n-\n-   Copyright (C) Tim Potter 2003\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2 of the License, or\n-   (at your option) any later version.\n-   \n-   This program is distributed in the hope that it will be useful, \n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n-*/\n-\n-#ifndef _RPC_ECHO_H\n-#define _RPC_ECHO_H\n-\n-#define ECHO_ADD_ONE          0x00\n-#define ECHO_DATA             0x01\n-#define ECHO_SINK_DATA        0x02\n-#define ECHO_SOURCE_DATA      0x03\n-\n-typedef struct echo_q_add_one\n-{\n-\tuint32 request;\n-} ECHO_Q_ADD_ONE;\n-\n-typedef struct echo_r_add_one\n-{\n-\tuint32 response;\n-} ECHO_R_ADD_ONE;\n-\n-typedef struct echo_q_echo_data\n-{\n-\tuint32 size;\n-\tchar *data;\n-} ECHO_Q_ECHO_DATA;\n-\n-typedef struct echo_r_echo_data\n-{\n-\tuint32 size;\n-\tchar *data;\n-} ECHO_R_ECHO_DATA;\n-\n-typedef struct echo_q_source_data\n-{\n-\tuint32 size;\n-} ECHO_Q_SOURCE_DATA;\n-\n-typedef struct echo_r_source_data\n-{\n-\tuint32 size;\n-\tchar *data;\n-} ECHO_R_SOURCE_DATA;\n-\n-typedef struct echo_q_sink_data\n-{\n-\tuint32 size;\n-\tchar *data;\n-} ECHO_Q_SINK_DATA;\n-\n-typedef struct echo_r_sink_data\n-{\n-\tint dummy;\t\t/* unused */\n-} ECHO_R_SINK_DATA;\n-\n-#endif  \n\nDeleted: branches/SAMBA_3_0_26/source/rpc_client/cli_echo.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_client/cli_echo.c\t2007-05-30 21:37:43 UTC (rev 23246)\n+++ branches/SAMBA_3_0_26/source/rpc_client/cli_echo.c\t2007-05-30 21:41:07 UTC (rev 23247)\n@@ -1,143 +0,0 @@\n-/* \n-   Unix SMB/CIFS implementation.\n-\n-   RPC pipe client\n-\n-   Copyright (C) Tim Potter 2003\n-   Copyright (C) Jeremy Allison 2005.\n-   \n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 2 of the License, or\n-   (at your option) any later version.\n-   \n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-   \n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n-*/\n-\n-#include \"includes.h\"\n-\n-NTSTATUS rpccli_echo_add_one(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,\n-\t\t\t  uint32 request, uint32 *response)\n-{\n-\tprs_struct qbuf, rbuf;\n-\tECHO_Q_ADD_ONE q;\n-\tECHO_R_ADD_ONE r;\n-\tBOOL result = False;\n-\n-\tZERO_STRUCT(q);\n-\tZERO_STRUCT(r);\n-\n-\t/* Marshall data and send request */\n-\n-        init_echo_q_add_one(&q, request);\n-\n-\tCLI_DO_RPC( cli, mem_ctx, PI_ECHO, ECHO_ADD_ONE,\n-\t\t\tq, r,\n-\t\t\tqbuf, rbuf,\n-\t\t\techo_io_q_add_one,\n-\t\t\techo_io_r_add_one,\n-\t\t\tNT_STATUS_UNSUCCESSFUL);\n-\n-\tif (response)\n-\t\t*response = r.response;\n-\n-\tresult = True;\n-\n-\treturn result ? NT_STATUS_OK : NT_STATUS_UNSUCCESSFUL;\n-}\n-\n-NTSTATUS rpccli_echo_data(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,\n-\t\t       uint32 size, char *in_data, char **out_data)\n-{\n-\tprs_struct qbuf, rbuf;\n-\tECHO_Q_ECHO_DATA q;\n-\tECHO_R_ECHO_DATA r;\n-\tBOOL result = False;\n-\n-\tZERO_STRUCT(q);\n-\tZERO_STRUCT(r);\n-\n-\t/* Marshall data and send request */\n-\n-        init_echo_q_echo_data(&q, size, in_data);\n-\n-\tCLI_DO_RPC( cli, mem_ctx, PI_ECHO, ECHO_DATA,\n-\t\t\tq, r,\n-\t\t\tqbuf, rbuf,\n-\t\t\techo_io_q_echo_data,\n-\t\t\techo_io_r_echo_data,\n-\t\t\tNT_STATUS_UNSUCCESSFUL);\n-\n-\tresult = True;\n-\n-\tif (out_data) {\n-\t\t*out_data = (char *)TALLOC(mem_ctx, size);\n-\t\tif (!*out_data) {\n-\t\t\treturn NT_STATUS_NO_MEMORY;\n-\t\t}\n-\t\tmemcpy(*out_data, r.data, size);\n-\t}\n-\n-\treturn result ? NT_STATUS_OK : NT_STATUS_UNSUCCESSFUL;\n-}\n-\n-NTSTATUS rpccli_echo_sink_data(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,\n-\t\t\t    uint32 size, char *in_data)\n-{\n-\tprs_struct qbuf, rbuf;\n-\tECHO_Q_SINK_DATA q;\n-\tECHO_R_SINK_DATA r;\n-\tBOOL result = False;\n-\n-\tZERO_STRUCT(q);\n-\tZERO_STRUCT(r);\n-\n-\t/* Marshall data and send request */\n-\n-        init_echo_q_sink_data(&q, size, in_data);\n-\n-\tCLI_DO_RPC( cli, mem_ctx, PI_ECHO, ECHO_SINK_DATA,\n-\t\t\tq, r,\n-\t\t\tqbuf, rbuf,\n-\t\t\techo_io_q_sink_data,\n-\t\t\techo_io_r_sink_data,\n-\t\t\tNT_STATUS_UNSUCCESSFUL);\n-\n-\tresult = True;\n-\n-\treturn result ? NT_STATUS_OK : NT_STATUS_UNSUCCESSFUL;\n-}\n-\n-NTSTATUS rpccli_echo_source_data(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx,\n-\t\t\t      uint32 size, char **out_data)\n-{\n-\tprs_struct qbuf, rbuf;\n-\tECHO_Q_SOURCE_DATA q;\n-\tECHO_R_SOURCE_DATA r;\n-\tBOOL result = False;\n-\n-\tZERO_STRUCT(q);\n-\tZERO_STRUCT(r);\n-\n-\t/* Marshall data and send request */\n-\n-        init_echo_q_source_data(&q, size);\n-\n-\tCLI_DO_RPC( cli, mem_ctx, PI_ECHO, ECHO_SOURCE_DATA,\n-\t\t\tq, r,\n-\t\t\tqbuf, rbuf,\n-\t\t\techo_io_q_source_data,\n-\t\t\techo_io_r_source_data,\n-\t\t\tNT_STATUS_UNSUCCESSFUL);\n-\n-\tresult = True;\n-\n-\treturn result ? NT_STATUS_OK : NT_STATUS_UNSUCCESSFUL;\n-}\n\n"}