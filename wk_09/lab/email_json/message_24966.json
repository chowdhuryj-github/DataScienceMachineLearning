{"category": "ham", "to_address": "\"Nisse Tuta\" <nissetuta@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: complex sort", "body": "On 5/7/07, Nisse Tuta  wrote:\n\n> I would like to go through these and check for any overlapping numbers\n> at both In and Out and replacing either the in out or both if\n> overlapped. And any cuts/breaks in each run will add a count.\n\nI'd like more information on what you're trying to do. For example,\nare you trying to summarize what gets covered and what doesn't? Is\n\"Run\" merely an identifying string? Do \"In\" and \"Out\" denote the\nendpoints of a stream of covered items?\n\nOne way to solve that kind of coverage problem, if that's what it is,\nis to build a data structure from the input, then output the contents\nof the structure in an orderly way. For what I think is your case,\nyou'd want perhaps a hash whose keys are the run number. Under each\nrun number, the corresponding value would be the summary of what items\nwere covered in that run. (If the list of items is a simple list of\nintegers, you could represent that as a bitmap.)\n\nHope this helps!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}