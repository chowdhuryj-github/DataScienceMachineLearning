{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "subject": "Re: [svn:perl6-synopsis] r14415 - doc/trunk/design/syn", "body": "Jonathan Lang wrote:\n> > Arguably \"list\" should be non-committal and we give\n> > @() a different name like \"flat\", but that grates in my brain for\n> > some reason, if only because most list contexts would in the end\n> > be flat anyway.  And \"list\" in English already implies something\n> > flatter than, say, an \"outline\".\n>\n> ...which tends to be more akin to \"slice\".  In fact, consider renaming\n> \"slice\" as \"outline\".  Sure, it's two characters longer; but it's\n> _much_ more descriptive of what's going on.  \"Slice\" strikes me as\n> something of a holdover from its origins in array indices.\n\nAn even better choice might be \"tree\": it's the same length as \"list\"\nand \"item\", and conveys the hierarchal structure inherent to that\ncontext quite nicely.\n\nThen again, [[['a', 'b'], ['c', 'd']], 'e', ['f', 'g']] isn't really a\ntree _or_ an outline, since only the \"leaf nodes\" actually have\ncontent.\n\n-- \nJonathan \"Dataweaver\" Lang\n\n"}