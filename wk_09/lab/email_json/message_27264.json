{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 276: - merge from ronnie in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 276\nrevision-id: tridge@samba.org-20070511003343-mdcfsv1todutp5mz\nparent: tridge@samba.org-20070510074345-gp2mm5z8rqhytnvu\nparent: sahlberg@ronnie-20070510200817-cd0cc3a541930600\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Fri 2007-05-11 10:33:43 +1000\nmessage:\n  - merge from ronnie\n  - increment rsn only in become_dmaster\n  - add torture check for rsn regression in ctdb_ltdb_store\nmodified:\n  common/ctdb_call.c             ctdb_call.c-20061128065342-to93h6eejj5kon81-1\n  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n    ------------------------------------------------------------\n    revno: 197.1.100\n    merged: sahlberg@ronnie-20070510200817-cd0cc3a541930600\n    parent: sahlberg@ronnie-20070510194011-4b6a20e4195d6b18\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Fri 2007-05-11 06:08:17 +1000\n    message:\n      we must bump the rsn everytime we do a REQ_DMASTER or a REPLY_DMASTER\n      to make sure that the \"merge records based on rsn during recovery\" will\n      merge correctly.\n      \n      this is extra important since samba3 never bumps the record when it \n      writes new data to it !\n    ------------------------------------------------------------\n    revno: 197.1.99\n    merged: sahlberg@ronnie-20070510194011-4b6a20e4195d6b18\n    parent: sahlberg@ronnie-20070510075951-10d944d8d76842c0\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Fri 2007-05-11 05:40:11 +1000\n    message:\n      make ctdb_control catdb work again\n    ------------------------------------------------------------\n    revno: 197.1.98\n    merged: sahlberg@ronnie-20070510075951-10d944d8d76842c0\n    parent: sahlberg@ronnie-20070510001058-a7ac6eddce1344a8\n    parent: tridge@samba.org-20070510074345-gp2mm5z8rqhytnvu\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 17:59:51 +1000\n    message:\n      merge from tridge\n=== modified file 'common/ctdb_call.c'\n--- a/common/ctdb_call.c\t2007-05-10 07:43:45 +0000\n+++ b/common/ctdb_call.c\t2007-05-11 00:33:43 +0000\n@@ -295,7 +295,7 @@\n \tDEBUG(2,(\"vnn %u dmaster response %08x\\n\", ctdb->vnn, ctdb_hash(&key)));\n \n \tZERO_STRUCT(header);\n-\theader.rsn = rsn;\n+\theader.rsn = rsn + 1;\n \theader.dmaster = ctdb->vnn;\n \n \tif (ctdb_ltdb_store(ctdb_db, key, &header, data) != 0) {\n\n=== modified file 'common/ctdb_client.c'\n--- a/common/ctdb_client.c\t2007-05-10 07:43:45 +0000\n+++ b/common/ctdb_client.c\t2007-05-10 19:40:11 +0000\n@@ -1037,17 +1037,16 @@\n {\n \tint i, ret;\n \tTDB_DATA indata, outdata;\n+\tstruct ctdb_control_pulldb pull;\n+\tstruct ctdb_control_pulldb_reply *reply;\n+\tstruct ctdb_rec_data *rec;\n \tint32_t res;\n-\tunsigned char *ptr;\n-\n-\tDEBUG(0,(\"ronnie to fix!\\n\"));\n-\treturn -1;\n-\n-\tindata.dsize = 2*sizeof(uint32_t);\n-\tindata.dptr  = (unsigned char *)talloc_array(mem_ctx, uint32_t, 2);\n-\n-\t((uint32_t *)(&indata.dptr[0]))[0] = dbid;\n-\t((uint32_t *)(&indata.dptr[0]))[1] = lmaster;\n+\n+\tpull.db_id   = dbid;\n+\tpull.lmaster = lmaster;\n+\n+\tindata.dsize = sizeof(struct ctdb_control_pulldb);\n+\tindata.dptr  = (unsigned char *)&pull\n \n \tret = ctdb_control(ctdb, destnode, 0, \n \t\t\t   CTDB_CONTROL_PULL_DB, 0, indata, \n@@ -1058,45 +1057,34 @@\n \t}\n \n \n-\tkeys->dbid   = ((uint32_t *)(&outdata.dptr[0]))[0];\n-\tkeys->num    = ((uint32_t *)(&outdata.dptr[0]))[1];\n-\tkeys->keys   =talloc_array(mem_ctx, TDB_DATA, keys->num);\n-\tkeys->headers=talloc_array(mem_ctx, struct ctdb_ltdb_header, keys->num);\n-\tkeys->lmasters=talloc_array(mem_ctx, uint32_t, keys->num);\n-\tkeys->data=talloc_array(mem_ctx, TDB_DATA, keys->num);\n-\n-\t/* loop over all key/data pairs */\n-\tptr=&outdata.dptr[8];\n-\tfor(i=0;inum;i++){\n-\t\tTDB_DATA *key, *data;\n-\n-\t\tkeys->lmasters[i] = *((uint32_t *)ptr);\n-\t\tptr += 4;\n-\n-\t\tkey = &keys->keys[i];\n-\t\tkey->dsize = *((uint32_t *)ptr);\n-\t\tkey->dptr = talloc_size(mem_ctx, key->dsize);\n-\t\tptr += 4;\n-\n-\t\tdata = &keys->data[i];\n-\t\tdata->dsize = *((uint32_t *)ptr);\n-\t\tdata->dptr = talloc_size(mem_ctx, data->dsize);\n-\t\tptr += 4;\n-\n-\t\tptr = outdata.dptr+(((ptr-outdata.dptr)+CTDB_DS_ALIGNMENT-1)& ~(CTDB_DS_ALIGNMENT-1));\n-\t\tmemcpy(key->dptr, ptr, key->dsize);\n-\t\tptr += key->dsize;\n-\n-\t\tptr = outdata.dptr+(((ptr-outdata.dptr)+CTDB_DS_ALIGNMENT-1)& ~(CTDB_DS_ALIGNMENT-1));\n-\t\tmemcpy(&keys->headers[i], ptr, sizeof(struct ctdb_ltdb_header));\n-\t\tptr += sizeof(struct ctdb_ltdb_header);\n-\n-\t\tptr = outdata.dptr+(((ptr-outdata.dptr)+CTDB_DS_ALIGNMENT-1)& ~(CTDB_DS_ALIGNMENT-1));\n-\t\tmemcpy(data->dptr, ptr, data->dsize);\n-\t\tptr += data->dsize;\n-\n-\t\tptr = outdata.dptr+(((ptr-outdata.dptr)+CTDB_DS_ALIGNMENT-1)& ~(CTDB_DS_ALIGNMENT-1));\n-\t}\n+\treply = (struct ctdb_control_pulldb_reply *)outdata.dptr;\n+\tkeys->dbid     = reply->db_id;\n+\tkeys->num      = reply->count;\n+\t\n+\tkeys->keys     = talloc_array(mem_ctx, TDB_DATA, keys->num);\n+\tkeys->headers  = talloc_array(mem_ctx, struct ctdb_ltdb_header, keys->num);\n+\tkeys->lmasters = talloc_array(mem_ctx, uint32_t, keys->num);\n+\tkeys->data     = talloc_array(mem_ctx, TDB_DATA, keys->num);\n+\n+\trec = (struct ctdb_rec_data *)&reply->data[0];\n+\n+\tfor (i=0;icount;i++) {\n+\t\tkeys->keys[i].dptr = talloc_memdup(mem_ctx, &rec->data[0], rec->keylen);\n+\t\tkeys->keys[i].dsize = rec->keylen;\n+\n+\t\tkeys->data[i].dptr = talloc_memdup(mem_ctx, &rec->data[keys->keys[i].dsize], rec->datalen);\n+\t\tkeys->data[i].dsize = rec->datalen;\n+\n+\t\tif (keys->data[i].dsize < sizeof(struct ctdb_ltdb_header)) {\n+\t\t\tDEBUG(0,(__location__ \" bad ltdb record\\n\"));\n+\t\t\treturn -1;\n+\t\t}\n+\t\tmemcpy(&keys->headers[i], keys->data[i].dptr, sizeof(struct ctdb_ltdb_header));\n+\t\tkeys->data[i].dptr += sizeof(struct ctdb_ltdb_header);\n+\t\tkeys->data[i].dsize -= sizeof(struct ctdb_ltdb_header);\n+\n+\t\trec = (struct ctdb_rec_data *)(rec->length + (uint8_t *)rec);\n+\t}\t    \n \n \treturn 0;\n }\n\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-05-10 07:43:45 +0000\n+++ b/common/ctdb_ltdb.c\t2007-05-11 00:33:43 +0000\n@@ -145,6 +145,17 @@\n \tTDB_DATA rec;\n \tint ret;\n \n+\tif (ctdb->flags & CTDB_FLAG_TORTURE) {\n+\t\tstruct ctdb_ltdb_header *h2;\n+\t\trec = tdb_fetch(ctdb_db->ltdb->tdb, key);\n+\t\th2 = (struct ctdb_ltdb_header *)rec.dptr;\n+\t\tif (rec.dptr && rec.dsize >= sizeof(h2) && h2->rsn > header->rsn) {\n+\t\t\tDEBUG(0,(\"RSN regression! %llu %llu\\n\",\n+\t\t\t\t (unsigned long long)h2->rsn, (unsigned long long)header->rsn));\n+\t\t}\n+\t\tif (rec.dptr) free(rec.dptr);\n+\t}\n+\n \trec.dsize = sizeof(*header) + data.dsize;\n \trec.dptr = talloc_size(ctdb, rec.dsize);\n \tCTDB_NO_MEMORY(ctdb, rec.dptr);\n\n"}