{"category": "ham", "to_address": "\"Gerald (Jerry) Carter\" <jerry@samba.org>", "from_address": "simo <idra@samba.org>", "subject": "Re: svn commit: samba r22509 - in\n\tbranches:\tSAMBA_3_0/source/groupdb SAMBA_3_0_25/source/groupdb", "body": "On Fri, 2007-04-27 at 07:57 -0500, Gerald (Jerry) Carter wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> James,\n> \n> >> WebSVN:\n> >> http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22509\n> >>\n> >> Log:\n> >> Fix some memory corruption caused by calling free()\n> >> on talloc()'d memory when adding/removing members\n> >> from Local Groups.\n> > \n> > How about changing SAFE_FREE to prevent this sort of thing? eg.\n> > \n> > #define SAFE_FREE(x) do { if ((x) != NULL) { \\\n> >     SMB_ASSERT(!talloc_is_talloc_pointer(free)); free(x); x=NULL;} }\n> > while(0)\n> \n> That will not crash but will potentially leak memory.  I'd rather\n> have the crash.\n\nIn some cases it may also lead to crashes in other places I think.\nTo check if a pointer is a talloc context you have to access the header\nwhich is pre-pended to the memory pointer.\nDepending on the malloc() implementation checking the header (when this\nis not talloc-ed memory) we may try to access a memory page we have no\naccess.\n\nSimo.\n\n-- \nSimo Sorce\nSamba Team GPL Compliance Officer\nemail: idra@samba.org\nhttp://samba.org\n\n"}