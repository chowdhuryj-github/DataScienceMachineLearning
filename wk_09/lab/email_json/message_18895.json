{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 220: added reset status control in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 220\nrevision-id: tridge@samba.org-20070428171336-4yw1gh5qfslqan73\nparent: tridge@samba.org-20070428165537-dq8tirclx8okd1ec\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-04-28 19:13:36 +0200\nmessage:\n  added reset status control\nmodified:\n  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1\n  common/ctdb_control.c          ctdb_control.c-20070426122724-j6gkpiofhbwdin63-1\n  include/ctdb.h                 ctdb.h-20061117234101-o3qt14umlg9en8z0-11\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'common/ctdb_client.c'\n--- a/common/ctdb_client.c\t2007-04-28 15:42:40 +0000\n+++ b/common/ctdb_client.c\t2007-04-28 17:13:36 +0000\n@@ -1054,3 +1054,24 @@\n \ttalloc_free(map);\n \treturn nodes;\n }\n+\n+\n+/*\n+  reset remote status\n+ */\n+int ctdb_status_reset(struct ctdb_context *ctdb, uint32_t destnode)\n+{\n+\tint ret;\n+\tTDB_DATA data;\n+\tint32_t res;\n+\n+\tZERO_STRUCT(data);\n+\tret = ctdb_control(ctdb, destnode, 0, \n+\t\t\t   CTDB_CONTROL_STATUS_RESET, data, \n+\t\t\t   NULL, NULL, &res);\n+\tif (ret != 0 || res != 0) {\n+\t\tDEBUG(0,(__location__ \" ctdb_control for reset status failed\\n\"));\n+\t\treturn -1;\n+\t}\n+\treturn 0;\n+}\n\n=== modified file 'common/ctdb_control.c'\n--- a/common/ctdb_control.c\t2007-04-28 13:15:21 +0000\n+++ b/common/ctdb_control.c\t2007-04-28 17:13:36 +0000\n@@ -80,6 +80,12 @@\n \t\treturn 0;\n \t}\n \n+\tcase CTDB_CONTROL_STATUS_RESET: {\n+\t\tCHECK_CONTROL_DATA_SIZE(0);\n+\t\tZERO_STRUCT(ctdb->status);\n+\t\treturn 0;\n+\t}\n+\n \tcase CTDB_CONTROL_GETVNNMAP: {\n \t\tuint32_t i, len;\n \t\tCHECK_CONTROL_DATA_SIZE(0);\n\n=== modified file 'include/ctdb.h'\n--- a/include/ctdb.h\t2007-04-28 15:42:40 +0000\n+++ b/include/ctdb.h\t2007-04-28 17:13:36 +0000\n@@ -256,4 +256,6 @@\n uint32_t *ctdb_get_connected_nodes(struct ctdb_context *ctdb, TALLOC_CTX *mem_ctx,\n \t\t\t\t   uint32_t *num_nodes);\n \n+int ctdb_status_reset(struct ctdb_context *ctdb, uint32_t destnode);\n+\n #endif\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-04-28 16:55:37 +0000\n+++ b/include/ctdb_private.h\t2007-04-28 17:13:36 +0000\n@@ -251,7 +251,8 @@\n \t\t    CTDB_CONTROL_GET_DEBUG,\n \t\t    CTDB_CONTROL_SET_DEBUG,\n \t\t    CTDB_CONTROL_GET_DBMAP,\n-\t\t    CTDB_CONTROL_GET_NODEMAP};\n+\t\t    CTDB_CONTROL_GET_NODEMAP,\n+\t\t    CTDB_CONTROL_STATUS_RESET};\n \n enum call_state {CTDB_CALL_WAIT, CTDB_CALL_DONE, CTDB_CALL_ERROR};\n \n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-04-28 16:18:33 +0000\n+++ b/tools/ctdb_control.c\t2007-04-28 17:13:36 +0000\n@@ -36,6 +36,7 @@\n \tprintf(\"  ping\\n\");\n \tprintf(\"  process-exists            see if a process exists\\n\");\n \tprintf(\"  status                    show ctdb status on a node\\n\");\n+\tprintf(\"  statusreset               reset status on a node\\n\");\n \tprintf(\"  debug              set ctdb debug level on a node\\n\");\n \tprintf(\"  debuglevel                         display ctdb debug levels\\n\");\n \tprintf(\"  getvnnmap                     display ctdb vnnmap\\n\");\n@@ -170,6 +171,56 @@\n \treturn 0;\n }\n \n+\n+/*\n+  reset status on all nodes\n+ */\n+static int control_status_reset_all(struct ctdb_context *ctdb)\n+{\n+\tint ret, i;\n+\tuint32_t *nodes;\n+\tuint32_t num_nodes;\n+\n+\tnodes = ctdb_get_connected_nodes(ctdb, ctdb, &num_nodes);\n+\tCTDB_NO_MEMORY(ctdb, nodes);\n+\t\n+\tfor (i=0;i<num_nodes;i++) {\n+\t\tret = ctdb_status_reset(ctdb, nodes[i]);\n+\t\tif (ret != 0) {\n+\t\t\tprintf(\"Unable to reset status on node %u\\n\", nodes[i]);\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\ttalloc_free(nodes);\n+\treturn 0;\n+}\n+\n+\n+/*\n+  reset remote ctdb status\n+ */\n+static int control_status_reset(struct ctdb_context *ctdb, int argc, const char **argv)\n+{\n+\tuint32_t vnn;\n+\tint ret;\n+\tif (argc < 1) {\n+\t\tusage();\n+\t}\n+\n+\tif (strcmp(argv[0], \"all\") == 0) {\n+\t\treturn control_status_reset_all(ctdb);\n+\t}\n+\n+\tvnn = strtoul(argv[0], NULL, 0);\n+\n+\tret = ctdb_status_reset(ctdb, vnn);\n+\tif (ret != 0) {\n+\t\tprintf(\"Unable to reset status on node %u\\n\", vnn);\n+\t\treturn ret;\n+\t}\n+\treturn 0;\n+}\n+\n /*\n   display remote ctdb vnn map\n  */\n@@ -441,6 +492,8 @@\n \t\tret = control_process_exists(ctdb, extra_argc-1, extra_argv+1);\n \t} else if (strcmp(control, \"status\") == 0) {\n \t\tret = control_status(ctdb, extra_argc-1, extra_argv+1);\n+\t} else if (strcmp(control, \"statusreset\") == 0) {\n+\t\tret = control_status_reset(ctdb, extra_argc-1, extra_argv+1);\n \t} else if (strcmp(control, \"getvnnmap\") == 0) {\n \t\tret = control_getvnnmap(ctdb, extra_argc-1, extra_argv+1);\n \t} else if (strcmp(control, \"getdbmap\") == 0) {\n\n"}