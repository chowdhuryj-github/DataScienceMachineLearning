{"category": "ham", "to_address": "Mario Dejung <forum@dejung.net>", "from_address": "Uwe Ligges <ligges@statistik.uni-dortmund.de>", "subject": "Re: [R] problem with hist()", "body": "\n\nMario Dejung wrote:\n> Hey everybody,\n> I try to make a graph with two different plots.\n> \n> \n> First I make a boxplot of my data. It is a collection off correlation\n> values of different pictures. For example:\n> \n> 0.23445 pica\n> 0.34456 pica\n> 0.45663 pica\n> 0.98822 picb\n> 0.12223 picc\n> 0.34443 picc\n> etc.\n> \n> Ok, I make this boxplot and I get for every picture the boxes. After this\n> I want to know, how many correlations per picture exist.\n> So I make a new vector y <- as.numeric(data$picture)\n> \n> So I get for my example something like this:\n> \n> y\n> [1] 1 1 1 1 1 1 1 1 1 1\n> [11] 1 1 1 1 1 1 1 1 2 2\n> ...\n> [16881] 59 59 59 60 60 60 60 60 60 60\n> \n> After this I make something like this\n> \n> boxplot(cor ~ pic)\n> par(new = TRUE)\n> hist(y, nclass = 60)\n> \n> But there is my problem. I have 60 pictures, so I get 60 different\n> boxplots, and I want the hist behind the boxes. But it makes only 59\n> histbars.\n> \n> What can I do? I tried also\n> hist(y, 1:60) # same effect\n> and\n> hist(y, 1:61)\n> this give me 60 places, but only 59 bars. the last bar is 0.\n\n\nIn fact, I am pretty sure you really want to have a barplot() rather \nthan a histogram. If you really want to use hist(), then perhaps hist(y, \n0:60).\n\nUwe Ligges\n\n\n\n> I hope anyone can help me.\n> \n> Regards Mario\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}