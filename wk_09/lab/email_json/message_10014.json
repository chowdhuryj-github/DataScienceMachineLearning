{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22379 - in branches/SAMBA_4_0/source/lib/util: .", "body": "Author: metze\nDate: 2007-04-19 15:56:44 +0000 (Thu, 19 Apr 2007)\nNew Revision: 22379\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22379\n\nLog:\nadd missing file\n\nmetze\nAdded:\n   branches/SAMBA_4_0/source/lib/util/become_daemon.c\n\n\nChangeset:\nAdded: branches/SAMBA_4_0/source/lib/util/become_daemon.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/become_daemon.c\t2007-04-19 15:05:59 UTC (rev 22378)\n+++ branches/SAMBA_4_0/source/lib/util/become_daemon.c\t2007-04-19 15:56:44 UTC (rev 22379)\n@@ -0,0 +1,94 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+   Samba utility functions\n+   Copyright (C) Andrew Tridgell 1992-1998\n+   Copyright (C) Jeremy Allison 2001-2002\n+   Copyright (C) Simo Sorce 2001\n+   Copyright (C) Jim McDonough (jmcd@us.ibm.com)  2003.\n+   Copyright (C) James J Myers 2003\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+#include \"includes.h\"\n+#include \"system/filesys.h\"\n+#include \"system/locale.h\"\n+\n+/*******************************************************************\n+ Close the low 3 fd's and open dev/null in their place.\n+********************************************************************/\n+static void close_low_fds(BOOL stderr_too)\n+{\n+#ifndef VALGRIND\n+\tint fd;\n+\tint i;\n+\n+\tclose(0);\n+\tclose(1); \n+\n+\tif (stderr_too)\n+\t\tclose(2);\n+\n+\t/* try and use up these file descriptors, so silly\n+\t\tlibrary routines writing to stdout etc won't cause havoc */\n+\tfor (i=0;i<3;i++) {\n+\t\tif (i == 2 && !stderr_too)\n+\t\t\tcontinue;\n+\n+\t\tfd = open(\"/dev/null\",O_RDWR,0);\n+\t\tif (fd < 0)\n+\t\t\tfd = open(\"/dev/null\",O_WRONLY,0);\n+\t\tif (fd < 0) {\n+\t\t\tDEBUG(0,(\"Can't open /dev/null\\n\"));\n+\t\t\treturn;\n+\t\t}\n+\t\tif (fd != i) {\n+\t\t\tDEBUG(0,(\"Didn't get file descriptor %d\\n\",i));\n+\t\t\treturn;\n+\t\t}\n+\t}\n+#endif\n+}\n+\n+/**\n+ Become a daemon, discarding the controlling terminal.\n+**/\n+\n+_PUBLIC_ void become_daemon(BOOL Fork)\n+{\n+\tif (Fork) {\n+\t\tif (fork()) {\n+\t\t\t_exit(0);\n+\t\t}\n+\t}\n+\n+  /* detach from the terminal */\n+#ifdef HAVE_SETSID\n+\tsetsid();\n+#elif defined(TIOCNOTTY)\n+\t{\n+\t\tint i = open(\"/dev/tty\", O_RDWR, 0);\n+\t\tif (i != -1) {\n+\t\t\tioctl(i, (int) TIOCNOTTY, (char *)0);      \n+\t\t\tclose(i);\n+\t\t}\n+\t}\n+#endif /* HAVE_SETSID */\n+\n+\t/* Close fd's 0,1,2. Needed if started by rsh */\n+\tclose_low_fds(False);  /* Don't close stderr, let the debug system\n+\t\t\t\t  attach it to the logfile */\n+}\n+\n\n"}