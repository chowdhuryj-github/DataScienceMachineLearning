{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: Annoying HASH(0x...) in Output", "body": "From: \"Tom Phoenix\" \n> On 6/4/07, GMan  wrote:\n> Things go smoothly for a while, and things seem quiet. Too quiet. Then...\n> \n> > sub addfriend {\n> >     my ($self,$f) = @_;\n> >     #dereference the array from the hash\n> >     $fr = $self->{'_friends'};\n> >     @friends = @$fr;\n> >     push @friends,$f;\n> >     $self->{'friends'} = \\@friends;\n> > }\n> \n> It looks as if (for lack of 'my') this subroutine is also using the\n> same @friends that we saw earlier, the package variable also known as\n> @Person::friends. If that doesn't sell you on 'use strict', nothing\n> will.\n> \n> But 'strict' won't tell you when you write 'friends' instead of\n> '_friends' for a hash key, and 'warnings' won't say that your code\n> could be written more simply. I think this is it:\n> \n>         sub addfriend {\n>            my ($self, $newfriend) = @_;\n>            # dereference the array from the hash\n>            my $friendsref = $self->{'_friends'};\n>            push @$friendsref, $newfriend;\n>         }\n\nOr even just\n\n         sub addfriend {\n            my ($self, $newfriend) = @_;\n            # dereference the array from the hash\n            push @{$self->{'_friends'}}, $newfriend;\n         }\n\nJust like you use () to make sure mathematical operators are applied \nthe way you want you use {} to make sure dereferencing is done right.\n\nYou might also change the subroutine a little to allow for\n\n  $obj->addfriend( 'Tom', 'Jenda')\n\nlike this:\n\n         sub addfriend {\n            my ($self, @newfriends) = @_;\n            # dereference the array from the hash\n            push @{$self->{'_friends'}}, @newfriends;\n         }\n\n\nJenda\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}