{"category": "ham", "to_address": "Charilaos Skiadas <skiadas@hanover.edu>", "from_address": "Peter Dalgaard <p.dalgaard@biostat.ku.dk>", "subject": "Re: [R] sequential for loop", "body": "Charilaos Skiadas wrote:\n> Hi Michael,\n> On Apr 20, 2007, at 12:31 AM, Michael Toews wrote:\n>\n>   \n>> Hi all,\n>>\n>> I'm usually comfortable using the *apply functions for vectorizing  \n>> loops\n>> in R. However, my particular problem now is using it in a sequential\n>> operation, which uses values evaluated in an offset of the loop  \n>> vector.\n>>\n>> Here is my example using a for loop approach:\n>>\n>> dat <- data.frame(year=rep(1970:1980,each=365),yday=1:365)\n>> dat$value <- sin(dat$yday*2*pi/365)+rnorm(nrow(dat),sd=0.5)\n>> dat$ca <- dat$cb <- 0 # consecutive above and below 0\n>>\n>> for(n in 2:nrow(dat)){\n>>   if(dat$value[n] > 0)\n>>     dat$ca[n] <- dat$ca[n-1] + 1\n>>   else\n>>     dat$cb[n] <- dat$cb[n-1] + 1\n>> }\n>>\n>> I'm inquiring if there is a straightforward way to vectorize this  \n>> (or a\n>> similar example) in R, since it gets rather slow with larger data\n>> frames. If there is no straightforward method, no worries.\n>>\n>>     \n> Would this do what you want:\n>\n> dat <- data.frame(year=rep(1970:1980,each=365),yday=1:365)\n> dat$value <- sin(dat$yday*2*pi/365)+rnorm(nrow(dat),sd=0.5)\n> positives <- dat$value > 0\n> dat$ca <- cumsum(c(0,positives[-1]))\n> dat$cb <- cumsum(c(0,!positives[-1]))\n>\n>   \nI think not (did you run both codes?).  As I read it, Michael wants ca \nand cb to count up, then reset to zero on a sign change.\n\nSomething like this (only partially tested!)\n\npositives <- dat$value > 0\nchg <- c(0,diff(positives)!= 0)\ngrp <- cumsum(chg)\nix <- unlist(lapply(table(grp),function(n)1:n))\nca <- ifelse(positives,ix,0)\ncb <- ifelse(positives,0,ix)\n\n(or ...as.vector(table(grp))... to avoid useless name calculations)\n>> Thanks in advance.\n>> +mt\n>>     \n>\n> Haris Skiadas\n> Department of Mathematics and Computer Science\n> Hanover College\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}