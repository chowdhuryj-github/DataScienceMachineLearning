{"category": "ham", "to_address": "\"Jen mlists\" <practicalperl@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: CGI Header", "body": "On 4/11/07, Jen mlists  wrote:\n\n> But my error_report function is located in a package,not the main script.\n\n> Then how to use a global variable for label it?\n\nYou may use a true global by giving its full name, say\n$main::header_is_complete, even from another package and under 'use\nstrict'.\n\nOr you could make a subroutine that you call whenever you need to make\nsure that the header is output, something like this:\n\n  my $header_is_complete;  # starts out false\n\n  sub ensure_header {\n    return if $header_is_complete;\n    my($q) = @_;\n    print $q->header();\n    $header_is_complete = 1;\n  }\n\nBecause the 'my' variable is declared outside the subroutine, it\nretains its value from one invocation to the next. Its scope continues\nuntil the end of the enclosing file (since there's no enclosing\nblock), so it's available to some code even though it's not globally\naccessible.\n\nCheers!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}