{"category": "ham", "to_address": "\"Michael Kubovy\" <kubovy@virginia.edu>", "from_address": "\"Deepayan Sarkar\" <deepayan.sarkar@gmail.com>", "subject": "Re: [R] xyplot() and controlling panel.polygon()", "body": "On 4/26/07, Michael Kubovy  wrote:\n> Hi Sundar,\n>\n> Thanks for taking a look at this\n>\n> On Apr 26, 2007, at 1:05 PM, Sundar Dorai-Raj wrote:\n>\n> >\n> >\n> > Michael Kubovy said the following on 4/26/2007 7:20 AM:\n> >> Dear R-helpers,\n> >> How do I tell panel.polygon what greoup and panel it applies to\n> >> whithin\n> >> xyplot(y ~ x | c, groups = g\n> >>      panel = function(x, y, groups, ...){\n> >>              panel.polygon(x = xpol[c, g], y = ypol[c, g],\n> >> default.units  = 'native')\n> >>              panel.xYplot(x, y, groups, ...)\n> >>              llines(x = c(1, 6),  y = c(-24.283333, 35.941667), lwd = 2, lty\n> >> =  3, col = 4)\n> >>      }\n> >> x[c, g] and y[c, g] describe the polygon I want plotted for group\n> >> g  in panel c.\n> >> _____________________________\n> >\n> > I believe you can just do:\n> >\n> > panel = function(x, y, subscripts, groups, ...) {\n> >   ## note addition of subscripts to arguments\n> >   panel.superpose(xpol, ypol, subscripts, groups,\n> >                   panel.groups = \"panel.polygon\",\n> >                   default.units = \"native\", ...)\n> >   panel.xYplot(x, y, subscripts, groups, ...)\n> >   llines(x = c(1, 6),  y = c(-24.283333, 35.941667),\n> >         lwd = 2, lty = 3, col = 4)\n> > }\n> >\n> > Also, it would be easier to provide tested answers if you gave a\n> > reproducible example.\n>\n> Here is a reproducible example in which I tried (unsuccesfully) to\n> apply your suggestion:\n>\n> est <- c(1:4, 3:6, 7, 9, 11, 13, 12, 15, 18, 21)\n> cond <- rep(c('a','b'), each = 8)\n> grp <- rep(c('I', 'II'), each = 4, 2)\n> x <- rep(c(.5, .7, .9, 1.1), 4)\n> upper <- est + 1\n> lower = est - 1\n> data <- data.frame(est = est, x = x, cond = cond, grp = grp, upper =\n> upper, lower = lower)\n>\n> xyplot(est ~ x | cond, group = grp, data = data, type = 'b',\n>      panel = function(x, y, subscripts, groups, ...){\n>          panel.superpose(c(x, rev(x)), c(upper, rev(lower)),\n> subscripts, groups,\n>              panel.groups = 'panel.polygon', default.units =\n> 'native', ...)\n>          panel.xyplot(x, y, subscripts, groups, ...)\n>      }\n> )\n> # returns: \"Error in validGP(list(...)) : Must specify only one of\n> 'font' and 'fontface'\", which is incomprehensible to me.\n\nYeah, it's happening because of this:\n\n> grid::gpar(font = 1, fontface = NULL)\nError in validGP(list(...)) : Must specify only one of 'font' and 'fontface'\n\npanel.polygon needs a fix. Replace it by this:\n\nmy.panel.polygon <- function(..., font, fontface)\n{\n    panel.polygon(...)\n}\n\nxyplot(est ~ x | cond, group = grp, data = data, type = 'b',\n       panel = function(x, y, ...) {\n           panel.superpose(c(x, rev(x)), c(upper, rev(lower)),\n                           panel.groups = my.panel.polygon,\n                           ...)\n           panel.xyplot(x, y, ...)\n       })\n\nYou are also better off not having arguments you are not using (your\ncode would have failed because of incorrect positional matching).\n\n-Deepayan\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}