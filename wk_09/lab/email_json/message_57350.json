{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: More loops", "body": "From: \"Amichai Teumim\" \n> I need to use two loops and an if statement to sort the contents of\n> this array so\n> that the number go from lowest to highest.\n\n@sorted = sort {$a <=> $b} @unsorted;\n\nYou can use the builtin function sort(). All you have to do is to \ntell it how do you want the elements compared.\n \n> So I tried to implement this:\n> \n> #!/usr/bin/perl\n> \n> @array = (5,3,2,1,4);\n> \n> for (i=0; i   for (j=0; j     if ($array[j+1] < $array[j]) {  /* compare the two neighbors */\n>       tmp = $array[j];         /* swap $array[j] and $array[j+1]      */\n>       $array[j] = $array[j+1];\n>       $array[j+1] = tmp;\n>   }\n> }\n\nThe first thing you are missing are sigils. All variables in Perl \nhave to start with a sigil ($, @, %, ...).\n\n for ($i=0; $i<$n-1; $i++) {\n   for ($j=0; $j<$n-1-$i; $j++)\n     if ($array[$j+1] < $array[$j]) {  /* compare the two neighbors \n*/\n       $tmp = $array[$j];         /* swap $array[j] and $array[j+1]   \n   */\n       $array[$j] = $array[$j+1];\n       $array[$j+1] = $tmp;\n   }\n }\n\nNext thing is that you do not need a third variable to exchange the \nvalues of two variables.\n\n ($a, $b) = ($b, $a);\n\nis perfectly legal and more efficient.\nSo you can write the body of the inner loop like this:\n\n ($array[j], $array[j+1]) = ($array[j+1], $array[j]);\n\nYou may even use so called \"array slices\". That is instead of writing\n\t($array[j+1], $array[j])\nyou can write just\n\t@array[j+1,j]\nso the body of the loop will be\n\n\t@array[j,j+1] = @array[j+1,j];\n\nYou may also use the foreach style of loop instead of the C-style \nfor():\n\nforeach my $i (0 .. $#array) {\n foreach my $j (0 .. $#array-1-$i) {\n  if ($array[$j+1] < $array[$j]) { \n   @array[j,j+1] = @array[j+1,j];\n  }\n }\n}\n\n\n> foreach $elem (@array){\n>   print \"$elem\\n\";\n> }\n\nThis can be simplified to\n\nprint join(\"\\n\", @array), \"\\n\";\n\nJenda\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}