{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Adrian Dragulescu <adrian_d@eskimo.com>", "subject": "[R] how to avoid infinite loops when sourcing R files", "body": "\nHello,\n\nI have a bunch of R files in a directory and I want to source all of them\nwith something like lapply(files, source).\n\nI have a main.R file\nsource(\"C:/Temp/set.parms.R\")\nparms <- set.parms()\ndo.calcs(parms)\ncat(\"I'm done with main.R\\n\")\n\nThen I have set.parms.R function\nset.parms <- function(){\n  cat(\"I'm in set.parms.\\n\"); flush.console()\n  directory <- \"C:/Temp/\"\n  files <- dir(directory, \"\\\\.[rR]$\", full.name=T)\n  files <- files[-grep(\"set.parms.R\", files)]     # remove infinite loop\n  lapply(files, source)  # source them all\n\n  cat(\"Exiting set.parms.\\n\"); flush.console()\n}\n\nAnd other functions f1, f2, f3, etc. in the same directory that also\nsource set.parms.R.  For example:\nf1 <- function(){\n  source(\"H:/user/R/RMG/Energy/VaR/Overnight/Test/set.parms.R\")\n  cat(\"I add two numbers.\\n\"); flush.console()\n}\n\nBecause of the source command in f1, I get into an infinite loop.  This\nmust be a common situation but I don't know how to avoid it.\nI need the source(set.parms) in f1, f2, f3, etc. because I want use a\ndifferent combination of them in other projects.\n\n\nThanks,\nAdrian\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}