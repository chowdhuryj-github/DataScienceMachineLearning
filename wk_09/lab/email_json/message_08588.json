{"category": "ham", "to_address": "Ulrik Stervbo <ulrik.stervbo@gmail.com>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Runing R in a bash script", "body": "On Wed, 18 Apr 2007, Ulrik Stervbo wrote:\n\n> As I har problems installing the Cairo package, I went for Henriks solution\n> - and it works almost perfect. I would like to have been able to generate\n> transparent png.\n\nYou cannot do transparency via postscript.\n\nI would suggest using pdf() and converting the output of that, which often \nworks even better (and does have full transparency support).\n\n> Thanks for the help\n> Ulrik\n>\n> On 18/04/07, Henrik Bengtsson  wrote:\n>>\n>> Or see png2() in R.utils, which imitates png() but uses bitmap(),\n>> which in turn uses postscript-to-png via ghostscript.  BTW, personally\n>> I think PNGs generated via bitmap() look way better than the ones\n>> generated via png().\n\nAs there are two separate versions of png() for different OSes, comments \nlike that are very system-dependent.  Other postings suggest this is \nWindows, and if png() is giving poor results there it suggests a problem \nwith the way Windows' GDI is configured (which depends on the graphics \ncard).\n\nAnd of course, PNGs don't 'look' at all: they are rendered by some other \ntool, and quite often the perceived problem with R graphical output is in \nfact with the rendering tool.\n\n>> /Henrik\n>>\n>> On 4/17/07, Jeffrey Horner  wrote:\n>>> Ulrik Stervbo wrote:\n>>> > Hello!\n>>> >\n>>> > I am having issues trying to plot to a ong (or jpg)  when the R-code\n>> in a\n>>> > bash script is executed from cron.\n>>> >\n>>> > I can generate a pdf file, but when I try to write to a png, the file\n>> is\n>>> > created, but nothing is written. If I execute the bash script from my\n>>> > console, everything works file. Any ideas?\n>>> >\n>>> > In my cron I have SHELL=/bin/bash - otherwise /bin/shell is used and\n>> the\n>>> > folowing enery, so example is executed every minute\n>>> > * * * * * [path]/example.sh\n>>> >\n>>> > I am running\n>>> > R version 2.4.1 (2006-12-18)\n>>> >\n>>> > Here's a minimal example - two files one R-script ('example.r') and\n>> one\n>>> > bash-script ('example.sh')\n>>> >\n>>> > example.r\n>>> > # Example R-script\n>>> > x <- c(1:10)\n>>> > y <- x^2\n>>> > png(file=\"example2.png\")\n>>> > #pdf(file=\"example2.pdf\")\n>>> > plot(x,y)\n>>> > graphics.off()\n>>> >\n>>> > example.sh\n>>> > #/bin/bash\n>>> > #\n>>> > # Hello world is written to exhotext every time cron executes this\n>> script\n>>> > echo \"Hello world\" > echotext\n>>> > # This works, but not when executed from cron\n>>> > n=`R --save < example.r`\n>>> > # using exec as in `exec R --save < example.r` dosent work with cron\n>>> either\n>>> > # This also works, but nothing is written to the png when executed\n>>> from cron\n>>> > R --save <>> > x <- c(1:10)\n>>> > y <- x^2\n>>> > png(file=\"example2.png\")\n>>> > #pdf(file=\"example2.pdf\")\n>>> > plot(x,y)\n>>> > graphics.off()\n>>> > #dev.off() dosent work at all when executed from cron\n>>> > RSCRIPT\n>>>\n>>> The png() device requires an X server for the image rendering. You might\n>>> be able to get away with exporting the DISPLAY environment variable\n>>>\n>>> export DISPLAY=:0.0 # try and connect to X server on display 0.0\n>>>\n>>> within your script, but it will only work if the script is executed by\n>>> the same user as is running the X server, *and* the X server is running\n>>> at the time the script is executed.\n>>>\n>>> There are a handful of packages that will create a png without the\n>>> presence of an X server, and I'm partial to Cairo (since I've done some\n>>> work on it). You can install the latest version like this:\n>>>\n>>> install.packages(\"Cairo\",,'http://rforge.net/',type='source')\n>>>\n>>> Cairo can also outputs nice pdf's with embedded fonts... useful if you\n>>> want to embed high-quality OpenType or TrueType fonts.\n>>>\n>>> Best,\n>>>\n>>> Jeff\n>>> --\n>>> http://biostat.mc.vanderbilt.edu/JeffreyHorner\n>>>\n>>> ______________________________________________\n>>> R-help@stat.math.ethz.ch mailing list\n>>> https://stat.ethz.ch/mailman/listinfo/r-help\n>>> PLEASE do read the posting guide\n>> http://www.R-project.org/posting-guide.html\n>>> and provide commented, minimal, self-contained, reproducible code.\n>>>\n>>\n>\n> \t[[alternative HTML version deleted]]\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}