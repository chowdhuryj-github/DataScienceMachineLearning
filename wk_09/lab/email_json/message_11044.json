{"category": "ham", "to_address": "\"Liaw, Andy\" <andy_liaw@merck.com>, <r-help@stat.math.ethz.ch>", "from_address": "\"Booman, M\" <m.booman@path.umcg.nl>", "subject": "Re: [R] Help on averaging sets of rows defined by row name", "body": "Thanks for your help everyone!\nI had some trouble with the 'aggregate' function because the 'table.impute[,1]' was not a list (which the 'by' argument should be), and it took a very very long time to coerce it into one. But the rowmeans method works almost instantly! And I have no problems with NA's because I used a knn imputer first.\n\n\n-----Original Message-----\nFrom: Liaw, Andy [mailto:andy_liaw@merck.com]\nSent: Fri 4/20/2007 4:09 PM\nTo: Booman, M; r-help@stat.math.ethz.ch\nSubject: RE: [R] Help on averaging sets of rows defined by row name\n \nYou might want to check which of the following scales better for the\nsize of data you have.\n\n## Make up some data to try.\nR> dat <- data.frame(gene=rep(letters[1:3], each=3), s1=runif(9),\ns2=runif(9))\nR> dat\n  gene        s1        s2\n1    a 0.9959172 0.9531052\n2    a 0.2064497 0.4257022\n3    a 0.4791100 0.5977923\n4    b 0.1307096 0.8256453\n5    b 0.7887983 0.8904983\n6    b 0.7841745 0.6901540\n7    c 0.3356583 0.7125086\n8    c 0.5859311 0.0509323\n9    c 0.7681325 0.8677725\n\n## Use aggregate():\nR> aggregate(dat[-1], dat[1], mean)\n  gene        s1        s2\n1    a 0.5604923 0.6588666\n2    b 0.5678941 0.8020992\n3    c 0.5632407 0.5437378\n\n## Do it \"by hand\": need a bit more work if there are Nas.\nR> rowsum(dat[-1], dat[[1]]) / table(dat[[1]])\n         s1        s2\na 0.5604923 0.6588666\nb 0.5678941 0.8020992\nc 0.5632407 0.5437378\n\nAndy\n \n\nFrom: Booman, M\n> \n> Dear all,\n> \n> This is my problem: I have a table of gene expression data, \n> where 1st column is gene name, and 2nd -39th columns each are \n> exression data for 38 samples. There are multiple \n> measurements per sample for each gene, so there are multiple \n> rows for each gene name. I want to average these measurements \n> so i end up with one value per sample for each gene name. The \n> output data frame (table.averaged) is further used in other R \n> script. The code I use now (see below) takes 20 secs for each \n> loop, so it takes 45 minutes to average my files of 13500 \n> unique genes. Can anyone help me do this faster?\n> \n> Cheers, marije\n> \n> Code I use: \n> \n> \n> table.imputed[,1] <- as.character(table.imputed[,1])    \n> #table.imputed is data.frame,1st column = gene name (class \n> factor), rest of columns = expression data (class numeric)\n> \n> genesunique <- unique(table.imputed[,1])                   \n> #To make list of unique genes in the set\n> \n> table.averaged <- NULL\n>   for (j in 1:length(genesunique)) {\n>      if (j%%100 == 0){                                        \n>            #To report progress\n>        cat(j, \"genes finished\", sep=\" \", fill=TRUE)\n>        }\n>      \n> table.averaged<-rbind(table.averaged,givemean(genesunique[j], \n> table.imputed))   #collects all rows of average values and \n> binds them back into one data frame\n>   }\n> \n> givemean <- function (gene, table.imputed) {\n>    thisgene<-table.imputed[table.imputed[,1]==gene,]          \n>                              #make a subset containing only \n> the rows for one gene name\n>    data.frame(gene,t(sapply(thisgene[,2:ncol(thisgene)],mean, \n> na.rm=TRUE)))     #calculates average for each sample \n> (column) and outputs one row of average values and the gene name\n> }\n> \n> \n> De inhoud van dit bericht is vertrouwelijk en alleen bestemd \n> voor de geadresseerde(n). Anderen dan de geadresseerde mogen \n> geen gebruik maken van dit bericht, het openbaar maken of op \n> enige wijze verspreiden of vermenigvuldigen. Het UMCG kan \n> niet aansprakelijk gesteld worden voor een incomplete \n> aankomst of vertraging van dit verzonden bericht.\n> \n> The contents of this message are confidential and only \n> intended for the eyes of the addressee(s). Others than the \n> addressee(s) are not allowed to use this message, to make it \n> public or to distribute or multiply this message in any way. \n> The UMCG cannot be held responsible for incomplete reception \n> or delay of this transferred message.\n> \n\n\n------------------------------------------------------------------------------\nNotice:  This e-mail message, together with any attachments, contains\ninformation of Merck & Co., Inc. (One Merck Drive, Whitehouse Station,\nNew Jersey, USA 08889), and/or its affiliates (which may be known\noutside the United States as Merck Frosst, Merck Sharp & Dohme or MSD\nand in Japan, as Banyu - direct contact information for affiliates is \navailable at http://www.merck.com/contact/contacts.html) that may be \nconfidential, proprietary copyrighted and/or legally privileged. It is \nintended solely for the use of the individual or entity named on this \nmessage. If you are not the intended recipient, and have received this \nmessage in error, please notify us immediately by reply e-mail and then \ndelete it from your system.\n\n------------------------------------------------------------------------------\n\n\n\nDe inhoud van dit bericht is vertrouwelijk en alleen bestemd voor de geadresseerde(n). Anderen dan de geadresseerde mogen geen gebruik maken van dit bericht, het openbaar maken of op enige wijze verspreiden of vermenigvuldigen. Het UMCG kan niet aansprakelijk gesteld worden voor een incomplete aankomst of vertraging van dit verzonden bericht.\n\nThe contents of this message are confidential and only intended for the eyes of the addressee(s). Others than the addressee(s) are not allowed to use this message, to make it public or to distribute or multiply this message in any way. The UMCG cannot be held responsible for incomplete reception or delay of this transferred message.\n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}