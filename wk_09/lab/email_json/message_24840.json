{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Rene Schickbauer\" <cavac@magicbooks.org>", "subject": "Re: Diff on a database structure", "body": "Hi!\n\n> I'd like to find a way of comparing the two MySQL database strcutures\n> and getting a list of the differences, anyone know of any\n> modules/methods for doing this?\n\nHere's more or less what some commercial tools do:\n\n**pseudocode start**\n\nget all lines, split them into a datastructure like this\n$tables[x}->{\"dev\" or \"orig\"}->line[x]\n\nforeach $table (@tables) {\n    if($table->{\"prod\"} is constraint or index) {\n         \"drop bla bla bla\"\n    }\n}\n\n\nforeach $table (@tables) {\n    if($table->{\"prod\" or \"dev\"} is constraint or index) {\n         next\n    }\n\n\n    if(all lines $tables->{\"dev\"} eq all lines $tables->{\"dev\"} eq) {\n        next;\n    }\n\n   if(dev && !prod) {\n        \"create bla bla bla\"\n       next\n   } elsif(!dev && prod) {\n        \"drop bla bla bla\"\n         next\n    }\n\n    if(dev has lines not in prod) {\n        for every extra line: \"alter table add bla bla bla\");\n    }\n    if(prod has lines not in dev) {\n        for every extra line: \"alter table drop bla bla bla\");\n    }\n}\n\nforeach $table (@tables) {\n    if($table->{\"dev\"} is constraint or index) {\n         \"create bla bla bla\"\n    }\n}\n\n**pseudocode end**\n\nI'd say, as long as you got that reader/parser to give you a nice data\nstruct, you should get a beta working in an hour or two.\n\nTip: You might notice that there is normally a newline and/or semicolon at\nthe end of each statement. Also the TYPE and NAME of the object should more\nor less always be second and third word of every statement such as in\n\"create TABLE hello\".\n\nI didn't try with mysqldump, but most database tool write the fields of any\n\"create table\" on a line-by-line basis, effectively pre-parsing the\nstatement for you.\n\nOk, and here's the reason i'm dropping indexes and constraints at the top\nand re-creating them at the end: Constraints can be a bitch, when you're\naltering tables, because you're having to do that in the proper{tm} order...\nIndexes: After altering tables, it might be a good idea to re-create them\nanyway. I've seen databases (mysql, postgresql, oracle...) where indexes\nsilently failed after excessive \"alter table\"s. Meaning: Performance breaks\ndown, cause the db decides to do full table scans every f...ing time...\n\nPS: You also might want to peek at DBD::Anydata, maybe there's something in\nthere to help you,\nPPS: If you can't get it working, post two example dumps (without data, just\nthe creates), and i'll see what i can do.\n\nLLAP & LG\nRene\n\n-- \n-----BEGIN GEEK CODE BLOCK-----\nVersion: 3.1    Visit  to decode\nGCS d- s:- a-- C++$ UBLA*++++$ P++++$ L+$ !E !W+++$ N+ o+ K--?\nw++$ !O M+ V-- PS PE Y+ PGP+ t+ 5 X- !R tv b+++ DI-- D++ G e h-- r-- y+\n------END GEEK CODE BLOCK------\n\n\n-----------------------------------------\nThis E-Mail was sent through MagicMail\n\nDownload our Jump'n'Run \"BlinkenSisters\":\n    http://www.blinkensisters.org\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}