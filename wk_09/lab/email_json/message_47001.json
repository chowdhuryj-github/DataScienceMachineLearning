{"category": "ham", "to_address": "\"Earl F. Glynn\" <efg@stowers-institute.org>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] Read Windows-like .INI files into R data structure?", "body": "Here is yet another simplification.  This one uses na.locf from the zoo\npackage to shorten it further and also make it easier to understand.\n\nBelow we have one line to read in the .ini file, one line to transform the\ncharacters [ and ] to = and =, the read.table line parses the result and\nthe next line carries forward the section names and removes the section\nlines. Lines.raw is as before:\n\nlibrary(zoo)\n\n# Lines <- readLines(\"myfile.ini\")\nLines <- readLines(textConnection(Lines.raw))\nLines2 <- chartr(\"[]\", \"==\", Lines)\nDF <- read.table(textConnection(Lines2), as.is = TRUE, sep = \"=\", fill = TRUE)\nsubset(transform(DF, V3 = na.locf(ifelse(V1 == \"\", V2, NA))), V1 != \"\")\n\n\nOn 6/12/07, Gabor Grothendieck  wrote:\n> In thinking about this a bit more here is an even shorter solution where\n> Lines.raw is as before:\n>\n> # Lines <- readLines(\"myfile.ini\")\n> Lines <- readLines(textConnection(Lines.raw))\n> Lines2 <- chartr(\"[]\", \"==\", Lines)\n> DF <- read.table(textConnection(Lines2), as.is = TRUE, sep = \"=\", fill = TRUE)\n> L <- DF$V1 == \"\"\n> subset(transform(DF, V3 = V2[which(L)[cumsum(L)]])[1:3], V1 != \"\")\n>\n>\n> On 6/12/07, Gabor Grothendieck  wrote:\n> > Here is some code. It replaces [ and ] with = sign and reads the result\n> > into a data frame, DF.  DF2 is similar except the section is now in V3.\n> > DF3 is like like DF2 except sections are carried forward and finally\n> > we remove the rows which only had sections.\n> >\n> > Lines.raw <- \"[Section1]\n> > var1=value1\n> > var2=value2\n> > [Section2]\n> > A=value3\n> > B=value4\n> > \"\n> >\n> > Lines <- readLines(textConnection(Lines.raw))\n> > Lines2 <- chartr(\"[]\", \"==\", Lines)\n> > DF <- read.table(textConnection(Lines2), as.is = TRUE, sep = \"=\", fill = TRUE)\n> > DF2 <- transform(DF, V3 = ifelse(V1 == \"\", V2, NA))\n> > L <- !is.na(DF2$V3)\n> > DF3 <- transform(DF2, V3 = V3[c(NA, which(L))[cumsum(L)+1]])\n> > subset(DF3, V1 != \"\")\n> >\n> > The result is:\n> >\n> >    V1     V2       V3\n> > 2 var1 value1 Section1\n> > 3 var2 value2 Section1\n> > 5    A value3 Section2\n> > 6    B value4 Section2\n> >\n> >\n> > On 6/12/07, Earl F. Glynn  wrote:\n> > > I need to process some datasets where the configuration information was\n> > > stored in .INI-like files, i.e., text files with sections like this:\n> > >\n> > > [Section1]\n> > > var1=value1\n> > > var2=value2\n> > > [Section2]\n> > > A=value3\n> > > B=value4\n> > >\n> > > ...\n> > >\n> > > >From Google and other searches I haven't found any package, or function\n> > > within a package, that reads .INI files into an R list, or other data\n> > > structure.\n> > >\n> > >\n> > >\n> > > Any suggestions, or do I need to write my own?\n> > >\n> > > efg\n> > >\n> > > Earl F. Glynn\n> > > Stowers Institute for Medical Research\n> > >\n> > > ______________________________________________\n> > > R-help@stat.math.ethz.ch mailing list\n> > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> > > and provide commented, minimal, self-contained, reproducible code.\n> > >\n> >\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}