{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r22489 - in branches/SAMBA_3_0/source/rpcclient: .", "body": "Author: obnox\nDate: 2007-04-23 16:31:31 +0000 (Mon, 23 Apr 2007)\nNew Revision: 22489\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22489\n\nLog:\nAdd a deletedomgroup command to rpcclient (samr).\nCorresponding to deletedomuser.\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0/source/rpcclient/cmd_samr.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/rpcclient/cmd_samr.c\n===================================================================\n--- branches/SAMBA_3_0/source/rpcclient/cmd_samr.c\t2007-04-23 15:32:47 UTC (rev 22488)\n+++ branches/SAMBA_3_0/source/rpcclient/cmd_samr.c\t2007-04-23 16:31:31 UTC (rev 22489)\n@@ -1895,6 +1895,78 @@\n \treturn result;\n }\n \n+/* Delete domain group */\n+\n+static NTSTATUS cmd_samr_delete_dom_group(struct rpc_pipe_client *cli, \n+                                         TALLOC_CTX *mem_ctx,\n+                                         int argc, const char **argv) \n+{\n+\tNTSTATUS result = NT_STATUS_UNSUCCESSFUL;\n+\tPOLICY_HND connect_pol, domain_pol, group_pol;\n+\tuint32 access_mask = MAXIMUM_ALLOWED_ACCESS;\n+\n+\tif ((argc < 2) || (argc > 3)) {\n+\t\tprintf(\"Usage: %s groupname\\n\", argv[0]);\n+\t\treturn NT_STATUS_OK;\n+\t}\n+\t\n+\tif (argc > 2)\n+                sscanf(argv[2], \"%x\", &access_mask);\n+\n+\t/* Get sam policy and domain handles */\n+\n+\tresult = try_samr_connects(cli, mem_ctx, MAXIMUM_ALLOWED_ACCESS, \n+\t\t\t\t   &connect_pol);\n+\n+\tif (!NT_STATUS_IS_OK(result))\n+\t\tgoto done;\n+\n+\tresult = rpccli_samr_open_domain(cli, mem_ctx, &connect_pol,\n+\t\t\t\t      MAXIMUM_ALLOWED_ACCESS,\n+\t\t\t\t      &domain_sid, &domain_pol);\n+\n+\tif (!NT_STATUS_IS_OK(result))\n+\t\tgoto done;\n+\n+\t/* Get handle on group */\n+\n+\t{\n+\t\tuint32 *group_rids, num_rids, *name_types;\n+\t\tuint32 flags = 0x000003e8; /* Unknown */\n+\n+\t\tresult = rpccli_samr_lookup_names(cli, mem_ctx, &domain_pol,\n+\t\t\t\t\t       flags, 1, (const char **)&argv[1],\n+\t\t\t\t\t       &num_rids, &group_rids,\n+\t\t\t\t\t       &name_types);\n+\n+\t\tif (!NT_STATUS_IS_OK(result))\n+\t\t\tgoto done;\n+\n+\t\tresult = rpccli_samr_open_group(cli, mem_ctx, &domain_pol,\n+\t\t\t\t\t\taccess_mask,\n+\t\t\t\t\t\tgroup_rids[0], &group_pol);\n+\n+\t\tif (!NT_STATUS_IS_OK(result))\n+\t\t\tgoto done;\n+\t}\n+\n+\t/* Delete user */\n+\n+\tresult = rpccli_samr_delete_dom_group(cli, mem_ctx, &group_pol);\n+\n+\tif (!NT_STATUS_IS_OK(result))\n+\t\tgoto done;\n+\n+\t/* Display results */\n+\n+\trpccli_samr_close(cli, mem_ctx, &group_pol);\n+\trpccli_samr_close(cli, mem_ctx, &domain_pol);\n+\trpccli_samr_close(cli, mem_ctx, &connect_pol);\n+\n+ done:\n+\treturn result;\n+}\n+\n /* Delete domain user */\n \n static NTSTATUS cmd_samr_delete_dom_user(struct rpc_pipe_client *cli, \n@@ -2340,6 +2412,7 @@\n \t{ \"createdomalias\",     RPC_RTYPE_NTSTATUS, cmd_samr_create_dom_alias,      NULL, PI_SAMR, NULL,\t\"Create domain alias\",     \"\" },\n \t{ \"samlookupnames\",     RPC_RTYPE_NTSTATUS, cmd_samr_lookup_names,          NULL, PI_SAMR, NULL,\t\"Look up names\",           \"\" },\n \t{ \"samlookuprids\",      RPC_RTYPE_NTSTATUS, cmd_samr_lookup_rids,           NULL, PI_SAMR, NULL,\t\"Look up names\",           \"\" },\n+\t{ \"deletedomgroup\",     RPC_RTYPE_NTSTATUS, cmd_samr_delete_dom_group,      NULL, PI_SAMR, NULL,\t\"Delete domain group\",     \"\" },\n \t{ \"deletedomuser\",      RPC_RTYPE_NTSTATUS, cmd_samr_delete_dom_user,       NULL, PI_SAMR, NULL,\t\"Delete domain user\",      \"\" },\n \t{ \"samquerysecobj\",     RPC_RTYPE_NTSTATUS, cmd_samr_query_sec_obj,         NULL, PI_SAMR, NULL, \"Query SAMR security object\",   \"\" },\n \t{ \"getdompwinfo\",       RPC_RTYPE_NTSTATUS, cmd_samr_get_dom_pwinfo,        NULL, PI_SAMR, NULL, \"Retrieve domain password info\", \"\" },\n\n"}