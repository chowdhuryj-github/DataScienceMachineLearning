{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: cat (.sh) in Perl", "body": "Seanie wrote:\n> John W. Krahn wrote:\n>>>Your syntax for the open() statements is a bit dodgy too :-)\n>>Perl defines the syntax so you must mean something else?  :-)\n> \n> As in \"too much unnecessary typing and commas and such, which don't really \n> add clarity\", rather than \"incorrect\"\n\nThe OP's open statements:\n\n>     open $FILE,\"<\",\"$root/$_\";\n> \n> open $FILE,\">\",\"blah\";\n\nCan you explain where the \"too much unnecessary typing and commas and such\"\nexist in those statements?\n\n[ snip ]\n\n>>>for my $infile (qw|m.top.html m.mid.html m.arc.html m.bot.html|){\n>>>  die \"$infile not found\" unless -r \"$root/$infile\"; # or use next to\n>>>skip it\n>>$infile could exist and not be readable so the message \"$infile not found\"\n>>does not accurately describe the problem\n> \n> Ok, granted. s/found/readable/\n> \n>>and if you are logged in as root then the file is readable reguardless.  \n> Unless it doesn't exist. What's your point?\n> \n>>Also you have a race condition \n>>where the file could be made unreadable between that statement and the\n>>next one.\n> \n> And could be deleted entirely before (or during) the subsequent read by \n> another process. Still not sure of your point. I didn't think the OP wanted \n> a lecture about file locking.\n\nI said nothing about locking.  I was making the point that the test for\nreadability is redundant as the die() after open() will catch any existence or\nreadability problems anyway.\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}