{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23725 - in branches/SAMBA_3_0/source/smbd: .", "body": "Author: vlendec\nDate: 2007-07-05 16:27:47 +0000 (Thu, 05 Jul 2007)\nNew Revision: 23725\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23725\n\nLog:\nRemove get_current_mid()\n\nJeremy, next one to review :-)\n\n\nModified:\n   branches/SAMBA_3_0/source/smbd/open.c\n   branches/SAMBA_3_0/source/smbd/process.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/open.c\t2007-07-05 16:26:27 UTC (rev 23724)\n+++ branches/SAMBA_3_0/source/smbd/open.c\t2007-07-05 16:27:47 UTC (rev 23725)\n@@ -644,6 +644,7 @@\n \n static BOOL delay_for_oplocks(struct share_mode_lock *lck,\n \t\t\t      files_struct *fsp,\n+\t\t\t      uint16 mid,\n \t\t\t      int pass_number,\n \t\t\t      int oplock_request)\n {\n@@ -728,7 +729,7 @@\n \n \tDEBUG(10, (\"Sending break request to PID %s\\n\",\n \t\t   procid_str_static(&exclusive->pid)));\n-\texclusive->op_mid = get_current_mid();\n+\texclusive->op_mid = mid;\n \n \t/* Create the message. */\n \tshare_mode_entry_to_message(msg, exclusive);\n@@ -768,9 +769,9 @@\n static void defer_open(struct share_mode_lock *lck,\n \t\t       struct timeval request_time,\n \t\t       struct timeval timeout,\n+\t\t       uint16 mid,\n \t\t       struct deferred_open_record *state)\n {\n-\tuint16 mid = get_current_mid();\n \tint i;\n \n \t/* Paranoia check */\n@@ -1065,7 +1066,9 @@\n \n }\n \n-static void schedule_defer_open(struct share_mode_lock *lck, struct timeval request_time)\n+static void schedule_defer_open(struct share_mode_lock *lck,\n+\t\t\t\tstruct timeval request_time,\n+\t\t\t\tuint16 mid)\n {\n \tstruct deferred_open_record state;\n \n@@ -1096,7 +1099,7 @@\n \tstate.id = lck->id;\n \n \tif (!request_timed_out(request_time, timeout)) {\n-\t\tdefer_open(lck, request_time, timeout, &state);\n+\t\tdefer_open(lck, request_time, timeout, mid, &state);\n \t}\n }\n \n@@ -1443,8 +1446,10 @@\n \t\t}\n \n \t\t/* First pass - send break only on batch oplocks. */\n-\t\tif (delay_for_oplocks(lck, fsp, 1, oplock_request)) {\n-\t\t\tschedule_defer_open(lck, request_time);\n+\t\tif ((req != NULL)\n+\t\t    && delay_for_oplocks(lck, fsp, req->mid, 1,\n+\t\t\t\t\t oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time, req->mid);\n \t\t\tTALLOC_FREE(lck);\n \t\t\tfile_free(fsp);\n \t\t\treturn NT_STATUS_SHARING_VIOLATION;\n@@ -1461,8 +1466,11 @@\n \t\t\t * status again. */\n \t\t\t/* Second pass - send break for both batch or\n \t\t\t * exclusive oplocks. */\n-\t\t\tif (delay_for_oplocks(lck, fsp, 2, oplock_request)) {\n-\t\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tif ((req != NULL)\n+\t\t\t     && delay_for_oplocks(lck, fsp, req->mid, 2,\n+\t\t\t\t\t\t  oplock_request)) {\n+\t\t\t\tschedule_defer_open(lck, request_time,\n+\t\t\t\t\t\t    req->mid);\n \t\t\t\tTALLOC_FREE(lck);\n \t\t\t\tfile_free(fsp);\n \t\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n@@ -1576,10 +1584,11 @@\n \t\t\t\tstate.delayed_for_oplocks = False;\n \t\t\t\tstate.id = id;\n \n-\t\t\t\tif (!request_timed_out(request_time,\n-\t\t\t\t\t\t       timeout)) {\n+\t\t\t\tif ((req != NULL)\n+\t\t\t\t    && !request_timed_out(request_time,\n+\t\t\t\t\t\t\t  timeout)) {\n \t\t\t\t\tdefer_open(lck, request_time, timeout,\n-\t\t\t\t\t\t   &state);\n+\t\t\t\t\t\t   req->mid, &state);\n \t\t\t\t}\n \t\t\t}\n \n@@ -1667,8 +1676,10 @@\n \t\t}\n \n \t\t/* First pass - send break only on batch oplocks. */\n-\t\tif (delay_for_oplocks(lck, fsp, 1, oplock_request)) {\n-\t\t\tschedule_defer_open(lck, request_time);\n+\t\tif ((req != NULL)\n+\t\t    && delay_for_oplocks(lck, fsp, req->mid, 1,\n+\t\t\t\t\t oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time, req->mid);\n \t\t\tTALLOC_FREE(lck);\n \t\t\tfd_close(conn, fsp);\n \t\t\tfile_free(fsp);\n@@ -1684,8 +1695,11 @@\n \t\t\t * status again. */\n \t\t\t/* Second pass - send break for both batch or\n \t\t\t * exclusive oplocks. */\n-\t\t\tif (delay_for_oplocks(lck, fsp, 2, oplock_request)) {\n-\t\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tif ((req != NULL)\n+\t\t\t    && delay_for_oplocks(lck, fsp, req->mid, 2,\n+\t\t\t\t\t\t oplock_request)) {\n+\t\t\t\tschedule_defer_open(lck, request_time,\n+\t\t\t\t\t\t    req->mid);\n \t\t\t\tTALLOC_FREE(lck);\n \t\t\t\tfd_close(conn, fsp);\n \t\t\t\tfile_free(fsp);\n@@ -1709,8 +1723,10 @@\n \t\t\t * \"goto top of this function\", but don't tell\n \t\t\t * anybody... */\n \n-\t\t\tdefer_open(lck, request_time, timeval_zero(),\n-\t\t\t\t   &state);\n+\t\t\tif (req != NULL) {\n+\t\t\t\tdefer_open(lck, request_time, timeval_zero(),\n+\t\t\t\t\t   req->mid, &state);\n+\t\t\t}\n \t\t\tTALLOC_FREE(lck);\n \t\t\treturn status;\n \t\t}\n\nModified: branches/SAMBA_3_0/source/smbd/process.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/process.c\t2007-07-05 16:26:27 UTC (rev 23724)\n+++ branches/SAMBA_3_0/source/smbd/process.c\t2007-07-05 16:27:47 UTC (rev 23725)\n@@ -48,15 +48,6 @@\n extern BOOL global_machine_password_needs_changing;\n extern int max_send;\n \n-/****************************************************************************\n- Function to return the current request mid from Inbuffer.\n-****************************************************************************/\n-\n-uint16 get_current_mid(void)\n-{\n-\treturn SVAL(InBuffer,smb_mid);\n-}\n-\n /*\n  * Initialize a struct smb_request from an inbuf\n  */\n\n"}