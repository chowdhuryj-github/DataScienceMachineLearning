{"category": "ham", "to_address": "beginners@perl.org, beginners@perl.org", "from_address": "Robert Hicks <sigzero@gmail.com>", "subject": "Re: looping through a file", "body": "Chas Owens wrote:\n> On 5/7/07, Robert Hicks  wrote:\n>> I have one file that contains a log. I do a substr to get the\n>> information out of that and push it into an array.\n>>\n>> I have a second file that contain another log. I need to loop through\n>> the items in the array and find them in this log. Once I find the line\n>> that the id is on, I need the next line /^AMP-commit/ captured.\n>>\n>> I am getting:\n>>\n>> \"Use of uninitialized value in pattern match (m//) at ./amp_parse.pl\n>> line 39, <$AFILE> line 213622.\"\n> snip\n> \n> It sounds like your substr is returning undef at some point in the\n> first file.  If this is not an error then try changing the loop to\n> \n\nI think part of the problem is the 'shift'ing that I was doing. I am \nlooking into that. Basically I was shift'ing the @log out of existence \nafter the first pass.\n\nBasically 1 id will create 2 lines; line 1 of the log for a particular \nid is the \"what\" and line 2 is the \"why\". I am trying to get at the 2nd \nline.\n\n> while (defined(my $ifile_line = <$IFILE>)) {\n>    my $hits = substr($ifile_line, 0, 6);\n>    next unless defined $hits;\n>    push @id_hits, $hits;\n> }\n> \n> Also, you should never use a straight string in a regex; it should\n> aways be quoted.\n> \n> $line = shift @log until $line =~ /\\Q$prime_id\\E/;\n\nWhat does that give you? I have never heard of that and have never had a \nproblem the way I have shown. Just curious...\n\nRobert\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}