{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r23350 - in branches/SAMBA_4_0_RELEASE:\n\tsource/scripting/libjs webapps/install", "body": "Author: abartlet\nDate: 2007-06-05 05:15:15 +0000 (Tue, 05 Jun 2007)\nNew Revision: 23350\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23350\n\nLog:\nFix a nasty issue we had with SWAT.  We could not provision into a\ndifferent domain, as we didn't re-calcuate the DOMAINDN after the user\nchanged it in the form.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0_RELEASE/source/scripting/libjs/provision.js\n   branches/SAMBA_4_0_RELEASE/webapps/install/provision.esp\n\n\nChangeset:\nModified: branches/SAMBA_4_0_RELEASE/source/scripting/libjs/provision.js\n===================================================================\n--- branches/SAMBA_4_0_RELEASE/source/scripting/libjs/provision.js\t2007-06-05 01:59:37 UTC (rev 23349)\n+++ branches/SAMBA_4_0_RELEASE/source/scripting/libjs/provision.js\t2007-06-05 05:15:15 UTC (rev 23350)\n@@ -436,7 +436,7 @@\n \treturn true;\n }\n \n-function provision_fix_subobj(subobj, message, paths)\n+function provision_fix_subobj(subobj, paths)\n {\n \tsubobj.REALM       = strupper(subobj.REALM);\n \tsubobj.HOSTNAME    = strlower(subobj.HOSTNAME);\n@@ -444,6 +444,19 @@\n \tassert(valid_netbios_name(subobj.DOMAIN));\n \tsubobj.NETBIOSNAME = strupper(subobj.HOSTNAME);\n \tassert(valid_netbios_name(subobj.NETBIOSNAME));\n+\tsubobj.DNSDOMAIN    = strlower(subobj.REALM);\n+\tsubobj.DNSNAME      = sprintf(\"%s.%s\", \n+\t\t\t\t      strlower(subobj.HOSTNAME), \n+\t\t\t\t      subobj.DNSDOMAIN);\n+\trdn_list = split(\".\", subobj.DNSDOMAIN);\n+\tsubobj.DOMAINDN     = \"DC=\" + join(\",DC=\", rdn_list);\n+\tsubobj.DOMAINDN_LDB = \"users.ldb\";\n+\tsubobj.ROOTDN       = subobj.DOMAINDN;\n+\tsubobj.CONFIGDN     = \"CN=Configuration,\" + subobj.ROOTDN;\n+\tsubobj.CONFIGDN_LDB = \"configuration.ldb\";\n+\tsubobj.SCHEMADN     = \"CN=Schema,\" + subobj.CONFIGDN;\n+\tsubobj.SCHEMADN_LDB = \"schema.ldb\";\n+\n \tvar rdns = split(\",\", subobj.DOMAINDN);\n \tsubobj.RDN_DC = substr(rdns[0], strlen(\"DC=\"));\n \n@@ -461,7 +474,7 @@\n \tvar sys = sys_init();\n \tvar info = new Object();\n \n-\tvar ok = provision_fix_subobj(subobj, message, paths);\n+\tvar ok = provision_fix_subobj(subobj, paths);\n \tassert(ok);\n \n \tinfo.subobj = subobj;\n@@ -511,7 +524,7 @@\n \tvar sys = sys_init();\n \tvar info = new Object();\n \n-\tvar ok = provision_fix_subobj(subobj, message, paths);\n+\tvar ok = provision_fix_subobj(subobj, paths);\n \tassert(ok);\n \n \tif (subobj.DOMAINGUID != undefined) {\n@@ -714,7 +727,7 @@\n \tvar sys = sys_init();\n \tvar info = new Object();\n \n-\tvar ok = provision_fix_subobj(subobj, message, paths);\n+\tvar ok = provision_fix_subobj(subobj, paths);\n \tassert(ok);\n \n \tinfo.subobj = subobj;\n@@ -787,6 +800,9 @@\n /* Write out a DNS zone file, from the info in the current database */\n function provision_ldapbase(subobj, message, paths)\n {\n+\tvar ok = provision_fix_subobj(subobj, paths);\n+\tassert(ok);\n+\n \tmessage(\"Setting up LDAP base entry: \" + subobj.DOMAINDN + \" \\n\");\n \tvar rdns = split(\",\", subobj.DOMAINDN);\n \tsubobj.EXTENSIBLEOBJECT = \"objectClass: extensibleObject\";\n@@ -850,19 +866,6 @@\n \tsubobj.BACKUP       = findnss(nss.getgrnam, \"backup\", \"wheel\", \"root\", \"staff\");\n \tsubobj.USERS        = findnss(nss.getgrnam, \"users\", \"guest\", \"other\", \"unknown\", \"usr\");\n \n-\tsubobj.DNSDOMAIN    = strlower(subobj.REALM);\n-\tsubobj.DNSNAME      = sprintf(\"%s.%s\", \n-\t\t\t\t      strlower(subobj.HOSTNAME), \n-\t\t\t\t      subobj.DNSDOMAIN);\n-\trdn_list = split(\".\", subobj.DNSDOMAIN);\n-\tsubobj.DOMAINDN     = \"DC=\" + join(\",DC=\", rdn_list);\n-\tsubobj.DOMAINDN_LDB = \"users.ldb\";\n-\tsubobj.ROOTDN       = subobj.DOMAINDN;\n-\tsubobj.CONFIGDN     = \"CN=Configuration,\" + subobj.ROOTDN;\n-\tsubobj.CONFIGDN_LDB = \"configuration.ldb\";\n-\tsubobj.SCHEMADN     = \"CN=Schema,\" + subobj.CONFIGDN;\n-\tsubobj.SCHEMADN_LDB = \"schema.ldb\";\n-\n \t//Add modules to the list to activate them by default\n \t//beware often order is important\n \t//\n@@ -892,6 +895,7 @@\n \n \tsubobj.EXTENSIBLEOBJECT = \"# no objectClass: extensibleObject for local ldb\";\n \tsubobj.ACI\t\t= \"# no aci for local ldb\";\n+\n \treturn subobj;\n }\n \n\nModified: branches/SAMBA_4_0_RELEASE/webapps/install/provision.esp\n===================================================================\n--- branches/SAMBA_4_0_RELEASE/webapps/install/provision.esp\t2007-06-05 01:59:37 UTC (rev 23349)\n+++ branches/SAMBA_4_0_RELEASE/webapps/install/provision.esp\t2007-06-05 05:15:15 UTC (rev 23350)\n@@ -16,7 +16,6 @@\n \tlp.set(\"realm\", lp.get(\"workgroup\") + \".example.com\");\n }\n \n-\n var subobj = provision_guess();\n /* Don't supply default password for web interface */\n subobj.ADMINPASS = \"\";\n@@ -47,10 +46,11 @@\n }\n \n if (form['submit'] == \"Provision\") {\n+\n         /* overcome an initially blank smb.conf */\n \tlp.set(\"realm\", subobj.REALM);\n \tlp.set(\"workgroup\", subobj.DOMAIN);\n-\tlp.reload()\n+\tlp.reload();\n \tvar goodpass = (subobj.CONFIRM == subobj.ADMINPASS);\n \n \tif (!goodpass) {\n\n"}