{"category": "ham", "to_address": "Perl List <beginners@perl.org>", "from_address": "Xavier Noria <fxn@hashref.com>", "subject": "Re: interpolation of function reference in a here doc", "body": "On Jul 2, 2007, at 2:46 PM, Gabriel Striewe wrote:\n\n> Dear List,\n>\n> I wanted to interpolate a function reference in a here doc.\n> The following works fine:\n>\n> my $hello = sub {\n>                  return \"hello world!\";\n>                 };\n>\n> printf \"hello $s\\n\", &$hello();\n\nIn Perl printf is rarely used because double-quote strings allow  \ninterpolation of scalars and arrays, and because print accepts an  \narbitrary number of arguments.\n\nInterpolation does not understand function calls, though, so you  \neither use a multi-argument call like this:\n\n   print \"hello \", $hello->(), \"\\n\";\n\nor either use this hack:\n\n   print \"hello @{[ $hello->() ]}\\n\";\n\nHere-documents have double-quote semantics unless you put single  \nquotes around the terminating string, so that last trick works in  \nhere-documents as well.\n\n-- fxn\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}