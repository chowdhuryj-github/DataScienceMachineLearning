{"category": "ham", "to_address": "\"Tatiana Lloret Iglesias\" <tlloreti@gmail.com>", "from_address": "\"Jeff Pang\" <pangj@earthlink.net>", "subject": "Re: scape . character", "body": "open FILE,$file or die $!;\nwhile () {\n    next unless /\\s+(\\d+\\.\\d+\\.\\d+)\\s+/;\n    my $version_str = $1;\n    my ($lastnum) = $verison_str =~ /.*\\.(\\d+)/;\n    print $lastnum,\"\\n\";\n}\nclose FILE;\n\n(Note for no test.)\n\n2007/4/27, Tatiana Lloret Iglesias :\n> thanks a lot!!\n>\n> And how can I locate the version String it self in the file?\n>\n> bla bla bla\n> bla bla bla 1.2.0  bla bla\n> bla bla bla\n>\n> my pattern is number.number.number\n>\n> Thanks!\n> T\n>\n>\n> On 4/27/07, Jeff Pang  wrote:\n> >\n> > 2007/4/27, Tatiana Lloret Iglesias :\n> > > Hi all!\n> > >\n> > > how can I create a regular expression to find a software version pattern\n> > in\n> > > a file (e.g.  1.2.0) and return the last number , i.e. 0\n> >\n> > Hi,\n> >\n> > What's the form of your version string?\n> > Given the case of $version_str = '1.2.0',you may write:\n> >\n> > my ($lastnum) = $verison_str =~ /.*\\.(\\d+)/;\n> >\n> > Good luck.\n> >\n> > --\n> > Chinese Practical Mod_perl book online\n> > http://home.arcor.de/jeffpang/mod_perl/\n> >\n>\n\n\n-- \nChinese Practical Mod_perl book online\nhttp://home.arcor.de/jeffpang/mod_perl/\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}