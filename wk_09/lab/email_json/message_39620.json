{"category": "ham", "to_address": "Alma <almatirkey@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Passing arguments to subroutine", "body": "On 31 May 2007 01:27:26 -0700, Alma  wrote:\nsnip\n>         &deleteposter_file(@row);\nsnip\n> sub delete_file()\nsnip\n\nThis would seem to be the problem, also where did you learn that you\nshould put & on the front of your subroutine calls?  I am curious\nbecause I keep seeing people do it without understanding what it is\nfor.  Way back, in the dawn of time, it was the way to call\nsubroutines, but it then it changed to just\n\"deleteposter_file(@row);\".\n\nfrom perldoc perlsub\n        To call subroutines:\n\n           NAME(LIST);    # & is optional with parentheses.\n           NAME LIST;     # Parentheses optional if predeclared/imported.\n           &NAME(LIST);   # Circumvent prototypes.\n           &NAME         # Makes current @_ visible to called subroutine.\n\nNote the extra bits that happen when you call it with &?  They can be\nhandy when you expect them and trying to achieve a specific effect,\nbut they can cause problems for the unwary:\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nsub i_have_a_prototype($$$) {\n        print \"I can only be called with three parameters,\",\n                \"they are $_[0], $_[1], and $_[2]\\n\"\n}\n\neval qq{ i_have_a_prototype(1);       } or print \"$@\\n\";\neval qq{ i_have_a_prototype(1, 2);    } or print \"$@\\n\";\ni_have_a_prototype(1, 2, 3);\n&i_have_a_prototype(6); #oops\n\nAlso\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nsub outer {\n        if ($_[0] eq 'none') {\n                &inner\n        } else {\n                &inner(\"arg1\", \"arg2\");\n        }\n}\n\n#this is not treadsafe, but the first call\n#sets up foobar, and all subsequent calls\n#use foobar\nsub inner {\n        if (@_ == 0) {\n                print \"no args, so setup foobar\\n\";\n                return;\n        }\n\n        #if we get here then args were passed\n        #and foobar should setup\n        local $\" = \", \";\n        print \"I was call like this inner(@_)\\n\";\n}\n\nouter('none'); #setup foobar\nouter('use');  #use foobar\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}