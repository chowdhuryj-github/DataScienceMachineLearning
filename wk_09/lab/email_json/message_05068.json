{"category": "ham", "to_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "from_address": "Uri Guttman <uri@stemsystems.com>", "subject": "Re: Should a dirhandle be a filehandle-like iterator?", "body": ">>>>> \"JL\" == Jonathan Lang  writes:\n\n\n  JL> Please.  I've always found the \"opendir ... readdir ... closedir\" set\n  JL> to be clunky.\n\n  JL> Also: why distinguish between \"open\" and \"opendir\"?  If the string is\n  JL> the name of a file, 'open' means \"open the file\"; if it is the name of\n  JL> a directory, 'open' means \"open the directory\".  If it's the name of a\n  JL> pipe, it opens the pipe.  And so on.\n\nmaybe this won't help you but if you did open on a dir in perl5 you can\nread the raw directory data which is pretty useless in most cases. so\nwith open working as opendir on directories, what is the op/method to\nget the next directory entry? that isn't the same as reading a\nline. there won't be any trailing newlines to chomp. marking a location\nis not the same with tell and telldir (one is a byte offset, the other a\ndirectory entry index). and since dirs can reorder their entries\n(especially hash based dirs) the ordering and seek points may move. not\ngonna happen on text files. there are many differences and the only one\nyou seem to see is a linear scan of them (which is just the most common\naccess style).\n\nthe operations you can do on the handles are very different as well. you\ncan't write to a dir. dirs have no random access (you can lookup by a\nname with open but you can't go to the nth entry). and on OS with extra\nstuff like version numbers, then all bets are off.\n\nyes, you can tell the dir is such by doing a stat and then open can dwim\nbut i don't see the overlap as you do. dirs generally are ordered lists\nof strings and have many different underlying formats based on their\nfile systems. mapping that to a text file of lines doesn't work for me.\n\nthis may all be obvious stuff but i think it deserves mentioning. if\ndirs mapped well onto file handles they would have been mapped that way\nlong ago in the OS. in 30+ years that hasn't happened afaik.\n\nuri\n\n-- \nUri Guttman  ------  uri@stemsystems.com  -------- http://www.stemsystems.com\n--Perl Consulting, Stem Development, Systems Architecture, Design and Coding-\nSearch or Offer Perl Jobs  ----------------------------  http://jobs.perl.org\n\n"}