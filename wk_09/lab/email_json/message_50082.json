{"category": "ham", "to_address": "\"Rob Dixon\" <rob.dixon@350.com>, <beginners@perl.org>", "from_address": "\"Octavian Rasnita\" <orasnita@gmail.com>", "subject": "Re: [Perl 5.8.8 on WinXP] Command line usage", "body": "A program in command line that works might be too long under Windows, but if \nit is necessary it could be made sending the list of files to the program \nwith a pipe, like:\n\ndir /b | perl -e \"print ;\"\n\nThis command prints the list of filenames on the console, and the dos \ncommand dir accepts wildcards, then the perl program could do anything with \nthose files, like opening them, modifying....\n\nOctavian\n\n----- Original Message ----- \nFrom: \"Rob Dixon\" \nTo: \nCc: \"John Degen\" \nSent: Monday, June 18, 2007 5:48 PM\nSubject: Re: [Perl 5.8.8 on WinXP] Command line usage\n\n\n> John Degen wrote:\n>>\n>> I'm using Perl 5.8.8 from ActiveState on Windows XP. I'm trying to\n>> accomplish a search and replace in a number of files in the same\n>> directory from the command line (cmd.exe). The problem is that the\n>> command perl -i -e \"s/old/new/\" * fails silently, i.e. no changes\n>> take place. My question is: does * indicate all files in the current\n>> directory (this did work in the Windows version of sed I tried)? I\n>> cannot find this in the docs or using Google. Or am I making another\n>> mistake?\n>\n> Hi John\n>\n> Three problems here that I can see:\n>\n> - Perl won't do an in-place edit successfully on a Windows system. You\n>  have to specify a name for the old file to be renamed to.\n>\n> - It is the command shell on Unix systems that expands the wildcard\n>  into a list of filenames. On Windows your program sees just the single\n>  argument '*'.\n>\n> - You have written no code to process the arguments passed. You program\n>  is simply\n>\n>    s/old/new/\n>\n>  which will just try to replace 'old' with 'new' in an uninitialised $_\n>  variable (try perl -w -i -e \"s/old/new/\" * to see the evidence).\n>\n> I suggest you use something like\n>\n>  perl -w -i.bak -p -e \"s/old/new/\"\n>\n> but I haven't tested this as you already have a directory set up ready to\n> try it on :)\n>\n> HTH,\n>\n> Rob\n>\n> -- \n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n>\n> \n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}