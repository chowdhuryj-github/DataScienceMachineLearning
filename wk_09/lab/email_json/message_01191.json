{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "allison@cvs.develooper.com", "subject": "[svn:parrot-pdd] r18096 - trunk/docs/pdds", "body": "Author: allison\nDate: Mon Apr  9 19:15:56 2007\nNew Revision: 18096\n\nModified:\n   trunk/docs/pdds/pdd15_objects.pod\n\nLog:\n[pdd]: Adding opcodes and methods for 'inspect' to Objects PDD.\n\n\nModified: trunk/docs/pdds/pdd15_objects.pod\n==============================================================================\n--- trunk/docs/pdds/pdd15_objects.pod\t(original)\n+++ trunk/docs/pdds/pdd15_objects.pod\tMon Apr  9 19:15:56 2007\n@@ -511,6 +511,13 @@\n Returns true if the object in question implements the role, class, type,\n or behavior passed in, false otherwise.\n \n+=item inspect\n+\n+  $P1 = $P2.inspect()\n+  $P1 = $P2.inspect($S3)\n+\n+Return introspection information for the class.\n+\n =back\n \n =head2 Object PMC API\n@@ -793,6 +800,13 @@\n include methods added through composing other roles into this role. The\n accessor is read-only.\n \n+=item inspect\n+\n+  $P1 = $P2.inspect()\n+  $P1 = $P2.inspect($S3)\n+\n+Return introspection information for the role.\n+\n =back\n \n =head3 Role Conflict Resolution\n@@ -964,13 +978,24 @@\n it will be absent from all future objects of class $P1, of classes that\n inherit from class $P1, or of classes that compose the role $P1.\n \n-=item addrole Px, Py\n+=item addrole\n \n   addrole $P1, $P2\n \n Add role $P2 to the end of the list of roles of class or role $P1. Adds\n any methods and attributes of $P2 that aren't already in $P1.\n \n+=item inspect\n+\n+  $P1 = inspect $P2\n+  $P1 = inspect $P2, $S3\n+\n+Return introspection information for the PMC.  Without the optional string\n+argument, return a data structure of all information relevant to introspection.\n+With the optional string argument, return a PMC Hash, Array, String, Integer,\n+or Number value with introspection information corresponding to the requested\n+string name.\n+\n =back\n \n =head2 Vtable Overloading\n\n"}