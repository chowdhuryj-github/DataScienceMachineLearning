{"category": "ham", "to_address": "jamie <jamiemcc@blueyonder.co.uk>", "from_address": "Jason Kivlighn <jkivlighn@gmail.com>", "subject": "Re: [cc-devel] Extracting Embedded Licenses", "body": "Whoops, I forgot the intro on this.\n\nThis is my progress thus far with extracting licenses from various\nformats.    Jamie, I'm curious on your thoughts on adding new extractors\n(besides the ones mentioned below, GIF is another I have in mind.  I'm\nnot sure whether or not it's worthwhile, however).  I don't want to be\nadding bloat...\n\nCheers,\nJason\n\nJason Kivlighn wrote:\n> Hi,\n>\n> imagemagick: Uses 'convert filename xmp:-' to output an image's embedded\n> XMP.  This works for at least JPEG and TIFF files.  For JPEGs, however,\n> Imagemagick outputs the namespace and XMP, seperated by \\0.  I'm not\n> sure how I can handle this, without simply assuming that 'convert'\n> returned two null-terminated strings.  Nevertheless, this extracts the\n> XMP from TIFF files.\n>\n> msoffice: Extends the msoffice extractor to also parse the\n> DocumentSummeryInformation infile, which contains user-defined metadata,\n> along with license metadata embedded by the MSOffice Creative Commons Add-in\n>\n> pdf: Extends the pdf extractor to read a PDF's metadata stream and parse\n> it as XMP.  I'm still awaiting poppler extending the glib bindings to\n> allow reading the metadata stream.  Until then, it will simply never\n> find the metadata stream and go on without error.\n>\n> png: Adds a check for the XML:com:adobe:xmp iTXt field, and parses it as\n> XMP.\n>\n> html: Adds a new html parser using libxml2.  Parses the document,\n> checking for RDFa licenses.  It also checks for other basic HTML\n> properties like title and author.\n>\n> There's also several XML formats I'd like to parse for license data,\n> particularly SVG and SMIL.  Would this be do-able, and if so, how should\n> I go about it?  Write new extractors for each format or is this too much\n> overhead?  These could use GMarkupParse, rather than bringing in libxml2\n> like the HTML parser.\n>\n> Cheers,\n> Jason\n>\n>   \n\n_______________________________________________\ncc-devel mailing list\ncc-devel@lists.ibiblio.org\nhttp://lists.ibiblio.org/mailman/listinfo/cc-devel\n\n"}