{"category": "ham", "to_address": "yitzle <yitzle@users.sourceforge.net>", "from_address": "\"Higashi Noboru\" <hnoboru@gmail.com>", "subject": "Re: Reading and matching email ids", "body": "Hi yitzle,\n\nThe reason to escape @ inside a double-quoted string is to prevent\nPerl from treating @example as an array.\n\n#  gives  $id = \"user1.com\"  since @example is empty\n$id = \"user1@example.net\";\n\nTo prevent this, I believe it's better to use single quotes here\n\n$id = 'user1@example.net';\n\nI agree with you that escaping . isn't necessary. However, unless we\ncan be sure that the data we read in are properly formatted, escaping\n. won't hurt.\n\nm/user1@example.net/\n\nwill match\n\nuser1@example.net\nuser1@exampleKnet\nuser1@exampleXnet\n\ncheers\n\nHigashi\n\n\n\nOn 4/20/07, yitzle  wrote:\n> I fail to see the need to escape the @ and .\n> A . needs to be escaped in RegEx to avoid confusion with the 'match\n> any character', but otherwise, I don't think you want the slash there.\n>\n> On 4/20/07, Higashi Noboru  wrote:\n> > try this\n> >\n> > $id = \"user1\\@example\\.net\";\n> >\n> > cheers\n>\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}