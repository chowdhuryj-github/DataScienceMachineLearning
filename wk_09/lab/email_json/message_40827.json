{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 432: make test now works again in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 432\nrevision-id: tridge@samba.org-20070602033136-ojzzrsknaseuwiyq\nparent: tridge@samba.org-20070602031611-a21igkxq7tbng2u7\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-06-02 13:31:36 +1000\nmessage:\n  make test now works again\nmodified:\n  include/ctdb.h                 ctdb.h-20061117234101-o3qt14umlg9en8z0-11\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tests/bench.sh                 bench.sh-20070209014602-vdolpr6esqsa58s7-1\n  tests/ctdb_bench.c             ctdb_bench.c-20061219052637-2liagoglohxb6p7s-1\n  tests/ctdb_fetch.c             ctdb_fetch.c-20070405031748-f7gslozfj3rwh5ie-1\n  tests/ctdbd.sh                 ctdbd.sh-20070411085038-phusiewluwzyqjpc-2\n  tests/fetch.sh                 fetch.sh-20070405031756-lomzqpjyqg3xd1kv-1\n=== modified file 'include/ctdb.h'\n--- a/include/ctdb.h\t2007-05-31 03:50:53 +0000\n+++ b/include/ctdb.h\t2007-06-02 03:31:36 +0000\n@@ -72,6 +72,14 @@\n  */\n #define CTDB_SRVID_RELEASE_IP 0xF300000000000000LL\n \n+/* used on the domain socket, send a pdu to the local daemon */\n+#define CTDB_CURRENT_NODE     0xF0000001\n+/* send a broadcast to all nodes in the cluster, active or not */\n+#define CTDB_BROADCAST_ALL    0xF0000002\n+/* send a broadcast to all nodes in the current vnn map */\n+#define CTDB_BROADCAST_VNNMAP 0xF0000003\n+\n+\n struct event_context;\n \n /*\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-06-02 01:36:42 +0000\n+++ b/include/ctdb_private.h\t2007-06-02 03:31:36 +0000\n@@ -38,13 +38,6 @@\n #define CTDB_NULL_FUNC      0xFF000001\n #define CTDB_FETCH_FUNC     0xFF000002\n \n-/* used on the domain socket, send a pdu to the local daemon */\n-#define CTDB_CURRENT_NODE     0xF0000001\n-/* send a broadcast to all nodes in the cluster, active or not */\n-#define CTDB_BROADCAST_ALL    0xF0000002\n-/* send a broadcast to all nodes in the current vnn map */\n-#define CTDB_BROADCAST_VNNMAP 0xF0000003\n-\n #define CTDB_MAX_REDIRECT_COUNT 3\n #define CTDB_DEFAULT_SEQNUM_FREQUENCY 1\n \n\n=== modified file 'tests/bench.sh'\n--- a/tests/bench.sh\t2007-06-02 03:16:11 +0000\n+++ b/tests/bench.sh\t2007-06-02 03:31:36 +0000\n@@ -20,8 +20,8 @@\n killall -9 ctdb_bench\n echo \"Trying $NUMNODES nodes\"\n for i in `seq 1 $NUMNODES`; do\n-  $VALGRIND bin/ctdb_bench --nlist nodes.txt --socket sock.$i $* &\n+  valgrind -q $VALGRIND bin/ctdb_bench --socket sock.$i -n $NUMNODES $*  &\n done\n \n wait\n-ctdb shutdown --socket sock.1 -n all\n+bin/ctdb shutdown --socket sock.1 -n all\n\n=== modified file 'tests/ctdb_bench.c'\n--- a/tests/ctdb_bench.c\t2007-06-02 03:16:11 +0000\n+++ b/tests/ctdb_bench.c\t2007-06-02 03:31:36 +0000\n@@ -44,8 +44,7 @@\n \n static int timelimit = 10;\n static int num_records = 10;\n-static int num_msgs = 1;\n-static uint32_t num_nodes;\n+static int num_nodes;\n \n enum my_functions {FUNC_INCR=1, FUNC_FETCH=2};\n \n@@ -109,7 +108,6 @@\n \tint vnn=ctdb_get_vnn(ctdb);\n \n \tif (vnn == 0) {\n-\t\tint i;\n \t\t/* two messages are injected into the ring, moving\n \t\t   in opposite directions */\n \t\tint dest, incr;\n@@ -118,15 +116,13 @@\n \t\tdata.dptr = (uint8_t *)&incr\n \t\tdata.dsize = sizeof(incr);\n \n-\t\tfor (i=0;i<num_msgs;i++) {\n-\t\t\tincr = 1;\n-\t\t\tdest = (ctdb_get_vnn(ctdb) + incr) % num_nodes;\n-\t\t\tctdb_send_message(ctdb, dest, 0, data);\n-\n-\t\t\tincr = -1;\n-\t\t\tdest = (ctdb_get_vnn(ctdb) + incr) % num_nodes;\n-\t\t\tctdb_send_message(ctdb, dest, 0, data);\n-\t\t}\n+\t\tincr = 1;\n+\t\tdest = (ctdb_get_vnn(ctdb) + incr) % num_nodes;\n+\t\tctdb_send_message(ctdb, dest, 0, data);\n+\t\t\n+\t\tincr = -1;\n+\t\tdest = (ctdb_get_vnn(ctdb) + incr) % num_nodes;\n+\t\tctdb_send_message(ctdb, dest, 0, data);\n \t}\n \t\n \tstart_timer();\n@@ -168,7 +164,7 @@\n \t\tPOPT_CTDB_CMDLINE\n \t\t{ \"timelimit\", 't', POPT_ARG_INT, &timelimit, 0, \"timelimit\", \"integer\" },\n \t\t{ \"num-records\", 'r', POPT_ARG_INT, &num_records, 0, \"num_records\", \"integer\" },\n-\t\t{ \"num-msgs\", 'n', POPT_ARG_INT, &num_msgs, 0, \"num_msgs\", \"integer\" },\n+\t\t{ NULL, 'n', POPT_ARG_INT, &num_nodes, 0, \"num_nodes\", \"integer\" },\n \t\tPOPT_TABLEEND\n \t};\n \tint opt;\n@@ -220,12 +216,13 @@\n \t\tgoto error;\n \n \tprintf(\"Waiting for cluster\\n\");\n-\twhile (!cluster_ready) {\n+\twhile (1) {\n+\t\tuint32_t recmode=1;\n+\t\tctdb_ctrl_getrecmode(ctdb, timeval_zero(), CTDB_CURRENT_NODE, &recmode);\n+\t\tif (recmode == 0) break;\n \t\tevent_loop_once(ev);\n \t}\n \n-\tctdb_get_connected_nodes(ctdb, timeval_zero(), ctdb, &num_nodes);\n-\n \tbench_ring(ctdb, ev);\n        \n error:\n\n=== modified file 'tests/ctdb_fetch.c'\n--- a/tests/ctdb_fetch.c\t2007-06-02 03:16:11 +0000\n+++ b/tests/ctdb_fetch.c\t2007-06-02 03:31:36 +0000\n@@ -44,8 +44,7 @@\n \n static int timelimit = 10;\n static int num_records = 10;\n-static int num_msgs = 1;\n-static uint32_t num_nodes;\n+static int num_nodes;\n static int msg_count;\n \n #define TESTKEY \"testkey\"\n@@ -181,7 +180,7 @@\n \t\tPOPT_CTDB_CMDLINE\n \t\t{ \"timelimit\", 't', POPT_ARG_INT, &timelimit, 0, \"timelimit\", \"integer\" },\n \t\t{ \"num-records\", 'r', POPT_ARG_INT, &num_records, 0, \"num_records\", \"integer\" },\n-\t\t{ \"num-msgs\", 'n', POPT_ARG_INT, &num_msgs, 0, \"num_msgs\", \"integer\" },\n+\t\t{ NULL, 'n', POPT_ARG_INT, &num_nodes, 0, \"num_nodes\", \"integer\" },\n \t\tPOPT_TABLEEND\n \t};\n \tint opt;\n@@ -232,12 +231,13 @@\n \tctdb_set_message_handler(ctdb, 0, message_handler, &msg_count);\n \n \tprintf(\"Waiting for cluster\\n\");\n-\twhile (!cluster_ready) {\n+\twhile (1) {\n+\t\tuint32_t recmode=1;\n+\t\tctdb_ctrl_getrecmode(ctdb, timeval_zero(), CTDB_CURRENT_NODE, &recmode);\n+\t\tif (recmode == 0) break;\n \t\tevent_loop_once(ev);\n \t}\n \n-\tctdb_get_connected_nodes(ctdb, timeval_zero(), ctdb, &num_nodes);\n-\n \tbench_fetch(ctdb, ev);\n \n \tZERO_STRUCT(call);\n\n=== modified file 'tests/ctdbd.sh'\n--- a/tests/ctdbd.sh\t2007-06-02 01:36:42 +0000\n+++ b/tests/ctdbd.sh\t2007-06-02 03:31:36 +0000\n@@ -48,3 +48,4 @@\n \n echo \"All done\"\n killall -q ctdbd\n+exit 0\n\n=== modified file 'tests/fetch.sh'\n--- a/tests/fetch.sh\t2007-06-02 03:16:11 +0000\n+++ b/tests/fetch.sh\t2007-06-02 03:31:36 +0000\n@@ -18,9 +18,10 @@\n \n killall -9 -q ctdb_fetch\n for i in `seq 1 $NUMNODES`; do\n-  $VALGRIND bin/ctdb_fetch --socket sock.$i $* &\n+  $VALGRIND bin/ctdb_fetch --socket sock.$i -n $NUMNODES $* &\n done\n wait\n \n echo \"Shutting down\"\n bin/ctdb shutdown -n all --socket=sock.1\n+exit 0\n\n"}