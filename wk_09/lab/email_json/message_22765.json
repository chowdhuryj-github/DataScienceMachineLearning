{"category": "ham", "to_address": "chromatic <chromatic@wgz.org>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: [perl #42864] [BUG] Copying a :vtable sub also copies :vtable\n information", "body": "chromatic wrote:\n> \n> Suppose I extend a built-in PMC through PIR code.  If certain vtable methods \n> can share the same implementation, it would be nice to be able to re-use a \n> single implementation through some mechanism other than copy and paste.\n\nYeah, through composition or inheritance. Manually stuffing a code PMC \ninto a class won't give you conflict checking, and won't set up the \nnecessary lookup tables for a method/vtable.\n\nIf you really want to pretend you're working with GLOBs, though, you can \nintrospect into the source class to retrieve the method/vtable code \nobject, and call add_method on the destination class to have it store \nthe retrieved code object.\n\nAllison\n\n"}