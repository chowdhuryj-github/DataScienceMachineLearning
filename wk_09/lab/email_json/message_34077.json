{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r23061 - in\n\tbranches/SAMBA_4_0/source/torture/raw: .", "body": "Author: tridge\nDate: 2007-05-22 04:53:05 +0000 (Tue, 22 May 2007)\nNew Revision: 23061\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23061\n\nLog:\n\nkeep the RAW-BENCH-OPEN test balanced\n\nModified:\n   branches/SAMBA_4_0/source/torture/raw/openbench.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/raw/openbench.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/raw/openbench.c\t2007-05-22 04:13:17 UTC (rev 23060)\n+++ branches/SAMBA_4_0/source/torture/raw/openbench.c\t2007-05-22 04:53:05 UTC (rev 23061)\n@@ -40,17 +40,20 @@\n static char **fnames;\n static int num_connected;\n \n+enum open_stage {OPEN_INITIAL, OPEN_OPEN, OPEN_CLOSE};\n+\n struct benchopen_state {\n \tTALLOC_CTX *mem_ctx;\n \tstruct event_context *ev;\n \tstruct smbcli_state *cli;\n \tstruct smbcli_tree *tree;\n+\tenum open_stage stage;\n \tint client_num;\n+\tint old_fnum;\n \tint fnum;\n \tint file_num;\n \tint count;\n \tint lastcount;\n-\tBOOL waiting_open, waiting_close;\n \tunion smb_open open_parms;\n \tunion smb_close close_parms;\n \tstruct smbcli_request *req_open;\n@@ -65,6 +68,7 @@\n };\n \n static void next_open(struct benchopen_state *state);\n+static void next_operation(struct benchopen_state *state);\n static void reopen_connection(struct event_context *ev, struct timed_event *te, \n \t\t\t      struct timeval t, void *private_data);\n \n@@ -93,7 +97,9 @@\n \tDEBUG(0,(\"reconnect to %s finished (%u connected)\\n\", state->dest_host,\n \t\t num_connected));\n \n-\tnext_open(state);\n+\tstate->stage = OPEN_INITIAL;\n+\tstate->fnum = -1;\n+\tnext_operation(state);\n }\n \n \t\n@@ -127,8 +133,6 @@\n \ttalloc_free(state->tree);\n \tstate->tree = NULL;\n \tstate->fnum = -1;\n-\tstate->waiting_open = False;\n-\tstate->waiting_close = False;\n \n \tctx = smb_composite_connect_send(io, state->mem_ctx, state->ev);\n \tif (ctx == NULL) {\n@@ -165,20 +169,18 @@\n \tstate->req_open = smb_raw_open_send(state->tree, &state->open_parms);\n \tstate->req_open->async.fn = open_completed;\n \tstate->req_open->async.private = state;\n-\tstate->waiting_open = True;\n+}\n \n-\tif (state->fnum == -1) {\n-\t\treturn;\n-\t}\n \n+static void next_close(struct benchopen_state *state)\n+{\n \tstate->close_parms.close.level = RAW_CLOSE_CLOSE;\n-\tstate->close_parms.close.in.file.fnum = state->fnum;\n+\tstate->close_parms.close.in.file.fnum = state->old_fnum;\n \tstate->close_parms.close.in.write_time = 0;\n \n \tstate->req_close = smb_raw_close_send(state->tree, &state->close_parms);\n \tstate->req_close->async.fn = close_completed;\n \tstate->req_close->async.private = state;\n-\tstate->waiting_close = True;\n }\n \n /*\n@@ -190,6 +192,8 @@\n \tTALLOC_CTX *tmp_ctx = talloc_new(state->mem_ctx);\n \tNTSTATUS status;\n \n+\tstate->old_fnum = state->fnum;\n+\n \tstatus = smb_raw_open_recv(req, tmp_ctx, &state->open_parms);\n \n \ttalloc_free(tmp_ctx);\n@@ -225,11 +229,8 @@\n \t}\n \n \tstate->fnum = state->open_parms.ntcreatex.out.file.fnum;\n-\tstate->waiting_open = False;\n \n-\tif (!state->waiting_close) {\n-\t\tnext_open(state);\n-\t}\n+\tnext_operation(state);\n }\t\n \n /*\n@@ -262,14 +263,27 @@\n \t\treturn;\n \t}\n \n-\tstate->waiting_close = False;\n+\tnext_operation(state);\n+}\t\n \n-\tif (!state->waiting_open) {\n+static void next_operation(struct benchopen_state *state)\n+{\n+\tswitch (state->stage) {\n+\tcase OPEN_INITIAL:\n \t\tnext_open(state);\n+\t\tstate->stage = OPEN_OPEN;\n+\t\tbreak;\n+\tcase OPEN_OPEN:\n+\t\tnext_open(state);\n+\t\tstate->stage = OPEN_CLOSE;\n+\t\tbreak;\n+\tcase OPEN_CLOSE:\n+\t\tnext_close(state);\n+\t\tstate->stage = OPEN_OPEN;\n+\t\tbreak;\n \t}\n-}\t\n+}\n \n-\n static void report_rate(struct event_context *ev, struct timed_event *te, \n \t\t\tstruct timeval t, void *private_data)\n {\n@@ -311,6 +325,7 @@\n \t\tstate[i].mem_ctx = talloc_new(state);\n \t\tstate[i].client_num = i;\n \t\tstate[i].ev = ev;\n+\t\tstate[i].stage = OPEN_INITIAL;\n \t\tif (!torture_open_connection_ev(&state[i].cli, i, ev)) {\n \t\t\treturn False;\n \t\t}\n@@ -339,7 +354,7 @@\n \tfor (i=0;i<nprocs;i++) {\n \t\tstate[i].fnum = -1;\n \t\tstate[i].file_num = i;\t\t\n-\t\tnext_open(&state[i]);\n+\t\tnext_operation(&state[i]);\n \t}\n \n \ttv = timeval_current();\t\n\n"}