{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #42412\": ;", "from_address": "\"James Keenan via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #42412] Configure.pl things =no is true ", "body": "On Tue Apr 10 01:45:31 2007, jrisom@gmail.com wrote:\n> Configure should act as though writing --foo=no is false instead of \n> true.  Tonight I tried using --execcapable=no to get around a compile \n> failure, but then realized that it would probably treat \"no\" as a true \n> value.\n> \n\nI discussed this ticket with other participants in the recent hackathon in Toronto.  I am \ninclined to recommend that we not make any changes in Configure.pl's behavior as implied \nby the ticket, for a number of reasons:\n\n1.  Configure.pl is a Perl script.  The truth value of the string 'no' in Perl is true.  Cet. par., in \nPerl if you want to negate something you 'undef' it or you assign it a value of 0 (or the string \n'0').  So the current behavior of the 'execcapable' option is consistent with Perl's customary \nbehavior.\n\n2.  In config/auto/jit.pm, $execcapable is set to 1 for Unix-ish operating systems and \nWindows and set to 0 for other OSes.  But if you want to set a different behavior, it appears \nto me that you can simply pass a value of 1 or 0 to the execcapable option.\n\n3.  If we really thought we'd make extensive use of something equivalent to '--\nexeccapable=no', we could create a '--noexeccapable' option analogous to '--\nnomanicheck' (see lib/Parrot/Configure/Options.pm).\n\n4.  AFAICT from looking at Perl 5's Configure.sh, Perl 5 survives without a 'no' value for any \nof its configuration options.\n\nIn short, YAGNI.  What do others think?\n\nkid51\n\n"}