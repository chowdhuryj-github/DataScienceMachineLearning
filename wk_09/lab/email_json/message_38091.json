{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r23184 - in branches:\n\tSAMBA_3_0/source/lib/tdb/tools SAMBA_3_0_26/source/lib/tdb/tools", "body": "Author: vlendec\nDate: 2007-05-29 10:15:01 +0000 (Tue, 29 May 2007)\nNew Revision: 23184\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23184\n\nLog:\nCheckin for Tridge: Add a speed test to tdbtool\n\nModified:\n   branches/SAMBA_3_0/source/lib/tdb/tools/tdbtool.c\n   branches/SAMBA_3_0_26/source/lib/tdb/tools/tdbtool.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/tdb/tools/tdbtool.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/tdb/tools/tdbtool.c\t2007-05-29 09:30:34 UTC (rev 23183)\n+++ branches/SAMBA_3_0/source/lib/tdb/tools/tdbtool.c\t2007-05-29 10:15:01 UTC (rev 23184)\n@@ -35,6 +35,7 @@\n char *line;\n TDB_DATA iterate_kbuf;\n char cmdline[1024];\n+static int disable_mmap;\n \n enum commands {\n \tCMD_CREATE_TDB,\n@@ -51,6 +52,8 @@\n \tCMD_LIST_HASH_FREE,\n \tCMD_LIST_FREE,\n \tCMD_INFO,\n+\tCMD_MMAP,\n+\tCMD_SPEED,\n \tCMD_FIRST,\n \tCMD_NEXT,\n \tCMD_SYSTEM,\n@@ -78,6 +81,8 @@\n \t{\"list\",\tCMD_LIST_HASH_FREE},\n \t{\"free\",\tCMD_LIST_FREE},\n \t{\"info\",\tCMD_INFO},\n+\t{\"speed\",\tCMD_SPEED},\n+\t{\"mmap\",\tCMD_MMAP},\n \t{\"first\",\tCMD_FIRST},\n \t{\"1\",\t\tCMD_FIRST},\n \t{\"next\",\tCMD_NEXT},\n@@ -88,6 +93,20 @@\n \t{NULL,\t\tCMD_HELP}\n };\n \n+struct timeval tp1,tp2;\n+\n+static void _start_timer(void)\n+{\n+\tgettimeofday(&tp1,NULL);\n+}\n+\n+static double _end_timer(void)\n+{\n+\tgettimeofday(&tp2,NULL);\n+\treturn((tp2.tv_sec - tp1.tv_sec) + \n+\t       (tp2.tv_usec - tp1.tv_usec)*1.0e-6);\n+}\n+\n /* a tdb tool for manipulating a tdb database */\n \n static TDB_CONTEXT *tdb;\n@@ -176,7 +195,7 @@\n static void create_tdb(const char *tdbname)\n {\n \tif (tdb) tdb_close(tdb);\n-\ttdb = tdb_open(tdbname, 0, TDB_CLEAR_IF_FIRST,\n+\ttdb = tdb_open(tdbname, 0, TDB_CLEAR_IF_FIRST | (disable_mmap?TDB_NOMMAP:0),\n \t\t       O_RDWR | O_CREAT | O_TRUNC, 0600);\n \tif (!tdb) {\n \t\tprintf(\"Could not create %s: %s\\n\", tdbname, strerror(errno));\n@@ -186,7 +205,7 @@\n static void open_tdb(const char *tdbname)\n {\n \tif (tdb) tdb_close(tdb);\n-\ttdb = tdb_open(tdbname, 0, 0, O_RDWR, 0600);\n+\ttdb = tdb_open(tdbname, 0, disable_mmap?TDB_NOMMAP:0, O_RDWR, 0600);\n \tif (!tdb) {\n \t\tprintf(\"Could not open %s: %s\\n\", tdbname, strerror(errno));\n \t}\n@@ -366,6 +385,31 @@\n \t\tprintf(\"%d records totalling %d bytes\\n\", count, total_bytes);\n }\n \n+static void speed_tdb(const char *tlimit)\n+{\n+\tunsigned timelimit = tlimit?atoi(tlimit):0;\n+\tdouble t;\n+\tint ops=0;\n+\tif (timelimit == 0) timelimit = 10;\n+\tprintf(\"Testing traverse speed for %u seconds\\n\", timelimit);\n+\t_start_timer();\n+\twhile ((t=_end_timer()) < timelimit) {\n+\t\ttdb_traverse(tdb, traverse_fn, NULL);\n+\t\tprintf(\"%10.3f ops/sec\\r\", (++ops)/t);\n+\t}\n+\tprintf(\"\\n\");\n+}\n+\n+static void toggle_mmap(void)\n+{\n+\tdisable_mmap = !disable_mmap;\n+\tif (disable_mmap) {\n+\t\tprintf(\"mmap is disabled\\n\");\n+\t} else {\n+\t\tprintf(\"mmap is enabled\\n\");\n+\t}\n+}\n+\n static char *tdb_getline(const char *prompt)\n {\n \tstatic char thisline[1024];\n@@ -494,6 +538,12 @@\n \t    case CMD_INFO:\n \t\tinfo_tdb();\n \t\treturn 0;\n+\t    case CMD_SPEED:\n+\t\tspeed_tdb(arg1);\n+\t\treturn 0;\n+\t    case CMD_MMAP:\n+\t\ttoggle_mmap();\n+\t\treturn 0;\n \t    case CMD_FIRST:\n \t\tbIterate = 1;\n \t\tfirst_record(tdb, &iterate_kbuf);\n\nModified: branches/SAMBA_3_0_26/source/lib/tdb/tools/tdbtool.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/lib/tdb/tools/tdbtool.c\t2007-05-29 09:30:34 UTC (rev 23183)\n+++ branches/SAMBA_3_0_26/source/lib/tdb/tools/tdbtool.c\t2007-05-29 10:15:01 UTC (rev 23184)\n@@ -35,6 +35,7 @@\n char *line;\n TDB_DATA iterate_kbuf;\n char cmdline[1024];\n+static int disable_mmap;\n \n enum commands {\n \tCMD_CREATE_TDB,\n@@ -51,6 +52,8 @@\n \tCMD_LIST_HASH_FREE,\n \tCMD_LIST_FREE,\n \tCMD_INFO,\n+\tCMD_MMAP,\n+\tCMD_SPEED,\n \tCMD_FIRST,\n \tCMD_NEXT,\n \tCMD_SYSTEM,\n@@ -78,6 +81,8 @@\n \t{\"list\",\tCMD_LIST_HASH_FREE},\n \t{\"free\",\tCMD_LIST_FREE},\n \t{\"info\",\tCMD_INFO},\n+\t{\"speed\",\tCMD_SPEED},\n+\t{\"mmap\",\tCMD_MMAP},\n \t{\"first\",\tCMD_FIRST},\n \t{\"1\",\t\tCMD_FIRST},\n \t{\"next\",\tCMD_NEXT},\n@@ -88,6 +93,20 @@\n \t{NULL,\t\tCMD_HELP}\n };\n \n+struct timeval tp1,tp2;\n+\n+static void _start_timer(void)\n+{\n+\tgettimeofday(&tp1,NULL);\n+}\n+\n+static double _end_timer(void)\n+{\n+\tgettimeofday(&tp2,NULL);\n+\treturn((tp2.tv_sec - tp1.tv_sec) + \n+\t       (tp2.tv_usec - tp1.tv_usec)*1.0e-6);\n+}\n+\n /* a tdb tool for manipulating a tdb database */\n \n static TDB_CONTEXT *tdb;\n@@ -176,7 +195,7 @@\n static void create_tdb(const char *tdbname)\n {\n \tif (tdb) tdb_close(tdb);\n-\ttdb = tdb_open(tdbname, 0, TDB_CLEAR_IF_FIRST,\n+\ttdb = tdb_open(tdbname, 0, TDB_CLEAR_IF_FIRST | (disable_mmap?TDB_NOMMAP:0),\n \t\t       O_RDWR | O_CREAT | O_TRUNC, 0600);\n \tif (!tdb) {\n \t\tprintf(\"Could not create %s: %s\\n\", tdbname, strerror(errno));\n@@ -186,7 +205,7 @@\n static void open_tdb(const char *tdbname)\n {\n \tif (tdb) tdb_close(tdb);\n-\ttdb = tdb_open(tdbname, 0, 0, O_RDWR, 0600);\n+\ttdb = tdb_open(tdbname, 0, disable_mmap?TDB_NOMMAP:0, O_RDWR, 0600);\n \tif (!tdb) {\n \t\tprintf(\"Could not open %s: %s\\n\", tdbname, strerror(errno));\n \t}\n@@ -366,6 +385,31 @@\n \t\tprintf(\"%d records totalling %d bytes\\n\", count, total_bytes);\n }\n \n+static void speed_tdb(const char *tlimit)\n+{\n+\tunsigned timelimit = tlimit?atoi(tlimit):0;\n+\tdouble t;\n+\tint ops=0;\n+\tif (timelimit == 0) timelimit = 10;\n+\tprintf(\"Testing traverse speed for %u seconds\\n\", timelimit);\n+\t_start_timer();\n+\twhile ((t=_end_timer()) < timelimit) {\n+\t\ttdb_traverse(tdb, traverse_fn, NULL);\n+\t\tprintf(\"%10.3f ops/sec\\r\", (++ops)/t);\n+\t}\n+\tprintf(\"\\n\");\n+}\n+\n+static void toggle_mmap(void)\n+{\n+\tdisable_mmap = !disable_mmap;\n+\tif (disable_mmap) {\n+\t\tprintf(\"mmap is disabled\\n\");\n+\t} else {\n+\t\tprintf(\"mmap is enabled\\n\");\n+\t}\n+}\n+\n static char *tdb_getline(const char *prompt)\n {\n \tstatic char thisline[1024];\n@@ -494,6 +538,12 @@\n \t    case CMD_INFO:\n \t\tinfo_tdb();\n \t\treturn 0;\n+\t    case CMD_SPEED:\n+\t\tspeed_tdb(arg1);\n+\t\treturn 0;\n+\t    case CMD_MMAP:\n+\t\ttoggle_mmap();\n+\t\treturn 0;\n \t    case CMD_FIRST:\n \t\tbIterate = 1;\n \t\tfirst_record(tdb, &iterate_kbuf);\n\n"}