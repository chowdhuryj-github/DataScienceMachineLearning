{"category": "ham", "to_address": "seatec <seatec-astronomy@gmx.de>", "from_address": "\"Christopher R. Hertel\" <crh@ubiqx.mn.org>", "subject": "Re: win2k3 to win98", "body": "Seatec:\n\nStart here:\n\n  http://ubiqx.org/cifs/SMB.html#SMB.8\n\nThat should get you most of the way from the old LM hash through NTLM, LMv2,\nand NTLMv2.\n\nOnce you've covered that, you may want to look at:\n\n  http://www.microsoft.com/technet/technetmag/issues/2006/08/SecurityWatch/\nand\n  http://davenport.sourceforge.net/ntlm.html\nand, of course, Wikipedia.\n\nThe basic problem is that authentication is a moving target.  Microsoft,\nquite reasonably, has to keep introducing stronger authentication methods\nand defaulting to stricter requirements.  Newer systems may, for instance,\nrequire Kerberos authentication.\n\nI hope that helps.\n\nChris -)-----\n\nseatec wrote:\n> Hi everyone,\n> \n> after talking to Kai Blin on irc for half a night and part of the day he\n> pointed me to the list.\n> \n> I wrote a little pseudo-cifs server about 2 years ago, which works fine\n> for smbclient, XP (SP2) and others. It doesn't offer much, but it\n> negotiates the challenge/response authentication scheme\n> \n> The client password gets uppercased, padded with zeros to 14 bytes,\n> split into two halves of 7 bytes, 2 eight byte DES keys are created out\n> of those. These 2 keys are used to encrypt a static string -> 2 LM hashes.\n> Those two 16 byte lm hashes are padded with 5 zeros to 21 bytes, split\n> into 3 chunks, DES key creation, those are used to encrypt the challenge\n> -> 24 byte ntlm hash. Thats the scheme we are talking about.\n> \n> 2 nights ago I noticed it doesnt work for win2k3. Knowing the plaintext\n> password and seeing the challenge on the wire, I can create the hash,\n> and I can see smbclient or XP send exactly what I created. Win2k3 also\n> sends a 24 byte hash, but that one is completely off.\n> \n> Whats even more strange: I setup a win98 in vmware and made win2k3\n> connect to a share. I see the whole session negotiation, challenge/hash\n> exchange and everything, and again the hash \"should be\" different than\n> win2k3 is sending. But not only is the hash I see on the wire different,\n> win98 even accepts that hash and allows the client to log in with it.\n> \n> I don't have the slightest idea what kind of hash win2k3 is sending, and\n> why it works.\n> \n> Last night I compared the pcap of a winxp logging into my little pseudo\n> server with a win2k3 logging in. Both clients send the same flags, the\n> same fields(different account and machine names. but that shouldnt\n> matter), the same everything. As the plaintext password is the same and\n> the challenge for this testcase was static, they should both send the\n> same hash. smbclient sends what xp sends. win2k3 also sends a 24 byte\n> hash, but it's different.\n> \n> If anyone could tell me what kind of hash win2k3 is sending there I'd be\n>  grateful. I can provide pcaps, plaintext password, hash, session\n> key(challenge), ...\n> \n> \n> seatec\n\n-- \n\"Implementing CIFS - the Common Internet FileSystem\" ISBN: 013047116X\nSamba Team -- http://www.samba.org/     -)-----   Christopher R. Hertel\njCIFS Team -- http://jcifs.samba.org/   -)-----   ubiqx development, uninq.\nubiqx Team -- http://www.ubiqx.org/     -)-----   crh@ubiqx.mn.org\nOnLineBook -- http://ubiqx.org/cifs/    -)-----   crh@ubiqx.org\n\n"}