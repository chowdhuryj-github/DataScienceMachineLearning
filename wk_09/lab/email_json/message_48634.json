{"category": "ham", "to_address": "\"Chas Owens\" <chas.owens@gmail.com>", "from_address": "\"Bob McConnell\" <rvm@CBORD.com>", "subject": "RE: Having trouble porting an application to MS-Windows", "body": "> -----Original Message-----\n> From: Chas Owens [mailto:chas.owens@gmail.com] \n> Sent: Friday, June 15, 2007 10:55 AM\n> To: Bob McConnell\n> Cc: beginners@perl.org\n> Subject: Re: Having trouble porting an application to MS-Windows\n> \n> On 6/15/07, Bob McConnell  wrote:\n> snip\n> >                 eval {\n> >                         local $SIG{ALRM} = sub { die \n> \"alarm\\n\" }; # NB:\n> > \\n required\n> >                         alarm $timeout;\n> >                         $nread = sysread PORT, $line, 1;\n> >                         alarm 0;\n> >                 };\n> snip\n> > This transmits the packet, but never comes out of the eval() if it\n> > doesn't receive a character. Is there anything obvious that \n> I missed?\n> snip\n> \n> Hmm, that codes looks right.  Do the two scripts I sent earlier work?\n\n\nYes, both work with the output below. The difference is that both of\nyours interrupt an empty while loop, but my code is in a sysread() call.\nThe SIGINT I use to kill the process can interrupt the system call, but\nwill the alarm? Or have I found a bug in the ActiveState implementation?\n\nBob McConnell\n\nD:\\Perl\\eg\\SIMscript>perl forka.pl\nFri Jun 15 11:16:36 2007\ntimeout\nFri Jun 15 11:16:39 2007\n\nD:\\Perl\\eg\\SIMscript>perl forkb.pl\nparent Fri Jun 15 11:12:57 2007\nparent  waiting 10 seconds\nchild Fri Jun 15 11:12:57 2007\nchild  waiting 1 seconds\ntimeout child\nchild Fri Jun 15 11:12:58 2007\ntimeout parent\nparent Fri Jun 15 11:13:07 2007\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}