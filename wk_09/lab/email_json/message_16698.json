{"category": "ham", "to_address": "\"xpRt.wannabe\" <xprt.wannabe@gmail.com>", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] A coding question involving variable assignments in ifelse()", "body": "On 4/26/2007 12:48 PM, xpRt.wannabe wrote:\n> Dear List,\n> \n> Below is a simple, standard loss model that takes into account the\n> terms of an insurance policy:\n> \n> deductible <- 15\n> coverage.limit <- 75\n> insurance.threshold <- deductible + coverage.limit\n> \n> tmpf <- function() {\n> loss <- rlnorm(rpois(1, 3), 2, 5)\n> sum(ifelse(loss > insurance.threshold, loss - coverage.limit,\n> pmin(loss, deductible)))\n> }\n> net <- replicate(1000000, tmpf())\n> \n> Now, I would like to enhance the model by incorporating the following\n> two probabilities:\n> \n> 1. Probability of claim being accepted by the insurance company, say, 0.8\n> 2. Probability of payout by the insurance company, say, 0.999\n> \n> Could anyone suggest how one might do this?\n\nA general way to generate events with probability p is runif(n) < p.  So \nI'd add\n\nn <- length(loss)\naccept <- runif(n) < 0.8\npayout <- runif(n) < 0.999\n\nand then require \"accept & payout\"  before any payment at all, e.g.\n\nsum(ifelse(accept & payout, [ your old ifelse expression ], 0))\n\nThere are a lot of implicit independence assumptions here; they may not \nbe very realistic.\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}