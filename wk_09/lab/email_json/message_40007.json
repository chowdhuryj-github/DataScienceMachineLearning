{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Darren Duncan <darren@DarrenDuncan.net>", "subject": "Re: [svn:perl6-synopsis] r14407 - doc/trunk/design/syn", "body": "At 5:36 PM -0600 5/31/07, David Green wrote:\n>On 5/29/07, Larry Wall wrote:\n>>In any case, the Huffman coding is probably right because you want\n>>to declare Any parameters more often than you want to talk about any\n>>possible kind of Object, I suspect.\n>\n>Are Objects really Everything?  What about native types like int -- \n>or (thanks to autoboxing) should I really be thinking of them as \n>Objects with built-in optimiser hints?  Not that I have a good \n>example of why you'd want to specify a native-only type; I'm only \n>asking out of pedantic curiosity.\n\nIf that's true, then it would probably reinforce my argument for \nrenaming Object to Universal.\n\nI said before that it is better for type names, or at least the most \nimportant or root part of the name of a type, should describe what it \nrepresents rather than how it is implemented; Object smacks more of \nan implementation detail.\n\nIf it is true that int et al (ignoring autoboxing) is not conceived \nof as an object by users, that reinforces the idea that Universal \nsounds more like \"everything\" than Object does.\n\n-- Darren Duncan\n\n"}