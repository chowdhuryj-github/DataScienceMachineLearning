{"category": "ham", "to_address": "Mark Glines <mark@glines.org>", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [svn:parrot] r19231 - trunk/languages/perl6/src/pmc", "body": "On Friday 22 June 2007 09:30:40 Mark Glines wrote:\n\n> > If we're passing in a string literal, it seems silly to pass in a\n> > length of 0, as we're recalculating a constant on every call.  I\n> > don't see that this macro fixes that.\n\n> It uses sizeof, not strlen.  So, it pushes the calculation to\n> compile-time, so you only have to do it once, and never at runtime.\n\n> Also, using sizeof() will fix some cases that strlen() doesn't handle\n> correctly, specifically, strings containing explicit null characters.\n> src/objects.c has a few examples of that.  string_to_cstring(interp,\n> \"\\0\", 0) will get the size wrong, but string_to_cstring_literal(interp,\n> \"\\0\") will get it right.  So I don't really see a good excuse for not\n> using it everywhere.\n\nYou and Nicholas are both right.  I saw sizeof() but thought strlen().  With \nPatrick's suggestion to use the name string_from_literal() instead, I'm \nsatisfied.\n\n-- c\n\n"}