{"category": "ham", "to_address": "tridge@samba.org", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: posix locking and the brlock database", "body": "On Sat, May 19, 2007 at 07:43:53PM +1000, tridge@samba.org wrote:\n> Volker,\n> \n> I just came across what I think is a generic problem with the Samba3\n> brlock code. \n> \n> Imagine you have \"posix locking = yes\", and a NFS client or local unix\n> app has a file locked for a short time.\n> \n> While the file is locked, a windows client tries to get the lock. It\n> will check the posix lock in brlock.c, and see that it can't get the\n> lock, so it puts in a pending lock entry in the brlock.tdb record for\n> that file.\n> \n> Then the NFS client or local unix application releases the byte range\n> lock. What triggers the retry of the pending lock? We don't get any\n> notification from the kernel, and we don't retry internally.\n> \n> This is only a problem for timed locks with long timeouts of\n> course. They aren't common, but it would be nice to handle them.\n> \n> Perhaps we need a timer which re-scans our pending lock list and\n> retries those that were denied by posix locks at regular\n> intervals. Maybe once every 10 seconds or so.\n\nErrr, we used to do this. I knew about this problem when\nI first wrote the locking code and added such a scanner\n(and it was every 10 seconds).\n\nHas this scan been lost ?\n\nIf so I can now more easily retry it as we know if it's \na lock that was blocked by POSIX not Windows (for which\nwe'll get a message).\n\nJeremy.\n\n"}