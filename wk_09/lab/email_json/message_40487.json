{"category": "ham", "to_address": "\"Nath, Alok (STSD)\" <alok.nath@hp.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Simplest hash initialization with no value", "body": "On 6/1/07, Nath, Alok (STSD)  wrote:\n>  But when decalared this way it gives a warning message :\"Use of\n> uninitialized value in concatenation (.) or string at\"\n>\n> in a print statement which is something like this :\n>\n>                 my %myhash = map { $_ => undef } qw/A B C D E F G H I J\n> K/;\n>                 foreach my $key (%myhash){\n>                         print $myhash{$key}\n>                 }\n\nA hash in list context returns a list of keys _and_ values.  You need\nto use the keys function to get only the keys.  You also probably want\nto sort the keys since they are returned in an unspecified order.\nAlso, if you don't want undef warnings for values that have not been\nset yet then use the empty string instead of undef (this really\ndepends on what you are planning to do).\n\nmy %h  = map { $_ => '' } qw;\n\nfor my $key (sort keys %h) {\n    print \"$key is [$h{$key}]\\n\";\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}