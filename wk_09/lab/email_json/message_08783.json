{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22334 - in\n\tbranches/SAMBA_4_0/source/script/tests: .", "body": "Author: metze\nDate: 2007-04-18 12:49:05 +0000 (Wed, 18 Apr 2007)\nNew Revision: 22334\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22334\n\nLog:\ndon't print the test output if the test passed\n(in build-farm mode)\n\nuse scalar(localtime()) instead of system(\"date\")\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/script/tests/selftest.pl\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/script/tests/selftest.pl\n===================================================================\n--- branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-18 12:17:53 UTC (rev 22333)\n+++ branches/SAMBA_4_0/source/script/tests/selftest.pl\t2007-04-18 12:49:05 UTC (rev 22334)\n@@ -179,31 +179,48 @@\n sub buildfarm_start_msg($)\n {\n \tmy ($state) = @_;\n+\tmy $out = \"\";\n \n-\tprint \"--==--==--==--==--==--==--==--==--==--==--\\n\";\n-\tprint \"Running test $state->{NAME} (level 0 stdout)\\n\";\n-\tprint \"--==--==--==--==--==--==--==--==--==--==--\\n\";\n-\tsystem(\"date\");\n+\t$out .= \"--==--==--==--==--==--==--==--==--==--==--\\n\";\n+\t$out .= \"Running test $state->{NAME} (level 0 stdout)\\n\";\n+\t$out .= \"--==--==--==--==--==--==--==--==--==--==--\\n\";\n+\t$out .= scalar(localtime()).\"\\n\";\n+\t$out .= \"NAME: $state->{NAME}\\n\";\n+\t$out .= \"CMD: $state->{CMD}\\n\";\n+\n+\t$test_output->{$state->{NAME}} = \"\";\n+\n+\tprint $out;\n }\n \n sub buildfarm_output_msg($$)\n {\n \tmy ($state, $output) = @_;\n \n-\tprint $output;\n+\t$test_output->{$state->{NAME}} .= $output;\n }\n \n sub buildfarm_end_msg($$$)\n {\n \tmy ($state, $expected_ret, $ret) = @_;\n+\tmy $out = \"\";\n \n-\tprint \"==========================================\\n\";\n \tif ($ret == $expected_ret) {\n-\t\tprint \"TEST PASSED: $state->{NAME}\\n\";\n+\t\t$out .= \"ALL OK\\n\";\n \t} else {\n-\t\tprint \"TEST FAILED: $state->{NAME} (status $ret)\\n\";\n+\t\t$out .= \"ERROR: $ret\";\n+\t\t$out .= $test_output->{$state->{NAME}};\n \t}\n-\tprint \"==========================================\\n\";\n+\n+\t$out .= \"==========================================\\n\";\n+\tif ($ret == $expected_ret) {\n+\t\t$out .= \"TEST PASSED: $state->{NAME}\\n\";\n+\t} else {\n+\t\t$out .= \"TEST FAILED: $state->{NAME} (status $ret)\\n\";\n+\t}\n+\t$out .= \"==========================================\\n\";\n+\n+\tprint $out;\n }\n \n my $buildfarm_msg_ops = {\n@@ -212,6 +229,8 @@\n \tend_msg\t\t=> \\&buildfarm_end_msg\n };\n \n+sub plain_output_msg($$);\n+\n sub plain_start_msg($)\n {\n \tmy ($state) = @_;\n@@ -223,6 +242,8 @@\n \n \t$test_output->{$state->{NAME}} = \"\" unless $opt_verbose;\n \n+\tplain_output_msg($state, \"CMD: $state->{CMD}\\n\");\n+\n \tprint $out;\n }\n \n@@ -263,7 +284,6 @@\n \t\tSTART\t=> time()\n \t};\n \t$msg_ops->{start_msg}($msg_state);\n-\t$msg_ops->{output_msg}($msg_state, \"COMMAND: $cmd\\n\");\n \topen(RESULT, \"$cmd 2>&1|\");\n \tmy $expected_ret = 1;\n \tmy $open_tests = {};\n\n"}