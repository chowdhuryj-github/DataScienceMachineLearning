{"category": "ham", "to_address": "\"Robert Wilkins\" <irishhacker@gmail.com>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] Tools For Preparing Data For Analysis", "body": "That can be  elegantly handled in R through R's object oriented programming\nby defining a class for the fancy input.  See this post:\n  https://stat.ethz.ch/pipermail/r-help/2007-April/130912.html\nfor a simple example of that style.\n\n\nOn 6/9/07, Robert Wilkins  wrote:\n> Here are some examples of the type of data crunching you might have to do.\n>\n> In response to the requests by Christophe Pallier and Martin Stevens.\n>\n> Before I started developing Vilno, some six years ago, I had been working in\n> the pharmaceuticals for eight years ( it's not easy to show you actual data\n> though, because it's all confidential of course).\n>\n> Lab data can be especially messy, especially if one clinical trial allows\n> the physicians to use different labs. So let's consider lab data.\n>\n> Merge in normal ranges, into the lab data. This has to be done by lab-site\n> and lab testcode(PLT for platelets, etc.), obviously. I've seen cases where\n> you also need to match by sex and age. The sex column in the normal ranges\n> could be: blank, F, M, or B ( B meaning for Both sexes). The age column in\n> the normal ranges could be: blank, or something like \"40 <55\". Even worse,\n> you could have an ageunits column in the normal ranges dataset: usually \"Y\",\n> but if there are children in the clinical trial, you will have \"D\" or \"M\",\n> for Days and Months. If the clinical trial is for adults, all rows with \"D\"\n> or \"M\" should be tossed out at the start. Clearly the statistical programmer\n> has to spend time looking at the data, before writing the program. Remember,\n> all of these details can change any time you move to a new clinical trial.\n>\n> So for the lab data, you have to merge in the patient's date of birth,\n> calculate age, and somehow relate that to the age-group column in the normal\n> ranges dataset.\n>\n> (By the way, in clinical trial data preparation, the SAS datastep is much\n> more useful and convenient, in my opinion, than the SQL SELECT syntax, at\n> least 97% of the time. But in the middle of this program, when you merge the\n> normal ranges into the lab data, you get a better solution with PROC SQL (\n> just the SQL SELECT statement implemented inside SAS) This is because of the\n> trickiness of the age match-up, and the SAS datastep does not do well with\n> many-to-many joins.).\n>\n> Merge in various study drug administration dates into the lab data. Now, for\n> each lab record, calculate treatment period ( or cycle number ), depending\n> on the statistician's specifications and the way the clinical trial is\n> structured.\n>\n> Different clinical sites chose to use different lab providers. So, for\n> example, for Monocytes, you have 10 different units ( essentially 6 units,\n> but spelling inconsistencies as well). The statistician has requested that\n> you use standardized units in some of the listings ( % units, and only one\n> type of non-% unit, for example ). At the same time, lab values need to be\n> converted ( *1.61 , divide by 1000, etc. ). This can be very time consuming\n> no matter what software you use, and, in my experience, when the SAS\n> programmer asks for more clinical information or lab guidebooks, the\n> response is incomplete, so he does a lot of guesswork. SAS programmers do\n> not have expertise in lab science, hence the guesswork.\n>\n> Your program has to accomodate numeric values, \"1.54\" , quasi-numeric values\n> \"<1\" , and non-numeric values \"Trace\".\n>\n> Your data listing is tight for space, so print \"PROLONGED CELL CONT\" as\n> \"PRCC\".\n>\n> Once normal ranges are merged in, figure out which values are out-of-range\n> and high , which are low, and which are within normal range. In the data\n> listing, you may have \"H\" or \"L\" appended to the result value being printed.\n>\n> For each treatment period, you may need a unique lab record selected, in\n> case there are two or three for the same treatment period. The statistician\n> will tell the SAS programmer how. Maybe the averages of the results for that\n> treatment period, maybe that lab record closest to the mid-point of of the\n> treatment period. This isn't for the data listing, but for a summary table.\n>\n> For the differentials ( monocytes, lymphocytes, etc) , merge in the WBC\n> (total white blood cell count) values , to convert values between % units\n> and absolute count units.\n>\n> When printing the values in the data listing, you need \"H\" or \"L\" to the\n> right of the value. But you also need the values to be well lined up ( the\n> decimal place ). This can be stupidly time consuming.\n>\n>\n>\n> AND ON AND ON AND ON .....\n>\n> I think you see why clinical trials statisticians and SAS programmers enjoy\n> lots of job security.\n\nThis could be readily handled in R using object oriented programming.\nYou would specify a class for the strange input,\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}