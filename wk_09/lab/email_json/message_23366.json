{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 253: - fixed a crash bug after client disconnect in\n\tctdb_control in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 253\nrevision-id: tridge@samba.org-20070504223335-oai3wi0jsmp8ywwp\nparent: tridge@samba.org-20070504221154-bzrdobzto7dh90ze\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-05-05 08:33:35 +1000\nmessage:\n  - fixed a crash bug after client disconnect in ctdb_control\n  - added total memory used to ctdb_control status output\nmodified:\n  common/ctdb_control.c          ctdb_control.c-20070426122724-j6gkpiofhbwdin63-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'common/ctdb_control.c'\n--- a/common/ctdb_control.c\t2007-05-04 22:11:54 +0000\n+++ b/common/ctdb_control.c\t2007-05-04 22:33:35 +0000\n@@ -158,6 +158,7 @@\n \tcase CTDB_CONTROL_STATUS: {\n \t\tCHECK_CONTROL_DATA_SIZE(0);\n \t\tctdb->status.controls.status++;\n+\t\tctdb->status.memory_used = talloc_total_size(ctdb);\n \t\toutdata->dptr = (uint8_t *)&ctdb->status;\n \t\toutdata->dsize = sizeof(ctdb->status);\n \t\treturn 0;\n@@ -499,8 +500,11 @@\n \tdata.dptr = &c->data[0];\n \tdata.dsize = c->datalen;\n \n+\t/* make state a child of the packet, so it goes away when the packet\n+\t   is freed. */\n+\ttalloc_steal(hdr, state);\n+\n \tstate->callback(ctdb, c->status, data, state->private_data);\n-\ttalloc_free(state);\n }\n \n static int ctdb_control_destructor(struct ctdb_control_state *state)\n@@ -528,7 +532,9 @@\n \t\treturn -1;\n \t}\n \n-\tstate = talloc(ctdb, struct ctdb_control_state);\n+\t/* the state is made a child of private_data if possible. This means any reply\n+\t   will be discarded if the private_data goes away */\n+\tstate = talloc(private_data?private_data:ctdb, struct ctdb_control_state);\n \tCTDB_NO_MEMORY(ctdb, state);\n \n \tstate->reqid = ctdb_reqid_new(ctdb, state);\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-04 22:11:54 +0000\n+++ b/include/ctdb_private.h\t2007-05-04 22:33:35 +0000\n@@ -175,6 +175,7 @@\n \tuint32_t lockwait_calls;\n \tuint32_t traverse_calls;\n \tuint32_t pending_lockwait_calls;\n+\tuint32_t memory_used;\n \tuint32_t __last_counter; /* hack for control_status_all */\n \tuint32_t max_hop_count;\n \tdouble max_call_latency;\n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-05-04 22:11:54 +0000\n+++ b/tools/ctdb_control.c\t2007-05-04 22:33:35 +0000\n@@ -135,6 +135,7 @@\n \t\tSTATUS_FIELD(lockwait_calls),\n \t\tSTATUS_FIELD(traverse_calls),\n \t\tSTATUS_FIELD(pending_lockwait_calls),\n+\t\tSTATUS_FIELD(memory_used),\n \t\tSTATUS_FIELD(max_hop_count),\n \t};\n \tprintf(\"CTDB version %u\\n\", CTDB_VERSION);\n\n"}