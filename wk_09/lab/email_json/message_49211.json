{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "idra@samba.org", "subject": "svn commit: samba r23525 - in branches: SAMBA_3_0/source/nsswitch\n\tSAMBA_3_0_25/source/nsswitch SAMBA_3_0_26/source/nsswitch", "body": "Author: idra\nDate: 2007-06-16 18:59:02 +0000 (Sat, 16 Jun 2007)\nNew Revision: 23525\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23525\n\nLog:\n\nI believe this patch is ok, got no reply of it being not ok.\nThis closes #4624 for me.\n\n\nModified:\n   branches/SAMBA_3_0/source/nsswitch/idmap_rid.c\n   branches/SAMBA_3_0_25/source/nsswitch/idmap_rid.c\n   branches/SAMBA_3_0_26/source/nsswitch/idmap_rid.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/nsswitch/idmap_rid.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/idmap_rid.c\t2007-06-16 18:54:13 UTC (rev 23524)\n+++ branches/SAMBA_3_0/source/nsswitch/idmap_rid.c\t2007-06-16 18:59:02 UTC (rev 23525)\n@@ -43,6 +43,10 @@\n \tstruct idmap_rid_context *ctx;\n \tchar *config_option = NULL;\n \tconst char *range;\n+\tuid_t low_uid = 0;\n+\tuid_t high_uid = 0;\n+\tgid_t low_gid = 0;\n+\tgid_t high_gid = 0;\n \n \tif ( (ctx = TALLOC_ZERO_P(dom, struct idmap_rid_context)) == NULL ) {\n \t\tDEBUG(0, (\"Out of memory!\\n\"));\n@@ -65,8 +69,25 @@\n \t\tctx->high_id = 0;\n \t}\n \n-\tif ( !ctx->low_id || !ctx->high_id ) {\n-\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing\\n\"));\n+\t/* lets see if the range is defined by the old idmap uid/idmap gid */\n+\tif (!ctx->low_id && !ctx->high_id) {\n+\t\tif (lp_idmap_uid(&low_uid, &high_uid)) {\n+\t\t\tctx->low_id = low_uid;\n+\t\t\tctx->high_id = high_uid;\n+\t\t}\n+\n+\t\tif (lp_idmap_gid(&low_gid, &high_gid)) {\n+\t\t\tif ((ctx->low_id != low_gid) ||\n+\t\t\t    (ctx->high_id != high_uid)) {\n+\t\t\t\tDEBUG(1, (\"ERROR: idmap uid irange must match idmap gid range\\n\"));\n+\t\t\t\tret = NT_STATUS_UNSUCCESSFUL;\n+\t\t\t\tgoto failed;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tif (!ctx->low_id || !ctx->high_id) {\n+\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing or invalid\\n\"));\n \t\tret = NT_STATUS_UNSUCCESSFUL;\n \t\tgoto failed;\n \t}\n@@ -75,6 +96,7 @@\n \tctx->domain_name = talloc_strdup( ctx, dom->name );\n \t\n \tdom->private_data = ctx;\n+\tdom->initialized = True;\n \n \ttalloc_free(config_option);\n \treturn NT_STATUS_OK;\n@@ -150,6 +172,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n@@ -184,6 +214,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/idmap_rid.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/idmap_rid.c\t2007-06-16 18:54:13 UTC (rev 23524)\n+++ branches/SAMBA_3_0_25/source/nsswitch/idmap_rid.c\t2007-06-16 18:59:02 UTC (rev 23525)\n@@ -43,6 +43,10 @@\n \tstruct idmap_rid_context *ctx;\n \tchar *config_option = NULL;\n \tconst char *range;\n+\tuid_t low_uid = 0;\n+\tuid_t high_uid = 0;\n+\tgid_t low_gid = 0;\n+\tgid_t high_gid = 0;\n \n \tif ( (ctx = TALLOC_ZERO_P(dom, struct idmap_rid_context)) == NULL ) {\n \t\tDEBUG(0, (\"Out of memory!\\n\"));\n@@ -65,8 +69,25 @@\n \t\tctx->high_id = 0;\n \t}\n \n-\tif ( !ctx->low_id || !ctx->high_id ) {\n-\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing\\n\"));\n+\t/* lets see if the range is defined by the old idmap uid/idmap gid */\n+\tif (!ctx->low_id && !ctx->high_id) {\n+\t\tif (lp_idmap_uid(&low_uid, &high_uid)) {\n+\t\t\tctx->low_id = low_uid;\n+\t\t\tctx->high_id = high_uid;\n+\t\t}\n+\n+\t\tif (lp_idmap_gid(&low_gid, &high_gid)) {\n+\t\t\tif ((ctx->low_id != low_gid) ||\n+\t\t\t    (ctx->high_id != high_uid)) {\n+\t\t\t\tDEBUG(1, (\"ERROR: idmap uid irange must match idmap gid range\\n\"));\n+\t\t\t\tret = NT_STATUS_UNSUCCESSFUL;\n+\t\t\t\tgoto failed;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tif (!ctx->low_id || !ctx->high_id) {\n+\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing or invalid\\n\"));\n \t\tret = NT_STATUS_UNSUCCESSFUL;\n \t\tgoto failed;\n \t}\n@@ -75,6 +96,7 @@\n \tctx->domain_name = talloc_strdup( ctx, dom->name );\n \t\n \tdom->private_data = ctx;\n+\tdom->initialized = True;\n \n \ttalloc_free(config_option);\n \treturn NT_STATUS_OK;\n@@ -150,6 +172,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n@@ -184,6 +214,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/idmap_rid.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/idmap_rid.c\t2007-06-16 18:54:13 UTC (rev 23524)\n+++ branches/SAMBA_3_0_26/source/nsswitch/idmap_rid.c\t2007-06-16 18:59:02 UTC (rev 23525)\n@@ -43,6 +43,10 @@\n \tstruct idmap_rid_context *ctx;\n \tchar *config_option = NULL;\n \tconst char *range;\n+\tuid_t low_uid = 0;\n+\tuid_t high_uid = 0;\n+\tgid_t low_gid = 0;\n+\tgid_t high_gid = 0;\n \n \tif ( (ctx = TALLOC_ZERO_P(dom, struct idmap_rid_context)) == NULL ) {\n \t\tDEBUG(0, (\"Out of memory!\\n\"));\n@@ -65,8 +69,25 @@\n \t\tctx->high_id = 0;\n \t}\n \n-\tif ( !ctx->low_id || !ctx->high_id ) {\n-\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing\\n\"));\n+\t/* lets see if the range is defined by the old idmap uid/idmap gid */\n+\tif (!ctx->low_id && !ctx->high_id) {\n+\t\tif (lp_idmap_uid(&low_uid, &high_uid)) {\n+\t\t\tctx->low_id = low_uid;\n+\t\t\tctx->high_id = high_uid;\n+\t\t}\n+\n+\t\tif (lp_idmap_gid(&low_gid, &high_gid)) {\n+\t\t\tif ((ctx->low_id != low_gid) ||\n+\t\t\t    (ctx->high_id != high_uid)) {\n+\t\t\t\tDEBUG(1, (\"ERROR: idmap uid irange must match idmap gid range\\n\"));\n+\t\t\t\tret = NT_STATUS_UNSUCCESSFUL;\n+\t\t\t\tgoto failed;\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tif (!ctx->low_id || !ctx->high_id) {\n+\t\tDEBUG(1, (\"ERROR: Invalid configuration, ID range missing or invalid\\n\"));\n \t\tret = NT_STATUS_UNSUCCESSFUL;\n \t\tgoto failed;\n \t}\n@@ -75,6 +96,7 @@\n \tctx->domain_name = talloc_strdup( ctx, dom->name );\n \t\n \tdom->private_data = ctx;\n+\tdom->initialized = True;\n \n \ttalloc_free(config_option);\n \treturn NT_STATUS_OK;\n@@ -150,6 +172,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n@@ -184,6 +214,14 @@\n \tNTSTATUS ret;\n \tint i;\n \n+\t/* Initilization my have been deferred because of an error, retry or fail */\n+\tif ( ! dom->initialized) {\n+\t\tret = idmap_rid_initialize(dom);\n+\t\tif ( ! NT_STATUS_IS_OK(ret)) {\n+\t\t\treturn ret;\n+\t\t}\n+\t}\n+\n \tridctx = talloc_get_type(dom->private_data, struct idmap_rid_context);\n \n \tctx = talloc_new(dom);\n\n"}