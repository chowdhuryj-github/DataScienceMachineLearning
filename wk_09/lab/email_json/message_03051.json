{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 98: merge from ronnie in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 98\nrevision-id: tridge@samba.org-20070412004418-85381cc96b73ebe8\nparent: tridge@samba.org-20070411122143-e0d0192ca901c6f9\nparent: ronniesahlberg@gmail.com-20070411230927-88foctkqh1hqr8ab\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Thu 2007-04-12 10:44:18 +1000\nmessage:\n  merge from ronnie\nmodified:\n  direct/ctdbd.c                 ctdbd.c-20070411085044-dqmhr6mfeexnyt4m-1\n  direct/ctdbd_test.c            ctdbd_test.c-20070411085057-17kgjzfktsh28g99-1\n  tests/ctdb_messaging.c         ctdb_messaging.c-20070411034205-6d6vne56pbih2x1p-1\n    ------------------------------------------------------------\n    merged: ronniesahlberg@gmail.com-20070411230927-88foctkqh1hqr8ab\n    parent: ronniesahlberg@gmail.com-20070411224415-ix25hyi4thd8ydoe\n    committer: Ronnie sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-04-12 09:09:27 +1000\n    message:\n      add an example on how to read a message from the domain socket\n    ------------------------------------------------------------\n    merged: ronniesahlberg@gmail.com-20070411224415-ix25hyi4thd8ydoe\n    parent: ronniesahlberg@gmail.com-20070411222854-5k8oj8f10kqzasro\n    committer: Ronnie sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-04-12 08:44:15 +1000\n    message:\n      do an infinite loop calling event_loop_once() in the ctdbd parent process instead of event_loop_wait()  since the latter will return and thus take down the daemon\n    ------------------------------------------------------------\n    merged: ronniesahlberg@gmail.com-20070411222854-5k8oj8f10kqzasro\n    parent: ronniesahlberg@gmail.com-20070411214928-pizt3e0yiw8ehql2\n    committer: Ronnie sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-04-12 08:28:54 +1000\n    message:\n      add a test message to the messaging test so we can see that the message data is also passed from originator to receiver\n    ------------------------------------------------------------\n    merged: ronniesahlberg@gmail.com-20070411214928-pizt3e0yiw8ehql2\n    parent: ronniesahlberg@gmail.com-20070411103224-hvqzewjcfhpxcgbg\n    parent: tridge@samba.org-20070411122143-e0d0192ca901c6f9\n    committer: Ronnie sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-04-12 07:49:28 +1000\n    message:\n      merge from ridge and vl\n=== modified file 'direct/ctdbd.c'\n--- a/direct/ctdbd.c\t2007-04-11 12:21:43 +0000\n+++ b/direct/ctdbd.c\t2007-04-11 22:44:15 +0000\n@@ -129,8 +129,11 @@\n \t/* start the protocol running */\n \tret = ctdb_start(ctdb);\n \n-\tevent_loop_wait(ev);\n-       \n+/*\tevent_loop_wait(ev);*/\n+\twhile (1) {\n+\t\tevent_loop_once(ev);\n+\t}\n+\n \t/* shut it down */\n \ttalloc_free(ev);\n \treturn 0;\n\n=== modified file 'direct/ctdbd_test.c'\n--- a/direct/ctdbd_test.c\t2007-04-11 10:32:24 +0000\n+++ b/direct/ctdbd_test.c\t2007-04-11 23:09:27 +0000\n@@ -130,8 +130,38 @@\n \tcnt=write(fd, &r, offsetof(struct ctdb_req_message, data));\n \t/* write data */\n \tif(data.dsize){\n-\t    cnt=write(fd, data.dptr, data.dsize);\n-\t}\n+\t    cnt+=write(fd, data.dptr, data.dsize);\n+\t}\n+}\n+\n+void wait_for_a_message(int fd)\n+{\n+\tint cnt, tot;\n+\tuint32_t len;\n+\tstruct ctdb_req_message *msg;\n+\t\n+\t/* read the 4 bytes of length for the pdu */\n+\tcnt=0;\n+\ttot=4;\n+\twhile(cnt!=tot){\n+\t\tint numread;\n+\t\tnumread=read(fd, ((char *)&len)+cnt, tot-cnt);\n+\t\tif(numread>0){\n+\t\t\tcnt+=numread;\n+\t\t}\n+\t}\n+\tmsg=malloc(len);\n+\tmsg->hdr.length=len;\n+\t/* read the rest of the pdu */\n+\ttot=msg->hdr.length;\n+\twhile(cnt!=tot){\n+\t\tint numread;\n+\t\tnumread=read(fd, (char *)msg+cnt, tot-cnt);\n+\t\tif(numread>0){\n+\t\t\tcnt+=numread;\n+\t\t}\n+\t}\n+\tprintf(\"got a message : %s\\n\",&msg->data[0]);\n }\n \n int main(int argc, const char *argv[])\n@@ -172,8 +202,10 @@\n \tsend_a_message(fd, vnn, dstvnn, dstpid, message);\n \n \n-\t/* wait for the message to come back */\n-\n+\t/* wait for the message to come back.\n+\t   i.e. the one we just sent to ourself\n+\t */\n+\twait_for_a_message(fd);\n \n \treturn 0;\n }\n\n=== modified file 'tests/ctdb_messaging.c'\n--- a/tests/ctdb_messaging.c\t2007-04-11 05:23:50 +0000\n+++ b/tests/ctdb_messaging.c\t2007-04-11 22:28:54 +0000\n@@ -36,7 +36,7 @@\n static void message_handler(struct ctdb_context *ctdb, uint32_t srvid, \n \t\t\t\t TDB_DATA data, void *private)\n {\n-\tprintf(\"client vnn:%d received a message to srvid:%d\\n\",ctdb_get_vnn(ctdb),srvid);\n+\tprintf(\"client vnn:%d received a message to srvid:%d [%s]\\n\",ctdb_get_vnn(ctdb),srvid,data.dptr);\n \tfflush(stdout);\n }\n \n@@ -52,6 +52,7 @@\n \tconst char *myaddress = NULL;\n \tint self_connect=0;\n \tint daemon_mode=0;\n+\tchar buf[256];\n \n \tstruct poptOption popt_options[] = {\n \t\tPOPT_AUTOHELP\n@@ -159,18 +160,19 @@\n \n \t/* wait until all nodes are connected (should not be needed\n \t   outside of test code) */\n-\tdata.dptr=NULL;\n-\tdata.dsize=0;\n \tctdb_set_message_handler(ctdb, srvid, message_handler, NULL);\n \n \tctdb_connect_wait(ctdb);\n \n-\tsleep(1);\n+\tsleep(3);\n \n \tprintf(\"sending message from vnn:%d to vnn:%d/srvid:%d\\n\",ctdb_get_vnn(ctdb),ctdb_get_vnn(ctdb), 1-srvid);\n \tfor (i=0;i<ctdb_get_num_nodes(ctdb);i++) {\n \t\tfor (j=0;j<num_clients;j++) {\n \t\t\tprintf(\"sending message to %d:%d\\n\", i, j);\n+\t\t\tsprintf(buf,\"Message from %d to vnn:%d srvid:%d\",ctdb_get_vnn(ctdb),i,j);\n+\t\t\tdata.dptr=buf;\n+\t\t\tdata.dsize=strlen(buf)+1;\n \t\t\tctdb_send_message(ctdb, i, j, data);\n \t\t}\n \t}\n\n"}