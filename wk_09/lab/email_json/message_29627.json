{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22866 - in branches/SAMBA_4_0/source:\n\tlibcli/smb2 smb_server/smb2", "body": "Author: metze\nDate: 2007-05-14 18:02:49 +0000 (Mon, 14 May 2007)\nNew Revision: 22866\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22866\n\nLog:\nhandle incoming chained smb2 requests in our server code to let\nthe windows explorer in longhorn beta3 work.\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/libcli/smb2/request.c\n   branches/SAMBA_4_0/source/libcli/smb2/smb2.h\n   branches/SAMBA_4_0/source/smb_server/smb2/fileio.c\n   branches/SAMBA_4_0/source/smb_server/smb2/negprot.c\n   branches/SAMBA_4_0/source/smb_server/smb2/receive.c\n   branches/SAMBA_4_0/source/smb_server/smb2/smb2_server.h\n   branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/libcli/smb2/request.c\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/smb2/request.c\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/libcli/smb2/request.c\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -80,18 +80,18 @@\n \treq->out.body_size = body_fixed_size;\n \treq->out.dynamic   = (body_dynamic_size ? req->out.body + body_fixed_size : NULL);\n \n-\tSIVAL(req->out.hdr, 0,                SMB2_MAGIC);\n-\tSSVAL(req->out.hdr, SMB2_HDR_LENGTH,  SMB2_HDR_BODY);\n-\tSSVAL(req->out.hdr, SMB2_HDR_PAD1,    0);\n-\tSIVAL(req->out.hdr, SMB2_HDR_STATUS,  0);\n-\tSSVAL(req->out.hdr, SMB2_HDR_OPCODE,  opcode);\n-\tSSVAL(req->out.hdr, SMB2_HDR_UNKNOWN1,0);\n-\tSIVAL(req->out.hdr, SMB2_HDR_FLAGS,   0);\n-\tSIVAL(req->out.hdr, SMB2_HDR_UNKNOWN2,0);\n-\tSBVAL(req->out.hdr, SMB2_HDR_SEQNUM,  req->seqnum);\n-\tSIVAL(req->out.hdr, SMB2_HDR_PID,     0);\n-\tSIVAL(req->out.hdr, SMB2_HDR_TID,     0);\n-\tSBVAL(req->out.hdr, SMB2_HDR_UID,     0);\n+\tSIVAL(req->out.hdr, 0,\t\t\t\tSMB2_MAGIC);\n+\tSSVAL(req->out.hdr, SMB2_HDR_LENGTH,\t\tSMB2_HDR_BODY);\n+\tSSVAL(req->out.hdr, SMB2_HDR_PAD1,\t\t0);\n+\tSIVAL(req->out.hdr, SMB2_HDR_STATUS,\t\t0);\n+\tSSVAL(req->out.hdr, SMB2_HDR_OPCODE,\t\topcode);\n+\tSSVAL(req->out.hdr, SMB2_HDR_UNKNOWN1,\t\t0);\n+\tSIVAL(req->out.hdr, SMB2_HDR_FLAGS,\t\t0);\n+\tSIVAL(req->out.hdr, SMB2_HDR_CHAIN_OFFSET,\t0);\n+\tSBVAL(req->out.hdr, SMB2_HDR_SEQNUM,\t\treq->seqnum);\n+\tSIVAL(req->out.hdr, SMB2_HDR_PID,\t\t0);\n+\tSIVAL(req->out.hdr, SMB2_HDR_TID,\t\t0);\n+\tSBVAL(req->out.hdr, SMB2_HDR_UID,\t\t0);\n \tmemset(req->out.hdr+SMB2_HDR_SIG, 0, 16);\n \n \t/* set the length of the fixed body part and +1 if there's a dynamic part also */\n\nModified: branches/SAMBA_4_0/source/libcli/smb2/smb2.h\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/smb2/smb2.h\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/libcli/smb2/smb2.h\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -164,7 +164,7 @@\n #define SMB2_HDR_OPCODE\t\t0x0c\n #define SMB2_HDR_UNKNOWN1\t0x0e\n #define SMB2_HDR_FLAGS\t\t0x10\n-#define SMB2_HDR_UNKNOWN2\t0x14\n+#define SMB2_HDR_CHAIN_OFFSET\t0x14\n #define SMB2_HDR_SEQNUM\t\t0x18\n #define SMB2_HDR_PID\t\t0x20\n #define SMB2_HDR_TID\t\t0x24\n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/fileio.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/fileio.c\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/fileio.c\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -44,9 +44,13 @@\n \tSBVAL(req->out.body,\t0x30,\tio->smb2.out.size);\n \tSIVAL(req->out.body,\t0x38,\tio->smb2.out.file_attr);\n \tSIVAL(req->out.body,\t0x3C,\tio->smb2.out._pad);\n-\tsmb2srv_push_handle(req->out.body, 0x40,io->smb2.out.file.ntvfs);\n+\tsmb2srv_push_handle(req->out.body, 0x40, io->smb2.out.file.ntvfs);\n \tSMB2SRV_CHECK(smb2_push_o32s32_blob(&req->out, 0x50, io->smb2.out.blob));\n \n+\t/* also setup the chained file handle */\n+\treq->chained_file_handle = req->_chained_file_handle;\n+\tsmb2srv_push_handle(req->chained_file_handle, 0, io->smb2.out.file.ntvfs);\n+\n \tsmb2srv_send_reply(req);\n }\n \n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/negprot.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/negprot.c\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/negprot.c\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -204,18 +204,18 @@\n \treq->in.body_size = body_fixed_size;\n \treq->in.dynamic   = NULL;\n \n-\tSIVAL(req->in.hdr, 0,                SMB2_MAGIC);\n-\tSSVAL(req->in.hdr, SMB2_HDR_LENGTH,  SMB2_HDR_BODY);\n-\tSSVAL(req->in.hdr, SMB2_HDR_PAD1,    0);\n-\tSIVAL(req->in.hdr, SMB2_HDR_STATUS,  0);\n-\tSSVAL(req->in.hdr, SMB2_HDR_OPCODE,  SMB2_OP_NEGPROT);\n-\tSSVAL(req->in.hdr, SMB2_HDR_UNKNOWN1,0);\n-\tSIVAL(req->in.hdr, SMB2_HDR_FLAGS,   0);\n-\tSIVAL(req->in.hdr, SMB2_HDR_UNKNOWN2,0);\n-\tSBVAL(req->in.hdr, SMB2_HDR_SEQNUM,  0);\n-\tSIVAL(req->in.hdr, SMB2_HDR_PID,     0);\n-\tSIVAL(req->in.hdr, SMB2_HDR_TID,     0);\n-\tSBVAL(req->in.hdr, SMB2_HDR_UID,     0);\n+\tSIVAL(req->in.hdr, 0,\t\t\t\tSMB2_MAGIC);\n+\tSSVAL(req->in.hdr, SMB2_HDR_LENGTH,\t\tSMB2_HDR_BODY);\n+\tSSVAL(req->in.hdr, SMB2_HDR_PAD1,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_STATUS,\t\t0);\n+\tSSVAL(req->in.hdr, SMB2_HDR_OPCODE,\t\tSMB2_OP_NEGPROT);\n+\tSSVAL(req->in.hdr, SMB2_HDR_UNKNOWN1,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_FLAGS,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_CHAIN_OFFSET,\t0);\n+\tSBVAL(req->in.hdr, SMB2_HDR_SEQNUM,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_PID,\t\t0);\n+\tSIVAL(req->in.hdr, SMB2_HDR_TID,\t\t0);\n+\tSBVAL(req->in.hdr, SMB2_HDR_UID,\t\t0);\n \tmemset(req->in.hdr+SMB2_HDR_SIG, 0, 16);\n \n \t/* this seems to be a bug, they use 0x24 but the length is 0x26 */\n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/receive.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/receive.c\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/receive.c\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -91,18 +91,18 @@\n \treq->out.body_size\t= body_fixed_size;\n \treq->out.dynamic\t= (body_dynamic_size ? req->out.body + body_fixed_size : NULL);\n \n-\tSIVAL(req->out.hdr, 0,                SMB2_MAGIC);\n-\tSSVAL(req->out.hdr, SMB2_HDR_LENGTH,  SMB2_HDR_BODY);\n-\tSSVAL(req->out.hdr, SMB2_HDR_PAD1,    0);\n-\tSIVAL(req->out.hdr, SMB2_HDR_STATUS,  NT_STATUS_V(req->status));\n-\tSSVAL(req->out.hdr, SMB2_HDR_OPCODE,  SVAL(req->in.hdr, SMB2_HDR_OPCODE));\n-\tSSVAL(req->out.hdr, SMB2_HDR_UNKNOWN1,0x0001);\n-\tSIVAL(req->out.hdr, SMB2_HDR_FLAGS,   flags);\n-\tSIVAL(req->out.hdr, SMB2_HDR_UNKNOWN2,0);\n-\tSBVAL(req->out.hdr, SMB2_HDR_SEQNUM,  req->seqnum);\n-\tSIVAL(req->out.hdr, SMB2_HDR_PID,     pid);\n-\tSIVAL(req->out.hdr, SMB2_HDR_TID,     tid);\n-\tSBVAL(req->out.hdr, SMB2_HDR_UID,     BVAL(req->in.hdr, SMB2_HDR_UID));\n+\tSIVAL(req->out.hdr, 0,\t\t\t\tSMB2_MAGIC);\n+\tSSVAL(req->out.hdr, SMB2_HDR_LENGTH,\t\tSMB2_HDR_BODY);\n+\tSSVAL(req->out.hdr, SMB2_HDR_PAD1,\t\t0);\n+\tSIVAL(req->out.hdr, SMB2_HDR_STATUS,\t\tNT_STATUS_V(req->status));\n+\tSSVAL(req->out.hdr, SMB2_HDR_OPCODE,\t\tSVAL(req->in.hdr, SMB2_HDR_OPCODE));\n+\tSSVAL(req->out.hdr, SMB2_HDR_UNKNOWN1,\t\t0x0001);\n+\tSIVAL(req->out.hdr, SMB2_HDR_FLAGS,\t\tflags);\n+\tSIVAL(req->out.hdr, SMB2_HDR_CHAIN_OFFSET,\t0);\n+\tSBVAL(req->out.hdr, SMB2_HDR_SEQNUM,\t\treq->seqnum);\n+\tSIVAL(req->out.hdr, SMB2_HDR_PID,\t\tpid);\n+\tSIVAL(req->out.hdr, SMB2_HDR_TID,\t\ttid);\n+\tSBVAL(req->out.hdr, SMB2_HDR_UID,\t\tBVAL(req->in.hdr, SMB2_HDR_UID));\n \tmemset(req->out.hdr+SMB2_HDR_SIG, 0, 16);\n \n \t/* set the length of the fixed body part and +1 if there's a dynamic part also */\n@@ -120,6 +120,85 @@\n \treturn NT_STATUS_OK;\n }\n \n+static NTSTATUS smb2srv_reply(struct smb2srv_request *req);\n+\n+static void smb2srv_chain_reply(struct smb2srv_request *p_req)\n+{\n+\tNTSTATUS status;\n+\tstruct smb2srv_request *req;\n+\tuint32_t chain_offset;\n+\tuint32_t protocol_version;\n+\tuint16_t buffer_code;\n+\tuint32_t dynamic_size;\n+\n+\tchain_offset = p_req->chain_offset;\n+\tp_req->chain_offset = 0;\n+\n+\tif (p_req->in.size < (NBT_HDR_SIZE + chain_offset + SMB2_MIN_SIZE)) {\n+\t\tDEBUG(2,(\"Invalid SMB2 chained packet at offset 0x%X\\n\",\n+\t\t\tchain_offset));\n+\t\tsmbsrv_terminate_connection(p_req->smb_conn, \"Invalid SMB2 chained packet\");\n+\t\treturn;\n+\t}\n+\n+\tprotocol_version = IVAL(p_req->in.buffer, NBT_HDR_SIZE + chain_offset);\n+\tif (protocol_version != SMB2_MAGIC) {\n+\t\tDEBUG(2,(\"Invalid SMB chained packet: protocol prefix: 0x%08X\\n\",\n+\t\t\t protocol_version));\n+\t\tsmbsrv_terminate_connection(p_req->smb_conn, \"NON-SMB2 chained packet\");\n+\t\treturn;\n+\t}\n+\n+\treq = smb2srv_init_request(p_req->smb_conn);\n+\tif (!req) {\n+\t\tsmbsrv_terminate_connection(p_req->smb_conn, \"SMB2 chained packet - no memory\");\n+\t\treturn;\n+\t}\n+\n+\treq->in.buffer\t\t= talloc_steal(req, p_req->in.buffer);\n+\treq->in.size\t\t= p_req->in.size;\n+\treq->request_time\t= p_req->request_time;\n+\treq->in.allocated\t= req->in.size;\n+\n+\treq->in.hdr\t\t= req->in.buffer+ NBT_HDR_SIZE + chain_offset;\n+\treq->in.body\t\t= req->in.hdr\t+ SMB2_HDR_BODY;\n+\treq->in.body_size\t= req->in.size\t- (NBT_HDR_SIZE+ chain_offset + SMB2_HDR_BODY);\n+\treq->in.dynamic \t= NULL;\n+\n+\tbuffer_code\t\t= SVAL(req->in.body, 0);\n+\treq->in.body_fixed\t= (buffer_code & ~1);\n+\tdynamic_size\t\t= req->in.body_size - req->in.body_fixed;\n+\n+\tif (dynamic_size != 0 && (buffer_code & 1)) {\n+\t\treq->in.dynamic = req->in.body + req->in.body_fixed;\n+\t\tif (smb2_oob(&req->in, req->in.dynamic, dynamic_size)) {\n+\t\t\tDEBUG(1,(\"SMB2 chained request invalid dynamic size 0x%x\\n\", \n+\t\t\t\t dynamic_size));\n+\t\t\tsmb2srv_send_error(req, NT_STATUS_INVALID_PARAMETER);\n+\t\t\treturn;\n+\t\t}\n+\t}\n+\n+\tif (p_req->chained_file_handle) {\n+\t\tmemcpy(req->_chained_file_handle,\n+\t\t       p_req->_chained_file_handle,\n+\t\t       sizeof(req->_chained_file_handle));\n+\t\treq->chained_file_handle = req->_chained_file_handle;\n+\t}\n+\n+\t/* \n+\t * TODO: - make sure the length field is 64\n+\t *       - make sure it's a request\n+\t */\n+\n+\tstatus = smb2srv_reply(req);\n+\tif (!NT_STATUS_IS_OK(status)) {\n+\t\tsmbsrv_terminate_connection(req->smb_conn, nt_errstr(status));\n+\t\ttalloc_free(req);\n+\t\treturn;\n+\t}\n+}\n+\n void smb2srv_send_reply(struct smb2srv_request *req)\n {\n \tDATA_BLOB blob;\n@@ -140,6 +219,10 @@\n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tsmbsrv_terminate_connection(req->smb_conn, nt_errstr(status));\n \t}\n+\tif (req->chain_offset) {\n+\t\tsmb2srv_chain_reply(req);\n+\t\treturn;\n+\t}\n \ttalloc_free(req);\n }\n \n@@ -174,10 +257,11 @@\n \tuint32_t tid;\n \tuint64_t uid;\n \n-\topcode\t\t= SVAL(req->in.hdr, SMB2_HDR_OPCODE);\n-\treq->seqnum\t= BVAL(req->in.hdr, SMB2_HDR_SEQNUM);\n-\ttid\t\t= IVAL(req->in.hdr, SMB2_HDR_TID);\n-\tuid\t\t= BVAL(req->in.hdr, SMB2_HDR_UID);\n+\topcode\t\t\t= SVAL(req->in.hdr, SMB2_HDR_OPCODE);\n+\treq->chain_offset\t= IVAL(req->in.hdr, SMB2_HDR_CHAIN_OFFSET);\n+\treq->seqnum\t\t= BVAL(req->in.hdr, SMB2_HDR_SEQNUM);\n+\ttid\t\t\t= IVAL(req->in.hdr, SMB2_HDR_TID);\n+\tuid\t\t\t= BVAL(req->in.hdr, SMB2_HDR_UID);\n \n \treq->session\t= smbsrv_session_find(req->smb_conn, uid, req->request_time);\n \treq->tcon\t= smbsrv_smb2_tcon_find(req->session, tid, req->request_time);\n@@ -311,7 +395,6 @@\n \t}\n \n \tprotocol_version = IVAL(blob.data, NBT_HDR_SIZE);\n-\n \tif (protocol_version != SMB2_MAGIC) {\n \t\tDEBUG(2,(\"Invalid SMB packet: protocol prefix: 0x%08X\\n\",\n \t\t\t protocol_version));\n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/smb2_server.h\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/smb2_server.h\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/smb2_server.h\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -56,6 +56,13 @@\n \t/* the id that can be used to cancel the request */\n \tuint32_t pending_id;\n \n+\t/* the offset to the next SMB2 Header for chained requests */\n+\tuint32_t chain_offset;\n+\n+\t/* chained file handle */\n+\tuint8_t _chained_file_handle[16];\n+\tuint8_t *chained_file_handle;\n+\n \tstruct smb2_request_buffer in;\n \tstruct smb2_request_buffer out;\n };\n\nModified: branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\n===================================================================\n--- branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-14 17:58:28 UTC (rev 22865)\n+++ branches/SAMBA_4_0/source/smb_server/smb2/tcon.c\t2007-05-14 18:02:49 UTC (rev 22866)\n@@ -45,6 +45,17 @@\n \tuint32_t tid;\n \tuint32_t pad;\n \n+\t/*\n+\t * if there're chained requests used the cached handle\n+\t *\n+\t * TODO: check if this also correct when the given handle\n+\t *       isn't all 0xFF.\n+\t */\n+\tif (req->chained_file_handle) {\n+\t\tbase = req->chained_file_handle;\n+\t\toffset = 0;\n+\t}\n+\n \thid = BVAL(base, offset);\n \ttid = IVAL(base, offset + 8);\n \tpad = IVAL(base, offset + 12);\n\n"}