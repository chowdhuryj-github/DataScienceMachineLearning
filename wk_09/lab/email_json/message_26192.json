{"category": "ham", "to_address": "sugar@laptop.org", "from_address": "Dafydd Harries <dafydd.harries@collabora.co.uk>", "subject": "Re: [sugar] [patch][connect-activity] Update to high-level API in\n\tlatest dbus-python", "body": "Ar 08/05/2007 am 12:44, ysgrifennodd Simon McVittie:\n> \"import dbus.glib\" causes side-effects (and is vaguely deprecated for\n> that reason), I'm just making it more explicit here. This should probably\n> be moved to activity.py and gtkui.py though.\n\nAye.\n\n> I believe bits of Sugar also import dbus.glib, causing the same magical\n> side-effects.\n\nJust because Sugar does it doesn't make it right. ;)\n\nBut it's relatively harmless, so I don't really mind where it is.\n\n> > What does this actually do? Does it create a new GLib mainloop? Will it cause\n> > odd things to happen if another DBusGMainLoop loop has already been installed?\n> \n> It uses the global default GLib main loop, and is harmless to do\n> multiple times.\n\nFor future reference: there is no default GLib main loop, only a default main\ncontext.\n\n> > > +logging.basicConfig()\n> > > +_logger = logging.getLogger('connect-activity.client')\n> > \n> > Is this idempotent? The documentation is ambiguous:\n> > \n> >   Does basic configuration for the logging system by creating a StreamHandler\n> >   with a default Formatter and adding it to the root logger. The functions\n> >   debug(), info(), warning(), error() and critical() will call basicConfig()\n> >   automatically if no handlers are defined for the root logger.\n> > \n> > Does this cause side effects if a handler is defined for the root logger\n> > already? (Whatever that means. :P)\n> \n> logging.basicConfig() has no effect if there is already a handler on the\n> root logger, although this call ought to be in gtkui.py really (Sugar\n> already sets up a handler for the root logger).\n\nOk.\n\n-- \nDafydd\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}