{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11918: Run some more tests. in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11918\nrevision-id: jelmer@samba.org-20070418154240-9anrimzbqc2zwbl7\nparent: svn-v2:22338@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Wed 2007-04-18 17:42:40 +0200\nmessage:\n  Run some more tests.\nmodified:\n  source/librpc/idl/wkssvc.idl   svn-v2:6@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2flibrpc%2fidl%2fwkssvc.idl\n  source/samba4-knownfail        svn-v2:19388@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fsamba4%2dknownfail\n  source/samba4-skip             svn-v2:21709@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fsamba4%2dskip\n  source/script/tests/Samba3.pm  svn-v2:21909@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fSamba3.pm\n  source/script/tests/selftest.pl svn-v2:20693@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2fselftest.pl\n  source/script/tests/test_rpc.sh svn-v2:3393@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fscript%2ftests%2ftest_rpc.sh\n  source/torture/rpc/winreg.c    svn-v2:6@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2ftorture%2frpc%2fwinreg.c\n  source/torture/rpc/wkssvc.c    svn-v2:6@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2ftorture%2frpc%2fwkssvc.c\n=== modified file 'source/librpc/idl/wkssvc.idl'\n--- a/source/librpc/idl/wkssvc.idl\t2006-11-06 22:54:49 +0000\n+++ b/source/librpc/idl/wkssvc.idl\t2007-04-18 15:42:40 +0000\n@@ -8,7 +8,8 @@\n   version(1.0),\n   pointer_default(unique),\n   pointer_default_top(unique),\n-  helpstring(\"Workstation Service\")\n+  helpstring(\"Workstation Service\"),\n+  endpoint(\"ncacn_np:[\\\\pipe\\\\wkssvc]\",\"ncacn_ip_tcp:\",\"ncalrpc:\")\n ] interface wkssvc\n {\n \tdeclare [v1_enum] enum srvsvc_PlatformId;\n\n=== modified file 'source/samba4-knownfail'\n--- a/source/samba4-knownfail\t2007-03-05 21:28:55 +0000\n+++ b/source/samba4-knownfail\t2007-04-18 15:42:40 +0000\n@@ -3,3 +3,6 @@\n LOCAL-ICONV/next_codepoint()\n BASE-DELAYWRITE/finfo update on close\n RAW-OPLOCK/OPLOCK\n+RPC-WINREG\n+RPC-WKSSVC.*NetWkstaGetInfo\n+RPC-WKSSVC.*NetWkstaTransportEnum\n\n=== modified file 'source/samba4-skip'\n--- a/source/samba4-skip\t2007-04-12 02:27:25 +0000\n+++ b/source/samba4-skip\t2007-04-18 15:42:40 +0000\n@@ -37,3 +37,9 @@\n ntvfs/cifs RAW-SAMBA3BADPATH\n ntvfs/cifs RAW-SCAN-EAMAX\n ntvfs/cifs RAW-CONTEXT\n+RPC-SVCCTL\n+RPC-DSSYNC\n+RPC-EPMAPPER\n+RPC-INITSHUTDOWN\n+RPC-WINREG\n+RPC-SAMSYNC\n\n=== modified file 'source/script/tests/Samba3.pm'\n--- a/source/script/tests/Samba3.pm\t2007-04-18 14:02:26 +0000\n+++ b/source/script/tests/Samba3.pm\t2007-04-18 15:42:40 +0000\n@@ -115,7 +115,7 @@\n \n \tunlink($env_vars->{SMBD_TEST_LOG});\n \tprint \"STARTING SMBD...\";\n-\tmy $pid = fork();\n+\t$pid = fork();\n \tif ($pid == 0) {\n \t\topen STDOUT, \">$env_vars->{SMBD_TEST_LOG}\";\n \t\topen STDERR, '>&STDOUT';\n\n=== modified file 'source/script/tests/selftest.pl'\n--- a/source/script/tests/selftest.pl\t2007-04-18 14:18:33 +0000\n+++ b/source/script/tests/selftest.pl\t2007-04-18 15:42:40 +0000\n@@ -172,7 +172,10 @@\n {\n \tmy $fullname = shift;\n \n-\treturn 1 if (grep(/^$fullname$/, @skips));\n+\tforeach (@skips) {\n+\t\treturn 1 if ($fullname =~ /$_/);\n+\t}\n+\n \treturn 0;\n }\n \n\n=== modified file 'source/script/tests/test_rpc.sh'\n--- a/source/script/tests/test_rpc.sh\t2007-04-11 11:17:09 +0000\n+++ b/source/script/tests/test_rpc.sh\t2007-04-18 15:42:40 +0000\n@@ -2,9 +2,9 @@\n \n # add tests to this list as they start passing, so we test\n # that they stay passing\n-ncacn_np_tests=\"RPC-SPOOLSS RPC-SRVSVC RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES\"\n-ncalrpc_tests=\"RPC-MGMT RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON\"\n-ncacn_ip_tcp_tests=\"RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES\"\n+ncacn_np_tests=\"RPC-SPOOLSS RPC-SRVSVC RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-INITSHUTDOWN RPC-EVENTLOG RPC-ATSVC RPC-SAMSYNC\"\n+ncalrpc_tests=\"RPC-MGMT RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-EVENTLOG RPC-ATSVC RPC-INITSHUTDOWN\"\n+ncacn_ip_tcp_tests=\"RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-ATSVC RPC-EVENTLOG RPC-DSSYNC\"\n slow_ncacn_np_tests=\"RPC-SAMLOGON RPC-SAMR RPC-SAMR-USERS RPC-SAMR-PASSWORDS RPC-COUNTCALLS\"\n slow_ncalrpc_tests=\"RPC-SAMR RPC-SAMR-PASSWORDS RPC-COUNTCALLS RPC-CRACKNAMES\"\n slow_ncacn_ip_tcp_tests=\"RPC-SAMR RPC-SAMR-PASSWORDS RPC-COUNTCALLS RPC-CRACKNAMES\"\n\n=== modified file 'source/torture/rpc/winreg.c'\n--- a/source/torture/rpc/winreg.c\t2007-03-05 01:50:33 +0000\n+++ b/source/torture/rpc/winreg.c\t2007-04-18 15:42:40 +0000\n@@ -49,7 +49,7 @@\n \t}\n }\n \n-static BOOL test_GetVersion(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_GetVersion(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t    struct policy_handle *handle)\n {\n \tNTSTATUS status;\n@@ -65,18 +65,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"GetVersion failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"GetVersion failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_NotifyChangeKeyValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_NotifyChangeKeyValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t\t\t\t\t\t\t  struct policy_handle *handle)\n {\n \tstruct winreg_NotifyChangeKeyValue r;\n@@ -95,18 +95,18 @@\n \t\n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"NotifyChangeKeyValue failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"NotifyChangeKeyValue failed - %s - not considering\\n\", win_errstr(r.out.result));\n-\t\treturn True;\n+\t\treturn true;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_CreateKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n+static bool test_CreateKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n \t\t\t  struct policy_handle *handle, const char *name, \n \t\t\t   const char *class)\n {\n@@ -130,22 +130,22 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"CreateKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"CreateKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n \n /*\n   createkey testing with a SD\n */\n-static BOOL test_CreateKey_sd(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n+static bool test_CreateKey_sd(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n \t\t\t      struct policy_handle *handle, const char *name, \n \t\t\t      const char *class, struct policy_handle *newhandle)\n {\n@@ -168,7 +168,7 @@\n \t\t\t\t      (ndr_push_flags_fn_t)ndr_push_security_descriptor);\n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"Failed to push security_descriptor ?!\\n\");\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tsecbuf.sd.data = sdblob.data;\n@@ -192,18 +192,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"CreateKey with sd failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"CreateKey with sd failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_GetKeySecurity(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_GetKeySecurity(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t  struct policy_handle *handle)\n {\n \tNTSTATUS status;\n@@ -224,12 +224,12 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"GetKeySecurity failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"GetKeySecurity failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tsdblob.data = r.out.sd->data;\n@@ -239,16 +239,16 @@\n \t\t\t\t      (ndr_pull_flags_fn_t)ndr_pull_security_descriptor);\n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"pull_security_descriptor failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \tif (p->conn->flags & DCERPC_DEBUG_PRINT_OUT) {\n \t\tNDR_PRINT_DEBUG(security_descriptor, &sd);\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_CloseKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_CloseKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t  struct policy_handle *handle)\n {\n \tNTSTATUS status;\n@@ -262,18 +262,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"CloseKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"CloseKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_FlushKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_FlushKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t  struct policy_handle *handle)\n {\n \tNTSTATUS status;\n@@ -287,18 +287,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"FlushKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"FlushKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_OpenKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_OpenKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t struct policy_handle *hive_handle,\n \t\t\t const char *keyname, struct policy_handle *key_handle)\n {\n@@ -317,19 +317,19 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"OpenKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"OpenKey failed - %s\\n\", win_errstr(r.out.result));\n \n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_Cleanup(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_Cleanup(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t struct policy_handle *handle, const char *key)\n {\n \tstruct winreg_DeleteKey r;\n@@ -339,11 +339,11 @@\n \tinit_winreg_String(&r.in.key, key);\n \tdcerpc_winreg_DeleteKey(p, mem_ctx, &r);\n \n-\treturn True;\n+\treturn true;\n }\n \n \n-static BOOL test_DeleteKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_DeleteKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t   struct policy_handle *handle, const char *key)\n {\n \tNTSTATUS status;\n@@ -358,18 +358,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"DeleteKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"DeleteKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_QueryInfoKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n+static bool test_QueryInfoKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n \t\t\t      struct policy_handle *handle, char *class)\n {\n \tNTSTATUS status;\n@@ -391,6 +391,8 @@\n \tr.out.max_valbufsize = &max_valbufsize;\n \tr.out.secdescsize = &secdescsize\n \tr.out.last_changed_time = &last_changed_time;\n+\n+\tr.out.classname = talloc(mem_ctx, struct winreg_String);\n \t\n \tr.in.classname = talloc(mem_ctx, struct winreg_String);\n \tinit_winreg_String(r.in.classname, class);\n@@ -399,21 +401,21 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"QueryInfoKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"QueryInfoKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_key(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_key(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t     struct policy_handle *handle, int depth);\n \n-static BOOL test_EnumKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_EnumKey(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t struct policy_handle *handle, int depth)\n {\n \tstruct winreg_EnumKey r;\n@@ -458,20 +460,20 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"EnumKey failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result) && !W_ERROR_EQUAL(r.out.result, WERR_NO_MORE_ITEMS)) {\n \t\tprintf(\"EnumKey failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_QueryMultipleValues(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, struct policy_handle *handle, const char *valuename)\n+static bool test_QueryMultipleValues(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, struct policy_handle *handle, const char *valuename)\n {\n \tstruct winreg_QueryMultipleValues r;\n \tNTSTATUS status;\n@@ -499,7 +501,7 @@\n \t\n \t\tif(NT_STATUS_IS_ERR(status)) {\n \t\t\tprintf(\"QueryMultipleValues failed - %s\\n\", nt_errstr(status));\n-\t\t\treturn False;\n+\t\t\treturn false;\n \t\t}\n \t\ttalloc_free(r.in.buffer);\n \t\tbufsize += 0x20;\n@@ -507,13 +509,13 @@\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"QueryMultipleValues failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_QueryValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, struct policy_handle *handle, const char *valuename)\n+static bool test_QueryValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, struct policy_handle *handle, const char *valuename)\n {\n \tstruct winreg_QueryValue r;\n \tNTSTATUS status;\n@@ -533,24 +535,24 @@\n \tstatus = dcerpc_winreg_QueryValue(p, mem_ctx, &r);\n \tif(NT_STATUS_IS_ERR(status)) {\n \t\tprintf(\"QueryValue failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"QueryValue failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_EnumValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_EnumValue(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t\t   struct policy_handle *handle, int max_valnamelen, int max_valbufsize)\n {\n \tstruct winreg_EnumValue r;\n \tenum winreg_Type type = 0;\n \tuint32_t size = max_valbufsize, zero = 0;\n-\tBOOL ret = True;\n+\tbool ret = true;\n \tuint8_t buf8;\n \tstruct winreg_StringBuf name;\n \n@@ -572,7 +574,7 @@\n \t\tNTSTATUS status = dcerpc_winreg_EnumValue(p, mem_ctx, &r);\n \t\tif(NT_STATUS_IS_ERR(status)) {\n \t\t\tprintf(\"EnumValue failed - %s\\n\", nt_errstr(status));\n-\t\t\treturn False;\n+\t\t\treturn false;\n \t\t}\n \n \t\tif (W_ERROR_IS_OK(r.out.result)) {\n@@ -585,13 +587,13 @@\n \n \tif(!W_ERROR_EQUAL(r.out.result, WERR_NO_MORE_ITEMS)) {\n \t\tprintf(\"EnumValue failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \treturn ret;\n }\n \n-static BOOL test_InitiateSystemShutdown(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n+static bool test_InitiateSystemShutdown(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n \t\t\tconst char *msg, uint32_t timeout)\n {\n \tstruct winreg_InitiateSystemShutdown r;\n@@ -609,18 +611,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"InitiateSystemShutdown failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"InitiateSystemShutdown failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_InitiateSystemShutdownEx(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n+static bool test_InitiateSystemShutdownEx(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx,\n \t\t\tconst char *msg, uint32_t timeout)\n {\n \tstruct winreg_InitiateSystemShutdownEx r;\n@@ -639,18 +641,18 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"InitiateSystemShutdownEx failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"InitiateSystemShutdownEx failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n-static BOOL test_AbortSystemShutdown(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx)\n+static bool test_AbortSystemShutdown(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx)\n {\n \tstruct winreg_AbortSystemShutdown r;\n \tNTSTATUS status;\n@@ -662,29 +664,28 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\tprintf(\"AbortSystemShutdown failed - %s\\n\", nt_errstr(status));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \tif (!W_ERROR_IS_OK(r.out.result)) {\n \t\tprintf(\"AbortSystemShutdown failed - %s\\n\", win_errstr(r.out.result));\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\treturn True;\n+\treturn true;\n }\n \n #define MAX_DEPTH 2\t\t/* Only go this far down the tree */\n \n-static BOOL test_key(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_key(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t     struct policy_handle *handle, int depth)\n {\n \tif (depth == MAX_DEPTH)\n-\t\treturn True;\n+\t\treturn true;\n \n \tif (!test_QueryInfoKey(p, mem_ctx, handle, NULL)) {\n \t}\n \n-\n \tif (!test_NotifyChangeKeyValue(p, mem_ctx, handle)) {\n \t}\n \t\n@@ -697,19 +698,18 @@\n \tif (!test_EnumValue(p, mem_ctx, handle, 0xFF, 0xFFFF)) {\n \t}\n \n-\n \ttest_CloseKey(p, mem_ctx, handle);\n \n-\treturn True;\n+\treturn true;\n }\n \n typedef NTSTATUS (*winreg_open_fn)(struct dcerpc_pipe *, TALLOC_CTX *, void *);\n \n-static BOOL test_Open(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n+static bool test_Open(struct dcerpc_pipe *p, TALLOC_CTX *mem_ctx, \n \t\t      const char *name, winreg_open_fn open_fn)\n {\n \tstruct policy_handle handle, newhandle;\n-\tBOOL ret = True, created = False, created2 = False, deleted = False;\n+\tbool ret = true, created = false, created2 = false, deleted = false;\n \tstruct winreg_OpenHKLM r;\n \tNTSTATUS status;\n \n@@ -721,7 +721,7 @@\n \t\n \tstatus = open_fn(p, mem_ctx, &r);\n \tif (!NT_STATUS_IS_OK(status)) {\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n \ttest_Cleanup(p, mem_ctx, &handle, TEST_KEY1);\n@@ -731,72 +731,72 @@\n \tif (!test_CreateKey(p, mem_ctx, &handle, TEST_KEY1, NULL)) {\n \t\tprintf(\"CreateKey failed - not considering a failure\\n\");\n \t} else {\n-\t\tcreated = True;\n+\t\tcreated = true;\n \t}\n \n \tif (created && !test_FlushKey(p, mem_ctx, &handle)) {\n \t\tprintf(\"FlushKey failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created && !test_OpenKey(p, mem_ctx, &handle, TEST_KEY1, &newhandle)) {\n \t\tprintf(\"CreateKey failed (OpenKey after Create didn't work)\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created && !test_DeleteKey(p, mem_ctx, &handle, TEST_KEY1)) {\n \t\tprintf(\"DeleteKey failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t} else {\n-\t\tdeleted = True;\n+\t\tdeleted = true;\n \t}\n \n \tif (created && !test_FlushKey(p, mem_ctx, &handle)) {\n \t\tprintf(\"FlushKey failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created && deleted && \n \t    test_OpenKey(p, mem_ctx, &handle, TEST_KEY1, &newhandle)) {\n \t\tprintf(\"DeleteKey failed (OpenKey after Delete didn't work)\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (!test_GetVersion(p, mem_ctx, &handle)) {\n \t\tprintf(\"GetVersion failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created && test_CreateKey_sd(p, mem_ctx, &handle, TEST_KEY2, \n \t\t\t\t\t  NULL, &newhandle)) {\n-\t\tcreated2 = True;\n+\t\tcreated2 = true;\n \t}\n \n \tif (created2 && !test_GetKeySecurity(p, mem_ctx, &newhandle)) {\n \t\tprintf(\"GetKeySecurity failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created2 && !test_CloseKey(p, mem_ctx, &newhandle)) {\n \t\tprintf(\"CloseKey failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \tif (created && !test_DeleteKey(p, mem_ctx, &handle, TEST_KEY2)) {\n \t\tprintf(\"DeleteKey failed\\n\");\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \t/* The HKCR hive has a very large fanout */\n \n \tif (open_fn == (void *)dcerpc_winreg_OpenHKCR) {\n \t\tif(!test_key(p, mem_ctx, &handle, MAX_DEPTH - 1)) {\n-\t\t\tret = False;\n+\t\t\tret = false;\n \t\t}\n \t}\n \n \tif(!test_key(p, mem_ctx, &handle, 0)) {\n-\t\tret = False;\n+\t\tret = false;\n \t}\n \n \ttest_Cleanup(p, mem_ctx, &handle, TEST_KEY_BASE);\n@@ -804,12 +804,12 @@\n \treturn ret;\n }\n \n-BOOL torture_rpc_winreg(struct torture_context *torture)\n+bool torture_rpc_winreg(struct torture_context *torture)\n {\n         NTSTATUS status;\n \tstruct dcerpc_pipe *p;\n \tTALLOC_CTX *mem_ctx;\n-\tBOOL ret = True;\n+\tbool ret = true;\n \tstruct {\n \t\tconst char *name;\n \t\twinreg_open_fn fn;\n@@ -824,10 +824,10 @@\n \n \tif (!NT_STATUS_IS_OK(status)) {\n \t\ttalloc_free(mem_ctx);\n-\t\treturn False;\n+\t\treturn false;\n \t}\n \n-\tif (!torture_setting_bool(torture, \"dangerous\", False)) {\n+\tif (!torture_setting_bool(torture, \"dangerous\", false)) {\n \t\tprintf(\"winreg_InitiateShutdown disabled - enable dangerous tests to use\\n\");\n \t} else {\n \t\tret &= test_InitiateSystemShutdown(p, mem_ctx, \"spottyfood\", 30);\n\n=== modified file 'source/torture/rpc/wkssvc.c'\n--- a/source/torture/rpc/wkssvc.c\t2007-04-12 11:35:00 +0000\n+++ b/source/torture/rpc/wkssvc.c\t2007-04-18 15:42:40 +0000\n@@ -78,8 +78,6 @@\n \treturn true;\n }\n \n-\n-\n struct torture_suite *torture_rpc_wkssvc(void)\n {\n \tstruct torture_suite *suite;\n\n"}