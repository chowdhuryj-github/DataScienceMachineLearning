{"category": "ham", "to_address": "\"nagandla@gmail.com\" <nagandla@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: sorted hash positions", "body": "On 7/2/07, nagandla@gmail.com  wrote:\nsnip\n> wat i need is for ex if i gave 34567 it has to tell the position of\n> the hash 4th position...\n>\n> how can i do that.....\nsnip\n\nGiven what you have said, I would define your problem as\n    Given a list of coins and their current value, let me to query\n    that list for the relative position of one coin to the others.\nIf that is the requirement, then this is how I would about it*.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nmy %coins_by_value = (\n        12345   => 91,\n        987658  => 35.5,\n        wer123  => 99.8,\n        '456hn' => 56.4,\n        34567   => 78.9,\n        '00000' => 99.9,\n        yui345  => 45.4\n);\n\nmy %coins_by_position = build_relative_positions(\\%coins_by_value);\n\nmy $coin     = shift;\nmy $position = $coins_by_position{$coin};\nmy $n        = keys %coins_by_value;\nmy $larger   = $position - 1;\nmy $smaller  = $n - $position;\n\nprint \"$coin is in postion $position with \",\n        \"$larger coins worth more and $smaller\",\n        \" coins worth less.\\n\";\n\nsub build_relative_positions {\n        my $coins_by_value = shift;\n        my $i;\n        return (\n                map  { $_ => ++$i }\n                sort { $coins_by_value->{$b} <=> $coins_by_value->{$a} }\n                keys %$coins_by_value\n        );\n}\n\n\n* well, I would probably really use a database and issue a query like\nselect\n    (select count(*) from coins b where b.value < a.value) as worth_less,\n    (select count(*) from coins c where c.value < a.value) as worth_more\nfrom coins a\nwhere name = ?\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}