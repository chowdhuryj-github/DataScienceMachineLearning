{"category": "ham", "to_address": "aedin@jimmy.harvard.edu, r-help@stat.math.ethz.ch", "from_address": "Stephen Tucker <brown_emu@yahoo.com>", "subject": "Re: [R] apply problem", "body": "?apply says\n\nIf X is not an array but has a dimension attribute, apply attempts to coerce\nit to an array via as.matrix if it is two-dimensional (e.g., data frames). .\n.\n\nIt would probably be easiest with a FOR-LOOP, but you could also try\nsomething like the code below (and insert your operations in #...).\n\nmyfunc <- function(x,classOfX) {\n  x <- as.data.frame(t(x))\n  factvars <- which(classOfX==\"factor\")\n  x[,factvars] <- lapply(x[,factvars],factor)\n  for( i in seq(along=x) ) x[,i] <- as(x[,i],Class=classOfX[i])\n  # ...\n  return(x)\n}\nx <- data.frame(a=as.integer(1:10),b=factor(letters[1:10]),c=runif(10))\nFold <- function(f,x,L) for(e in L) x <- f(x,e)\ny <- Fold(rbind,vector(),apply(x,1,myfunc,rapply(x,class)))\n\n> rapply(x,class)\n        a         b         c \n\"integer\"  \"factor\" \"numeric\" \n> rapply(y,class)\n        a         b         c \n\"integer\"  \"factor\" \"numeric\" \n\n\n\n--- aedin culhane  wrote:\n\n> Dear R-Help\n> I am running apply on a data.frame containing factors and numeric \n> columns.  It appears to convert are columns into as.character? Does it \n> convert data.frame into matrix? Is this expected? I wish it to recognise \n> numerical columns and round numbers.  Can I use another function instead \n> of apply, or should I use a for loop in the case?\n> \n>  > summary(xmat)\n>         A               B             C             D\n>   Min.   :  1.0   414    :  1   Stage 2:  5   Min.   :-0.075369\n>   1st Qu.:113.8   422    :  1   Stage 3:  6   1st Qu.:-0.018102\n>   Median :226.5   426    :  1   Stage 4:441   Median :-0.003033\n>   Mean   :226.5   436    :  1                 Mean   : 0.008007\n>   3rd Qu.:339.2   460    :  1                 3rd Qu.: 0.015499\n>   Max.   :452.0   462    :  1                 Max.   : 0.400578\n>                   (Other):446\n>         E                F                G\n>   Min.   :0.2345   Min.   :0.9808   Min.   :0.01558\n>   1st Qu.:0.2840   1st Qu.:0.9899   1st Qu.:0.02352\n>   Median :0.3265   Median :0.9965   Median :0.02966\n>   Mean   :0.3690   Mean   :1.0079   Mean   :0.03580\n>   3rd Qu.:0.3859   3rd Qu.:1.0129   3rd Qu.:0.03980\n>   Max.   :2.0422   Max.   :1.3742   Max.   :0.20062\n> \n>  > for(i in 1:7) print(class(xmat[,i]))\n> [1] \"integer\"\n> [1] \"factor\"\n> [1] \"factor\"\n> [1] \"numeric\"\n> [1] \"numeric\"\n> [1] \"numeric\"\n> [1] \"numeric\"\n> \n>  > apply(xmat, 2, class)\n>            A           B           C           D           E           F\n> \"character\" \"character\" \"character\" \"character\" \"character\" \"character\"\n>            G\n> \"character\"\n> \n> \n> \n> Thanks for your help\n> Aedin\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide\n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}