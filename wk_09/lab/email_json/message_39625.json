{"category": "ham", "to_address": "\"Sharan Basappa\" <sharan.basappa@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: did I get greedy quantifiers wrong ?", "body": "On 5/31/07, Sharan Basappa  wrote:\n> Thanks Chas ..\n> I was wondering about the first regex str =~ m/m(.*i)(.*pi)/;\n> did not match all the way till mississip. In fact my initial understanding\n> was that the regex would match mississippi leaving nothing for second\n> regex. Can you throw some light on this ..\n>\n> On 5/31/07, Chas Owens  wrote:\n> > On 5/31/07, Sharan Basappa  wrote:\n> > snip\n> > > $str =~ m/m(.*i?)(.*pi)/;\n> > snip\n> >\n> > ? only means non-greedy when following a * or a +.  When it follows a\n> > pattern it means optional.\n\nNope, because then the match will fail.  Greediness will not cause the\nmatch to fail; it only affects how much of the string is matched.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\n$_ = \"abababab\";\n\nprint \"trying /(a.*b)/g\\n\";\nmy $i = 1;\nwhile (/(a.*b)/g) {\n        print \"\\t$i: $1\\n\";\n        $i++;\n}\n\nprint \"trying /(a.*?b)/g\\n\";\n$i = 1;\nwhile (/(a.*?b)/g) {\n        print \"\\t$i: $1\\n\";\n        $i++;\n}\n\nprint \"trying /(a.+b)/g\\n\";\nmy $i = 1;\nwhile (/(a.+b)/g) {\n        print \"\\t$i: $1\\n\";\n        $i++;\n}\n\nprint \"trying /(a.+?b)/g\\n\";\n$i = 1;\nwhile (/(a.+?b)/g) {\n        print \"\\t$i: $1\\n\";\n        $i++;\n}\n\nprints\n\ntrying /(a.*b)/g\n        1: abababab\ntrying /(a.*?b)/g\n        1: ab\n        2: ab\n        3: ab\n        4: ab\ntrying /(a.+b)/g\n        1: abababab\ntrying /(a.+?b)/g\n        1: abab\n        2: abab\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}