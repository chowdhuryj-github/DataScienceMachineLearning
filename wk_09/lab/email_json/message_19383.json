{"category": "ham", "to_address": "Andrew Bartlett <abartlet@samba.org>", "from_address": "\"Stefan (metze) Metzmacher\" <metze@samba.org>", "subject": "Re: Restrictions on invocationID?", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nAndrew Bartlett schrieb:\n> Metze:\n> \n> I'm trying to implement the cn=configuration container against LDAP.\n> Currently, it doesn't work because we fix the invocationID *and*\n> objectGUID of the cn=NTDS Settings,cn=$COMPUTER... record to be a\n> 'fixed' random value (ie, not generated by the LDAP backend).  \n> \n> OpenLDAP objects to us setting it's entryUUID values.  My questions is:\n> does the invocationID need to match the objectGUID on that entry?\n\nHi Andrew,\n\nin the \"load schema by default\" patch I changed our way to handle this.\n\nso the objectGUID will always be generated by the backend, and we don't\nneed a special rule for it. And the invocationId will be set by the\ncaller as it's currently.\n\nNormaly the first objectGUID and invocationId match on the first\ninstalled DC in a forest. On all other DC it doesn't match,\nbecause the new DC chooses its invocationID before the NTDS Settings\nobject is created via DsAddEntry() on the other DC, the reply of\nDsAddEntry() returns then the objectGUID of the object.\n\nSo we should just remove all objectGUID: elements from our ldif files.\nWindows also doesn't allow a caller to specify the objectGUID and our\nrepl_meta_data module also rejects it.\n\nmetze\n\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.5 (GNU/Linux)\nComment: Using GnuPG with SUSE - http://enigmail.mozdev.org\n\niD8DBQFGNI6Cm70gjA5TCD8RAtqYAKCadCHJX40wirpVKp8WWhYI8MzbeACeKtj2\nEYb7Mk7HET0mfg/rrkSYY68=\n=/C3+\n-----END PGP SIGNATURE-----\n\n"}