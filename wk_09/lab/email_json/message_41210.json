{"category": "ham", "to_address": "Jeremy Allison <jra@samba.org>", "from_address": "simo <idra@samba.org>", "subject": "Re: svn commit: samba r23290 - in\n\tbranches:\tSAMBA_3_0/source/nsswitch SAMBA_3_0_26/source/nsswitch", "body": "On Sat, 2007-06-02 at 12:02 -0700, Jeremy Allison wrote:\n> On Sat, Jun 02, 2007 at 02:51:46PM -0400, simo wrote:\n> > \n> > You definitively must be careful.\n> > Since I started working with the new talloc I decided to change my\n> > mindset. Now I give for granted that if I have a structure and I have to\n> > allocate stuff in it, then the memory hierarchy follows the structure I\n> > am using.\n> \n> I think you're correct here - this is the only\n> way to go. How do you deal with this when you have complex\n> dependencies between the structures though, such\n> as the winbindd ones ?\n\nFirst answer: Magic ;-)\n\nMore seriously, it really depends.\nSometimes I decide based on the way this stuff need to be set free.\nThat's another good way to group stuff.\nPut all the stuff you know have to be talloc_free()ed at the same time\nhanging on the same context. And in some rare cases you have to change\nthe way the code is done.\n\nI had this problem in ldb, we didn't have the right handle to hang\nmemory on. But one thing was clear, in 99.9% of the cases once a request\nwas finished, I needed to free all the memory used.\n\nWhat I did was to change the request structure and functions beneath so\nthat all memory, ultimately, would be attached to the requests, and when\na request is finished all I have to worry about is to do a\ntalloc_free(request); no matter how deep that structure have been passed\ndown (many modules, the core tdb/ldap/sqlite backend and then back).\nAt that point, I am reasonably sure all the memory that have to be\nreleased is indeed released, no matter what, the hierarchy insures this.\n\nAnd if there are cases where I know something must not be released, well\nthen it is easy to do a talloc_steal/talloc_move of only the\nsub-structure I need and hang it on a longer lived context like the\nldb_context or a module private_data structure or something else.\n\nSimo.\n\n-- \nSimo Sorce\nSamba Team GPL Compliance Officer\nemail: idra@samba.org\nhttp://samba.org\n\n"}