{"category": "ham", "to_address": "Chas Owens <chas.owens@gmail.com>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Re: Hash Key is a Null Value", "body": "I did this and set $Data::Dumper::Useqq = 1; this was the result:\n$VAR1 = {\n          \"\" => 7,\n\t};\n\nNothing there.  Does this mean I just have an empty string with neither a NUL\nvalue or anything else for that matter (physicists would be boggled ;) )?\n\nMathew\nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n\nChas Owens wrote:\n> On 6/14/07, Paul Lalli  wrote:\n> snip\n>> Have you tried examining your hash using Data::Dumper, to see what's\n>> *really* in it?\n>>\n>> use Data::Dumper;\n>> print Dumper(\\%hash);\n> snip\n> \n> You cannot always trust the output of Data::Dumper when it is printed.\n> For instance, if I showed you the following output you would say that\n> the key was an empty string.\n> \n> $VAR1 = {\n>          '' => 3\n>        };\n> \n> The key is actually the NUL character (ascii 0).  The string\n> Data::Dumper produced has the NUL character in it, put the display\n> cannot show it.  To force Data::Dumper to do the right thing for the\n> display you must set $Data::Dumper::Useqq to 1.  It will then use\n> doublequoted strings and escape characters (like \\t, \\n, \\0 etc).\n> \n> perl -MData::Dumper -e '$Data::Dumper::Useqq = 1;%h = (\"\\0\", 3);print\n> Dumper(\\%h);'\n> $VAR1 = {\n>          \"\\0\" => 3\n>        };\n> \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}