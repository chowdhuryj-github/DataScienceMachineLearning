{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 12284: Add trivial ReplyOpenPrinter implementation and test. in\n\tfile:///home/jelmer/bzr.samba4/spoolss/", "body": "At file:///home/jelmer/bzr.samba4/spoolss/\n\n------------------------------------------------------------\nrevno: 12284\nrevision-id: jelmer@samba.org-20070528194403-hw2nim09zkr7rqiq\nparent: jelmer@samba.org-20070528013344-qpv94f1sgdyhcpyi\ncommitter: Jelmer Vernooij \nbranch nick: spoolss\ntimestamp: Mon 2007-05-28 21:44:03 +0200\nmessage:\n  Add trivial ReplyOpenPrinter implementation and test.\nadded:\n  source/torture/rpc/spoolss_notify.c spoolss_notify.c-20070528185809-3u228nfpbktzz5c2-1\nmodified:\n  source/rpc_server/spoolss/dcesrv_spoolss.c 1185@0c0555d6-39d7-0310-84fc-f1cc0bd64818:branches%2FSAMBA_4_0:source%2Frpc_server%2Fspoolss%2Fdcesrv_spoolss.c\n  source/selftest/test_rpc.sh    22575@0c0555d6-39d7-0310-84fc-f1cc0bd64818:branches%2FSAMBA_4_0:source%2Fselftest%2Ftest_rpc.sh\n  source/torture/config.mk       860@0c0555d6-39d7-0310-84fc-f1cc0bd64818:branches%2FSAMBA_4_0:source%2Ftorture%2Fconfig.mk\n  source/torture/rpc/rpc.c       14379@0c0555d6-39d7-0310-84fc-f1cc0bd64818:branches%2FSAMBA_4_0:source%2Ftorture%2Frpc%2Frpc.c\n  source/torture/rpc/spoolss.c   6@0c0555d6-39d7-0310-84fc-f1cc0bd64818:branches%2FSAMBA_4_0:source%2Ftorture%2Frpc%2Fspoolss.c\n=== added file 'source/torture/rpc/spoolss_notify.c'\n--- a/source/torture/rpc/spoolss_notify.c\t1970-01-01 00:00:00 +0000\n+++ b/source/torture/rpc/spoolss_notify.c\t2007-05-28 19:44:03 +0000\n@@ -0,0 +1,69 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+   test suite for spoolss rpc notify operations\n+\n+   Copyright (C) Jelmer Vernooij 2007\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+#include \"includes.h\"\n+#include \"torture/torture.h\"\n+#include \"torture/ui.h\"\n+#include \"torture/rpc/rpc.h\"\n+#include \"librpc/gen_ndr/ndr_spoolss_c.h\"\n+\n+/** Test that makes sure that calling ReplyOpenPrinter()\n+ * on Samba 4 will cause an irpc broadcast call.\n+ */\n+static bool test_ReplyOpenPrinter(struct torture_context *tctx, \n+\t\t\t\t\t\t\t\t  struct dcerpc_pipe *pipe)\n+{\n+\tstruct spoolss_ReplyOpenPrinter r;\n+\tstruct policy_handle h;\n+\n+\tr.in.server_name = \"earth\";\n+\tr.in.printer_local = 2;\n+\tr.in.type = REG_DWORD;\n+\tr.in.unknown1 = 0;\n+\tr.in.unknown2 = 0;\n+\tr.out.handle = &h\n+\n+\t/* FIXME: Listen for IRPC calls */\n+\t\n+\ttorture_assert_ntstatus_ok(tctx, \n+\t\t\tdcerpc_spoolss_ReplyOpenPrinter(pipe, tctx, &r),\n+\t\t\t\"spoolss_ReplyOpenPrinter call failed\");\n+\n+\ttorture_assert_werr_ok(tctx, r.out.result, \"error return code\");\n+\n+\t/* FIXME: Make sure that an irpc call was done */\n+\n+\treturn true;\n+}\n+\n+struct torture_suite *torture_rpc_spoolss_notify(void)\n+{\n+\tstruct torture_suite *suite = torture_suite_create(\n+\t\t\t\t\t\t\ttalloc_autofree_context(), \"SPOOLSS-NOTIFY\");\n+\t\n+\tstruct torture_tcase *tcase = torture_suite_add_rpc_iface_tcase(suite, \n+\t\t\t\t\t\t\t\t\t\t\t\"notify\", &dcerpc_table_spoolss);\n+\n+\ttorture_rpc_tcase_add_test(tcase, \"test_replyopenprinter\", \n+\t\t\t\t\t\t\t   test_ReplyOpenPrinter);\n+\t\n+\treturn suite;\n+}\n\n=== modified file 'source/rpc_server/spoolss/dcesrv_spoolss.c'\n--- a/source/rpc_server/spoolss/dcesrv_spoolss.c\t2007-01-17 14:49:36 +0000\n+++ b/source/rpc_server/spoolss/dcesrv_spoolss.c\t2007-05-28 19:44:03 +0000\n@@ -29,6 +29,10 @@\n #include \"lib/socket/socket.h\"\n #include \"smbd/service_stream.h\"\n \n+enum spoolss_handle {\n+\tSPOOLSS_NOTIFY\n+};\n+\n #define SPOOLSS_BUFFER_UNION(fn,info,level) \\\n \t((info)?ndr_size_##fn(info, level, 0):0)\n \n@@ -1037,7 +1041,16 @@\n static WERROR dcesrv_spoolss_ReplyOpenPrinter(struct dcesrv_call_state *dce_call, TALLOC_CTX *mem_ctx,\n \t\t       struct spoolss_ReplyOpenPrinter *r)\n {\n-\tDCESRV_FAULT(DCERPC_FAULT_OP_RNG_ERROR);\n+\tstruct dcesrv_handle *handle;\n+\n+\thandle = dcesrv_handle_new(dce_call->context, SPOOLSS_NOTIFY);\n+\tW_ERROR_HAVE_NO_MEMORY(handle);\n+\n+\t*r->out.handle = handle->wire_handle;\n+\n+\t/* TODO: Sent received information by irpc */\n+\n+\treturn WERR_OK;\n }\n \n \n\n=== modified file 'source/selftest/test_rpc.sh'\n--- a/source/selftest/test_rpc.sh\t2007-04-29 20:37:59 +0000\n+++ b/source/selftest/test_rpc.sh\t2007-05-28 19:44:03 +0000\n@@ -2,7 +2,7 @@\n \n # add tests to this list as they start passing, so we test\n # that they stay passing\n-ncacn_np_tests=\"RPC-SPOOLSS RPC-SRVSVC RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-INITSHUTDOWN RPC-EVENTLOG RPC-ATSVC RPC-SAMSYNC\"\n+ncacn_np_tests=\"RPC-SPOOLSS RPC-SPOOLSS-NOTIFY RPC-SRVSVC RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-INITSHUTDOWN RPC-EVENTLOG RPC-ATSVC RPC-SAMSYNC\"\n ncalrpc_tests=\"RPC-MGMT RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-EVENTLOG RPC-ATSVC RPC-INITSHUTDOWN\"\n ncacn_ip_tcp_tests=\"RPC-UNIXINFO RPC-SCHANNEL RPC-JOIN RPC-LSA RPC-ECHO RPC-DSSETUP RPC-ALTERCONTEXT RPC-MULTIBIND RPC-NETLOGON RPC-MGMT RPC-HANDLES RPC-WINREG RPC-WKSSVC RPC-SVCCTL RPC-EPMAPPER RPC-ATSVC RPC-EVENTLOG RPC-DSSYNC\"\n slow_ncacn_np_tests=\"RPC-SAMLOGON RPC-SAMR RPC-SAMR-USERS RPC-SAMR-PASSWORDS RPC-COUNTCALLS\"\n\n=== modified file 'source/torture/config.mk'\n--- a/source/torture/config.mk\t2007-04-20 11:28:25 +0000\n+++ b/source/torture/config.mk\t2007-05-28 19:44:03 +0000\n@@ -128,6 +128,7 @@\n \t\trpc/drsuapi_cracknames.o \\\n \t\trpc/dssync.o \\\n \t\trpc/spoolss.o \\\n+\t\trpc/spoolss_notify.o \\\n \t\trpc/unixinfo.o \\\n \t\trpc/samr.o \\\n \t\trpc/wkssvc.o \\\n\n=== modified file 'source/torture/rpc/rpc.c'\n--- a/source/torture/rpc/rpc.c\t2007-05-23 07:44:51 +0000\n+++ b/source/torture/rpc/rpc.c\t2007-05-28 19:44:03 +0000\n@@ -176,6 +176,7 @@\n \ttorture_suite_add_suite(suite, torture_rpc_wkssvc());\n \ttorture_suite_add_suite(suite, torture_rpc_handles());\n \ttorture_suite_add_simple_test(suite, \"SPOOLSS\", torture_rpc_spoolss);\n+\ttorture_suite_add_suite(suite, torture_rpc_spoolss_notify());\n \ttorture_suite_add_simple_test(suite, \"SAMR\", torture_rpc_samr);\n \ttorture_suite_add_simple_test(suite, \"SAMR-USERS\", torture_rpc_samr_users);\n \ttorture_suite_add_simple_test(suite, \"SAMR-PASSWORDS\", torture_rpc_samr_passwords);\n\n=== modified file 'source/torture/rpc/spoolss.c'\n--- a/source/torture/rpc/spoolss.c\t2006-08-24 10:38:06 +0000\n+++ b/source/torture/rpc/spoolss.c\t2007-05-28 19:44:03 +0000\n@@ -2074,8 +2074,8 @@\n \n BOOL torture_rpc_spoolss(struct torture_context *torture)\n {\n-        NTSTATUS status;\n-        struct dcerpc_pipe *p;\n+\tNTSTATUS status;\n+\tstruct dcerpc_pipe *p;\n \tTALLOC_CTX *mem_ctx;\n \tBOOL ret = True;\n \tstruct test_spoolss_context *ctx;\n\n"}