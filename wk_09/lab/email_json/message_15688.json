{"category": "ham", "to_address": "Nikolay Ananiev <ananiev@thegdb.com>", "from_address": "Allison Randal <allison@perl.org>", "subject": "Re: Is Parrot 1.0 too late?", "body": "Nikolay Ananiev wrote:\n> Yes I know about Parrot's great features, but Parrot is still not\n> ready for the mainstream and won't be ready in the next two years (maybe?).\n> That's a lot of time for commercial projects like CLR and JVM and\n> the competition between MS and Sun is quite serious, so I expect\n> the dynamic features in their VMs to progress very fast. I'm also afraid\n> they have the resources to create compiler tools comparable to PGE and TGE\n> (you know that MS can always steal).\n\nThat's a possibility, but what are you afraid of? This is how open \nsource software works. We develop in the open to promote the greater \nadvance of all technology. We don't hoard our advances in the fear that \nothers will use them (that's what proprietary companies do).\n\nOne of the greatest advantages of the open source model is the fact that \nParrot isn't tied to a particular company's profit strategy. This gives \nus a much greater flexibility to take bold risks on new technology. I \nexpect that this will keep Parrot consistently ahead of the CLR and the \nJVM. They have more resources to throw at it, but they also have strong \nmotivations not to radically change their architecture.\n\nBut, there's really no way to be certain how the game will play out \nuntil we play the game. If poker players all threw in their cards as \nsoon as they were dealt, it would make for a pretty boring game.\n\n> Maybe we have to search harder for new ways to advertise Parrot to other\n> communities and get new developers and supporters to the project.\n\nOn that I completely agree, but as a simple matter of practicality, not \nsome desperate bid for market dominance. If you want to recruit new C \ndevelopers, you go where C developers hang out. (chromatic and I are \nspeaking at a Linux conference this weekend.)\n\n> Currently, Parrot looks too Perlish\n\nOn that I completely disagree. Parrot looks very Perlish because it's \nhighly dynamic and intended to be easy to use (which happen to also be \ngoals of Perl). This is an advantage.\n\n> and is mainly supported by the Perl \n> community.\n\nThat's not really an advantage or disadvantage, it's an accident of \nhistory. And, probably also a sympathy of vision.\n\nAllison\n\n"}