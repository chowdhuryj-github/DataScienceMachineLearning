{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 234: added a builtin fetch function to support samba3 unlocked\n\tfetch in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 234\nrevision-id: tridge@samba.org-20070502051111-kol2q81ec0oz8o1k\nparent: tridge@samba.org-20070502033455-ouk4wh3sa9nmzdjv\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Wed 2007-05-02 15:11:11 +1000\nmessage:\n  added a builtin fetch function to support samba3 unlocked fetch\nmodified:\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n  include/ctdb.h                 ctdb.h-20061117234101-o3qt14umlg9en8z0-11\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-05-01 03:25:02 +0000\n+++ b/common/ctdb_ltdb.c\t2007-05-02 05:11:11 +0000\n@@ -50,6 +50,15 @@\n \treturn 0;\n }\n \n+/*\n+  this is a plain fetch procedure that all databases support\n+*/\n+static int ctdb_fetch_func(struct ctdb_call_info *call)\n+{\n+\tcall->reply_data = &call->record_data;\n+\treturn 0;\n+}\n+\n \n /*\n   return the lmaster given a key\n@@ -366,6 +375,17 @@\n \t\ttalloc_free(ctdb_db);\n \t\treturn -1;\n \t}\n+\n+\t/* \n+\t   all databases support the \"fetch\" function. we need this\n+\t   for efficient Samba3 ctdb fetch\n+\t*/\n+\tret = ctdb_daemon_set_call(ctdb, ctdb_db->db_id, ctdb_fetch_func, CTDB_FETCH_FUNC);\n+\tif (ret != 0) {\n+\t\tDEBUG(0,(\"Failed to setup fetch function for '%s'\\n\", ctdb_db->db_name));\n+\t\ttalloc_free(ctdb_db);\n+\t\treturn -1;\n+\t}\n \t\n \t/* tell all the other nodes about this database */\n \tctdb_daemon_send_control(ctdb, CTDB_BROADCAST_VNN, 0,\n\n=== modified file 'include/ctdb.h'\n--- a/include/ctdb.h\t2007-05-02 00:53:29 +0000\n+++ b/include/ctdb.h\t2007-05-02 05:11:11 +0000\n@@ -180,25 +180,10 @@\n    Fetch a ctdb record from a remote node\n  . Underneath this will force the\n    dmaster for the record to be moved to the local node. \n-\n */\n struct ctdb_record_handle *ctdb_fetch_lock(struct ctdb_db_context *ctdb_db, TALLOC_CTX *mem_ctx, \n \t\t\t\t\t   TDB_DATA key, TDB_DATA *data);\n \n-\n-/*\n-  do a fetch lock from a client to the local daemon\n-*/\n-#define FETCH_LOCK_SUCCESS\t\t0\n-#define FETCH_LOCK_LOCKFAILED\t\t1\n-#define FETCH_LOCK_FETCHFAILED\t\t2\n-#define FETCH_LOCK_DMASTERFAILED\t3\n-\n-int ctdb_client_fetch_lock(struct ctdb_db_context *ctdb_db, \n-\t\t\t\t\t\t  TALLOC_CTX *mem_ctx, \n-\t\t\t\t\t\t  TDB_DATA key, TDB_DATA *data);\n-\n-\n int ctdb_record_store(struct ctdb_record_handle *h, TDB_DATA data);\n \n int ctdb_register_message_handler(struct ctdb_context *ctdb, \n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-02 01:02:04 +0000\n+++ b/include/ctdb_private.h\t2007-05-02 05:11:11 +0000\n@@ -30,7 +30,8 @@\n #define CTDB_DS_ALIGNMENT 8\n \n \n-#define CTDB_NULL_FUNC     0xF0000001\n+#define CTDB_NULL_FUNC      0xFF000001\n+#define CTDB_FETCH_FUNC     0xFF000002\n \n #define CTDB_CURRENT_NODE  0xF0000001\n #define CTDB_BROADCAST_VNN 0xF0000002\n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-05-02 03:34:55 +0000\n+++ b/tools/ctdb_control.c\t2007-05-02 05:11:11 +0000\n@@ -50,7 +50,8 @@\n \t\t\"  cleardb                 deletes all records in a db\\n\"\n \t\t\"  getrecmode                    get recovery mode\\n\"\n \t\t\"  setrecmode              set recovery mode\\n\"\n-\t\t\"  recover                       recover the cluster\\n\");\n+\t\t\"  recover                       recover the cluster\\n\"\n+\t\t\"  attach                     attach a database\\n\");\n \texit(1);\n }\n \n\n"}