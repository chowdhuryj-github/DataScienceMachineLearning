{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #43481] t/examples/shootout.t (shootout_16.pir) fails on gentoo/x86", "body": "On Wednesday 04 July 2007 15:17:33 Mark Glines wrote:\n\n> It helps, thanks.  Glad to know I can't just blame gentoo.\n\n> After doing the binary search I mentioned earlier and finding that it\n> started breaking in svn r19441, there was some discussion in the IRC\n> channel.  The important bit is:\n>\n> [13:35] <@chromatic> Hm, I don't blame 19441 for the shootout test.\n> [13:35] <@chromatic> I think it just changed the memory characteristics of\n> the program sufficiently to trigger a lurking GC bug.\n>\n>\n> So now I'll try to see if there was a DOD run that freed up something\n> it shouldn't have, or something like that.\n\nI see the segfault now during global destruction:\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread -1212667696 (LWP 25316)]\n0xb7ddb7db in Parrot_dod_sweep (interp=0x804e008, pool=0x806eb60)\n    at src/gc/dod.c:641\n641                             VTABLE_destroy(interp, p);\n(gdb) bt\n#0  0xb7ddb7db in Parrot_dod_sweep (interp=0x804e008, pool=0x806eb60)\n    at src/gc/dod.c:641\n#1  0xb7ddbf37 in Parrot_dod_ms_run (interp=0x804e008, flags=4)\n    at src/gc/dod.c:987\n#2  0xb7ddc097 in Parrot_do_dod_run (interp=0x804e008, flags=4)\n    at src/gc/dod.c:1051\n#3  0xb7d73173 in Parrot_really_destroy (interp=0x804e008, exit_code_unused=0, \n    arg_unused=0x0) at src/inter_create.c:316\n#4  0xb7ddcbe0 in Parrot_exit (interp=0x804e008, status=0) at src/exit.c:78\n#5  0x08048954 in main (argc=1, argv=0xbfa20a48) at src/main.c:65\n\n(gdb) p p->vtable\n$3 = (VTABLE *) 0x0\n(gdb) x p\n0x8218638:      0x00000005\n\nThat looks very suspicious.\n\n-- c\n\n"}