{"category": "ham", "to_address": "bugs-bitbucket@netlabs.develooper.com", "from_address": "Matt Diephouse (via RT) <parrotbug-followup@parrotcode.org>", "subject": "[perl #42864] [BUG] Copying a :vtable sub also copies :vtable information ", "body": "# New Ticket Created by  Matt Diephouse \n# Please include the string:  [perl #42864]\n# in the subject line of all future correspondence about this issue. \n# \n\n\nCopying a subroutine/method that has also been marked as a :vtable  \nfunction also copies over that :vtable information. As a result,  \nit'll act as that :vtable function whether you want it to or not.\n\n   .namespace ['Foo']\n\n   .sub get_string :vtable\n     .return('Foo')\n   .end\n\n   .namespace ['Bar']\n\n   .namespace\n\n   .sub main :main\n       $P0 = newclass 'Foo'\n       $P0 = newclass 'Bar'\n\n       $P0 = get_hll_global ['Foo'], 'get_string'\n       set_hll_global ['Bar'], 'test', $P0\n\n       $P0 = new 'Foo'\n       $S0 = $P0\n       say $S0\n\n       # this shouldn't print \"Foo\", but it does\n       $P0 = new 'Bar'\n       $S0 = $P0\n       say $S0\n   .end\n\n--\nMatt Diephouse\nhttp://matt.diephouse.com\n\n"}