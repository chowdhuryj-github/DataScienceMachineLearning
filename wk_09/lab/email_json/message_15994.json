{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Seanie <seanie@wdcc.org.uk>", "subject": "Re: cat (.sh) in Perl", "body": "yitzle wrote:\n> `cat m.top.html m.mid.html m.arc.html m.bot.html > blah`\n> How can this be done without a system call?\n\nAs a general rule, if your script contains 'system()' anywhere in it, you've \ndone it wrong. This is especially true for simple file operations such as \nthe above, and for anything else CPAN has yet to fail me. I can't remember \nthe last time I was forced to shell out to get something done.\n\n> Here's my first guess:\n> @doc = ();\n> for (qw/m.top.html m.mid.html m.arc.html m.bot.html/) {\n> \topen $FILE,\"<\",\"$root/$_\";\n> \tmy @tmp = <$FILE>;\n> \t@doc = (@doc,@tmp);\n> \tclose $FILE;\n> }\n> open $FILE,\">\",\"blah\";\n> print $FILE $_ foreach(@doc);\n> close $FILE;\n>\n> Is there something I'm missing?\n\nQuite a lot, yes.\n\nAlways use the strict and warnings pragmas, no exceptions, and test to ensure \noperations on files, sockets etc have worked before moving on.\nYou don't need to loop your file contents in, and then loop them back out \nagain separately later; one for loop will suffice for both.\nYour syntax for the open() statements is a bit dodgy too :-)\n\nHere's a fairly verbose chunk of code that ought to do what you want:\n\nuse strict;\nuse warnings;\nopen OUTFILE, \">blah\" or die \"error creating output file\\n\";\nfor my $infile (qw|m.top.html m.mid.html m.arc.html m.bot.html|){\n  die \"$infile not found\" unless -r \"$root/$infile\"; # or use next to skip it\n  open INFILE, \"<$root/$infile\" or die \"error opening input file\\n\";\n  print OUTFILE while ();\n  close INFILE;\n  }\nclose OUTFILE;\n\nKeep in mind that there are plenty of other ways of doing this, some terser \nthan others. You can even do this:\n\nperl -pe m.top.html m.mid.html m.arc.html m.bot.html > blah\n\n....which is Perl doing a very convincing cat impression.\n\n-- \nSeanie@wdcc.org.uk [pgp: 8A8FA6DE] \n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}