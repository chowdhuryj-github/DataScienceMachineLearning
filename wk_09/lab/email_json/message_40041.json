{"category": "ham", "to_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Error:Can't locate object method \"prepare\" via package \"abc\" at xyz.pm", "body": "On 5/31/07, Jonathan Lang  wrote:\nsnip\n> Again, you have a signature problem.  'sub new($)' says that 'new'\n> will take a single scalar as a parameter; as such, @_ will only ever\n> have one value in it: $usr and $pwd will always be set to null.\nsnip\n\nWell, there is a prototype problem, but it isn't that $ will force new\nto only accept one value, but rather that prototypes and OO Perl don't\nmix.  Perl simply ignores prototypes on methods.  Also prototypes are\nbroken*, don't use them.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\npackage foo;\n\nsub new ($) {\n        my $class = shift;\n        return bless { @_ }, $class;\n}\n\npackage main;\n\nmy $foo = foo->new(this => 1, that => 2);\n\nprint \"this $foo->{this} and that $foo->{that}\\n\";\n\n* http://library.n0i.net/programming/perl/articles/fm_prototypes/\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}