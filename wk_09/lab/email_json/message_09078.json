{"category": "ham", "to_address": "yitzle <yitzle@users.sourceforge.net>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: Nested loop", "body": "On 4/18/07, yitzle  wrote:\n\n> I got an array of hashes so I am using a foreach (@arr) loop to access\n> the hashes.\n> How do I go about looping through the hash's keys/values? I was\n> thinking of another foreach, but then the $_ gets a bit screwed up...\n>\n> Do I need to do this ?\n> foreach(@arr) {\n>   %hash = %{$_};\n>   foreach (keys %hash) {\n>     print \"$_ => $hash{$_}\\n\";\n>   }\n> }\n\nThis is a good time to avoid the foreach loop's default control\nvariable. Although $_ is handy for small loops, larger (and nested)\nones should generally name another control variable. By giving a name\nto the control variable, you should be able to access the hash without\ncopying the data to another %hash variable. Perl even has special\nsyntax you can use if the reference is in a scalar variable. It can\neven be a 'my' variable:\n\n  my @arr = (  # just some sample hash references\n    { qw/ fred flintstone barney rubble wilma flintstone betty rubble / },\n    { qw/ 4 ! 2 potato 3 potato 1 potato / },\n    { qw/ 4 gotten 2 cool /, '2 ', 'B' },\n  );\n\n  foreach my $href (@arr) {\n    foreach (sort keys %$href) {\n      print \"$_ => $href->{$_}\\n\";\n    }\n    print \"\\n\";\n  }\n\nHope this helps!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}