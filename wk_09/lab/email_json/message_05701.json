{"category": "ham", "to_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "from_address": "James Keenan <jkeen@verizon.net>", "subject": "Re: Configure.pl:  Question about block calling\n arrot::Configure::runstep()", "body": "\nOn Apr 14, 2007, at 7:18 PM, Patrick R. Michaud wrote:\n\n> On Sat, Apr 14, 2007 at 06:41:19PM -0400, James Keenan wrote:\n>> I am trying to determine the purpose of a certain block of code in\n>> Configure.pl.  In the most recent version in trunk, we find:\n>> ...\n>> My questions are:\n>>\n>> 1.  If you've already configured, why would you want to add another\n>> step before calling 'make'?\n>>\n>> 2.  Does anybody actually use Configure.pl in this way, and to what\n>> purpose?\n>\n> I can't speak for others, but I use this frequently with\n> \"Configure.pl --step=gen::languages\".  This allows regeneration\n> of the per-language makefiles (e.g., languages/perl6/Makefile)\n> without having to go through the entire configure/rebuild\n> process for all of Parrot.\n>\n\nThat's a useful example.\n\nWould it then be fair to say that this block is a Parrot developer's  \ntool rather than something inherent to the Parrot installation  \nprocess (where that process is thought of as a configure-build-test- \ninstall sequence)?\n\nAnd if it is a developer's tool, would it be better off in a separate  \nscript from Configure.pl?\n\nI raise these questions because, as I write tests for Configure.pl  \nand the modules underlying it, I need to know whether the test is  \nmeant to be run when the filesystem is in a 'pre-Configure.pl' state  \nor in the 'post-Configure.pl/pre-make' state.\n\nThanks for your rapid response!\n\n"}