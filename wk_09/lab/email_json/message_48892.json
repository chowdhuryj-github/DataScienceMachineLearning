{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r23516 - in branches: SAMBA_3_0/source/locking\n\tSAMBA_3_0_25/source/locking SAMBA_3_0_26/source/locking", "body": "Author: jra\nDate: 2007-06-16 01:04:22 +0000 (Sat, 16 Jun 2007)\nNew Revision: 23516\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23516\n\nLog:\nFix bug found & fixed by Spie Rudoff (spie_rudoff@isilon.com)\n- when cleaning up invalid locks make sure we mark the lck\nstruct as modified so it'll get saved back correctly (that\nwas the original intent).\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/locking/brlock.c\n   branches/SAMBA_3_0_25/source/locking/brlock.c\n   branches/SAMBA_3_0_26/source/locking/brlock.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0/source/locking/brlock.c\t2007-06-16 00:54:58 UTC (rev 23515)\n+++ branches/SAMBA_3_0/source/locking/brlock.c\t2007-06-16 01:04:22 UTC (rev 23516)\n@@ -1646,6 +1646,7 @@\n \tmemcpy(br_lck->lock_data, data.dptr, data.dsize);\n \t\n \tif (!fsp->lockdb_clean) {\n+\t\tint orig_num_locks = br_lck->num_locks;\n \n \t\t/* This is the first time we've accessed this. */\n \t\t/* Go through and ensure all entries exist - remove any that don't. */\n@@ -1658,6 +1659,11 @@\n \t\t\treturn NULL;\n \t\t}\n \n+\t\t/* Ensure invalid locks are cleaned up in the destructor. */\n+\t\tif (orig_num_locks != br_lck->num_locks) {\n+\t\t\tbr_lck->modified = True;\n+\t\t}\n+\n \t\t/* Mark the lockdb as \"clean\" as seen from this open file. */\n \t\tfsp->lockdb_clean = True;\n \t}\n\nModified: branches/SAMBA_3_0_25/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/locking/brlock.c\t2007-06-16 00:54:58 UTC (rev 23515)\n+++ branches/SAMBA_3_0_25/source/locking/brlock.c\t2007-06-16 01:04:22 UTC (rev 23516)\n@@ -1609,6 +1609,7 @@\n \tbr_lck->num_locks = data.dsize / sizeof(struct lock_struct);\n \n \tif (!fsp->lockdb_clean) {\n+\t\tint orig_num_locks = br_lck->num_locks;\n \n \t\t/* This is the first time we've accessed this. */\n \t\t/* Go through and ensure all entries exist - remove any that don't. */\n@@ -1623,6 +1624,11 @@\n \t\t\treturn NULL;\n \t\t}\n \n+                /* Ensure invalid locks are cleaned up in the destructor. */\n+\t\tif (orig_num_locks != br_lck->num_locks) {\n+\t\t\tbr_lck->modified = True;\n+\t\t}\n+\n \t\t/*\n \t\t * validate_lock_entries might have changed locks. We can't\n \t\t * use a direct pointer here because otherwise gcc warnes\n\nModified: branches/SAMBA_3_0_26/source/locking/brlock.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/locking/brlock.c\t2007-06-16 00:54:58 UTC (rev 23515)\n+++ branches/SAMBA_3_0_26/source/locking/brlock.c\t2007-06-16 01:04:22 UTC (rev 23516)\n@@ -1646,6 +1646,7 @@\n \tmemcpy(br_lck->lock_data, data.dptr, data.dsize);\n \t\n \tif (!fsp->lockdb_clean) {\n+\t\tint orig_num_locks = br_lck->num_locks;\n \n \t\t/* This is the first time we've accessed this. */\n \t\t/* Go through and ensure all entries exist - remove any that don't. */\n@@ -1658,6 +1659,11 @@\n \t\t\treturn NULL;\n \t\t}\n \n+\t\t/* Ensure invalid locks are cleaned up in the destructor. */\n+\t\tif (orig_num_locks != br_lck->num_locks) {\n+\t\t\tbr_lck->modified = True;\n+\t\t}\n+\n \t\t/* Mark the lockdb as \"clean\" as seen from this open file. */\n \t\tfsp->lockdb_clean = True;\n \t}\n\n"}