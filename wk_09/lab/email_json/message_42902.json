{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Stephen Kratzer <kratzers@pa.net>", "subject": "Re: Command Splice()", "body": "On Tuesday 05 June 2007 09:38:51 Xu, Lizhe wrote:\n> Hi All,\n> =20\n> The example given for splice function in the perldoc shows\n> sub aeq {\n>  ...\n>  my(@a)=3D splice (@_, 0, shift);\n>  ...\n> }\n> I am confused about what the splice command does with the shift command =\n> and what the result of the command. Thanks.\n>\n>\n>\n>\n> Lizhe\n\nLook at how aeq is called. The lengths of the arrays are passed before the \narrays. If the lengths are correct, the lengths are what the calls to shift \nshould return. Using these lengths and an offset of 0 should ensure that \nsplice removes all elements of the arrays following the length arguments. \nSo, \"my(@a) = splice(@_,0,shift);\" assigns to @a the values from the first \narray in the call to aeq and \"my(@b) = splice(@_,0,shift);\" assigns to @b the \nvalues from the second array in the call to aeq. Then, the lengths of the two \narrays are compared, and finally, all their elements are compared.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}