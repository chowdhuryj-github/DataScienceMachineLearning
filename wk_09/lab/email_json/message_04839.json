{"category": "ham", "to_address": "\"msevior@physics.unimelb.edu.au\" <msevior@physics.unimelb.edu.au>", "from_address": "\"Eben Eliason\" <eben.eliason@gmail.com>", "subject": "Re: [sugar] Write Activity.", "body": "Hello -\n\n> We have almosts all the features requested in libabiword for this. The\n> only one currently missing is rotating the image, but this should not be\n> too hard to implement.\n\nAnother note on the image:  the rightmost icon in the image toolbar is\na \"toggle caption\" button.  I don't know if this is already supported\nor not. It should auto-format the image with the appropriate padding\nand provide an area beneath it for adding caption text, automatically\nplacing the cursor in the caption area. Optionally, the rollover for\nthis button could have a checkbox for \"treat as figure\" or something,\nautomatically numbering the figures in a document.\n\n> What is the time frame for implementing this?\n\nWe're working on getting an API together for the controls in the near\nfuture as well.  It would be better if development ran parallel to the\ncreation of the necessary controls so that work doesn't need to be\nredone to incorporate the proper widgets later.  It also depends\nheavily on an API for tabbed toolbars, which isn't yet available.\n\n> I notice that undo/redo is only available for text, whereas all the\n> manipulations shown in the mockups can be undone/redone. Does it make\n> sense to provide undo/redo for all toolbars or even on the menu bar?\n\nActually, the undo/redo buttons reside inside the \"Edit\" toolbar,\nwhich isn't specific to text at all.  They should map to anything at\nall that sits in your changeRecord stack.\n\n> Do you intend that different toolbars are automatically changed upon\n> context? For example, if a user clicks on an image, does the toolbar\n> change to \"image\" automatically?\n\nAbsolutely.  This is one of the key ideas behind this toolbar design,\nwhich hopes to virtually eliminate the need to switch editing contexts\nvia the tabs themselves.  Clicking on an image, table, or within text\nshould automatically select the corresponding toolbar.  Selecting text\ninside a table cell, or inside a caption should likewise select the\ntext toolbar.\n\n> Regarding \"insertTable\", I think our little inserttable widget which lets\n> the user interactively size the dimensions is easier and more intuative\n> than selecting x and y dimensions.\n\nThe numbers here represent the number of rows and columns in the\ninserted table, not the dimensions of the table itself.  I'm not\nfamiliar with your current functionality, though, so it would be great\nto see that.  Also, these dimensions would be set to some default\n(like 3x3) and only appear on secondary rollover.  They wouldn't be\nrequired; clicking on the button directly would insert a table with\nthe default (or last set) number of rows and cols.\n\n> Regarding the table toolbar, there are two entries shown with \"100\" and\n> \"24\", which appear to be size in percent of the width of the page of the\n> horizontal and vertical dimensions. Is that correct? I wonder if these are\n> neccessary? It seems a rather esoteric idea to young children. The width\n> an heights of the columns can be adjusted by dragging the column and row\n> seperators on screen.\n\nThis is true;  It's not strictly necessary.  The general idea behind\nthese controls is that I might want every row to be twice as tall as\nthe default, and there's no good way through direct interaction to\ntell a bunch of rows to be the same size.\n\n> In there place you might want to provide buttons to merge and split cells\n> horizontally and vertically.\n\nInteresting point.  I hadn't really considered merging and splitting\nnecessary for most use cases, but perhaps people use that more than I.\n I'm open to this if people agree that this is a needed feature.\n\n> Regarding the page margins, could you clarify how you would like this to\n> be displayed on screen? Currently we suppress the top, bottom, right and\n> left margins to get the maximum amount of text on screen. To show margins\n> we go into what we call \"print view\" which is what the text will look like\n> once printed. Given this, do you intend for write documents to be printed?\n> If so should we enable printing for Write?\n\nWell, we're certainly not designing with printing in mind.  We expect\nthat most content with be both created and consumed digitally.  For\nthat reason alone, even if we have such a preview we should certainly\nnot use \"print preview\" to describe it.  It could be the case that we\ndon't need margins at all, though the format bar certainly has the\nroom for it, and I personally see margins as a design tool just as\nrelevant for digital content as for printed material.  Since the view\ntoolbar provides a way to zoom in and out, if we keep margins perhaps\na specific zoom level could be something to the effect of \"tight fit\"\nwithout margins...\n\n> Thanks very much, it is an interesting design and it's nice to a get a\n> direction.\n\nGlad you like it; sorry for the delays.  We've been spending\nconsiderable time on nailing down the look of the controls and the\ntoolbar interface itself.  Please feel free to critique it, offer\nsuggestions for a slightly altered feature set, etc.  It can certainly\nevolve from here.\n\nFinally, here are a few issues that aren't addressed in this design\nthat we may need to add later:\n\n1) Annotations. We hope to provide an annotation system for crossmark\ndocuments so kids and teachers can write notes \"in the margins\" of the\npages.  It would be ideal if both read and write had consistent\nimplementations for this in the UI.  The general idea at present is to\nhave a small (45 px wide) gutter in the left margin of the activity\nwhich contains a heat map of sorts for each block of text, indicating\nhow many annotations it has.  Clicking in the gutter could reveal the\nannotations and allow for editing or creation of new ones.\n\n2) Headers.  Since everything is digital, the crossmark spec focuses\non headers - just like wikis - instead of pages as the primary means\nof navigation.  Since the reader will support dynamic TOC generation\nand navigation, it seems only natural that the write activity provide\na means of creating (and navigating by) these headers.\n\n3) Crossmark editing. Since the goal is to use crossmark as the\nunderlying format, it would be nice to be able to expose the crossmark\nsource for a document, perhaps with a toggle button under the view\ntoolbar.  Additionally, one should be able to input crossmark\ndirectly.  There are two interesting ways we could make this work\nacross the views.  We could have a crossmark interpreter of sorts\nwhich would take a string of text typed with asterisks as in  *bold*\nand automatically render it as bold when in formatted view.  Also,\nwhen in crossmark view, it would be great if all of the tools (insert\ntable, insert image, add row, etc) still worked, but worked by\ninserting the proper crossmark markup directly.\n\n- Eben\n_______________________________________________\nSugar mailing list\nSugar@laptop.org\nhttp://mailman.laptop.org/mailman/listinfo/sugar\n\n"}