{"category": "ham", "to_address": "marc_schwartz@comcast.net", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] substitute \"x\" for \"pattern\" in a list,\n\twhile preservign list \"structure\". lapply, gsub, list...?", "body": "On 5/16/07, Marc Schwartz  wrote:\n> On Wed, 2007-05-16 at 09:25 -0700, new ruser wrote:\n> > I am experimenting with some of the common r functions.\n> > I had a question re:using \"gsub\" (or some similar functions) on the\n> > contents of a list.\n> >\n> > I want to design a function that looks at \"everything\" contained din a\n> > list, and anytime it finds the text string \"pattern\" replace it with\n> > \"x\".  I also wish to preserve the \"structure\" of the original list.\n> > What is a good way to accomplish this?\n> >\n> > I tried :\n> >\n> > a = matrix(data=c(23,45,'red',78),nrow=2)\n> > b = c('red','green',1,2,3)\n> > d = data.frame( test1=c(223,445,'red',78,56) , test2=\n> > c('red',NA,NA,NA,NA) )\n> > e= list(a,b,d)\n> > list1 = list(a,b,d,e)\n> >\n> > list2 = lapply(list1,function(list)(gsub(\"red\",\"green\",list)))\n> >\n> > str(list1)\n> > str(list2)\n> >\n> > but the structue fo the list changed.\n>\n> I suspect that you will need to use rapply(), which is a recursive\n> version of lapply().\n>\n> For example:\n>\n> > str(list1)\n> List of 4\n>  $ : chr [1:2, 1:2] \"23\" \"45\" \"red\" \"78\"\n>  $ : chr [1:5] \"red\" \"green\" \"1\" \"2\" ...\n>  $ :'data.frame':       5 obs. of  2 variables:\n>  ..$ test1: Factor w/ 5 levels \"223\",\"445\",\"56\",..: 1 2 5 4 3\n>  ..$ test2: Factor w/ 1 level \"red\": 1 NA NA NA NA\n>  $ :List of 3\n>  ..$ : chr [1:2, 1:2] \"23\" \"45\" \"red\" \"78\"\n>  ..$ : chr [1:5] \"red\" \"green\" \"1\" \"2\" ...\n>  ..$ :'data.frame':    5 obs. of  2 variables:\n>  .. ..$ test1: Factor w/ 5 levels \"223\",\"445\",\"56\",..: 1 2 5 4 3\n>  .. ..$ test2: Factor w/ 1 level \"red\": 1 NA NA NA NA\n>\n>\n>\n> list3 <- rapply(list1, function(x) gsub(\"red\", \"green\", x),\n>                how = \"replace\")\n>\n> > str(list3)\n> List of 4\n>  $ : chr [1:2, 1:2] \"23\" \"45\" \"green\" \"78\"\n>  $ : chr [1:5] \"green\" \"green\" \"1\" \"2\" ...\n>  $ :List of 2\n>  ..$ test1: chr [1:5] \"223\" \"445\" \"green\" \"78\" ...\n>  ..$ test2: chr [1:5] \"green\" NA NA NA ...\n>  $ :List of 3\n>  ..$ : chr [1:2, 1:2] \"23\" \"45\" \"green\" \"78\"\n>  ..$ : chr [1:5] \"green\" \"green\" \"1\" \"2\" ...\n>  ..$ :List of 2\n>  .. ..$ test1: chr [1:5] \"223\" \"445\" \"green\" \"78\" ...\n>  .. ..$ test2: chr [1:5] \"green\" NA NA NA ...\n>\n>\n> Note however, the impact of using gsub(), which is that factors are\n> coerced to characters. So consider what you want the end game to be.\n>\n> See ?rapply for more information.\n>\n\nAlso note that from your str's above it appears that data.frames do not\nsurvive rapply but rather are changed to plain lists.  I don't know whether\nthat is intentional on the part of the developers or not.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}