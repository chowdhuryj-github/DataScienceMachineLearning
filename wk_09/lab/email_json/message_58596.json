{"category": "ham", "to_address": "\"John Kane\" <jrkrideau@yahoo.ca>, \"R R-help\" <r-help@stat.math.ethz.ch>", "from_address": "\"Jason Barnhart\" <jasoncbarnhart@msn.com>", "subject": "Re: [R] Function call within a function.", "body": "[SNIP]\n\n> \n> This has been very helpful though I still do not\n> understand why one must call nts$cda using the\n> eval(parse()) command.  Is it because nts is created\n> within the ukn environment?  \n\nYou don't *have* to use the eval(parse()).  This works just as \nwell: mysum <- nts$cda.\n\nHowever, it appeared to me that you wanted the flexibility to return \ndifferent values depending on the function call.\n\nresults <- ukn(dd1, \"a\", \"b\", \"nts$cda\")\nresults2 <- ukn(dd1, \"a\", \"b\", \"nts$cdb\")\n\nThe eval/parse allows you to convert text into objects through \neval().  So the \"nam1\" argument is specified by the user to return \nthe object of choice.\n\n#Here's a simple example of eval/parse that will run\n#from the prompt.\nt <- \"ls()\"\nt\nparse(text=t)\neval(parse(text=t))\n\nI think Dan Nordlund's comment \"Functions generally shouldn't \nrequire knowing how other functions work, they should only rely \non what value is returned.\" is more useful here.  Since R \nprovides many ways to accomplish the same thing you can avoid \neval/parse altogether. \n\nNote that his solution returned a vector of three values where as \nmine returned a list.  It's unclear which you prefer, and it may \nbe neither (especially as this was just a simple example).  \n\nIn this simple case, I would return a list with named elements \nand expect all objects returned from this function to have the \nsame attributes. Then either \"cda\" or \"cdb\" could be used as \nnecessary.\n\nAs an example, consider a plotting function that requires both \n\"cda\" and \"cdb\" in order to plot them simultaneously.\n\n[SNIP]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}