{"category": "ham", "to_address": "\"Andrej Kastrin\" <andrej.kastrin@siol.net>", "from_address": "yitzle <yitzle@users.sourceforge.net>", "subject": "Re: transform one2many table", "body": "Hashes!\n\nUntested code:\n\nwhile(<>){\n    chomp;\n    ($id,$name)=split(/\\|/,$_);\n    push( @($hash{$id}, $name) );\n}\n\nYou can split the input file into chunks, or process one ID and then\nlet the variable go out of scope or whatever...\n\n>     chomp;\n>     ($id,$name)=split(/\\|/,$_);\n>     $previous_id=$id;\n>     if($id eq $previous_id){\n>         push(@array,$name);\n>     }\n\n\nOn 5/15/07, Andrej Kastrin  wrote:\n> Dear all,\n> I want to transform one2many like table to one2one table. Original table\n> looks as follows:\n>\n> 1|Michael\n> 1|Alex\n> 1|Bob\n> 1|Pete\n> 2|Bob\n> 2|Andre\n> 2|David\n> 2|Alex\n> 3|Pete\n>\n> and the output should be similar to;\n> 1|Michael Alex Bob Pete\n> 2|Bob Andre David Alex\n> 3|Pete\n>\n> Table is large (4 GB), so I think the best idea is to process first n\n> lines with unique id, print the result line and then process further.\n> But I have no idea how to do that...\n>\n> while(<>){\n>     chomp;\n>     ($id,$name)=split(/\\|/,$_);\n>     $previous_id=$id;\n>     if($id eq $previous_id){\n>         push(@array,$name);\n>     }\n> ### ???\n> }\n>\n>\n> Thanks in advance for any suggestion.\n>\n> Best, Andrej\n>\n> --\n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n>\n>\n>\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}