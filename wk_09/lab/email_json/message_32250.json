{"category": "ham", "to_address": "Gabor Grothendieck <ggrothendieck@gmail.com>", "from_address": "Vadim Ogranovich <vogranovich@jumptrading.com>", "subject": "Re: [R] subset arg in (modified) evalq", "body": "Thanks Gabor! This does exactly what I wanted. \n\nOne follow-up question, how to extract the var names, in this case y, z, from the expression? The subset function creates a new object and this may be expensive when the data has a lot of irrelevant collumns. So I thougth that I could reduce this to the columns I actually need. \n\nThanks, \nVadim \n\n\n----- Original Message ----- \nFrom: \"Gabor Grothendieck\"  \nTo: \"Vadim Ogranovich\"  \nCc: r-help@stat.math.ethz.ch \nSent: Friday, May 18, 2007 9:19:49 AM (GMT-0600) America/Chicago \nSubject: Re: [R] subset arg in (modified) evalq \n\nTry this: \n\nwith(subset(data, x > 0), summary(y + z)) \n\n\nOn 5/18/07, Vadim Ogranovich  wrote: \n> Hi, \n> \n> When using evalq to evaluate expressions within a say data.frame context I often wish there was a 'subset' argument, much like in lm() or any ather advanced regression model. I would be grateful for a tip how to do this. \n> \n> Here is an illustration of what I want: \n> \n> n <- 100 \n> data <- data.frame(x=rnorm(n), y=rnorm(y), z=rnorm(z)) \n> \n> # this works \n> evalq({ i <- 0 \n> # I want to do the above w/o explicit subscripting, e.g. \n> myevalq(summary(y + z), subset=0 \n> Thanks, \n> Vadim \n> \n> [[alternative HTML version deleted]] \n> \n> ______________________________________________ \n> R-help@stat.math.ethz.ch mailing list \n> https://stat.ethz.ch/mailman/listinfo/r-help \n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html \n> and provide commented, minimal, self-contained, reproducible code. \n> \n\n\t[[alternative HTML version deleted]]\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}