{"category": "ham", "to_address": "Alberto Monteiro <albmont@centroin.com.br>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] Inverse of encodeString", "body": "On Tue, 5 Jun 2007, Alberto Monteiro wrote:\n\n> What is the inverse of encodeString?\n>\n> For example, \\u1 is some Unicode symbol. If I do\n>\n> s <- encodeString(\"\\u1\")\n>\n> then s will be the string \"\\001\". But anything I do\n> with s, will not return the Unicode that corresponds to \\u1:\n>\n> cat(s, \"\\n\") # prints \\001\n> cat(\"\\u1\", \"\\n\")  # prints y with umlaut\n\nNot on a properly operational UTF-8 system: your terminal has a problem.\n\nThe help says\n\n      'encodeString' escapes the strings in a character vector in the\n      same way 'print.default' does, and optionally fits the encoded\n      strings within a field width.\n\nThe printed representation is not necessarily invertible, but scan() would \nbe a good start:\n\n> scan(con<-textConnection(s), \"\", allowEscapes=TRUE); close(con)\nRead 1 item\n[1] \"\\001\"\n\nas might parse(text=) be.\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}