{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "\"jerry gay\" <jerry.gay@gmail.com>", "subject": "Re: [perl #43250] [PATCH] Relax myops alarm Timing", "body": "On 6/19/07, via RT Ron Blaschke  wrote:\n> # New Ticket Created by  Ron Blaschke\n> # Please include the string:  [perl #43250]\n> # in the subject line of all future correspondence about this issue.\n> # \n>\n>\n> Test 5 of F has some very strong timing constraint.\n>  Two sleeps of a second each (and a few minor int/print ops) may not be\n> faster than a two seconds alarm.  This often doesn't work out on my box\n> (Windows XP, Visual C++).\n>\n> t\\dynoplibs\\myops....NOK 5#     Failed test (t\\dynoplibs\\myops.t at line 77)\n> #          got: '1\n> # 2\n> # alarm\n> # 3\n> # done.\n> # '\n> #     expected: '1\n> # alarm\n> # 2\n> # 3\n> # done.\n> # '\n>\n> Attached patch unrolls the loop, which may or may not be more readable,\n> but more importantly opens a +/- 1 second time window for the alarm.\n>\n> $ prove t\\dynoplibs\\myops.t\n> t\\dynoplibs\\myops....ok\n> All tests successful.\n> Files=1, Tests=8, 10 wallclock secs ( 0.00 cusr +  0.00 csys =  0.00 CPU)\n>\n> Ron\n>\n> Index: t/dynoplibs/myops.t\n> ===================================================================\n> --- t/dynoplibs/myops.t (revision 19083)\n> +++ t/dynoplibs/myops.t (working copy)\n> @@ -80,14 +80,16 @@\n>  .sub main :main\n>      find_global P0, \"_alarm\"\n>      alarm 2.0, P0\n> -    set I0, 1\n> -loop:\n>      sleep 1\n> -    print I0\n> -    print \"\\n\"\n> -    inc I0\n> -    # check_events\n> -    le I0, 3, loop\n> +    print \"1\\n\"\n> +\n> +    # alarm should be triggered half-way\n> +    # during this sleep\n> +    sleep 2\n> +    print \"2\\n\"\n> +\n> +    sleep 1\n> +    print \"3\\n\"\n>      print \"done.\\n\"\n>  .end\n>\n>\n>\nthanks, applied as r19131.\n~jerry\n\n"}