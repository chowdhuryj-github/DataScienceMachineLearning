{"category": "ham", "to_address": "Jason Kivlighn <jkivlighn@gmail.com>", "from_address": "Jon Phillips <jon@rejon.org>", "subject": "Re: [cc-devel] [Tracker] Extracting Embedded Licenses", "body": "On Mon, 2007-06-18 at 12:49 -0700, Jason Kivlighn wrote:\n> Hi,\n> \n> imagemagick: Uses 'convert filename xmp:-' to output an image's embedded\n> XMP.  This works for at least JPEG and TIFF files.  For JPEGs, however,\n> Imagemagick outputs the namespace and XMP, seperated by \\0.  I'm not\n> sure how I can handle this, without simply assuming that 'convert'\n> returned two null-terminated strings.  Nevertheless, this extracts the\n> XMP from TIFF files.\n> \n> msoffice: Extends the msoffice extractor to also parse the\n> DocumentSummeryInformation infile, which contains user-defined metadata,\n> along with license metadata embedded by the MSOffice Creative Commons Add-in\n\nIs this the old msoffice file format? It would be great to also account\nfor the new msxml and best practices for this. Is there any info on\nthis?\n\n> pdf: Extends the pdf extractor to read a PDF's metadata stream and parse\n> it as XMP.  I'm still awaiting poppler extending the glib bindings to\n> allow reading the metadata stream.  Until then, it will simply never\n> find the metadata stream and go on without error.\n\nDid you provide them a patch? Speed that ish up with patches!\n\n> png: Adds a check for the XML:com:adobe:xmp iTXt field, and parses it as\n> XMP.\n\ngr8!\n\n> html: Adds a new html parser using libxml2.  Parses the document,\n> checking for RDFa licenses.  It also checks for other basic HTML\n> properties like title and author.\n> \n> There's also several XML formats I'd like to parse for license data,\n> particularly SVG and SMIL.  Would this be do-able, and if so, how should\n> I go about it?  Write new extractors for each format or is this too much\n> overhead?  These could use GMarkupParse, rather than bringing in libxml2\n> like the HTML parser.\n\nYes, totally doable. Look at how Inkscape handles SVG metadata currently\nand figure out best way to deal with current Inkscape method and also\nharmonize with our XMP ways.\n\nCheers!\n\nJon\n\n> Cheers,\n> Jason\n> \n> plain text document attachment (tracker-imagemagick-extract-xmp.patch)\n> Index: src/tracker-extract/tracker-extract-imagemagick.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract-imagemagick.c\t(revision 598)\n> +++ src/tracker-extract/tracker-extract-imagemagick.c\t(working copy)\n> @@ -35,7 +35,7 @@\n>  \tgint           exit_status;\n>  \n>  \t/* imagemagick crashes trying to extract from xcf files */\n> -\tif (g_str_has_suffix (filename, '.xcf')) {\n> +\tif (g_str_has_suffix (filename, \".xcf\")) {\n>  \t\treturn;\n>  \t}\n>  \n> @@ -60,5 +60,16 @@\n>  \t\t\tg_hash_table_insert (metadata, g_strdup (\"Image:Comments\"), g_strdup (g_strescape (lines[2], \"\")));\n>  \t\t}\n>  \t}\n> +\n> +\tgchar         *xmp;\n> +\targv[0] = g_strdup (\"convert\");\n> +\targv[1] = g_strdup (filename);\n> +\targv[2] = g_strdup (\"xmp:-\");\n> +\targv[3] = NULL;\n> +\n> +\tif (tracker_spawn (argv, 10, &xmp, &exit_status)) {\n> +\t\tif (exit_status == EXIT_SUCCESS) {\n> +\t\t\ttracker_read_xmp(xmp,strlen(xmp),metadata);\n> +\t\t}\n> +\t}\n>  }\n> -\n> plain text document attachment\n> (tracker-msoffice-extract-license.patch)\n> Index: src/tracker-extract/tracker-extract-msoffice.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract-msoffice.c\t(revision 598)\n> +++ src/tracker-extract/tracker-extract-msoffice.c\t(working copy)\n> @@ -118,7 +118,26 @@\n>  \t}\n>  }\n>  \n> +static void\n> +doc_metadata_cb (gpointer key, gpointer value, gpointer user_data)\n> +{\n> +\tgchar\t\t*name;\n> +\tGsfDocProp\t*property;\n> +\tGHashTable\t*metadata;\n> +\tGValue const\t*val;\n>  \n> +\tname = (gchar *) key;\n> +\tproperty = (GsfDocProp *) value;\n> +\tmetadata = (GHashTable *) user_data;\n> +\n> +\tval = gsf_doc_prop_get_val (property);\n> +\n> +\tif (strcmp (name, \"CreativeCommons_LicenseURL\") == 0) {\n> +\t\tadd_gvalue_in_hash_table (metadata, \"File:License\", val);\n> +\t}\n> +}\n> +\n> +\n>  void\n>  tracker_extract_msoffice (gchar *filename, GHashTable *metadata)\n>  {\n> @@ -145,25 +164,37 @@\n>  \t}\n>  \n>  \tstream = gsf_infile_child_by_name (infile, \"\\05SummaryInformation\");\n> -\tg_object_unref (G_OBJECT (infile));\n> -\n> -\tif (!stream) {\n> -\t\tgsf_shutdown ();\n> -\t\treturn;\n> +\tif (stream) {\n> +\t\tmd = gsf_doc_meta_data_new ();\n> +\t\n> +\t\tif (gsf_msole_metadata_read (stream, md)) {\n> +\t\t\tgsf_shutdown ();\n> +\t\t\treturn;\n> +\t\t}\n> +\t\n> +\t\tgsf_doc_meta_data_foreach (md, metadata_cb, metadata);\n> +\t\n> +\t\tg_object_unref (G_OBJECT (md));\n> +\t\tg_object_unref (G_OBJECT (stream));\n>  \t}\n>  \n> -\tmd = gsf_doc_meta_data_new ();\n> -\n> -\tif (gsf_msole_metadata_read (stream, md)) {\n> -\t\tgsf_shutdown ();\n> -\t\treturn;\n> +\tstream = gsf_infile_child_by_name (infile, \"\\05DocumentSummaryInformation\");\n> +\tif (stream) {\n> +\t\tmd = gsf_doc_meta_data_new ();\n> +\t\n> +\t\tif (gsf_msole_metadata_read (stream, md)) {\n> +\t\t\tgsf_shutdown ();\n> +\t\t\treturn;\n> +\t\t}\n> +\t\n> +\t\tgsf_doc_meta_data_foreach (md, doc_metadata_cb, metadata);\n> +\t\n> +\t\tg_object_unref (G_OBJECT (md));\n> +\t\tg_object_unref (G_OBJECT (stream));\n>  \t}\n>  \n> -\tgsf_doc_meta_data_foreach (md, metadata_cb, metadata);\n> +\tg_object_unref (G_OBJECT (infile));\n>  \n> -\tg_object_unref (G_OBJECT (md));\n> -\tg_object_unref (G_OBJECT (stream));\n> -\n>  \tgsf_shutdown ();\n>  }\n>  \n> plain text document attachment (tracker-pdf-extract-xmp.patch)\n> Index: src/tracker-extract/tracker-extract-pdf.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract-pdf.c\t(revision 598)\n> +++ src/tracker-extract/tracker-extract-pdf.c\t(working copy)\n> @@ -26,6 +26,8 @@\n>  #include \n>  #include \n>  \n> +#include \"tracker-extract.h\"\n> +\n>  void tracker_extract_pdf (gchar *filename, GHashTable *metadata)\n>  {\n>  \tPopplerDocument *document;\n> @@ -34,6 +36,7 @@\n>  \tgchar           *author;\n>  \tgchar           *subject;\n>  \tgchar           *keywords;\n> +\tgchar           *metadata_xml;\n>  \tGTime            creation_date;\n>  \tGError          *error = NULL;\n>  \n> @@ -50,6 +53,7 @@\n>  \t\t\"subject\", &subject,\n>  \t\t\"keywords\", &keywords,\n>  \t\t\"creation-date\", &creation_date,\n> +\t\t\"metadata\", &metadata_xml,\n>  \t\tNULL);\n>  \n>  \tif (title && strlen (title))\n> @@ -71,10 +75,15 @@\n>  \tg_hash_table_insert (metadata, g_strdup (\"Doc:PageCount\"),\n>  \t\tg_strdup_printf (\"%d\", poppler_document_get_n_pages (document)));\n>  \n> +\tif ( metadata_xml ) {\n> +\t\ttracker_read_xmp (metadata_xml,strlen(metadata_xml),metadata);\n> +\t}\n> +\n>  \tg_free (title);\n>  \tg_free (author);\n>  \tg_free (subject);\n>  \tg_free (keywords);\n> +\tg_free (metadata_xml);\n>  \tg_object_unref (document);\n>  }\n>  \n> plain text document attachment (tracker-png-extract-xmp.patch)\n> Index: src/tracker-extract/tracker-extract-png.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract-png.c\t(revision 598)\n> +++ src/tracker-extract/tracker-extract-png.c\t(working copy)\n> @@ -20,6 +20,8 @@\n>  \n>  #include \"config.h\"\n>  \n> +#include \"tracker-extract.h\"\n> +\n>  #include \n>  #include \n>  #include \n> @@ -79,15 +81,23 @@\n>  \t\t\t                     g_strdup_printf (\"%ld\", height));\n>  \t\t}\n>  \n> -\n>  \t\tif (png_get_text (png_ptr, info_ptr, &text_ptr, &num_text) > 0) {\n> -\t\t    \tfor (i = 0; i < num_text; i++) {\n> -\t\t\t\tfor (j=0; tagmap[j].type; j++) {\n> -\t\t\t\t\tif (strcasecmp (tagmap[j].name,  text_ptr[i].key) == 0) {\n> -\t\t\t\t\t\tif (text_ptr[i].text && strlen (text_ptr[i].text) > 0) {\n> -\t\t\t\t\t\t\tg_hash_table_insert (metadata, g_strdup (tagmap[j].type), g_strdup (text_ptr[i].text));\n> +\t\t\tfor (i = 0; i < num_text; i++) {\n> +\t\t\t\tif ( text_ptr[i].key != NULL ) {\n> +\t\t\t\t\t#if defined(HAVE_EXEMPI) && defined(PNG_iTXt_SUPPORTED)\n> +\t\t\t\t\tif (strcmp(\"XML:com.adobe.xmp\",text_ptr[i].key) == 0) {\n> +\t\t\t\t\t\ttracker_read_xmp(text_ptr[i].text,text_ptr[i].itxt_length,metadata);\n> +\t\t\t\t\t\tcontinue;\n> +\t\t\t\t\t}\n> +\t\t\t\t\t#endif\n> +\t\n> +\t\t\t\t\tfor (j=0; tagmap[j].type; j++) {\n> +\t\t\t\t\t\tif (strcasecmp (tagmap[j].name,  text_ptr[i].key) == 0) {\n> +\t\t\t\t\t\t\tif (text_ptr[i].text && strlen (text_ptr[i].text) > 0) {\n> +\t\t\t\t\t\t\t\tg_hash_table_insert (metadata, g_strdup (tagmap[j].type), g_strdup (text_ptr[i].text));\n> +\t\t\t\t\t\t\t}\n> +\t\t\t\t\t\t\tbreak;\n>  \t\t\t\t\t\t}\n> -\t\t\t\t\t\tbreak;\n>  \t\t\t\t\t}\n>  \t\t\t\t}\n>  \t\t\t}\n> plain text document attachment (tracker-extract-html.patch)\n> Index: src/tracker-extract/tracker-extract.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract.c\t(revision 598)\n> +++ src/tracker-extract/tracker-extract.c\t(working copy)\n> @@ -52,6 +52,9 @@\n>  void tracker_extract_totem\t(gchar *, GHashTable *);\n>  void tracker_extract_oasis\t(gchar *, GHashTable *);\n>  void tracker_extract_ps\t\t(gchar *, GHashTable *);\n> +#ifdef HAVE_LIBXML2\n> +void tracker_extract_html\t\t(gchar *, GHashTable *);\n> +#endif\n>  #ifdef HAVE_POPPLER\n>  void tracker_extract_pdf\t(gchar *, GHashTable *);\n>  #endif\n> @@ -84,6 +87,10 @@\n>  \t/* Document extractors */\n>   \t{ \"application/vnd.oasis.opendocument.*\",\ttracker_extract_oasis\t\t},\n>   \t{ \"application/postscript\",\t\t\ttracker_extract_ps\t\t},\n> +#ifdef HAVE_LIBXML2\n> + \t{ \"text/html\",\t\t\t\t\t\t\ttracker_extract_html\t},\n> + \t{ \"application/xhtml+xml\",\ttracker_extract_html\t},\n> +#endif\n>  #ifdef HAVE_POPPLER\n>   \t{ \"application/pdf\",\t\t\t\ttracker_extract_pdf\t\t},\n>  #endif\n> Index: src/tracker-extract/Makefile.am\n> ===================================================================\n> --- src/tracker-extract/Makefile.am\t(revision 598)\n> +++ src/tracker-extract/Makefile.am\t(working copy)\n> @@ -5,6 +5,7 @@\n>  \t$(LIBGSF_CFLAGS)\t\t\t\\\n>  \t$(LIBGSF_CFLAGS)\t\t\t\\\n>  \t$(GSTREAMER_CFLAGS)\t\t\t\\\n> +\t$(LIBXML2_CFLAGS)\t\t\t\\\n>  \t$(XINE_CFLAGS)\n>  \n>  bin_PROGRAMS = tracker-extract\n> @@ -33,6 +34,7 @@\n>  \ttracker-extract-imagemagick.c\t\t\\\n>  \ttracker-extract-mplayer.c\t\t\\\n>  \ttracker-extract-totem.c\t\t\t\\\n> +\ttracker-extract-html.c\t\t\t\\\n>  \t$(video_sources)\n>  \n>  tracker_extract_LDADD = $(GLIB2_LIBS)\t\t\\\n> @@ -41,4 +43,5 @@\n>  \t$(LIBEXIF_LIBS)\t\t\t\t\\\n>  \t$(LIBGSF_LIBS)\t\t\t\t\\\n>  \t$(GSTREAMER_LIBS)\t\t\t\\\n> +\t$(LIBXML2_LIBS)\t\t\t\t\\\n>  \t$(XINE_LIBS)\n> Index: configure.ac\n> ===================================================================\n> --- configure.ac\t(revision 598)\n> +++ configure.ac\t(working copy)\n> @@ -605,8 +605,25 @@\n>     [ AC_DEFINE(IOPRIO_SUPPORT,[],[Define ioprio support]) ioprio_support=yes ])\n>  AC_MSG_RESULT([$ioprio_support])\n>  \n> -#####################################################\n> +##################################################################\n> +# check for libxml2\n> +##################################################################\n>  \n> +LIBXML2_REQUIRED=0.6\n> +\n> +AC_ARG_ENABLE(libxml2, AC_HELP_STRING([--disable-libxml2],[Disable HTML/XML extractors (full-text will still be available)]),,[enable_libxml2=yes])\n> +if test \"x$enable_libxml2\" = \"xyes\"; then\n> +\tPKG_CHECK_MODULES(LIBXML2, [\n> +\t\tlibxml-2.0 >= $LIBXML2_REQUIRED],\n> +\t\t[have_libxml2=yes] , [have_libxml2=no])\n> +\tAC_SUBST(LIBXML2_CFLAGS)\n> +\tAC_SUBST(LIBXML2_LIBS)\n> +else\n> +\thave_libxml2=\"no (disabled)\"\n> +fi\n> +AM_CONDITIONAL(HAVE_LIBXML2, test \"$have_libxml2\" = \"yes\")\n> +test \"$have_libxml2\" = \"yes\" && AC_DEFINE(HAVE_LIBXML2, [], [Define if we have libxml2])\n> +\n>  AC_CONFIG_FILES([\n>  \tMakefile\n>  \ttracker.pc\n> @@ -675,6 +692,7 @@\n>  \texif (jpeg):\t\t\t\t$have_libexif\n>  \tgsf:\t\t\t\t\t$have_libgsf\n>  \tvideo files:\t\t\t\t$videos_are_handled ($videos_handler)\n> +\txml/html formats:\t\t\t$have_libxml2\n>  \n>  \"\n>  if test \"x$enable_external_sqlite\" = \"xyes\"; then\n> Index: src/tracker-extract/tracker-extract-html.c\n> ===================================================================\n> --- src/tracker-extract/tracker-extract-html.c\t(revision 0)\n> +++ src/tracker-extract/tracker-extract-html.c\t(revision 0)\n> @@ -0,0 +1,161 @@\n> +/* Tracker Extract - extracts embedded metadata from files\n> + * Copyright (C) 2007, Jason Kivlighn (jkivlighn@gmail.com)\n> + *\n> + * This program is free software; you can redistribute it and/or\n> + * modify it under the terms of the GNU General Public\n> + * License as published by the Free Software Foundation; either\n> + * version 2 of the License, or (at your option) any later version.\n> + *\n> + * This program is distributed in the hope that it will be useful,\n> + * but WITHOUT ANY WARRANTY; without even the implied warranty of\n> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n> + * General Public License for more details.\n> + *\n> + * You should have received a copy of the GNU General Public\n> + * License along with this program; if not, write to the\n> + * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n> + * Boston, MA  02110-1301, USA.\n> + */\n> +\n> +#include \"config.h\"\n> +\n> +#ifdef HAVE_LIBXML2\n> +\n> +#include \n> +#include \n> +#include \n> +\n> +typedef enum {\n> +\t\tREAD_TITLE,\n> +\t} tag_type;\n> +\n> +typedef struct {\n> +\tGHashTable *metadata;\n> +\ttag_type current;\n> +} HTMLParseInfo;\n> +\n> +gboolean\n> +has_attribute( const xmlChar ** atts, const char *attr, const char*val )\n> +{\n> +\tint i;\n> +\tfor ( i = 0; atts[i]; i+=2 )\n> +\t{\n> +\t\tif ( strcmp((char*)atts[i],attr) == 0 ) {\n> +\t\t\tif ( !val || strcmp((char*)atts[i+1],val) == 0 ) {\n> +\t\t\t\treturn TRUE;\n> +\t\t\t}\n> +\t\t}\n> +\t}\n> +\treturn FALSE;\n> +}\n> +\n> +const xmlChar *\n> +lookup_attribute( const xmlChar **atts, const char *attr )\n> +{\n> +\tint i;\n> +\tfor ( i = 0; atts[i]; i+=2 )\n> +\t{\n> +\t\tif ( strcmp((char*)atts[i],attr) == 0 ) {\n> +\t\t\treturn atts[i+1];\n> +\t\t}\n> +\t}\n> +\n> +\treturn NULL;\n> +}\n> +\n> +void\n> +startElement (void * info, const xmlChar * name, const xmlChar ** atts)\n> +{\n> +\t/* Look for RDFa triple describing the license */\n> +\tif ( strcmp((char*)name,\"a\") == 0 ) {\n> +\t\t/* This tag is a license.  Ignore, however, if it is referring to another document */\n> +\t\tif ( has_attribute(atts,\"rel\",\"license\") && !has_attribute(atts,\"about\",NULL) ) {\n> +\t\t\tconst xmlChar *href = lookup_attribute(atts,\"href\");\n> +\t\t\tif ( href ) {\n> +\t\t\t\tg_hash_table_insert (((HTMLParseInfo *)info)->metadata, g_strdup (\"File:License\"),\n> +\t\t\t\t                     g_strdup( (char*)href ));\n> +\t\t\t}\n> +\t\t}\n> +\t} else if ( strcmp((char*)name,\"title\") == 0 ) {\n> +\t\t((HTMLParseInfo *)info)->current = READ_TITLE;\n> +\t} else if ( strcmp((char*)name,\"meta\") == 0 ) {\n> +\t\tif ( has_attribute(atts,\"name\",\"Author\") ) {\n> +\t\t\tconst xmlChar *author = lookup_attribute(atts,\"content\");\n> +\t\t\tif ( author ) {\n> +\t\t\t\tg_hash_table_insert (((HTMLParseInfo *)info)->metadata, g_strdup (\"Doc:Author\"),\n> +\t\t\t\t                     g_strdup( (char*)author ));\n> +\t\t\t}\n> +\t\t}\n> +\t\tif ( has_attribute(atts,\"name\",\"DC.Description\") ) {\n> +\t\t\tconst xmlChar *desc = lookup_attribute(atts,\"content\");\n> +\t\t\tif ( desc ) {\n> +\t\t\t\tg_hash_table_insert (((HTMLParseInfo *)info)->metadata, g_strdup (\"Doc:Comments\"),\n> +\t\t\t\t                     g_strdup( (char*)desc ));\n> +\t\t\t}\n> +\t\t}\n> +\t}\n> +}\n> +\n> +void\n> +characters(void * info, const xmlChar * ch, int len)\n> +{\n> +\tswitch(((HTMLParseInfo *)info)->current) {\n> +\t\tcase READ_TITLE:\n> +\t\t\t\tg_hash_table_insert (((HTMLParseInfo *)info)->metadata, g_strdup (\"Doc:Title\"),\n> +\t\t\t\t                     g_strdup( (char*)ch ));\n> +\t\t\t\tbreak;\n> +\t\tdefault: break;\n> +\t}\n> +\n> +\t((HTMLParseInfo *)info)->current = -1;\n> +}\n> +\n> +void tracker_extract_html (gchar* filename, GHashTable *metadata)\n> +{\n> +\txmlSAXHandler SAXHandlerStruct = {\n> +\t\t\tNULL, /* internalSubset */\n> +\t\t\tNULL, /* isStandalone */\n> +\t\t\tNULL, /* hasInternalSubset */\n> +\t\t\tNULL, /* hasExternalSubset */\n> +\t\t\tNULL, /* resolveEntity */\n> +\t\t\tNULL, /* getEntity */\n> +\t\t\tNULL, /* entityDecl */\n> +\t\t\tNULL, /* notationDecl */\n> +\t\t\tNULL, /* attributeDecl */\n> +\t\t\tNULL, /* elementDecl */\n> +\t\t\tNULL, /* unparsedEntityDecl */\n> +\t\t\tNULL, /* setDocumentLocator */\n> +\t\t\tNULL, /* startDocument */\n> +\t\t\tNULL, /* endDocument */\n> +\t\t\tstartElement, /* startElement */\n> +\t\t\tNULL, /* endElement */\n> +\t\t\tNULL, /* reference */\n> +\t\t\tcharacters, /* characters */\n> +\t\t\tNULL, /* ignorableWhitespace */\n> +\t\t\tNULL, /* processingInstruction */\n> +\t\t\tNULL, /* comment */\n> +\t\t\tNULL, /* xmlParserWarning */\n> +\t\t\tNULL, /* xmlParserError */\n> +\t\t\tNULL, /* xmlParserError */\n> +\t\t\tNULL, /* getParameterEntity */\n> +\t\t\tNULL, /* cdataBlock */\n> +\t\t\tNULL, /* externalSubset */\n> +\t\t\t1,    /* initialized */\n> +\t\t\tNULL, /* private */\n> +\t\t\tNULL, /* startElementNsSAX2Func */\n> +\t\t\tNULL, /* endElementNsSAX2Func */\n> +\t\t\tNULL  /* xmlStructuredErrorFunc */\n> +\t};\n> +\n> +\tHTMLParseInfo   info = { metadata, -1 };\n> +\n> +\thtmlDocPtr doc;\n> +\tdoc = htmlSAXParseFile(filename, NULL, &SAXHandlerStruct, &info);\n> +\tif ( doc ) {\n> +\t\txmlFreeDoc(doc);\n> +\t}\n> +}\n> +\n> +#else\n> +#warning \"Not building HTML metadata extractor.\"\n> +#endif\n> _______________________________________________\n> tracker-list mailing list\n> tracker-list@gnome.org\n> http://mail.gnome.org/mailman/listinfo/tracker-list\n-- \nJon Phillips\n\nSan Francisco, CA\nUSA PH 510.499.0894\njon@rejon.org\nhttp://www.rejon.org\n\nMSN, AIM, Yahoo Chat: kidproto\nJabber Chat: rejon@gristle.org\nIRC: rejon@irc.freenode.net\n\n_______________________________________________\ncc-devel mailing list\ncc-devel@lists.ibiblio.org\nhttp://lists.ibiblio.org/mailman/listinfo/cc-devel\n\n"}