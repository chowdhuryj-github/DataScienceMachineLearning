{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: did I get greedy quantifiers wrong ?", "body": "On May 31, 6:02 am, sharan.basa...@gmail.com (Sharan Basappa) wrote:\n> I seem to be having some conceptual problem with greedy quantifiers ..\n> My understanding is that it matches as much as follows while still\n> allowing rest of the\n> regex to match.\n\n90% correct.  The other 10% is that the match starts left-to-right.\nIt will start with the first part of the string that can match, and\nmatch as much of *that* as possible.  It will not search the rest of\nthe string to see if a longer match is possible later.  For example:\n\n$string = 'abbabbbbba';\n$string =~ /(b*)/;\nIn this case, $1 will be set to 'bb', because that is the *first*\nlongest string it could find, even though if it had continued, it\nwould have been able to find 'bbbbb' later.\n\n\n> But look at the following example :\n> $str = mississippi;\n> $str =~ m/m(.*i)(.*pi)/;\n> print \"one is $1 \\n\";\n> print \"two is $2 \\n\";\n>\n> $str = mississippi;\n> $str =~ m/m(.*i?)(.*pi)/;\n\nThis doesn't mean what you think it means.  This tells Perl that the\nsecond token - (.*i?) can match as much of anything as it can,\nfollowed by 0 or 1 i's.  That ? does not apply to the .* unless you\nput it right after the *.  Compare and contrast with:\n(.*?i), which means to match as little of anything as possible,\nfollowed by exactly one i.\n\n> print \"one is $1 \\n\";\n> print \"two is $2 \\n\";\n>\n> In the first code snippet, I expected first regex (.*i) to match till\n> ississip\n\nRight there is a problem.  Your token is (.*i).  That is, the last\ncharacter of this token must be an i.  It can't end with a p.  That\ndoesn't match.  The .* matches as much as it can until the last 'i',\nthen saves the 'i' for the i in the token.\n\n> and leave pi for (.*pi) regex.\n>\n> But what I get as the output of this script is :\n>\n> one is ississi\n> two is ppi\n> one is ississip\n> two is pi\n>\n> Why is that perl is leaving ppi to second regex while it can continue\n> till first p\n\nIt can't.  The token ends in an i.  'i' must be the last thing that\n(.*i) matches.\n\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}