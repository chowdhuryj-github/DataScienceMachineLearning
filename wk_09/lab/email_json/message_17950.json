{"category": "ham", "to_address": null, "from_address": "\"Matthew J. Avitable\" <mja@richweb.com>", "subject": "Re: improving my code: array of references", "body": "Pierre,\n>> Thank you, but I got it to work the way I wanted, thanks to Matthew and\n>> Rob's posts:\n>>\n>> map { modify_variable(${$_}) } = \\($var1, $var2, $var3);\n>>     \n\nTo annotate to what Paul said - the above won't work.  The block syntax \nof map is \"map BLOCK LIST\".  Plus, it looks like you are going to \ndereference $_ before it gets passed into the function.  I'm not \nparticularly sure what the statement above will do. :)   The following \nshould work, if your version of modify_variable treats its first \nargument as a scalar reference.  See my earlier post for an example of \nhow modify_variable could work.\n\nmap { modify_variable($_) } \\($var1, $var2, $var3);  \n\n> And map in void context is generally frowned upon.\n>   \n\nThere's lots of heated debate about this apparently.  I'm certainly not \ninto starting a flame war, so I'll just point out an interesting \nconversation which explores this topic, pretty well in depth.\n\nhttp://www.perlmonks.org/index.pl?node_id=296742\n\n\n-m\n\n-- \n+ Matt J. Avitable: Senior Systems Analyst, Richweb, Inc.\n+ Richweb.com: Providing Internet-Based Business Solutions since 1995\n+ (804) 747.8592 x 109\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}