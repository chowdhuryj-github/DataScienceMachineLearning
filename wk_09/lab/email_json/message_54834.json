{"category": "ham", "to_address": "simo <idra@samba.org>", "from_address": "Alan DeKok <aland@nitros9.org>", "subject": "Re: Short HOWTO on using git for Samba development", "body": "simo wrote:\n> Yeah tried before and I was disgusted, but I will try to give it another\n> go and see if it has improved, I tried it very early.\n\n  I've used mercurial on a number of projects.  It's changed a lot since\nyou tried it.  It's fast, simple, and has smaller repositories than git. :)\n\n> The only problem I see with git/bzr as the main tree is that it seem to\n> introduce a gatekeeper to the \"official\" tree forcing all people to send\n> around patches instead of just committing.\n\n  I'm not sure about git, but mercurial doesn't work that way.\nIndividuals can sync trees with each other, and push/pull to a central\nrepository.\n\n> This work flow model is ok if a few people work on a very isolated part\n> of a tree, or on some experimental features, but if you need to\n> collaborate it may make things more annoying.\n\n  What has worked for me for collaboration is the following work flow,\nfor N people working on a sub-project is to have multiple repositories\nand branches.  Each developer has their own repository that they commit\nto locally.  Plus, there's a central repository where they coordinate\ntheir changes.  The central repository also has a mirror of the main\npublic repository.\n\n  The idea is that everyone works in their own private repo.  The group\nof people have their own branch.  Plus, there's one central place for\nmerging updates from the main trunk into the branch, so individual\ndevelopers don't have to do this.\n\n  When the feature is done, the merge / push to the main branch is easy,\nbecause the subgroup has maintained sync with the trunk.\n\n  Alan DeKok.\n\n"}