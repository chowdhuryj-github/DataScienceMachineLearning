{"category": "ham", "to_address": "Allison Randal via RT <parrotbug-followup@parrotcode.org>", "from_address": "Andy Spieherty <spiehera@lafayette.edu>", "subject": "Re: [perl #42774] [PATCH] Configure.pl --gc=libc doesn't compile", "body": "On Tue, 8 May 2007, Allison Randal via RT wrote:\n\n> Allison Randal wrote:\n> > I've started working on src/gc/res_lea.c, after\n> > removing the check for the no-longer-used flag.\n> \n> I've checked in those two changes. On to the next step:\n> \n> /home/allison/projects/svn/parrot/blib/lib/libparrot.so: undefined \n> reference to `Parrot_allocate_aligned'\n> /home/allison/projects/svn/parrot/blib/lib/libparrot.so: undefined \n> reference to `Parrot_merge_memory_pools'\n> \n> Looks like these two functions are defined in src/gc/resources.c, and \n> that when building with --gc=libc this file is replaced by \n> src/gc/res_lea.c. So, they need to be defined in src/gc/res_lea.c as well.\n\nI was about to post a patch adding those functions in, but I see that \nyou're in the middle of a much more thorough review than I had attempted, \nso my patch isn't going to apply anymore, and would probably be \nmisleading, to boot.\n\nGoing down that route anyway, I haven't solved any GC problems, so it may \nnot end up being a useful diversion.  Still, I have been looking at the \nhand-rolling of structures, such as this one at the top of resources.c, to \nsee if they could be simplified in the simplified --gc=libc case (where \nwe're not worrying about compaction and moving aligned pools to unaligned \nplaces.)\n\n\n                    +-----------------+\n                    |  ref_count   |f |    # GC header\n  obj->bufstart  -> +-----------------+\n                    |  data           |\n                    v                 v\n\n-- \n    Andy Spieherty\t\tspiehera@lafayette.edu\n\n"}