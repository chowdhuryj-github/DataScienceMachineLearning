{"category": "ham", "to_address": "Perl List <beginners@perl.org>", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: how to use xml::simple with nested for loops???", "body": "Dave Gauthier wrote:\n>\n> Going back a couple weeks regarding the nested foreach to read out nested\n> data using XML::Simple, your solution works great, Thanks !\n>\n> But a new requirement is that I sort the output\n>\n>\n> foreach (@{$xml->{FOREST}}) {\n>\n>     print $_->{NAME}, \":\\n\";\n>\n>     foreach (@{$_->{TREE}}) {\n>\n>         print \"\\t\", $_->{NAME}, \":\\n\";\n>\n>         foreach (@{$_->{DIAM_HEIGHT}}) {\n>\n>             print \"\\t\\ttdata:\\t\", $_, \"\\n\";\n>\n>         }\n>\n>     }\n>\n> }\n>\n>\n> To be painfully honest, I'm not sure what's going on inside the...\n>\n> {@{$xml->{FOREST}}} (for example).  Is there some sort of casting\n> going on\n> here?  I tried to \"sort\" the list, and it ran, but the output was not\n> sorted.  I suspect that it's sortig pointers and not values :-(\n>\n> Any help would be appreciated.\n\nMay I encourage you to use an XML module other than XML::Simple, if that is\npossible? XML::LibXML, for instance, allows you to use both XPath and the\nDocument Object Model to access the XML data, and makes for a more readable\nprogram. You don't say what sorts you need to do on your output, but the program\nbelow sorts the data by forest name and tree name as an example.\n\nI hope this helps,\n\nRob\n\n\n\nuse strict;\nuse warnings;\n\nuse XML::LibXML;\n\nmy $parser = XML::LibXML->new;\n$parser->keep_blanks(0);\n\nmy $doc = $parser->parse_fh(\\*DATA);\n\nsub byname {\n  $a->getAttribute('NAME') cmp $b->getAttribute('NAME');\n}\n\nmy @forests = $doc->findnodes('/ARBORINFO/FOREST');\n\nforeach my $forest (sort byname @forests) {\n\n  print $forest->getAttribute('NAME'), \":\\n\";\n\n  foreach my $tree (sort byname $forest->childNodes) {\n\n    print \"  \", $tree->getAttribute('NAME'), \":\\n\";\n\n    foreach my $size ($tree->childNodes) {\n\n      print \"    \", $size->textContent, \"\\n\";\n    }\n  }\n}\n\n__DATA__\n\n\n\n\n4.0,70.0\n4.1,70.1\n4.2,70.2\n\n\n5.0,80.0\n5.1,80.1\n5.2,80.2\n5.3,80.3\n\n\n3.0,60.0\n3.1,60.1\n\n\n\n\n1.0,30.0\n1.1,30.1\n1.2,30.2\n1.3,30.3\n1.4,30.4\n1.5,30.5\n\n\n3.0,50.0\n3.1,50.1\n3.2,50.2\n3.3,50.3\n\n\n2.0,40.0\n\n\n\n\n0.5,30.0\n\n\n\n\n**OUTPUT**\n\nacadia:\n  birch:\n    1.0,30.0\n    1.1,30.1\n    1.2,30.2\n    1.3,30.3\n    1.4,30.4\n    1.5,30.5\n  maple:\n    2.0,40.0\n  oak:\n    3.0,50.0\n    3.1,50.1\n    3.2,50.2\n    3.3,50.3\ncaddo:\n  scrb:\n    0.5,30.0\nolympic:\n  pine:\n    3.0,60.0\n    3.1,60.1\n  redwood:\n    5.0,80.0\n    5.1,80.1\n    5.2,80.2\n    5.3,80.3\n  spruce:\n    4.0,70.0\n    4.1,70.1\n    4.2,70.2\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}