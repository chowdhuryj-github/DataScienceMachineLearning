{"category": "ham", "to_address": "Andrew Yee <andrewjyee@gmail.com>", "from_address": "Marc Schwartz <marc_schwartz@comcast.net>", "subject": "Re: [R] more woes trying to convert a data.frame to a\n\tnumerical\tmatrix", "body": "On Wed, 2007-05-16 at 09:05 -0400, Andrew Yee wrote:\n> Thanks for the suggestion.\n> \n> However, I've tried sapply and data.matrix.\n> \n> The problem is that it while it returns a numeric matrix, it gives\n> back:\n> \n> 1 1 1\n> 2 2 2\n> 3 3 3\n> \n> instead of\n> \n> 1 2 3 \n> 4 5 6\n> 7 8 9\n> \n> The latter matrix is the desired result\n> \n> Thanks,\n> Andrew\n\nOK.  One more time with gusto...\n\nWe need to coerce the values to character first, since they are read in\nas factors and the results that we are seeing are the numeric values of\nthe factor levels and not the numeric values themselves.\n\nOy...\n\nmat <- sapply(sample.data[-1, -1], \n              function(x) as.numeric(as.character(x)))\n\nrownames(mat) <- rownames(sample.data[-1, -1])\n\n> mat\n  x y z\n2 1 2 3\n3 4 5 6\n4 7 8 9\n\n> str(mat)\n num [1:3, 1:3] 1 4 7 2 5 8 3 6 9\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:3] \"2\" \"3\" \"4\"\n  ..$ : chr [1:3] \"x\" \"y\" \"z\"\n\n\nIt looks like data.matrix() does not do the character coercion\ninternally, so the above approach would seem to be better.\n\nSorry about that.\n\nAnother alternative would be to use the modifications to the read.csv()\nfunction call that I referenced initially and then use the result for\nyour subsequent manipulations.\n\nMarc\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}