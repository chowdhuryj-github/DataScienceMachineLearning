{"category": "ham", "to_address": "R-help <R-help@stat.math.ethz.ch>", "from_address": "Ajay Shah <ajayshah@mayin.org>", "subject": "[R] How consistent is predict() syntax?", "body": "I have a situation where lagged values of a time-series are used to\npredict future values. I have packed together the time-series and the\nlagged values into a data frame:\n\n> str(D)\n'data.frame':   191 obs. of  13 variables:\n $ y    : num  -0.21 -2.28 -2.71 2.26 -1.11 1.71 2.63 -0.45 -0.11 4.79\n ...\n $ y.l1 : num  NA -0.21 -2.28 -2.71 2.26 -1.11 1.71 2.63 -0.45 -0.11\n ...\n $ y.l2 : num  NA NA -0.21 -2.28 -2.71 2.26 -1.11 1.71 2.63 -0.45 ...\n $ y.l3 : num  NA NA NA -0.21 -2.28 -2.71 2.26 -1.11 1.71 2.63 ...\n $ y.l4 : num  NA NA NA NA -0.21 -2.28 -2.71 2.26 -1.11 1.71 ...\n $ y.l5 : num  NA NA NA NA NA -0.21 -2.28 -2.71 2.26 -1.11 ...\n $ y.l6 : num  NA NA NA NA NA NA -0.21 -2.28 -2.71 2.26 ...\n $ y.l7 : num  NA NA NA NA NA NA NA -0.21 -2.28 -2.71 ...\n $ y.l8 : num  NA NA NA NA NA NA NA NA -0.21 -2.28 ...\n $ y.l9 : num  NA NA NA NA NA NA NA NA NA -0.21 ...\n $ y.l10: num  NA NA NA NA NA NA NA NA NA NA ...\n $ y.l11: num  NA NA NA NA NA NA NA NA NA NA ...\n $ y.l12: num  NA NA NA NA NA NA NA NA NA NA ...\n\nI have:\n\n> insample <- 1:179\n> outsample <- 180:191\n\nTo help you see what is going on:\n\n> D[outsample,]\n     y y.l1 y.l2 y.l3 y.l4 y.l5 y.l6 y.l7 y.l8  y.l9 y.l10 y.l11 y.l12\n180 NA 8.81 8.53 5.68 5.97 9.75 7.20 7.63 4.73 12.24 10.76  8.13  9.82\n181 NA   NA 8.81 8.53 5.68 5.97 9.75 7.20 7.63  4.73 12.24 10.76  8.13\n182 NA   NA   NA 8.81 8.53 5.68 5.97 9.75 7.20  7.63  4.73 12.24 10.76\n183 NA   NA   NA   NA 8.81 8.53 5.68 5.97 9.75  7.20  7.63  4.73 12.24\n184 NA   NA   NA   NA   NA 8.81 8.53 5.68 5.97  9.75  7.20  7.63  4.73\n185 NA   NA   NA   NA   NA   NA 8.81 8.53 5.68  5.97  9.75  7.20  7.63\n186 NA   NA   NA   NA   NA   NA   NA 8.81 8.53  5.68  5.97  9.75  7.20\n187 NA   NA   NA   NA   NA   NA   NA   NA 8.81  8.53  5.68  5.97  9.75\n188 NA   NA   NA   NA   NA   NA   NA   NA   NA  8.81  8.53  5.68  5.97\n189 NA   NA   NA   NA   NA   NA   NA   NA   NA    NA  8.81  8.53  5.68\n190 NA   NA   NA   NA   NA   NA   NA   NA   NA    NA    NA  8.81  8.53\n191 NA   NA   NA   NA   NA   NA   NA   NA   NA    NA    NA    NA  8.81\n\nNow this works nicely:\n\n> library(rpart)\n> predict(rpart(y ~ ., D[insample,], na.action=na.omit), newdata=D[outsample,])\n     180      181      182      183      184      185      186  187 \n7.551724 7.551724 7.551724 7.551724 7.551724 7.551724 7.551724  6.057636 \n     188      189      190      191 \n6.057636 6.057636 6.057636 6.057636 \n\nBut when I try to do:\n\n> library(randomForest)\n> predict(randomForest(y ~ ., D[insample,], na.action=na.omit), newdata=D[outsample,])\n[1]\n 7.71523\n\nI don't seem to get a vector of twelve predictions; I only get one\nprediction. Is it the case that randomForest doesn't like missing\ndata? Is there anything I can do about it?\n\nFurther, when I try to do this:\n\n> library(e1071)\n> predict(svm(y ~ ., D[insample,], na.action=na.omit), newdata=D[outsample,])\nError in `names<-.default`(`*tmp*`, value = c(\"180\", \"181\", \"182\", \"183\",  : \n      'names' attribute [12] must be the same length as the vector [0]\n\nAny idea how I should approach this? Is there a generic interface to\nthe wide range of statistical tools in doing prediction?\n\n-- \nAjay Shah                                      http://www.mayin.org/ajayshah  \najayshah@mayin.org                             http://ajayshahblog.blogspot.com\n<*(:-? - wizard who doesn't know the answer.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}