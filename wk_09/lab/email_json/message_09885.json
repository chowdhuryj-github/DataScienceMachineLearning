{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22371 - in branches/SAMBA_4_0/source/lib/util: .", "body": "Author: metze\nDate: 2007-04-19 13:30:07 +0000 (Thu, 19 Apr 2007)\nNew Revision: 22371\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22371\n\nLog:\nreadd discard_const() to lib/util/util.h\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/lib/util/util.h\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/util/util.h\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/util.h\t2007-04-19 13:13:09 UTC (rev 22370)\n+++ branches/SAMBA_4_0/source/lib/util/util.h\t2007-04-19 13:30:07 UTC (rev 22371)\n@@ -42,6 +42,33 @@\n #include \"lib/util/util_proto.h\"\n \n /**\n+  this is a warning hack. The idea is to use this everywhere that we\n+  get the \"discarding const\" warning from gcc. That doesn't actually\n+  fix the problem of course, but it means that when we do get to\n+  cleaning them up we can do it by searching the code for\n+  discard_const.\n+\n+  It also means that other error types aren't as swamped by the noise\n+  of hundreds of const warnings, so we are more likely to notice when\n+  we get new errors.\n+\n+  Please only add more uses of this macro when you find it\n+  _really_ hard to fix const warnings. Our aim is to eventually use\n+  this function in only a very few places.\n+\n+  Also, please call this via the discard_const_p() macro interface, as that\n+  makes the return type safe.\n+*/\n+#ifndef discard_const\n+#define discard_const(ptr) ((void *)((intptr_t)(ptr)))\n+#endif\n+\n+/** Type-safe version of discard_const */\n+#ifndef discard_const_p\n+#define discard_const_p(type, ptr) ((type *)discard_const(ptr))\n+#endif\n+\n+/**\n  * assert macros \n  */\n #define SMB_ASSERT(b) do { if (!(b)) { \\\n\n"}