{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "kai@samba.org", "subject": "svn commit: samba r23606 - in branches: SAMBA_3_0/source/script\n\tSAMBA_3_0_26/source/script", "body": "Author: kai\nDate: 2007-06-26 09:10:30 +0000 (Tue, 26 Jun 2007)\nNew Revision: 23606\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23606\n\nLog:\nMerge Samba4 mkversion.sh to Samba3.\n\nModified:\n   branches/SAMBA_3_0/source/script/mkversion.sh\n   branches/SAMBA_3_0_26/source/script/mkversion.sh\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/script/mkversion.sh\n===================================================================\n--- branches/SAMBA_3_0/source/script/mkversion.sh\t2007-06-26 06:04:14 UTC (rev 23605)\n+++ branches/SAMBA_3_0/source/script/mkversion.sh\t2007-06-26 09:10:30 UTC (rev 23606)\n@@ -16,12 +16,19 @@\n SAMBA_VERSION_MAJOR=`sed -n 's/^SAMBA_VERSION_MAJOR=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_MINOR=`sed -n 's/^SAMBA_VERSION_MINOR=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_RELEASE=`sed -n 's/^SAMBA_VERSION_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_REVISION=`sed -n 's/^SAMBA_VERSION_REVISION=//p' $SOURCE_DIR$VERSION_FILE`\n+\n+SAMBA_VERSION_TP_RELEASE=`sed -n 's/^SAMBA_VERSION_TP_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_PRE_RELEASE=`sed -n 's/^SAMBA_VERSION_PRE_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_RC_RELEASE=`sed -n 's/^SAMBA_VERSION_RC_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_IS_SVN_SNAPSHOT=`sed -n 's/^SAMBA_VERSION_IS_SVN_SNAPSHOT=//p' $SOURCE_DIR$VERSION_FILE`\n+\n+SAMBA_VERSION_RELEASE_NICKNAME=`sed -n 's/^SAMBA_VERSION_RELEASE_NICKNAME=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_VENDOR_SUFFIX=`sed -n 's/^SAMBA_VERSION_VENDOR_SUFFIX=//p' $SOURCE_DIR$VERSION_FILE`\n-SAMBA_VENDOR_PATCH=`sed -n 's/^SAMBA_VENDOR_PATCH=//p' $SOURCE_DIR$VERSION_FILE`\n+SAMBA_VERSION_VENDOR_PATCH=`sed -n 's/^SAMBA_VERSION_VENDOR_PATCH=//p' $SOURCE_DIR$VERSION_FILE`\n \n echo \"/* Autogenerated by script/mkversion.sh */\" > $OUTPUT_FILE\n \n@@ -37,12 +44,15 @@\n \n \n ##\n-## maybe add \"3.0.22a\" or \"3.0.22pre1\" or \"3.0.22rc1\"\n+## maybe add \"3.0.22a\" or \"4.0.0tp11\" or \"3.0.22pre1\" or \"3.0.22rc1\"\n ## We do not do pre or rc version on patch/letter releases\n ##\n if test -n \"${SAMBA_VERSION_REVISION}\";then\n     SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}${SAMBA_VERSION_REVISION}\"\n     echo \"#define SAMBA_VERSION_REVISION \\\"${SAMBA_VERSION_REVISION}\\\"\" >> $OUTPUT_FILE\n+elif test -n \"${SAMBA_VERSION_TP_RELEASE}\";then\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}tp${SAMBA_VERSION_TP_RELEASE}\"\n+    echo \"#define SAMBA_VERSION_TP_RELEASE ${SAMBA_VERSION_TP_RELEASE}\" >> $OUTPUT_FILE\n elif test -n \"${SAMBA_VERSION_PRE_RELEASE}\";then\n     ## maybe add \"3.0.22pre2\"\n     SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}pre${SAMBA_VERSION_PRE_RELEASE}\"\n@@ -53,70 +63,123 @@\n fi\n \n ##\n-## Add the vendor string if present\n-##\n-if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n-    echo \"#define SAMBA_VERSION_VENDOR_SUFFIX ${SAMBA_VERSION_VENDOR_SUFFIX}\" >> $OUTPUT_FILE\n-    if test -n \"${SAMBA_VENDOR_PATCH}\";then\n-        echo \"#define SAMBA_VENDOR_PATCH ${SAMBA_VENDOR_PATCH}\" >> $OUTPUT_FILE\n-    fi\n-fi\n-\n-\n-\n-##\n ## SVN revision number? \n ##\n if test x\"${SAMBA_VERSION_IS_SVN_SNAPSHOT}\" = x\"yes\";then\n     _SAVE_LANG=${LANG}\n     LANG=\"\"\n-    HAVESVN=no\n-    svn info ${SOURCE_DIR} >/dev/null 2>&1 && HAVESVN=yes\n-    TMP_REVISION=`(svn info ${SOURCE_DIR} 2>/dev/null || svk info ${SOURCE_DIR} 2>/dev/null) |grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n-    if test x\"${HAVESVN}\" = x\"no\";then\n+    HAVEVER=\"no\"\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+    \tHAVESVN=no\n+    \tSVN_INFO=`svn info ${SOURCE_DIR} 2>/dev/null`\n+    \tTMP_REVISION=`echo -e \"${SVN_INFO}\" | grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n+    \tif test -n \"$TMP_REVISION\"; then\n+\t    HAVESVN=yes\n+\t    HAVEVER=yes\n+    \tfi\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n \tHAVESVK=no\n-\tsvk info ${SOURCE_DIR} >/dev/null 2>&1 && HAVESVK=yes\n-\tTMP_MIRRORED_REVISION=`(svk info ${SOURCE_DIR} 2>/dev/null) |grep 'Mirrored From:.*samba\\.org.*' |sed -e 's/Mirrored From: .* Rev\\..* \\([0-9]*\\).*/\\1/'`\n+\tSVK_INFO=`svk info ${SOURCE_DIR} 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${SVK_INFO}\" | grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\"; then\n+\t    HAVESVK=yes\n+\t    HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${SVK_INFO}\" | grep 'Mirrored From:.*samba\\.org.*' |sed -e 's/Mirrored From: .* Rev\\..* \\([0-9]*\\).*/\\1/'`\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+    \tHAVEBZR=no\n+\tBZR_INFO=`bzr version-info --check-clean ${SOURCE_DIR} 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${BZR_INFO}\" | grep 'revno:' |sed -e 's/revno: \\([0-9]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\"; then\n+\t    HAVEBZR=yes\n+\t    HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${BZR_INFO}\" | grep 'revision-id: svn-v1:.*@0c0555d6-39d7-0310-84fc-f1cc0bd64818' |sed -e 's/revision-id: svn-v1:\\([0-9]*\\)@0c0555d6-39d7-0310-84fc-f1cc0bd64818.*/\\1/'`\n+\tTMP_BRANCH_NICK=`echo -e \"${BZR_INFO}\" | grep 'branch-nick:' |sed -e 's/branch-nick: \\(.*\\)$/\\1/'`\n+\tTMP_CLEAN_TREE=`echo -e \"${BZR_INFO}\" | grep 'clean:' |sed -e 's/clean: \\([a-zA-Z]*\\).*/\\1/'`\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+\tHAVEGIT=no\n+        GIT_INFO=`git show --abbrev-commit HEAD 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${GIT_INFO}\" | grep 'commit ' |sed -e 's/commit \\([0-9a-f]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\";then\n+\t    HAVEGIT=yes\n+            HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${GIT_INFO}\" | grep 'git-svn-id' |sed -e 's#^[ ^t]*git-svn-id: svn+ssh://svn.samba.org/data/svn/samba/branches/\\(SAMBA_[34]_[0-9]\\(_[0-9]\\+\\)\\?@[0-9]*\\).*#\\1#'`\n+    fi\n+\t\n+\n+    if test x\"${HAVESVN}\" = x\"yes\";then\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-${TMP_REVISION}\"\n+\techo \"#define SAMBA_VERSION_SVN_REVISION ${TMP_REVISION}\" >> $OUTPUT_FILE\n+    elif test x\"${HAVESVK}\" = x\"yes\";then\n \tif test -n \"$TMP_MIRRORED_REVISION\"; then\n \t    TMP_SVK_REVISION_STR=\"${TMP_REVISION}-${USER}@${HOSTNAME}-[SVN-${TMP_MIRRORED_REVISION}]\"\n \telse\n \t    TMP_SVK_REVISION_STR=\"${TMP_REVISION}-${USER}@${HOSTNAME}\"\n \tfi\n-\tif test x\"${HAVESVK}\" = x\"no\";then\n-\t    HAVEBZR=no\n-\t    bzr revno > /dev/null 2>&1 && HAVEBZR=yes\n-\t    TMP_BZR_REVNO=`bzr revno 2> /dev/null`\n-\t    TMP_BZR_NICK=`bzr nick 2> /dev/null`\n-\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_NICK}-${TMP_BZR_REVNO}\"\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVK-build-${TMP_SVK_REVISION_STR}\"\n+    elif test x\"${HAVEBZR}\" = x\"yes\";then\n+\tTMP_BZR_REVISION_STR=\"${TMP_REVISION}\"\n+\n+\tif test -n \"$TMP_BRANCH_NICK\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}${TMP_MOD_STR}@${TMP_BRANCH_NICK}\"\n \tfi\n-    fi\n \n-    if test x\"${HAVESVN}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-${TMP_REVISION}\"\n-\t    echo \"#define SAMBA_VERSION_SVN_REVISION ${TMP_REVISION}\" >> $OUTPUT_FILE\n-    elif test x\"${HAVESVK}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVK-build-${TMP_SVK_REVISION_STR}\"\n-    elif test x\"${HAVEBZR}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-BZR-build-${TMP_BZR_REVISION_STR}\"\n+\tif test -n \"$TMP_MIRRORED_REVISION\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}-[SVN-${TMP_MIRRORED_REVISION}]\"\n+\tfi\n+\n+\tif test  x\"$TMP_CLEAN_TREE\" != x\"True\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}-[modified]\"\n+\tfi\n+\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-BZR-${TMP_BZR_REVISION_STR}\"\n+    elif test x\"${HAVEGIT}\" = x\"yes\";then\n+\tTMP_GIT_REVISION_STR=\"${TMP_REVISION}\"\n+\n+\tif test -n \"$TMP_MIRRORED_REVISION\"; then\n+\t    TMP_GIT_REVISION_STR=\"${TMP_GIT_REVISION_STR}-[SVN-${TMP_MIRRORED_REVISION}]\"\n+\tfi\n+\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-GIT-${TMP_GIT_REVISION_STR}\"\n     else\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-UNKNOWN\"\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-UNKNOWN\"\n     fi\n     LANG=${_SAVE_LANG}\n fi\n \n echo \"#define SAMBA_VERSION_OFFICIAL_STRING \\\"${SAMBA_VERSION_STRING}\\\"\" >> $OUTPUT_FILE\n \n+##\n+## Add the vendor string if present\n+##\n+if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n+    echo \"#define SAMBA_VERSION_VENDOR_SUFFIX ${SAMBA_VERSION_VENDOR_SUFFIX}\" >> $OUTPUT_FILE\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-${SAMBA_VERSION_VENDOR_SUFFIX}\"\n+    if test -n \"${SAMBA_VERSION_VENDOR_PATCH}\";then\n+        echo \"#define SAMBA_VERSION_VENDOR_PATCH ${SAMBA_VERSION_VENDOR_PATCH}\" >> $OUTPUT_FILE\n+        SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-${SAMBA_VERSION_VENDOR_PATCH}\"\n+    fi\n+fi\n+\n+##\n+## Add a release nickname\n+##\n+if test -n \"${SAMBA_VERSION_RELEASE_NICKNAME}\";then\n+    echo \"#define SAMBA_VERSION_RELEASE_NICKNAME ${SAMBA_VERSION_RELEASE_NICKNAME}\" >> $OUTPUT_FILE\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING} (${SAMBA_VERSION_RELEASE_NICKNAME})\"\n+fi\n+\n echo \"#define SAMBA_VERSION_STRING samba_version_string()\" >> $OUTPUT_FILE\n \n-echo \"$0: 'include/version.h' created for Samba(\\\"${SAMBA_VERSION_STRING}\\\")\"\n+echo \"$0: '$OUTPUT_FILE' created for Samba(\\\"${SAMBA_VERSION_STRING}\\\")\"\n \n-if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n-    echo -n \"$0: with VENDOR_SUFFIX = \\\"\"\n-    echo -n ${SAMBA_VERSION_VENDOR_SUFFIX} | sed 's/\"//g'\n-    if test -n ${SAMBA_VENDOR_PATCH}; then\n-       echo -n \"-${SAMBA_VENDOR_PATCH}\"\n-   fi\n-   echo \"\\\"\"\n-fi\n-\n exit 0\n\nModified: branches/SAMBA_3_0_26/source/script/mkversion.sh\n===================================================================\n--- branches/SAMBA_3_0_26/source/script/mkversion.sh\t2007-06-26 06:04:14 UTC (rev 23605)\n+++ branches/SAMBA_3_0_26/source/script/mkversion.sh\t2007-06-26 09:10:30 UTC (rev 23606)\n@@ -16,12 +16,19 @@\n SAMBA_VERSION_MAJOR=`sed -n 's/^SAMBA_VERSION_MAJOR=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_MINOR=`sed -n 's/^SAMBA_VERSION_MINOR=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_RELEASE=`sed -n 's/^SAMBA_VERSION_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_REVISION=`sed -n 's/^SAMBA_VERSION_REVISION=//p' $SOURCE_DIR$VERSION_FILE`\n+\n+SAMBA_VERSION_TP_RELEASE=`sed -n 's/^SAMBA_VERSION_TP_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_PRE_RELEASE=`sed -n 's/^SAMBA_VERSION_PRE_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n SAMBA_VERSION_RC_RELEASE=`sed -n 's/^SAMBA_VERSION_RC_RELEASE=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_IS_SVN_SNAPSHOT=`sed -n 's/^SAMBA_VERSION_IS_SVN_SNAPSHOT=//p' $SOURCE_DIR$VERSION_FILE`\n+\n+SAMBA_VERSION_RELEASE_NICKNAME=`sed -n 's/^SAMBA_VERSION_RELEASE_NICKNAME=//p' $SOURCE_DIR$VERSION_FILE`\n+\n SAMBA_VERSION_VENDOR_SUFFIX=`sed -n 's/^SAMBA_VERSION_VENDOR_SUFFIX=//p' $SOURCE_DIR$VERSION_FILE`\n-SAMBA_VENDOR_PATCH=`sed -n 's/^SAMBA_VENDOR_PATCH=//p' $SOURCE_DIR$VERSION_FILE`\n+SAMBA_VERSION_VENDOR_PATCH=`sed -n 's/^SAMBA_VERSION_VENDOR_PATCH=//p' $SOURCE_DIR$VERSION_FILE`\n \n echo \"/* Autogenerated by script/mkversion.sh */\" > $OUTPUT_FILE\n \n@@ -37,12 +44,15 @@\n \n \n ##\n-## maybe add \"3.0.22a\" or \"3.0.22pre1\" or \"3.0.22rc1\"\n+## maybe add \"3.0.22a\" or \"4.0.0tp11\" or \"3.0.22pre1\" or \"3.0.22rc1\"\n ## We do not do pre or rc version on patch/letter releases\n ##\n if test -n \"${SAMBA_VERSION_REVISION}\";then\n     SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}${SAMBA_VERSION_REVISION}\"\n     echo \"#define SAMBA_VERSION_REVISION \\\"${SAMBA_VERSION_REVISION}\\\"\" >> $OUTPUT_FILE\n+elif test -n \"${SAMBA_VERSION_TP_RELEASE}\";then\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}tp${SAMBA_VERSION_TP_RELEASE}\"\n+    echo \"#define SAMBA_VERSION_TP_RELEASE ${SAMBA_VERSION_TP_RELEASE}\" >> $OUTPUT_FILE\n elif test -n \"${SAMBA_VERSION_PRE_RELEASE}\";then\n     ## maybe add \"3.0.22pre2\"\n     SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}pre${SAMBA_VERSION_PRE_RELEASE}\"\n@@ -53,70 +63,123 @@\n fi\n \n ##\n-## Add the vendor string if present\n-##\n-if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n-    echo \"#define SAMBA_VERSION_VENDOR_SUFFIX ${SAMBA_VERSION_VENDOR_SUFFIX}\" >> $OUTPUT_FILE\n-    if test -n \"${SAMBA_VENDOR_PATCH}\";then\n-        echo \"#define SAMBA_VENDOR_PATCH ${SAMBA_VENDOR_PATCH}\" >> $OUTPUT_FILE\n-    fi\n-fi\n-\n-\n-\n-##\n ## SVN revision number? \n ##\n if test x\"${SAMBA_VERSION_IS_SVN_SNAPSHOT}\" = x\"yes\";then\n     _SAVE_LANG=${LANG}\n     LANG=\"\"\n-    HAVESVN=no\n-    svn info ${SOURCE_DIR} >/dev/null 2>&1 && HAVESVN=yes\n-    TMP_REVISION=`(svn info ${SOURCE_DIR} 2>/dev/null || svk info ${SOURCE_DIR} 2>/dev/null) |grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n-    if test x\"${HAVESVN}\" = x\"no\";then\n+    HAVEVER=\"no\"\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+    \tHAVESVN=no\n+    \tSVN_INFO=`svn info ${SOURCE_DIR} 2>/dev/null`\n+    \tTMP_REVISION=`echo -e \"${SVN_INFO}\" | grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n+    \tif test -n \"$TMP_REVISION\"; then\n+\t    HAVESVN=yes\n+\t    HAVEVER=yes\n+    \tfi\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n \tHAVESVK=no\n-\tsvk info ${SOURCE_DIR} >/dev/null 2>&1 && HAVESVK=yes\n-\tTMP_MIRRORED_REVISION=`(svk info ${SOURCE_DIR} 2>/dev/null) |grep 'Mirrored From:.*samba\\.org.*' |sed -e 's/Mirrored From: .* Rev\\..* \\([0-9]*\\).*/\\1/'`\n+\tSVK_INFO=`svk info ${SOURCE_DIR} 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${SVK_INFO}\" | grep 'Last Changed Rev.*:' |sed -e 's/Last Changed Rev.*: \\([0-9]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\"; then\n+\t    HAVESVK=yes\n+\t    HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${SVK_INFO}\" | grep 'Mirrored From:.*samba\\.org.*' |sed -e 's/Mirrored From: .* Rev\\..* \\([0-9]*\\).*/\\1/'`\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+    \tHAVEBZR=no\n+\tBZR_INFO=`bzr version-info --check-clean ${SOURCE_DIR} 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${BZR_INFO}\" | grep 'revno:' |sed -e 's/revno: \\([0-9]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\"; then\n+\t    HAVEBZR=yes\n+\t    HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${BZR_INFO}\" | grep 'revision-id: svn-v1:.*@0c0555d6-39d7-0310-84fc-f1cc0bd64818' |sed -e 's/revision-id: svn-v1:\\([0-9]*\\)@0c0555d6-39d7-0310-84fc-f1cc0bd64818.*/\\1/'`\n+\tTMP_BRANCH_NICK=`echo -e \"${BZR_INFO}\" | grep 'branch-nick:' |sed -e 's/branch-nick: \\(.*\\)$/\\1/'`\n+\tTMP_CLEAN_TREE=`echo -e \"${BZR_INFO}\" | grep 'clean:' |sed -e 's/clean: \\([a-zA-Z]*\\).*/\\1/'`\n+    fi\n+\n+    if test x\"${HAVEVER}\" != x\"yes\";then\n+\tHAVEGIT=no\n+        GIT_INFO=`git show --abbrev-commit HEAD 2>/dev/null`\n+\tTMP_REVISION=`echo -e \"${GIT_INFO}\" | grep 'commit ' |sed -e 's/commit \\([0-9a-f]*\\).*/\\1/'`\n+\tif test -n \"$TMP_REVISION\";then\n+\t    HAVEGIT=yes\n+            HAVEVER=yes\n+\tfi\n+\tTMP_MIRRORED_REVISION=`echo -e \"${GIT_INFO}\" | grep 'git-svn-id' |sed -e 's#^[ ^t]*git-svn-id: svn+ssh://svn.samba.org/data/svn/samba/branches/\\(SAMBA_[34]_[0-9]\\(_[0-9]\\+\\)\\?@[0-9]*\\).*#\\1#'`\n+    fi\n+\t\n+\n+    if test x\"${HAVESVN}\" = x\"yes\";then\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-${TMP_REVISION}\"\n+\techo \"#define SAMBA_VERSION_SVN_REVISION ${TMP_REVISION}\" >> $OUTPUT_FILE\n+    elif test x\"${HAVESVK}\" = x\"yes\";then\n \tif test -n \"$TMP_MIRRORED_REVISION\"; then\n \t    TMP_SVK_REVISION_STR=\"${TMP_REVISION}-${USER}@${HOSTNAME}-[SVN-${TMP_MIRRORED_REVISION}]\"\n \telse\n \t    TMP_SVK_REVISION_STR=\"${TMP_REVISION}-${USER}@${HOSTNAME}\"\n \tfi\n-\tif test x\"${HAVESVK}\" = x\"no\";then\n-\t    HAVEBZR=no\n-\t    bzr revno > /dev/null 2>&1 && HAVEBZR=yes\n-\t    TMP_BZR_REVNO=`bzr revno 2> /dev/null`\n-\t    TMP_BZR_NICK=`bzr nick 2> /dev/null`\n-\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_NICK}-${TMP_BZR_REVNO}\"\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVK-build-${TMP_SVK_REVISION_STR}\"\n+    elif test x\"${HAVEBZR}\" = x\"yes\";then\n+\tTMP_BZR_REVISION_STR=\"${TMP_REVISION}\"\n+\n+\tif test -n \"$TMP_BRANCH_NICK\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}${TMP_MOD_STR}@${TMP_BRANCH_NICK}\"\n \tfi\n-    fi\n \n-    if test x\"${HAVESVN}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-${TMP_REVISION}\"\n-\t    echo \"#define SAMBA_VERSION_SVN_REVISION ${TMP_REVISION}\" >> $OUTPUT_FILE\n-    elif test x\"${HAVESVK}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVK-build-${TMP_SVK_REVISION_STR}\"\n-    elif test x\"${HAVEBZR}\" = x\"yes\";then\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-BZR-build-${TMP_BZR_REVISION_STR}\"\n+\tif test -n \"$TMP_MIRRORED_REVISION\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}-[SVN-${TMP_MIRRORED_REVISION}]\"\n+\tfi\n+\n+\tif test  x\"$TMP_CLEAN_TREE\" != x\"True\"; then\n+\t    TMP_BZR_REVISION_STR=\"${TMP_BZR_REVISION_STR}-[modified]\"\n+\tfi\n+\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-BZR-${TMP_BZR_REVISION_STR}\"\n+    elif test x\"${HAVEGIT}\" = x\"yes\";then\n+\tTMP_GIT_REVISION_STR=\"${TMP_REVISION}\"\n+\n+\tif test -n \"$TMP_MIRRORED_REVISION\"; then\n+\t    TMP_GIT_REVISION_STR=\"${TMP_GIT_REVISION_STR}-[SVN-${TMP_MIRRORED_REVISION}]\"\n+\tfi\n+\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-GIT-${TMP_GIT_REVISION_STR}\"\n     else\n-\t    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-UNKNOWN\"\n+\tSAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-SVN-build-UNKNOWN\"\n     fi\n     LANG=${_SAVE_LANG}\n fi\n \n echo \"#define SAMBA_VERSION_OFFICIAL_STRING \\\"${SAMBA_VERSION_STRING}\\\"\" >> $OUTPUT_FILE\n \n+##\n+## Add the vendor string if present\n+##\n+if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n+    echo \"#define SAMBA_VERSION_VENDOR_SUFFIX ${SAMBA_VERSION_VENDOR_SUFFIX}\" >> $OUTPUT_FILE\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-${SAMBA_VERSION_VENDOR_SUFFIX}\"\n+    if test -n \"${SAMBA_VERSION_VENDOR_PATCH}\";then\n+        echo \"#define SAMBA_VERSION_VENDOR_PATCH ${SAMBA_VERSION_VENDOR_PATCH}\" >> $OUTPUT_FILE\n+        SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING}-${SAMBA_VERSION_VENDOR_PATCH}\"\n+    fi\n+fi\n+\n+##\n+## Add a release nickname\n+##\n+if test -n \"${SAMBA_VERSION_RELEASE_NICKNAME}\";then\n+    echo \"#define SAMBA_VERSION_RELEASE_NICKNAME ${SAMBA_VERSION_RELEASE_NICKNAME}\" >> $OUTPUT_FILE\n+    SAMBA_VERSION_STRING=\"${SAMBA_VERSION_STRING} (${SAMBA_VERSION_RELEASE_NICKNAME})\"\n+fi\n+\n echo \"#define SAMBA_VERSION_STRING samba_version_string()\" >> $OUTPUT_FILE\n \n-echo \"$0: 'include/version.h' created for Samba(\\\"${SAMBA_VERSION_STRING}\\\")\"\n+echo \"$0: '$OUTPUT_FILE' created for Samba(\\\"${SAMBA_VERSION_STRING}\\\")\"\n \n-if test -n \"${SAMBA_VERSION_VENDOR_SUFFIX}\";then\n-    echo -n \"$0: with VENDOR_SUFFIX = \\\"\"\n-    echo -n ${SAMBA_VERSION_VENDOR_SUFFIX} | sed 's/\"//g'\n-    if test -n ${SAMBA_VENDOR_PATCH}; then\n-       echo -n \"-${SAMBA_VENDOR_PATCH}\"\n-   fi\n-   echo \"\\\"\"\n-fi\n-\n exit 0\n\n"}