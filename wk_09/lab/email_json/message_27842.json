{"category": "ham", "to_address": "beginners perl <beginners@perl.org>", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: regexp ...", "body": "Chas Owens wrote:\n> On 5/11/07, oryann9  wrote:\n>>\n>> > > > Now I am trying to break up string into\n>> > individual\n>> > > > chars, but this does not seem to work:\n>> > > snip\n>> > >\n>> > > The idiomatic way is\n>> > >\n>> > > for my $chr (split //, $str) {\n>> > > }\n>> >\n>> > Funny I had to explain split /|/, $str returning an\n>> > array of characters.\n>> >\n>> > --\n>> > Ken Foskey\n>> > FOSS developer\n>> >\n>>\n>> Excellent Ken,\n>>\n>> thank you, but why the pipe | and how does this differ\n>> from ' ' or \\s+.  I used Dumper and it showed the\n>> array of chars, but want to understand.\n>>\n> \n> Any pattern that can match nothing (a so-called null pattern) will\n> split a string on nothing leaving you with a list of characters. ' '\n> and \\s+ matches all consecutive white space, so they are not null\n> patterns and split on the matched value (whitespace).\n> \n> #!/usr/bin/perl\n> \n> use strict;\n> use warnings;\n> \n> my $str = \"abc def ghi\";\n> print join(\",\", split //, $str),\"\\n\";\n> print join(\",\", split /(?:ABC)*/, $str),\"\\n\";\n> print join(\",\", split /|/, $str),\"\\n\";\n> \n> print join(\",\", split \" \", $str),\"\\n\";\n> print join(\",\", split /\\s+/, $str),\"\\n\";\n> \n> a,b,c, ,d,e,f, ,g,h,i\n> a,b,c, ,d,e,f, ,g,h,i\n> a,b,c, ,d,e,f, ,g,h,i\n> abc,def,ghi\n> abc,def,ghi\n\n  use strict;\n  use warnings;\n\n  my $str = '  abc def ghi  ';\n\n  print join(\",\", split \" \", $str),\"\\n\";\n  print join(\",\", split /\\s+/, $str),\"\\n\";\n\n**OUTPUT**\n\nabc,def,ghi\n,abc,def,ghi\n\n\nRob\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}