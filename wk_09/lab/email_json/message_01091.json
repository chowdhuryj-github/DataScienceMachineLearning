{"category": "ham", "to_address": "parrot-porters@perl.org", "from_address": "Jonathan Worthington <jonathan@jnthn.net>", "subject": "Class/Role namespace links", "body": "Hi,\n\nTonight I started working on the association between classes and \nnamespaces as specified in PDD15. Have some questions.\n\n1) I added a \"slot\" to the NameSpace PMC to hold a Class or Role PMC a \nwhile back. However, there is no interface specified for storing/getting \nat this slot. For now I've added \"set_class\" and \"get_class\" METHODs to \nthe NameSpace PMC. What should these actually be called (if something \nelse)? Whatever is decided on should be added to a PDD somewhere - I \nguess the NameSpce PDD.\n\n2) I see that we now just have a .name method and no .namespace method. \nFor Class, the description of the name method says:\n\n\"The accessor for the name attribute. With no argument, it simply \nreturns the current value for name. When passed an argument, it sets the \nname of the class, and also sets the association with a namespace. With \nno argument it only returns the current value of the name attribute.\"\n\nThat is a little unclear to me. What should the name slot be set to - \nthe name of the most nested bit of the namespace (e.g. for [ \"Animal\" ; \n\"Monkey\" ], name is \"Monkey\")?\n\nAlso, what should it return? Just the name attribute? What if you really \nwant to get at the namespace?\n\nFinally, note that Role says something different - I guess these should \nbe consistent?\n\n3) For Role (but not Class - mistake?), it says:\n\n\"When you associate a class with a namespace, it pulls in all of the \nmethods and vtable methods held within that namespace.\"\n\nAt the moment, we do not carry the \":method\" adverb on subs through to \nthe PBC. Thus while I guess you can iterate a namespace (not tried it \nyet, just assuming you can since it's derived from Hash) and test for \nPMCs to make sure they are Subs. However, beyond that you have no way of \nknowing if it's a method or not (so far as I can see, I'd love to be \ncorrected on this if anyone knows otherwise). Should :method be carried \nthrough to a PBC level?\n\n4) After this it says:\n\n\"And when replacing one class with another in the association, it \nremoves any methods and vtable methods from the previous class.\"\n\nRemove methods from what? The class or the namespace? If the class, does \nit remove all methods from the class then pull in ones from the new \nnamespace? Or do we look at the old namespace and see what methods it \nhas, then remove just ones that appear there?\n\nThanks,\n\nJonathan\n\n"}