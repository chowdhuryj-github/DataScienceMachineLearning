{"category": "ham", "to_address": "\"John W. Krahn\" <krahnj@telus.net>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Re: Text Formatters", "body": "John W. Krahn wrote:\n> Mathew Snyder wrote:\n>> Question regarding the text formatting modules out there.  I've found three on\n>> CPAN that seem to have the functionality that I'm looking for but I don't know\n>> which would best suit my needs.  The three are Text::Format, Text::Wrapper and\n>> Text::Autoformat.\n>>\n>> I have a script which populates and email with data that gets laid out in the\n>> following manner:\n>>\n>> customer_name\n>>  Ticket ID                      Subject                     hh:mm\n>> -----------------------------------------------------------------\n>>     ######  Random Ticket Subject Line                      ##:##\n>>\n>> However, the subject length is not a constant.  It can be quite short (maybe a\n>> few characters long) to much longer than the alloted space I've given using\n>> 'printf'.  So, I'd like to be able to do things like wrap the text at a certain\n>> length so that it might look something like this:\n>>\n>> customer_name\n>>  Ticket ID                      Subject                     hh:mm\n>> -----------------------------------------------------------------\n>>     ######  Random Ticket Subject Line Which Might End Up   ##:##\n>>             Longer Than The Allocated Space Using printf\n>>     ######  Next Random Ticket Subject Line                 ##:##\n>>\n>> Of the three formatting options I've found, which might be my best bet to handle\n>> something of this nature.  Also, after deciding which is the better option, how\n>> would I go about printing the data out?  Can I populate variables with\n>> pre-formatted text or would I perhaps do something with a printf command that\n>> uses a call to one of the formatting methods?\n>>\n>> Any help would be appreciated.\n> \n> $ perl -e'\n> my $customer_name = \"customer_name\";\n> my @records = (\n>     [ 1234, \"Random Ticket Subject Line Which Might End Up Longer Than The\n> Allocated Space Using printf\", \"12:50\" ],\n>     [ 1235, \"Next Random Ticket Subject Line\", \"12:53\" ],\n>     );\n> \n> \n> my ( $ticket, $subject, $time );\n> \n> format STDOUT_TOP =\n> @<<<<<<<<<<<<<<\n> $customer_name\n>  Ticket ID                      Subject                     hh:mm\n> -----------------------------------------------------------------\n> .\n> format STDOUT =\n>     @#####  ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<   @>>>>\n>     $ticket, $subject, $time\n> ~~          ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n>             $subject\n> .\n> \n> for my $record ( @records ) {\n>     ( $ticket, $subject, $time ) = @$record;\n>     write;\n>     }\n> '\n> customer_name\n>  Ticket ID                      Subject                     hh:mm\n> -----------------------------------------------------------------\n>       1234  Random Ticket Subject Line Which Might End Up   12:50\n>             Longer Than The Allocated Space Using printf\n>       1235  Next Random Ticket Subject Line                 12:53\n> \n> \n> \n> \n> John\n\nThanks for enlightening me about 'format'\n\nI've run your example code from the command line and got exactly the results you\ndid (not that I'd expect to get anything different ;) ).  I then attempted to\nincorporate the idea into my script:\n\nforeach my $user (keys %tikNums) {\n        open TIMESHEET, \">/work_reports/ticketlists_$endDate/ticketlist_$user.txt\";\n        print TIMESHEET \"List of tickets worked on by $user during week ending\n$endDate\", \"\\n\\n\";\n        foreach my $env (sort keys %{ $tikNums{$user} }){\n                #Print the header for our data\n                print TIMESHEET $env . \"\\n\";\n                printf TIMESHEET \"%10s%10s\\n\", \"Ticket ID\",\"hh:mm\";\n                print TIMESHEET (\"-\" x 20);\n                print TIMESHEET \"\\n\";\n                foreach my $id (sort keys %{ $tikNums{$user}{$env} }) {\n                        format STDOUT_TOP =\n                                @<<<<<<<<<<<<<<<<<<<<\n                                $env\n                                  Ticket ID                         Subject\n                    hh:mm\n\n-------------------------------------------------------------------------\n                        .\n                        format STDOUT =\n                                    @######\n^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  @>>:>>\n                                        $id, $tikSubj{$id},\n$tikNums{$user}{$env}{$id}\n                                ~~\n^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n                                     $tikSubj{$id}\n                }\n                write TIMESHEET;\n                print TIMESHEET \"\\n\";\n        }\n        close TIMESHEET;\n}\n\nHowever, when I run the script I get the following error:\nFormat not terminated at ./ticket_lists.pl line 128, at end of line\nsyntax error at ./ticket_lists.pl line 128, at EOF\nExecution of ./ticket_lists.pl aborted due to compilation errors.\n\nLine 128 only contains my 'exit;' statement.  I've got the periods where they\nbelong but can't figure out why it would tell me the format hasn't been terminated.\n\nAny insight will be appreciated.\n\nMathew\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}