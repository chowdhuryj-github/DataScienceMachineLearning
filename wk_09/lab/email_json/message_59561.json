{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Problem with runaway format", "body": "I have a script which places data 4 levels deep in a HoHoHoH.  It grabs tickets\nin our ticket system using the systems API and places attributes about each\npiece of activity into the hash. The has is called %tickets.  It looks like\n\n$tickets{action_creator}{ticket_customer}{ticket_number}{ticket_subject}.\n\nEach is self explanatory with the value under ticket_subject being the total\ntime the action creator spent on the whole ticket.  The actual code\n\n# gather up all of the tickets, transactions, and time for each user and\nsuccessively place\n# all data into a HoHoH working down from user to environment to ticket\n# we go through each date in the range individually so we can make sure we only\nget the transactions that\n# have been added during the date range\nforeach my $date (@searchDate) {\n        while (my $ticket = $tix->Next) {\n                $tikSubj{$ticket->id} = $ticket->Subject;\n                my $env = $ticket->FirstCustomFieldValue('Environment');\n                my $transactions = $ticket->Transactions;\n                while (my $transaction  = $transactions->Next) {\n                        my $creator     = $transaction->CreatorObj;\n\n                        # we need to make sure the transaction is in the date\nrange requested\n                        # it's set up like this so we can chop the timestamp off\nof the Created string\n                        (my $checkDate  = $transaction->Created) =~ s/\\s.*$//;\n\n                        # we only want transactions that are within the date\nrange, have TimeWorked\n                        # set, and the creator of which is one of the actual\nusers and not someone\n                        # that was created upon ticket submission or Cc addition\n                        next unless (($checkDate eq $date) &&\n($creator->Privileged) && ($transaction->TimeTaken));\n\n                        # if all of the above stipulations are met add the time\nworked to the hash\n\n$tickets{$creator->Name}{$env}{$ticket->id}{$ticket->Subject} +=\n$transaction->TimeTaken;\n                }\n        }\n}\n\nAnd the formatting\n\nforeach my $user (keys %tickets) {\n        open TIMESHEET,\n\">/work_reports/ticketlists/ticketlists_$endDate/ticketlist_$user\" . \"_\" .\n\"$endDate.txt\" or die \"Can't open file: $!\";\n        print TIMESHEET \"List of tickets worked on by $user during week ending\n$endDate\", \"\\n\\n\";\n\n        foreach my $env (sort keys %{ $tickets{$user} }){\n\nformat TIMESHEET_TOP =\n@<<<<<<<<<<<<<<<<<<<<\n$env\n Ticket ID                      Subject                      hh:mm\n------------------------------------------------------------------\n.\n\n                write TIMESHEET_TOP;\n\n                foreach my $id (sort keys %{ $tickets{$user}{$env} }) {\n                        foreach my $subject (keys %{ $tickets{$user}{$env}{$id} }) {\nformat TIMESHEET =\n@#########  ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  @>>>>\n           $id, $tickets{$user}{$env}{$id},\n$tickets{$user}{$env}{$id}{$subject}\n~~          ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n            $tickets{$user}{$env}{$id}\n.\n\n                                write TIMESHEET;\n                        }\n                        print TIMESHEET \"\\n\";\n                }\n        }\n}\n\nThe problem didn't surface until I went from using the %tikSubj hash seen near\nthe top of the code snippet to a multi-level hash.  But then, using %tikSubj\npresents its own bug for some reason.\n\nKnowing that you don't know the intricacies of the system I'm working with, I\nwon't be sad if no one has any input ;).\n\nThanks\nMathew\n-- \nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}