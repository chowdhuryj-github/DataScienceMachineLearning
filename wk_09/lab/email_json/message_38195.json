{"category": "ham", "to_address": "beginners@perl.org, perl-beginners@moderators.isc.org", "from_address": "Paul Lalli <mritty@gmail.com>", "subject": "Re: Array of Array refs", "body": "On May 29, 5:30 am, googleA...@screenlight.com (Brian) wrote:\n> On May 28, 6:04 pm, mri...@gmail.com (Paul Lalli) wrote:\n>\n> > On May 28, 3:22 pm, googleA...@screenlight.com (Brian) wrote:\n>\n> > > my variable names end with A for array and H for hash,\n>\n> > Pointless.  Variable names in Perl identify what kind of variable they\n> > are.  @ for arrays, % for hashes.  [ ] for accessing an element of a\n> > hash, { } for accessing element of a hash.\n>\n> no, I disagree. Changing @ to $ is confusing\n\n@ is for entire arrays.  $ is for single elements.  How is that\nconfusing?\n\n>... besides that, my\n> naming\n> is consistent, and helps me understand what I'm writing. I think you\n> missed it on that one\n\nYour method relies on the programmer being consistent.  Perl's built-\nin method is inforced via the compiler.  Your method relies on all\nprogrammers who will ever read or modify your code following the same\nconvention.\n\n> ... its a disservice to beginners to say 'pointless' like that..\n\nYou're right, it's actually worse than pointless, since it's not\nenforceable nor guaranteed, and therefore creates a false sense of\nsecurity.\n\nPaul Lalli\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}