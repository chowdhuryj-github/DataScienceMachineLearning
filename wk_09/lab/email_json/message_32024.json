{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r22987 - in\n\tbranches/SAMBA_4_0/source/auth/kerberos: .", "body": "Author: abartlet\nDate: 2007-05-18 05:47:33 +0000 (Fri, 18 May 2007)\nNew Revision: 22987\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22987\n\nLog:\nClarify how the events are handled in the kerberos code, and\nstandardise with the rest of the code.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/auth/kerberos/krb5_init_context.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/auth/kerberos/krb5_init_context.c\n===================================================================\n--- branches/SAMBA_4_0/source/auth/kerberos/krb5_init_context.c\t2007-05-18 05:21:25 UTC (rev 22986)\n+++ branches/SAMBA_4_0/source/auth/kerberos/krb5_init_context.c\t2007-05-18 05:47:33 UTC (rev 22987)\n@@ -176,21 +176,27 @@\n \tstruct smb_krb5_socket *smb_krb5 = talloc_get_type(private, struct smb_krb5_socket);\n \tswitch (smb_krb5->hi->proto) {\n \tcase KRB5_KRBHST_UDP:\n-\t\tif (flags & EVENT_FD_WRITE) {\n-\t\t\tsmb_krb5_socket_send(smb_krb5);\n-\t\t} \n \t\tif (flags & EVENT_FD_READ) {\n \t\t\tsmb_krb5_socket_recv(smb_krb5);\n+\t\t\treturn;\n \t\t}\n-\t\tbreak;\n+\t\tif (flags & EVENT_FD_WRITE) {\n+\t\t\tsmb_krb5_socket_send(smb_krb5);\n+\t\t\treturn;\n+\t\t}\n+\t\t/* not reached */\n+\t\treturn;\n \tcase KRB5_KRBHST_TCP:\n \t\tif (flags & EVENT_FD_READ) {\n \t\t\tpacket_recv(smb_krb5->packet);\n+\t\t\treturn;\n \t\t}\n \t\tif (flags & EVENT_FD_WRITE) {\n \t\t\tpacket_queue_run(smb_krb5->packet);\n+\t\t\treturn;\n \t\t}\n-\t\tbreak;\n+\t\t/* not reached */\n+\t\treturn;\n \tcase KRB5_KRBHST_HTTP:\n \t\t/* can't happen */\n \t\tbreak;\n@@ -277,9 +283,14 @@\n \t\t}\n \t\ttalloc_free(remote_addr);\n \n+\t\t/* Setup the FDE, start listening for read events\n+\t\t * from the start (otherwise we may miss a socket\n+\t\t * drop) and mark as AUTOCLOSE along with the fde */\n+\n+\t\t/* Ths is equivilant to EVENT_FD_READABLE(smb_krb5->fde) */\n \t\tsmb_krb5->fde = event_add_fd(ev, smb_krb5->sock, \n \t\t\t\t\t     socket_get_fd(smb_krb5->sock), \n-\t\t\t\t\t     EVENT_FD_AUTOCLOSE,\n+\t\t\t\t\t     EVENT_FD_READ|EVENT_FD_AUTOCLOSE,\n \t\t\t\t\t     smb_krb5_socket_handler, smb_krb5);\n \t\t/* its now the job of the event layer to close the socket */\n \t\tsocket_set_flags(smb_krb5->sock, SOCKET_FLAG_NOCLOSE);\n@@ -316,7 +327,6 @@\n \t\t\tRSIVAL(smb_krb5->request.data, 0, send_blob.length);\n \t\t\tmemcpy(smb_krb5->request.data+4, send_blob.data, send_blob.length);\n \t\t\tpacket_send(smb_krb5->packet, smb_krb5->request);\n-\t\t\tEVENT_FD_READABLE(smb_krb5->fde);\n \t\t\tbreak;\n \t\tcase KRB5_KRBHST_HTTP:\n \t\t\ttalloc_free(smb_krb5);\n\n"}