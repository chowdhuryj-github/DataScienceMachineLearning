{"category": "ham", "to_address": "yaron@kahanovitch.com", "from_address": "Mathew Snyder <theillien@yahoo.com>", "subject": "Re: Stuck on a hash referrence, kinda", "body": "Thanks, I found a simpler approach though.  I set a variable to '1' and check it\nin an if statement:\nif ($check == 1) {\n\tPerform steps\n}else{\n\tPerform other steps.\n}\n\nAfter I pass the hashes I need to use for \"Perform steps\" I set the variable to\n'0' and then pass the next set of hashes.  Since the value is no longer '1', the\n\"Perform other steps\" is processed.  Fortunately, I only have two sets of hashes\nso this won't get difficult to maintain.\n\nKeep up with me and what I'm up to: http://theillien.blogspot.com\n\n\nyaron@kahanovitch.com wrote:\n> Hi again,\n> \n> In that case can use the following:\n> if ($dept and exists($dept->{customer}{user}){ ....}else{....}\n> \n> Yaron Kahanovitch\n> ----- Original Message -----\n> From: \"Mathew Snyder\" \n> To: yaron@kahanovitch.com\n> Cc: \"Perl Beginners\" \n> Sent: Sunday, May 13, 2007 10:22:53 AM (GMT+0200) Auto-Detected\n> Subject: Re: Stuck on a hash referrence, kinda\n> \n> That's the problem.  'user' isn't in the first hash.  It's in the second hash.\n> The hash looks like $dept{customer}{user}.  I need to skip $dept{customer} and\n> check for $dept{customer}{user}.\n> \n> Mathew\n> Keep up with me and what I'm up to: http://theillien.blogspot.com\n> \n> \n> yaron@kahanovitch.com wrote:\n>> Hi,\n>>\n>> I am not sure that I understand your problem.\n>> In General if you want to check the existence of the key \"user\" in the first hash, you can use the following\n>>  if ($dept and exists($dept->{user}){ ....}else{....}\n>>\n>>\n>> Hope that helps\n>>\n>>\n>> Yaron Kahanovitch\n>> ----- Original Message -----\n>> From: \"Mathew Snyder\" \n>> To: \"Perl Beginners\" \n>> Sent: Sunday, May 13, 2007 9:54:38 AM (GMT+0200) Auto-Detected\n>> Subject: Stuck on a hash referrence, kinda\n>>\n>> A subroutine I'm working on takes two hash references.  The hashes are each\n>> actually a HoH.\n>>\n>> timesheet(\\%opsTotal, \\%opsEnvTotal);\n>>\n>> The problem I'm having is that I need to look past the first hash and into the\n>> second for the existence of a particular key.  I'm not sure how to go about\n>> doing this.\n>>\n>> sub timesheet {\n>>         my ($dept, $env) = @_;\n>>\n>> #This is where I need help.  'user' is in the second hash but I'm not sure how\n>> #to get past the first one.  Should I use a foreach and step through each key?\n>>         if (exists $dept->{user}) {\n>>                 open TIMESHEET,\n>> \">/work_reports/user/ops_timesheet_weekof_$endDate.txt\";\n>>         }else{\n>>                 open TIMESHEET,\n>> \">/work_reports/user/eng_timesheet_weekof_$endDate.txt\";\n>>         }\n>>\n>>         print TIMESHEET \"Timesheet for $startDate to $endDate\\n\\n\\n\";\n>>\n>>         foreach my $environ (sort keys %$dept) {\n>>                 #Print the header for our data\n>>                 print TIMESHEET \"$environ\", \"\\n\";\n>>                 printf TIMESHEET \"%10s%8s\\n\", \"User\", \"hh:mm\";\n>>                 print TIMESHEET (\"-\" x 30);\n>>                 print TIMESHEET \"\\n\";\n>>                 foreach my $name (sort keys %{ $dept->{$environ} }) {\n>>                         printf TIMESHEET \"%10s%8s\\n\", \"$name\",\n>> \"$dept->{$environ}->{$name}\";\n>>                 }\n>>                 printf TIMESHEET (\"-\" x 30);\n>>                 print  TIMESHEET \"\\n\";\n>>                 printf TIMESHEET \"%18s\\n\\n\", \"$env->{$environ}\";\n>>         }\n>>         close TIMESHEET;\n>> }\n> \n> \n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}