{"category": "ham", "to_address": "Fausto Galli <fausto.galli@lu.unisi.ch>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] surprising difference in log()", "body": "On Tue, 26 Jun 2007, Fausto Galli wrote:\n\n>\n> Hello everybody\n>\n> My collegue and I noticed a strange behaviour of R on different\n> platforms. It's a simple computation, but results are rather different.\n>\n> On Windows XP:\n>\n> > floor(log(8,2))\n> [1] 3\n>\n> which is what one should expect.\n> Here's instead the result with Mac OS X (same version, 2.5.0\n> (2007-04-23))\n>\n> > floor(log(8,2))\n> [1] 2\n>\n> Is it a \"bug\" in R or in the operating system?\n> Anyway, it's quite a surprising one.\n\nIt is a minor problem in the OS.  Given that log(8, 2) is a floating point \ncalculation, it is unreasonable to expect it in general to be exact.  For \nthose OSes that have log2, log2(8) is used and one might reasonably expect \nthat to be exactly 3.  So either MacOS X is lacking log2 or its log2 is \nnot exact.\n\nTaking 'floor' of a floating-point computation without a fuzz is unwise.\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}