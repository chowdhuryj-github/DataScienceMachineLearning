{"category": "spam", "to_address": "<theorize@plg.uwaterloo.ca>", "from_address": "\"Liz Peters\" <uty@glenbraun.com>", "subject": "precision depraved", "body": "\n\n\n\n\n\n\n\nIf it is the first  parameter instead of the last \nparameter, it's no problem. Can you talk about how useful the functional styles \nmight be? Neal Gafter: For example, withLock is a method.\nBill Venners: If that block executes a return, how \ndoes it return from the  enclosing method, which called withLock? I think the main \nbenefit from  adopting that style is when you start using that with the concurrency \nframework  that takes advantage of that.\nActually, there are some places where there are no  \nenclosing methods. Prior to joining Artima, Frank wrote the Jiniology and Web \nservices columns for JavaWorld. Neal Gafter: It's just a parameter, \nright?\nand editor-in-chief of Artima Developer. That is a \nJavaScript file that runs on the client during the GWT bootstrap process, and runs \nany of the logic needed on the client browser to determine what their correct \nproperty values are.\nI don't really have in my mind all of  what that \nlooks like, but I hope to get Spie Lea involved early, before I  actually put out a \nprototype or a compiler that does closures.\nEach recording captures one person's notion of an \nidea that is important for developers to think about. That would be silly, because \nnot  everyone who uses withLock has to deal with  NumberFormatException. Whatever \nexceptions the passed block throws must be  in the throws clause of that method. In \nfact, there is no particular  exception that you can declare in withLock. Frank \nSommers: What types of Java code are the hardest to translate to \nJavaScript?\nBill Venners: So all I have to do to be ready for a \nclosure being passed  to me is that the last parameter is an interface?\nBill Venners: Basically any existing method call at \nthe end, if it's an  interface.\n"}