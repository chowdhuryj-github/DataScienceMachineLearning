{"category": "ham", "to_address": "Sharan Basappa <sharan.basappa@gmail.com>", "from_address": "Tom Allison <tom@tacocat.net>", "subject": "Re: /s, /g and /m modifiers", "body": "There's nothing here to say \"stop at a new line\"\n\nWithout the modifiers the string looks like:\n'one upon a time\\nonce upon a time'\nWhich matches your regex the same way 'once upon a time once upon a  \ntime' would.\n\nwithout the /g you'll match on the first one.\n\nI guess the question is, what do you want it to do?\nDo you want @store to equal ('once', 'once')?\n\nthen you might try (untested):\n\nwhile ($str =~ /(once)/g) {\n   push @store, $1;\n}\n\nor\nwhile ($str =~ /(once)[^\\r\\n]+$/gm) {\n   push @store, $1;\n}\nBut I'm not sure what this second one will give you that the first  \ndoesn't.\n\nOn Jun 1, 2007, at 4:54 AM, Sharan Basappa wrote:\n\n>\n> I have a script as follows  :\n>\n> $str = \"once upon a time\n>        once upon a time\";\n> @store = $str =~ m/(once)/g;\n> print @store ;\n>\n> This outputs \"onceonce\"\n> How come regex is searching beyond newline. I thought the search will\n> stop after first once.\n> When I replace /g with /m, the output I get is \"once\", but I  \n> thought /m will\n> tell regex at multiple lines for match.\n> Also when I replace /g with /s, I still get output \"once\"\n>\n> Can someone demystify this for me ?\n> Is my assumption that regex will stop after encountering first  \n> newline is\n> applicable only when dot* type of regex is used ?\n>\n> Thanks,\n> Sharan\n>\n> -- \n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n>\n>\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}