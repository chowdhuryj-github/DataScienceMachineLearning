{"category": "ham", "to_address": "r-help@r-project.org", "from_address": "\"Zack Weinberg\" <zack@cogsci.ucsd.edu>", "subject": "[R] lattice: aligning independent graphs", "body": "I find myself wanting to plot three graphs side by side 'as if' they\nwere panels -- that is, with the same y-axis limits, no space between\nthe graphs, and precise vertical alignment of the plot areas. However,\nI don't want strip titles; I want each graph to have its own x-axis\nlabel, on the bottom of the plot.\n\nThe best way I have so far found to do this is to fake up a data frame\nthat allows me to use actual panels, turn off the strip, and insert a\nwhole bunch of white space in the x-axis label so it looks like there\nare three separate labels.  Like this:\n\nxyplot(x ~ thing | panel,\n       data=wrong.all,\n       ylab=list(label='% incorrect responses', cex=0.7),\n       xlab=list(label=paste('Trial number                                 ',\n                             'Subject number                              ',\n                             'Experimental condition'), cex=0.7),\n       ylim=c(0,top), col='black', pch=3, strip=F,\n       scales=list(\n         x=list(alternating=c(1,0), tck=c(1,0), cex=0.5, rot=90,\n           relation='free',\n           at=list(\n             seq(0,33,by=5),\n             seq(0,maxsub, by=5),\n             seq(1,length(levels(wrongconds)))),\n           labels=list(seq(0,33,by=5), seq(0,maxsub, by=5),\n             levels(wrongconds))),\n         y=list(at=seq(0,top,by=10), alternating=c(1,0),\n           tck=c(1,1),\n           cex=0.5)),\n       type=list(c('p','smooth'), 'h', 'h'),\n       panel=function(..., type=list(\"p\")) {\n         panel.grid(h=-1, v=0)\n         panel.xyplot(..., type=type[[panel.number()]])\n       })\n\nBut surely there is a better way?\n\nzw\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}