{"category": "ham", "to_address": "\"Paul Lalli\" <mritty@gmail.com>, <beginners@perl.org>,\n   <perl-beginners@moderators.isc.org>", "from_address": "\"Nath, Alok (STSD)\" <alok.nath@hp.com>", "subject": "RE: Simplest hash initialization with no value", "body": " But when decalared this way it gives a warning message :\"Use of\nuninitialized value in concatenation (.) or string at\"\n\t\nin a print statement which is something like this :\n\n\t\tmy %myhash = map { $_ => undef } qw/A B C D E F G H I J\nK/;\n\t\tforeach my $key (%myhash){\n\t\t\tprint $myhash{$key}\n\t\t} \n\n\n-----Original Message-----\nFrom: Paul Lalli [mailto:mritty@gmail.com] \nSent: Friday, June 01, 2007 4:39 PM\nTo: beginners@perl.org; perl-beginners@moderators.isc.org\nSubject: Re: Simplest hash initialization with no value\n\nOn Jun 1, 6:08 am, alok.n...@hp.com (Alok Nath) wrote:\n\n> Why it gives syntax error when -\n>         my @myhash{qw/A B/} = ();\n\nEr... because it's not valid syntax.  That's why you'd get a syntax\nerror. Not sure what you're asking. You can't \"declare\" a hash slice.\nYou declare variables.\n\n> It works when I say -\n>         my %myhash ;\n>         @myhash{qw/A B/} = ();\n\nRight.  Because that is valid syntax.  First you declare %myhash, then\nyou initialize two keys of that hash using a slice.\n\nYour original question was \"how to initialize a hash\".  It's apparent\nnow that you wanted to know how to \"declare and initialize a hash in one\nstep\".  This question comes up so frequently that it really should be a\nFAQ.  The way you did so was fine originally.  What's wrong with it?  If\nyou have a longer list of keys, you could use the map operator as a\nshortcut, so you don't write 'undef' multiple times:\n\nmy %myhash = map { $_ => undef } qw/A B C D E F G H I J K/;\n\nPaul Lalli\n\n\n--\nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org For additional\ncommands, e-mail: beginners-help@perl.org http://learn.perl.org/\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}