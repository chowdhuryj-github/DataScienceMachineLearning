{"category": "ham", "to_address": "Terry Therneau <therneau@mayo.edu>", "from_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "subject": "Re: [R] stringsAsFactor global option (was \"character coerced to a\n factor\")", "body": "On Mon, 23 Apr 2007, Terry Therneau wrote:\n\n> --- Gabor Grothendieck \n> wrote:\n>\n>> Just one caveat.  I personally would try to avoid\n>> using\n>> global options since it can cause conflicts when\n>> two different programs assume two different settings\n>> of the same global option and need to interact.\n>\n>   I see this argument often, and don't buy it.  In any case, for this\n> particular option, the Mayo biostatistics group (~120 users) has had\n> stringsAsFactors=F as a global default for 15+ years now with no ill effects.\n> It is much less confusing for both new and old users.\n>\n>   Johh Kane asked \"Any idea what the rationale was for setting the\n> option to TRUE?\"  When factors were first introduced, there was no option\n> to turn them off.  Reading between the lines of the white book (Statistical\n> Models in S) that introduced them, this is my guess: they made perfect sense for\n> the particular data sets that were being analysed by the authors at the time.\n> Many of the defaults in the survival package, which I wrote, have exactly the\n> same rationale --- so let us not be too harsh on an author for not forseeing\n> all the future consequences of a default!\n>\n>  A place where factors really are a pain is when the patient id is a character\n> string.  When, for instance, you subset the data to do an analysis of only\n> the females, having the data set `remember' all of the male id's (the original\n> levels) is non-productive in dozens of ways.  For other variables factors\n> work well and have some nice properties.  In general, I've found in my work\n> (medical research) that factors are beneficial for about 1/5 of the character\n> variables, a PITA for 1/4, and a wash for the rest; so prefer to do any\n> transformations myself.\n>\n> For the historically curious:\n>   In Splus, one originally fixed this with an override of the function\n>   \tas.data.frame.character <- as.data.frame.vector\n> before they added the global option.  In R, unfortunately, this override\n> didn't work due to namespaces, and we had to wait for the option to be\n> added.  (Another dammed-if-you-do dammed-if-you-don't issue.  Normally you\n> don't want users to be able to override a base function, because 9 times out\n> of 10 they did it by accident and dont' want it either.  But when a user really\n> does want to do so ...)\n\nThat is what 'assignInNamespace' is for (and it came in with namespaces).\n\n-- \nBrian D. Ripley,                  ripley@stats.ox.ac.uk\nProfessor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\nUniversity of Oxford,             Tel:  +44 1865 272861 (self)\n1 South Parks Road,                     +44 1865 272866 (PA)\nOxford OX1 3TG, UK                Fax:  +44 1865 272595\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}