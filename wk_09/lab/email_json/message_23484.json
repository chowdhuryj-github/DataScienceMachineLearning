{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 260: - take advantage of the new EVENT_FD_AUTOCLOSE flag in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 260\nrevision-id: tridge@samba.org-20070505071959-wvf5a3e37mch3vy3\nparent: tridge@samba.org-20070505071843-gdt3kgn66sa3xds0\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-05-05 17:19:59 +1000\nmessage:\n  - take advantage of the new EVENT_FD_AUTOCLOSE flag\n  - use the tdb_chainlock_mark() call to allow us to guarantee forward progress in the ctdb_lockwait code\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_io.c               ctdb_io.c-20070409200335-dzfc7f3rra5rcf60-1\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\n  common/ctdb_ltdb.c             ctdb_ltdb.c-20061128065342-to93h6eejj5kon81-2\n  common/ctdb_traverse.c         ctdb_traverse.c-20070503021550-ztfs5rwx8jfm8qqx-1\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-05-05 04:09:46 +0000\n+++ b/common/ctdb_daemon.c\t2007-05-05 07:19:59 +0000\n@@ -249,8 +249,6 @@\n {\n \tctdb_reqid_remove(client->ctdb, client->client_id);\n \tclient->ctdb->status.num_clients--;\n-\tclose(client->fd);\n-\tclient->fd = -1;\n \treturn 0;\n }\n \n@@ -678,8 +676,8 @@\n \n \n \tctdb->ev = event_context_init(NULL);\n-\tfde = event_add_fd(ctdb->ev, ctdb, fd[0], EVENT_FD_READ, ctdb_read_from_parent, &fd[0]);\n-\tfde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ, ctdb_accept_client, ctdb);\n+\tfde = event_add_fd(ctdb->ev, ctdb, fd[0], EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_read_from_parent, &fd[0]);\n+\tfde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ|EVENT_FD_AUTOCLOSE, ctdb_accept_client, ctdb);\n \tctdb_main_loop(ctdb);\n \n \treturn 0;\n@@ -720,7 +718,7 @@\n \ttalloc_set_destructor(domain_socket_name, unlink_destructor);\t\n \n \tctdb->ev = event_context_init(NULL);\n-\tfde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ, \n+\tfde = event_add_fd(ctdb->ev, ctdb, ctdb->daemon.sd, EVENT_FD_READ|EVENT_FD_AUTOCLOSE, \n \t\t\t   ctdb_accept_client, ctdb);\n \tctdb_main_loop(ctdb);\n \n\n=== modified file 'common/ctdb_io.c'\n--- a/common/ctdb_io.c\t2007-05-03 02:16:03 +0000\n+++ b/common/ctdb_io.c\t2007-05-05 07:19:59 +0000\n@@ -273,7 +273,7 @@\n \tqueue->fde = NULL;\n \n \tif (fd != -1) {\n-\t\tqueue->fde = event_add_fd(queue->ctdb->ev, queue, fd, EVENT_FD_READ, \n+\t\tqueue->fde = event_add_fd(queue->ctdb->ev, queue, fd, EVENT_FD_READ|EVENT_FD_AUTOCLOSE, \n \t\t\t\t\t  queue_io_handler, queue);\n \t\tif (queue->fde == NULL) {\n \t\t\treturn -1;\n\n=== modified file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t2007-04-23 21:33:37 +0000\n+++ b/common/ctdb_lockwait.c\t2007-05-05 07:19:59 +0000\n@@ -29,11 +29,13 @@\n \n struct lockwait_handle {\n \tstruct ctdb_context *ctdb;\n+\tstruct ctdb_db_context *ctdb_db;\n \tstruct fd_event *fde;\n \tint fd[2];\n \tpid_t child;\n \tvoid *private_data;\n \tvoid (*callback)(void *);\n+\tTDB_DATA key;\n \tstruct timeval start_time;\n };\n \n@@ -45,19 +47,30 @@\n \tvoid (*callback)(void *) = h->callback;\n \tvoid *p = h->private_data;\n \tpid_t child = h->child;\n+\tTDB_DATA key = h->key;\n+\tstruct tdb_context *tdb = h->ctdb_db->ltdb->tdb;\n+\tTALLOC_CTX *tmp_ctx = talloc_new(ev);\n+\n+\ttalloc_free(fde);\n+\n+\tkey.dptr = talloc_memdup(tmp_ctx, key.dptr, key.dsize);\n+\n \ttalloc_set_destructor(h, NULL);\n-\tclose(h->fd[0]);\n \tctdb_latency(&h->ctdb->status.max_lockwait_latency, h->start_time);\n \th->ctdb->status.pending_lockwait_calls--;\n-\ttalloc_free(h);\t\n+\n+\ttdb_chainlock_mark(tdb, key);\n \tcallback(p);\n+\ttdb_chainlock_unmark(tdb, key);\n+\n+\tkill(child, SIGKILL);\n \twaitpid(child, NULL, 0);\n+\ttalloc_free(tmp_ctx);\n }\n \n static int lockwait_destructor(struct lockwait_handle *h)\n {\n \th->ctdb->status.pending_lockwait_calls--;\n-\tclose(h->fd[0]);\n \tkill(h->child, SIGKILL);\n \twaitpid(h->child, NULL, 0);\n \treturn 0;\n@@ -84,7 +97,7 @@\n \tctdb_db->ctdb->status.lockwait_calls++;\n \tctdb_db->ctdb->status.pending_lockwait_calls++;\n \n-\tif (!(result = talloc_zero(ctdb_db, struct lockwait_handle))) {\n+\tif (!(result = talloc_zero(private_data, struct lockwait_handle))) {\n \t\tctdb_db->ctdb->status.pending_lockwait_calls--;\n \t\treturn NULL;\n \t}\n@@ -110,13 +123,15 @@\n \tresult->callback = callback;\n \tresult->private_data = private_data;\n \tresult->ctdb = ctdb_db->ctdb;\n+\tresult->ctdb_db = ctdb_db;\n+\tresult->key = key;\n \n \tif (result->child == 0) {\n+\t\tchar c = 0;\n \t\tclose(result->fd[0]);\n-\t\t/*\n-\t\t * Do we need a tdb_reopen here?\n-\t\t */\n \t\ttdb_chainlock(ctdb_db->ltdb->tdb, key);\n+\t\twrite(result->fd[1], &c, 1);\n+\t\tpause();\n \t\t_exit(0);\n \t}\n \n@@ -124,7 +139,7 @@\n \ttalloc_set_destructor(result, lockwait_destructor);\n \n \tresult->fde = event_add_fd(ctdb_db->ctdb->ev, result, result->fd[0],\n-\t\t\t\t   EVENT_FD_READ, lockwait_handler,\n+\t\t\t\t   EVENT_FD_READ|EVENT_FD_AUTOCLOSE, lockwait_handler,\n \t\t\t\t   (void *)result);\n \tif (result->fde == NULL) {\n \t\ttalloc_free(result);\n\n=== modified file 'common/ctdb_ltdb.c'\n--- a/common/ctdb_ltdb.c\t2007-05-04 12:18:00 +0000\n+++ b/common/ctdb_ltdb.c\t2007-05-05 07:19:59 +0000\n@@ -193,7 +193,6 @@\n {\n \tstruct lock_fetch_state *state = talloc_get_type(p, struct lock_fetch_state);\n \tstate->recv_pkt(state->recv_context, (uint8_t *)state->hdr, state->hdr->length);\n-\ttalloc_free(state);\n \tDEBUG(2,(__location__ \" PACKET REQUEUED\\n\"));\n }\n \n@@ -252,7 +251,7 @@\n \t\treturn 0;\n \t}\n \n-\tstate = talloc(ctdb_db, struct lock_fetch_state);\n+\tstate = talloc(hdr, struct lock_fetch_state);\n \tstate->ctdb = ctdb_db->ctdb;\n \tstate->hdr = hdr;\n \tstate->recv_pkt = recv_pkt;\n\n=== modified file 'common/ctdb_traverse.c'\n--- a/common/ctdb_traverse.c\t2007-05-04 01:41:29 +0000\n+++ b/common/ctdb_traverse.c\t2007-05-05 07:19:59 +0000\n@@ -74,7 +74,6 @@\n  */\n static int traverse_local_destructor(struct ctdb_traverse_local_handle *h)\n {\n-\tclose(h->fd[0]);\n \tkill(h->child, SIGKILL);\n \twaitpid(h->child, NULL, 0);\n \treturn 0;\n\n"}