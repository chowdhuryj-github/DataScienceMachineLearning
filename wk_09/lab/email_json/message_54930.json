{"category": "ham", "to_address": "Ana Patricia Martins <ana.pmartins@ine.pt>", "from_address": "Marc Schwartz <marc_schwartz@comcast.net>", "subject": "Re: [R] simultaneous actions of grep ???", "body": "On Mon, 2007-06-25 at 11:58 -0500, Marc Schwartz wrote:\n> On Mon, 2007-06-25 at 17:15 +0100, Ana Patricia Martins wrote:\n> > Hello R-users and developers,\n> > \n> > Once again, I'm asking for your help.\n> > \n> > There is other way to do the same more easily for applied simultaneous\n> > grep???\n> >   \n> >     c<-subset(c,!rownames(c) %in% grep(\".1\",rownames(c),value=T))\n> >     c<-subset(c,!rownames(c) %in% grep(\".5\",rownames(c),value=T))\n> >     c<-subset(c,!rownames(c) %in% grep(\".6\",rownames(c),value=T))\n> >     c<-subset(c,!rownames(c) %in% grep(\".99999\",rownames(c),value=T))\n> > \n> > Thanks in advance for helping me.\n> \n> One question might be what other possible values can the rownames take.\n> \n> For example, if you want to check for '.99999', but not for other values\n> containing a '9' after the decimal, something like the following should\n> work:\n> \n> sub.c <- subset(c, \n>                 !rownames(c) %in% \n>                 grep(\"\\\\.([156])|([9]{5})\", rownames(c), \n>                      value = TRUE))\n> \n> Otherwise, if you want to include anything with a '9' after a decimal,\n> the following would work:\n> \n> sub.c <- subset(c, \n>                 !rownames(c) %in% \n>                 grep(\"\\\\.[1569]\", rownames(c), value = TRUE))\n> \n> \n> See ?regex and the information there for some additional guidance. There\n> are also many regex references online, such as:\n> \n>   http://www.regular-expressions.info/\n> \n> BTW, it would be preferable not to use 'c' to name an object in R, since\n> c() is a function. While conflicts should, in general, not occur, it\n> eliminates such risk and makes for more easily readable code to not use\n> function names for objects.\n\nQuick possible correction:\n\nI mis-read the regex as containing a decimal, which would need to be\nescaped as I had. \n\nIf your use of the '.' is to refer to any character, then the following\nwould be correct:\n\nsub.c <- subset(c, \n                !rownames(c) %in% \n                grep(\".([156])|([9]{5})\", rownames(c), \n                     value = TRUE))\n\nor\n\nsub.c <- subset(c, \n                !rownames(c) %in% \n                grep(\".[1569]\", rownames(c), value = TRUE))\n\n\nSorry for the confusion.\n\nMarc\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}