{"category": "ham", "to_address": "Nikolay Ananiev <ananiev@thegdb.com>", "from_address": "Nicholas Clark <nick@ccl4.org>", "subject": "Re: Is Parrot 1.0 too late?", "body": "On Wed, Apr 25, 2007 at 11:48:07AM +0300, Nikolay Ananiev wrote:\n\n> Maybe we have to search harder for new ways to advertise Parrot to other\n> communities and get new developers and supporters to the project.\n> Currently, Parrot looks too Perlish and is mainly supported by the Perl \n> community.\n> I think that has to change.\n\nDo you have any ideas on how to achieve this?\n\nI guess that the most obvious current thing that ties Parrot to the Perl\ncommunity is that Parrot requires a copy of Perl to bootstrap, and all the\nbuild tools are written in Perl 5.\n\nI know that Perl 5's build system attempts to get a minimal Perl 5 binary\nbootstrapped as early as possible, and then does the rest of the build using\nPerl 5 programs running on it. I've just tried out Ruby, Python and Lua.\nAkin to Perl, Ruby builds a miniruby, and then uses that to build the\nextensions. Python doesn't build a minipython, but does use the Python binary\nas part of the extension build process. Lua is the odd one out - it doesn't\nship with a Configure script, just a Makefile, and doesn't appear to build\nanything outside the main source directory.\n\nSo Parrot is the odd one out here, for relying on an external language for\nits extended build process. I'm not sure if this is significant.\n\nNicholas Clark\n\n"}