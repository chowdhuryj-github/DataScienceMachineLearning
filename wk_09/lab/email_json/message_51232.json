{"category": "ham", "to_address": "Federico Calboli <f.calboli@imperial.ac.uk>", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] non permanent change of vector values", "body": "On 20/06/2007 6:46 AM, Federico Calboli wrote:\n> Hi All,\n> \n> I have the following problem: I have a vector\n> \n> x = rep(0,15)\n> x[1:2] = 1\n> x\n>   [1] 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n> \n> I need to be able to call that vector 'x' so that if condition 'A' is true, only \n> the first value is kept 'as is' and all the others are put to 0\n> \n> if(A == T)\n> \n> function(x) with x returning 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n> \n> and if 'A' is false the second value is kept 'as is' and all the others are put to 0\n> \n> if(A == F)\n> \n> function(x) with x returning 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n> \n> BUT, and that's the rub, I need x to changed in a *non permanent* way, so that \n> at the end x is still\n> \n> x\n>   [1] 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n> \n> (that is because condition 'A' might be called again and could be different in \n> it's T/F state from previous calls).\n\nSimply make a function that does what you want:\n\nmodifyx <- function(x, A) {\n   if (A) x[-1] <- 0\n   else x[-2] <- 0\n   x\n}\n\nthen call your function by passing modifyx(x, A) instead of just x.\n\nYou don't need to put A or x in the argument list of the function, but \nit probably makes sense to do so.\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}