{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Juerd Waalboer <juerd@convolution.nl>", "subject": "Re: Is Perl 6 too late?", "body": "Thomas Wittek skribis 2007-05-15  1:03 (+0200):\n> > On the other hand, the overall structure of a program is often more\n> > obvious, exactly because so much more fits in one screenful.\n> My suggestions won't have an impact on the expressiveness of Perl.\n\nNot so.\n\nConsider /@foo/, which is an alternation of all the elements of @foo.\nThat's not \"just\" interpolation, it's something very smart, and even\nwithout seeing the context that this regex is in, I know how to read\nthis. I don't have to scroll back up to find out that \"foo\" was once\nassigned an array.\n\n> So in many cases you might have even less characters on your screen.\n\nLess characters isn't always better. Often it's worse, sometimes it's\nbetter. It appears to me a hell of a job to find out when it's what, and\nI think Larry figured it out quite well.\n\n> Of course some special character sequences would be replaced by word\n> character sequences, but that won't fill your screen by a magnitude.\n\nOf course. Every symbol can be substituted for a word comma but that\ndoesn apostrophe t automatically make code easier to read period I think\na language needs a good balance between symbols and letters comma and\nfor a programming language comma I think alternating between the two is\nclose to a perfect balance comma whereas in human languages once, every\n$few (words) is.probably; \"period\"\n-- \nkorajn salutojn,\n\n  juerd waalboer:  perl hacker   \n  convolution:     ict solutions and consultancy \n"}