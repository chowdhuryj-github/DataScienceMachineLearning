{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "Leopold Toetsch <lt@toetsch.at>", "subject": "Re: [svn:parrot] r18414 - in trunk: lib/Parrot src", "body": "Am Samstag, 5. Mai 2007 10:00 schrieb chromatic:\n> On Thursday 03 May 2007 18:04:48 chromatic wrote:\n> > I'll debug the segfault and see if that reveals anything interesting.\n> >\n> > The shootout tests are dodgy anyway sometimes.\n>\n> In this case, sorting the vtable functions put the init vtable method\n> pointer in the middle of the _vtable struct, not at the start.  The i386\n> and sun4 JIT operations looked for init as the first vtable method to use\n> it as an offset into the struct.  You can guess what happens when you not\n> only get the wrong offset for the vtable method pointer you want but also\n> dereference way past the end of the struct where you probably don't have a\n> function pointer at all... KAPOW!\n\nIndeed. I just wanted to post a mail re the problem. Good catch.\n\n> Here's the fix (r18423), for fun:\n>\n> --- src/jit/sun4/jit_emit.h     (revision 3381)\n> +++ src/jit/sun4/jit_emit.h     (local)\n> @@ -849,7 +849,7 @@\n>      int    idx, pi, i;\n>      size_t offset;\n>\n> -    offset  = offsetof(VTABLE, init);\n> +    offset  = offsetof(VTABLE, absolute);\n                                  ^^^^^^^^\n\nThis also looks a bit fragile, albeit 'absolute' has a good chance to sort \nfirst alphabetically. \n\nAnd from vtable.tbl:\n\n# $Id: vtable.tbl 18274 2007-04-18 02:24:20Z chromatic $\n# [MAIN] #default section name\n\n# MMD_EQ ... MMD_STRCMP must be in one block\n# see src/mmd.c\n\n# INPLACE MMD variant must always be normal op + 1\n\nvoid init()\n# init must be first for JITed vtable meths\n\nleo\n\n"}