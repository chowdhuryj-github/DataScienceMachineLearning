{"category": "ham", "to_address": "beginners@perl.org", "from_address": "usenet@DavidFilmer.com", "subject": "Re: Adding a line in a file inside many directories", "body": "On Jun 28, 12:00 pm, vedpsi...@gmail.com (Ved) wrote:\n> Now I have to print a single line at say line number 20 in each of 150\n> number of  kat.s file.\n\nHey, another chance to show off my favorite Perl module, IO::All.\n\n> Situation is bit complex (atleast for a beginer like me).\n\nActually it is so simple (with IO::All) that you're gonna think I'm\npulling your leg...\n\n#!/usr/bin/perl\n   use strict;\n   use warnings;\n   use IO::All;\n\n   my $dir = '/tmp/clpm';   #root directory of data\n   my $line = 19;           #print line 20 (first line is line zero)\n   my $file = 'kat.s';      #match this filename\n\n   map {print \"@$_[$line]\\n\"}\n      io($dir)->filter(sub{$_->filename eq $file})->all_files(0);\n\n__END__\n\n\n\nThat's it.  Really.\n\nIO::All is a proxy to a bunch of I/O modules.  In this case, it is\ndoing two things:\n\n   io($dir)->filter(sub{$_->filename eq $file})->all_files(0);\n\nThis uses File::Find to recurse all directories below $dir and find\nall files named 'kat.s'.\n\n   map {print \"@$_[$line]\\n\"}\n\nThis uses Tie::File to treat the file like an array; I print the line\nI want (line #20, which is array element #19).\n\nIO::All provides all of your basic error-handling services, so no need\nto futz around with that.\n\nCheers!\n\n\n--\nThe best way to get a good answer is to ask a good question.\nDavid Filmer (http://DavidFilmer.com)\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}