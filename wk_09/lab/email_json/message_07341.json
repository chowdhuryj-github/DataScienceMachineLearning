{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 122: partial merge from volker (some overlaps removed) in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 122\nrevision-id: tridge@samba.org-20070417012659-f05788b9fd8c5d2e\nparent: tridge@samba.org-20070417012000-dd8a85395a077110\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Tue 2007-04-17 11:26:59 +1000\nmessage:\n  partial merge from volker (some overlaps removed)\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_lockwait.c         ctdb_lockwait.c-20070416214118-n1aeonljj3vpdd9q-1\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-04-14 21:41:35 +0000\n+++ b/common/ctdb_daemon.c\t2007-04-17 01:26:59 +0000\n@@ -186,6 +186,24 @@\n \tstruct client_fetch_lock_data *fl_data;\n \n \tctdb_db = find_ctdb_db(client->ctdb, f->db_id);\n+\tif (ctdb_db == NULL) {\n+\t\tstruct ctdb_reply_fetch_lock r;\n+\n+\t\tZERO_STRUCT(r);\n+\t\tr.hdr.length       = sizeof(r);\n+\t\tr.hdr.ctdb_magic   = CTDB_MAGIC;\n+\t\tr.hdr.ctdb_version = CTDB_VERSION;\n+\t\tr.hdr.operation    = CTDB_REPLY_FETCH_LOCK;\n+\t\tr.hdr.reqid        = f->hdr.reqid;\n+\t\tr.state            = -1;\n+\n+\t\t/*\n+\t\t * Ignore the result, there's not much we can do anyway.\n+\t\t */\n+\t\tctdb_queue_send(client->queue, (uint8_t *)&r.hdr,\n+\t\t\t\tr.hdr.length);\n+\t\treturn;\n+\t}\n \n \tkey.dsize = f->keylen;\n \tkey.dptr = &f->key[0];\n@@ -220,6 +238,12 @@\n \tint res;\n \n \tctdb_db = find_ctdb_db(client->ctdb, f->db_id);\n+\tif (ctdb_db == NULL) {\n+\t\tctdb_set_error(client->ctdb, \"Could not find database %i\",\n+\t\t\t       f->db_id);\n+\t\tres = -1;\n+\t\tgoto done;\n+\t}\n \n \t/* write the data to ltdb */\n \tkey.dsize = f->keylen;\n\n=== modified file 'common/ctdb_lockwait.c'\n--- a/common/ctdb_lockwait.c\t2007-04-16 23:14:52 +0000\n+++ b/common/ctdb_lockwait.c\t2007-04-17 01:26:59 +0000\n@@ -71,48 +71,54 @@\n  */\n struct lockwait_handle *ctdb_lockwait(struct ctdb_db_context *ctdb_db,\n \t\t\t\t      TDB_DATA key,\n-\t\t\t\t      void (*callback)(void *), void *private_data)\n+\t\t\t\t      void (*callback)(void *private_data),\n+\t\t\t\t      void *private_data)\n {\n-\tstruct lockwait_handle *h;\n+\tstruct lockwait_handle *result;\n \tint ret;\n \n-\th = talloc_zero(ctdb_db, struct lockwait_handle);\n-\tif (h == NULL) {\n+\tif (!(result = talloc_zero(ctdb_db, struct lockwait_handle))) {\n \t\treturn NULL;\n \t}\n \n-\tret = pipe(h->fd);\n+\tret = pipe(result->fd);\n+\n \tif (ret != 0) {\n-\t\ttalloc_free(h);\n-\t\treturn NULL;\n-\t}\n-\n-\th->child = fork();\n-\tif (h->child == (pid_t)-1) {\n-\t\tclose(h->fd[0]);\n-\t\tclose(h->fd[1]);\n-\t\ttalloc_free(h);\n-\t\treturn NULL;\n-\t}\n-\n-\th->callback = callback;\n-\th->private_data = private_data;\n-\n-\tif (h->child == 0) {\n-\t\tstruct tdb_context *tdb = ctdb_db->ltdb->tdb;\n-\t\t/* in child */\n-\t\ttdb_chainlock(tdb, key);\n-\t\t_exit(0);\n-\t}\n-\n-\tclose(h->fd[1]);\n-\ttalloc_set_destructor(h, lockwait_destructor);\n-\n-\th->fde = event_add_fd(ctdb_db->ctdb->ev, h, h->fd[0], EVENT_FD_READ, lockwait_handler, h);\n-\tif (h->fde == NULL) {\n-\t\ttalloc_free(h);\n-\t\treturn NULL;\n-\t}\n-\n-\treturn h;\n+\t\ttalloc_free(result);\n+\t\treturn NULL;\n+\t}\n+\n+\tresult->child = fork();\n+\n+\tif (result->child == (pid_t)-1) {\n+\t\tclose(result->fd[0]);\n+\t\tclose(result->fd[1]);\n+\t\ttalloc_free(result);\n+\t\treturn NULL;\n+\t}\n+\n+\tresult->callback = callback;\n+\tresult->private_data = private_data;\n+\n+\tif (result->child == 0) {\n+\t\tclose(result->fd[0]);\n+\t\t/*\n+\t\t * Do we need a tdb_reopen here?\n+\t\t */\n+\t\ttdb_chainlock(ctdb_db->ltdb->tdb, key);\n+\t\texit(0);\n+\t}\n+\n+\tclose(result->fd[1]);\n+\ttalloc_set_destructor(result, lockwait_destructor);\n+\n+\tresult->fde = event_add_fd(ctdb_db->ctdb->ev, result, result->fd[0],\n+\t\t\t\t   EVENT_FD_READ, lockwait_handler,\n+\t\t\t\t   (void *)result);\n+\tif (result->fde == NULL) {\n+\t\ttalloc_free(result);\n+\t\treturn NULL;\n+\t}\n+\n+\treturn result;\n }\n\n"}