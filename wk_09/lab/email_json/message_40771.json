{"category": "ham", "to_address": "perl6-internals List <perl6-internals@perl.org>", "from_address": "Andy Lester <andy@petdance.com>", "subject": "SET_NULL", "body": " From include/parrot/parrot.h:\n\n/* weird architectures might need this, s. C-FAQ 5.17\n*\n* the SET_NULL macros are only for system, where a NULL pointer\n* isn't represented by zeroes, so don't use these, for resetting\n* non-null pointers\n*/\n\n#ifdef HAS_NON_ZERO_NULL\n#  define SET_NULL(x) x = NULL\n#  define SET_NULL_P(x, s) x = (s)NULL\n#else\n#  define SET_NULL(x)\n#  define SET_NULL_P(x, s)\n#endif /* HAS_NON_ZERO_NULL */\n\n\nThis seems very wrong.  SET_NULL() isn't actually setting any values  \nif not HAS_NON_ZERO_NULL.  Is there some reason it's not actually\n\n#  define SET_NULL(x)      x = 0\n#  define SET_NULL_P(x, s) x = (s)NULL\n\nAnd for that matter, what's wrong with just using x = NULL  \neverywhere?  Why do we need a macro to do this?\n\nxoxo,\nAndy\n\n\n--\nAndy Lester => andy@petdance.com => www.petdance.com => AIM:petdance\n\n\n\n\n"}