{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Larry Wall <larry@wall.org>", "subject": "Re: [svn:perl6-synopsis] r14385 - doc/trunk/design/syn", "body": "On Fri, Apr 27, 2007 at 03:57:41PM -0400, John Macdonald wrote:\n: On Fri, Apr 27, 2007 at 08:46:04AM -0700, larry@cvs.perl.org wrote:\n: > +The matches are guaranteed to be returned in left-to-right order with\n: > +respect to the starting positions.  The order within each starting\n: > +position is not guaranteed and may depend on the nature of both the\n: > +pattern and the matching engine.  (Conjecture: or we could enforce\n: > +backtracking engine semantics.  Or we could guarantee no order at all\n: > +unless the pattern starts with \"::\" or some such to suppress DFAish\n: > +solutions.)\n: \n: Are you sure you want to guarantee left-to-right starting\n: position order?  If there are multiple processors available, and\n: in a lazy context, it may be preferrable to not guarantee any\n: order.  Then, if one processor that starts at a later position\n: but which finds a match quickly while another processor starts\n: earlier but needs to take a lot longer to find its first match,\n: the lazy processing can start working on the first match found\n: at the earliest possible time.\n\nNo, I'm not sure, which is why I put in the conjectures.  :-)\n\nLarry\n\n"}