{"category": "ham", "to_address": "jerry gay <jerry.gay@gmail.com>", "from_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "subject": "Re: pdd15: How do I subclass a parrot; PMC class?", "body": "On Fri, Jun 29, 2007 at 11:45:18AM -0700, jerry gay wrote:\n> On 6/29/07, Patrick R. Michaud  wrote:\n> >On Fri, Jun 29, 2007 at 11:23:46AM -0700, jerry gay wrote:\n> >> On 6/28/07, Patrick R. Michaud  wrote:\n> >> >    .HLL \"perl6\", \"\"\n> >> >        ...\n> >> >        $P2 = get_class 'String'\n> >> >        ...\n> >> >    $ ./parrot z.pir\n> >> >    Class 'String' doesn't exist\n> >> >    current instr.: 'perl6;;main' pc 12 (z.pir:11)\n> >> >    $\n> >> >\n> >\n> >I think this is a case where the spec simply doesn't cover the needed\n> >behavior yet, not that the implementation is missing something.\n> >\n> >If I use C< get_class \"String\" > in a HLL other than parrot,\n> >then I somewhat expect the behavior we're already seeing.  In\n> >other words, we're asking for a \"String\" class in the current\n> >(HLL) namespace, and there isn't one, and thus we get an\n> >exception.\n>\n> the get_class opcode takes a NameSpace PMC or a String, as per\n> src/ops/object.ops:\n> \n>  =item B(out PMC, in STR)\n> \n>  =item B(out PMC, in PMC)\n> \n>  Find the PMC for a class, by string name or by key.\n> \n>  =cut\n> \n> mind you, the documentation could be a bit more specific, but i expect\n> that passing it a NameSpace PMC relative to the root namespace should\n> work. \n\nThis presumes that every PMC class also has a Namespace PMC associated\nwith it that points to the class.  I'm not sure that's true for \nParrot PMC classes.\n\nPm\n\n"}