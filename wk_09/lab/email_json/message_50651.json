{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Matt <mlist@cmcflex.com>", "subject": "Re: find2perl output to array", "body": "Thanks Martin,\n> change following line:\n>   \n>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n>> /^DATA.*\\.zip\\z/s && print(\"$name\\n\");\n>>     \n>\n> to\n>\n>   \n>>     (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n>> /^DATA.*\\.zip\\z/s && push @files, $name;\n>>     \n>\n> at the end you have all files in the @files array.\n>\n>   \n\nI did that, and then at the bottom of the script I tried looping through \njust to verify that @files was populated - no dice.\n\nuse vars qw/*name *dir *prune/;\n*name   = *File::Find::name;\n*dir    = *File::Find::dir;\n*prune  = *File::Find::prune;\n\nsub wanted;\n\n$smallcuid = lc $cuid;\n\n# Traverse desired filesystems\nFile::Find::find({wanted => \\&wanted}, \n'/home/ftpuser/'.$smallcuid.'/flexvault/'.$directory.'/');\nexit;\n\n\nsub wanted {\n    my ($dev,$ino,$mode,$nlink,$uid,$gid);\n\n(($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) && -f _ && \n/^DATA.*\\.zip\\z/s && push @files, name;\n}\n\nfor $element (@files) {\n       print $element, \"\\n\";\n}\n\n\n\nWhat have I done wrong?  Although if I put that for loop within the \nfunction it does populate, but it repeats each results 6 times.\n\nMatt\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}