{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: [svn:perl6-synopsis] r14405 - doc/trunk/design/syn", "body": "On 5/29/07, Larry Wall  wrote:\n> On Tue, May 29, 2007 at 04:05:39PM -0400, Chas Owens wrote:\n> : On 5/29/07, larry@cvs.perl.org  wrote:\n> : snip\n> : >+If the count is less than 1, returns the null string.\n> : >+The count may not be C<*> because Perl 6 does not support\n> : >+infinite strings.  (At least, not yet...)\n> : snip\n> :\n> : Does \"may not be c<*>\" mean that the compiler should throw a fatal\n> : error if it sees it or that the program will hang because it is the\n> : programmer's fault (similar to \"while 1 {}\") .\n>\n> The compiler is generally allowed to complain about anything it knows\n> must fail at runtime, and since scalars default to eager, this will\n> certainly run out of memory at runtime.\n>\n> Larry\n>\n\nJust an odd corner case, but\n    \"foo\" x -*\nshould return an empty string and\n    \"foo\" xx -*\nshould return an empty list, right?\n\n"}