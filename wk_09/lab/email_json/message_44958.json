{"category": "ham", "to_address": "mw-u2@gmx.de", "from_address": "Dirk Eddelbuettel <edd@debian.org>", "subject": "Re: [R] Use R in a pipeline as a filter", "body": "\nOn 7 June 2007 at 14:27, mw-u2@gmx.de wrote:\n| how can I use R in a pipline like this\n| \n|  $ ./generate-data | R --script-file=Script.R | ./further-analyse-data > result.dat\n\nThe 'r' in our 'littler' package can do that. One example we show on the\nlittler webpage is\n\n\t$ ls -l /boot | awk '!/^total/ {print $5}' | \\\n\t\t r -e 'fsizes <- as.integer(readLines());\n\t\t\tprint(summary(fsizes)); stem(fsizes)'\n\nWe use R's readLines to read from stdin, and you can of course also have r\n'in the middle' if you take care of the output generated -- which our example\ndoesn't do as it prints straight to screen.\n\nDirk\n\n-- \nHell, there are no rules here - we're trying to accomplish something. \n                                                  -- Thomas A. Edison\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}