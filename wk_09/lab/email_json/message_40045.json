{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "James E Keenan <jkeen@verizon.net>", "subject": "Re: [perl #41168] graceful \"no compiler\" error message?", "body": "James Keenan via RT wrote:\n> A participant in this weekend's hackathon in Toronto posed this question:\n> \n> \"Invoking the compiler on a simple source file, then checking that the\n> generated code exists seems such an obvious test that there must be a\n> fatal flaw in it. What am I missing?\"\n\nThis patch grew out of Hackathon Toronto and was posted to RT, but not \ninitially cc-ed to the list.  Please review this patch.  Thank you very \nmuch.\n\nkid51\n\n\nThe attached patch to inter/progs.pm is my attempt to improve\nConfigure's behaviour.\n\nIt writes an embedded minimal C program to disk. (If there's already a\nfile called \"minimal.c\" it complains and dies.) It then attempts to\ncall the specified compiler. If the result isn't an a.out, it dies\npromptly and gracefully. (It can be fooled, if something other than a\nC compiler writes an a.out; that's how I tested it, but that's really\na pathological case.)\n\nThe comments should explain what's going on.\n\n\n\nIndex: progs.pm\n===================================================================\n--- progs.pm (revision 18351)\n+++ progs.pm (working copy)\n@@ -38,14 +38,31 @@\n# If none work, then set to null command.\n# XXX need config support for a null command.\nmy $null = 'echo';\n- my $first_working = sub {\n+ my $output = 'a.out';\n+ my $min = 'minimal.c'; # File name probably not in use\n+ if (-f $min) { # but die if it is\n+ warn \"\\nPlease rename minimal.c - I create it\\n\" ;\n+ exit 1;\n+ }\n+ open(MIN, \">\".$min);\n+ print MIN ; # Create test program (from U-Haul)\n+ close MIN;\n+ unlink($output) if -f $output; # in case there is rubbish lying around\n+\n+ my $first_working = sub {\nforeach (@_) {\n- `$_ -h 2>&1`;\n- return $_ if not $?;\n+\n+ system ($_, $min) ; # Attempt simplest possible compile\n+ if (-f $output) # See if it produced something\n+ {\n+ unlink($output, $min); # Sweep up the debris\n+ return $_ ; # And return the successful program name\n+ }\n}\n+\n+ unlink($min); # Tidy up, even after failure\nreturn $null;\n- };\n-\n+ };\nmy $ask = $conf->options->get('ask');\nif ($ask) {\nprint <<'END';\n@@ -66,6 +83,10 @@\n$cc = integrate( $conf->data->get('cc'), $conf->options->get('cc') );\n$cc = prompt( \"What C compiler do you want to use?\", $cc )\nif $ask;\n+ if ($first_working->($cc) eq 'echo') {\n+ warn \"No compiler found (tried '$cc')\\n\";\n+ exit 1;\n+ }\n$conf->data->set( cc => $cc );\n\n$link = integrate( $conf->data->get('link'), $conf->options->get('link') );\n@@ -139,3 +160,13 @@\n# fill-column: 100\n# End:\n# vim: expandtab shiftwidth=4:\n+__DATA__\n+/* Start of minimal.c - any C compiler should create a.out from this */\n+include \n+\n+int main()\n+{\n+ printf (\"Compiler found \\n\");\n+}\n+\n+/* End of minimal.c */\n\n"}