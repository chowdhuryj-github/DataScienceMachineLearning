{"category": "ham", "to_address": "\"Bert Gunter\" <gunter.berton@gene.com>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] Testing for existence inside a function", "body": "Right. Thanks. It should have been parent.frame().  Here is the correction:\n\nchk3 <- function(x) {\n       chr <- deparse(substitute(x))\n       e <- parse(text = chr)\n       structure(exists(chr, parent.frame()),\n          is.name = length(e) == 1 && is.name(e[[1]]))\n}\nchk3(1) # structure(FALSE, is.name = FALSE)\nab <- 1\nchk3(ab+1) # structure(FALSE, is.name = FALSE)\nchk3(ab) # structure(TRUE, is.name = TRUE)\nexists(\"x\") # FALSE\nchk3(x) # structure(FALSE, is.name = TRUE)\nchk3(x+1) # structure(FALSE, is.name = FALSE)\n\n\n\nOn 5/15/07, Bert Gunter  wrote:\n> I think parent.frame() is what is wanted, not parent.env(environment()) in\n> your suggested solution:\n>\n> Consider this: (which does **not** however handle the arbitrary expressions\n> as argument issue):\n>\n>\n> foo1 <- function(z){\n> cat(exists(deparse(substitute(z)),parent.frame()),\n> exists(deparse(substitute(z)),parent.env(environment())),\n> exists(deparse(substitute(z))),\"\\n\")\n> invisible()\n>  }\n>\n> foo <-  function(x){\n> y <- x\n> foo1(y)\n> }\n>\n> x<-1\n>\n> ## Then ...\n> > foo(x)\n> TRUE FALSE FALSE\n>\n> Note that parent.env() is the **enclosing environment** i.e. the environment\n> in which foo1 is defined (lexical scoping); while parent.frame() is the\n> frame of the caller of foo1, which is what is wanted if foo1 is to work when\n> called within a function. Note that parent.frame() would also work when foo1\n> is called at the command line.\n>\n> Further corrections/clarifications welcome, of course.\n>\n> Bert Gunter\n> Genentech Nonclinical Statistics\n>\n>\n>\n> -----Original Message-----\n> From: r-help-bounces@stat.math.ethz.ch\n> [mailto:r-help-bounces@stat.math.ethz.ch] On Behalf Of Gabor Grothendieck\n> Sent: Tuesday, May 15, 2007 10:06 AM\n> To: Liaw, Andy\n> Cc: r-help@stat.math.ethz.ch; Talbot Katz\n> Subject: Re: [R] Testing for existence inside a function\n>\n> Maybe this:\n>\n>\n> chk2 <- function(x) {\n>        chr <- deparse(substitute(x))\n>        e <- parse(text = chr)\n>        structure(exists(chr, parent.env(environment())),\n>           is.name = length(e) == 1 && is.name(e[[1]]))\n> }\n> chk2(1) # structure(FALSE, is.name = FALSE)\n> ab <- 1\n> chk2(ab+1) # structure(FALSE, is.name = FALSE)\n> chk2(ab) # structure(TRUE, is.name = TRUE)\n> exists(\"x\") # FALSE\n> chk2(x) # structure(FALSE, is.name = TRUE)\n> chk2(x+1) # structure(FALSE, is.name = FALSE)\n>\n>\n> On 5/15/07, Liaw, Andy  wrote:\n> > Another thing to watch out for is that an argument to a function can be\n> > an expression (or even literal constants), instead of just the name of\n> > an object.  exists() wouldn't really do the right thing.  I'm not sure\n> > how to properly do the exhaustive check.\n> >\n> > Andy\n> >\n> > From: Gabor Grothendieck\n> > >\n> > > Try this modification:\n> > >\n> > > > chk <- function(x) exists(deparse(substitute(x)),\n> > > parent.env(environment()))\n> > > > ab <- 1\n> > > > chk(ab)\n> > > [1] TRUE\n> > > > exists(\"x\")\n> > > [1] FALSE\n> > > > chk(x)\n> > > [1] FALSE\n> > >\n> > >\n> > >\n> > > On 5/15/07, Talbot Katz  wrote:\n> > > > Hi.\n> > > >\n> > > > Thanks once more for the swift response.  This solution\n> > > works pretty well.\n> > > > The only small glitch is if I pass the function an argument\n> > > with the same\n> > > > name as the function argument.  That is, suppose \"x\" is the\n> > > argument name in\n> > > > my user-defined function, and that object \"x\" does not\n> > > exist.  If I call the\n> > > > function f(x), i.e., using the non-existent object x as the\n> > > argument value,\n> > > > then the function says that x exists.\n> > > >\n> > > > Here is my example log:\n> > > >\n> > > > >chkex5 <- function(objn){\n> > > > + c(exob=exists(deparse(substitute(objn))))\n> > > > + }\n> > > > >exists(\"objn\")\n> > > > [1] FALSE\n> > > > >chkex5(objn)\n> > > > exob\n> > > > TRUE\n> > > > >\n> > > >\n> > > > But I suppose I can live with this.  Thanks again!\n> > > >\n> > > >\n> > > > --  TMK  --\n> > > > 212-460-5430    home\n> > > > 917-656-5351    cell\n> > > >\n> > > >\n> > > >\n> > > > >From: \"Liaw, Andy\" \n> > > > >To: \"Talbot Katz\" ,r-help@stat.math.ethz.ch\n> > > > >Subject: RE: [R] Testing for existence inside a function\n> > > > >Date: Tue, 15 May 2007 11:41:17 -0400\n> > > > >\n> > > > >Just need a bit more work:\n> > > > >\n> > > > >R> f <- function(x) exists(deparse(substitute(x)))\n> > > > >R> f(y)\n> > > > >[1] FALSE\n> > > > >R> y <- 1\n> > > > >R> f(y)\n> > > > >[1] TRUE\n> > > > >R> f(z)\n> > > > >[1] FALSE\n> > > > >\n> > > > >Andy\n> > > > >\n> > > > >From: Talbot Katz\n> > > > > >\n> > > > > > Hi, Andy.\n> > > > > >\n> > > > > > Thank you for the quick response!  Unfortunately, none of\n> > > > > > these are exactly\n> > > > > > what I'm looking for.  I'm looking for the following:\n> > > > > > Suppose object y\n> > > > > > exists and object z does not exist.  If I pass y as the\n> > > value of the\n> > > > > > argument to my function, I want to be able to verify, inside\n> > > > > > my function,\n> > > > > > the existence of y; similarly, if I pass z as the value of\n> > > > > > the argument, I\n> > > > > > want to be able to see, inside the function, that z\n> > > doesn't exist.\n> > > > > >\n> > > > > > The missing function just checks whether the argument is\n> > > > > > missing; in my\n> > > > > > case, the argument is not missing, but the object may not\n> > > > > > exist.  And the\n> > > > > > way you use the exists function inside the user-defined\n> > > > > > function doesn't\n> > > > > > test the argument to the user-defined function, it's just\n> > > > > > hard-coded for the\n> > > > > > object y.  So I'm sorry if I wasn't clear before, and I hope\n> > > > > > this is clear\n> > > > > > now.  Perhaps what I'm attempting to do is unavailable\n> > > > > > because it's a bad\n> > > > > > programming paradigm.  But even an explanation if that's the\n> > > > > > case would be\n> > > > > > appreciated.\n> > > > > >\n> > > > > > --  TMK  --\n> > > > > > 212-460-5430        home\n> > > > > > 917-656-5351        cell\n> > > > > >\n> > > > > >\n> > > > > >\n> > > > > > >From: \"Liaw, Andy\" \n> > > > > > >To: \"Talbot Katz\" ,r-help@stat.math.ethz.ch\n> > > > > > >Subject: RE: [R] Testing for existence inside a\n> > > function  [Broadcast]\n> > > > > > >Date: Tue, 15 May 2007 11:03:12 -0400\n> > > > > > >\n> > > > > > >Not sure which one you want, but the following should cover it:\n> > > > > > >\n> > > > > > >R> f <- function(x) c(x=missing(x), y=exists(\"y\"))\n> > > > > > >R> f(1)\n> > > > > > >     x     y\n> > > > > > >FALSE FALSE\n> > > > > > >R> f()\n> > > > > > >     x     y\n> > > > > > >  TRUE FALSE\n> > > > > > >R> y <- 1\n> > > > > > >R> f()\n> > > > > > >    x    y\n> > > > > > >TRUE TRUE\n> > > > > > >R> f(1)\n> > > > > > >     x     y\n> > > > > > >FALSE  TRUE\n> > > > > > >\n> > > > > > >Andy\n> > > > > > >\n> > > > > > >From: Talbot Katz\n> > > > > > > >\n> > > > > > > > Hi.\n> > > > > > > >\n> > > > > > > > I'm having trouble testing for existence of an object inside\n> > > > > > > > a function.\n> > > > > > > >\n> > > > > > > > Suppose I have a function:\n> > > > > > > >\n> > > > > > > > f<-function(x){\n> > > > > > > > ...\n> > > > > > > > }\n> > > > > > > >\n> > > > > > > > and I call it with argument y:\n> > > > > > > >\n> > > > > > > > f(y)\n> > > > > > > >\n> > > > > > > > I'd like to check inside the function whether argument y\n> > > > > > > > exists.  Is this\n> > > > > > > > possible, or do I have to either check outside the function\n> > > > > > > > or pass the name\n> > > > > > > > of the argument as a separate argument?\n> > > > > > > >\n> > > > > > > > If I do exists(x)  or exists(eval(x)) inside the\n> > > function and\n> > > > > > > > y does not\n> > > > > > > > exist, it generates an error message.  If I do\n> > > exists(\"x\") it\n> > > > > > > > says that x\n> > > > > > > > exists even if y does not.  If I had a separate argument to\n> > > > > > > > hold the text\n> > > > > > > > string \"y\" then I could check that.  But is it possible\n> > > > > > to check the\n> > > > > > > > existence of the argument inside the function\n> > > without passing\n> > > > > > > > its name as a\n> > > > > > > > separate argument?\n> > > > > > > >\n> > > > > > > > Thanks!\n> > > > > > > >\n> > > > > > > > --  TMK  --\n> > > > > > > > 212-460-5430    home\n> > > > > > > > 917-656-5351    cell\n> > > > > > > >\n> > > > > > > > ______________________________________________\n> > > > > > > > R-help@stat.math.ethz.ch mailing list\n> > > > > > > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > > > > > > PLEASE do read the posting guide\n> > > > > > > > http://www.R-project.org/posting-guide.html\n> > > > > > > > and provide commented, minimal, self-contained,\n> > > reproducible code.\n> > > > > > > >\n> > > > > > > >\n> > > > > > > >\n> > > > > > >\n> > > > > > >\n> > > > > > >-------------------------------------------------------------\n> > > > > > -----------------\n> > > > > > >Notice:  This e-mail message, together with any\n> > > attachments, contains\n> > > > > > >information of Merck & Co., Inc. (One Merck Drive,\n> > > > > > Whitehouse Station,\n> > > > > > >New Jersey, USA 08889), and/or its affiliates (which\n> > > may be known\n> > > > > > >outside the United States as Merck Frosst, Merck Sharp\n> > > & Dohme or MSD\n> > > > > > >and in Japan, as Banyu - direct contact information\n> > > for affiliates is\n> > > > > > >available at\n> > > http://www.merck.com/contact/contacts.html) that may be\n> > > > > > >confidential, proprietary copyrighted and/or legally\n> > > > > > privileged. It is\n> > > > > > >intended solely for the use of the individual or\n> > > entity named on this\n> > > > > > >message. If you are not the intended recipient, and have\n> > > > > > received this\n> > > > > > >message in error, please notify us immediately by reply\n> > > > > > e-mail and then\n> > > > > > >delete it from your system.\n> > > > > > >\n> > > > > > >-------------------------------------------------------------\n> > > > > > -----------------\n> > > > > >\n> > > > > >\n> > > > > >\n> > > > > >\n> > > > >\n> > > > >\n> > > >\n> > > >-------------------------------------------------------------\n> > > -----------------\n> > > > >Notice:  This e-mail message, together with any\n> > > attachments...{{dropped}}\n> > > >\n> > > > ______________________________________________\n> > > > R-help@stat.math.ethz.ch mailing list\n> > > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > > PLEASE do read the posting guide\n> > > http://www.R-project.org/posting-guide.html\n> > > > and provide commented, minimal, self-contained, reproducible code.\n> > > >\n> > >\n> > >\n> > >\n> >\n> >\n> >\n> ----------------------------------------------------------------------------\n> --\n> > Notice:  This e-mail message, together with any attachment...{{dropped}}\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}