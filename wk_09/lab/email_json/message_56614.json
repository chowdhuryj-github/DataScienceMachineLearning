{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r23636 - in branches: SAMBA_3_0 SAMBA_3_0_25\n\tSAMBA_3_0_26", "body": "Author: jerry\nDate: 2007-06-27 18:28:18 +0000 (Wed, 27 Jun 2007)\nNew Revision: 23636\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23636\n\nLog:\nAdding coding style guide for Samba 3.0 branches (no differences from Tridge's prog_guide.txt so we should have a similar style throughout the project)\nAdded:\n   branches/SAMBA_3_0/README.Coding\n   branches/SAMBA_3_0_25/README.Coding\n   branches/SAMBA_3_0_26/README.Coding\n\n\nChangeset:\nAdded: branches/SAMBA_3_0/README.Coding\n===================================================================\n--- branches/SAMBA_3_0/README.Coding\t2007-06-27 17:48:30 UTC (rev 23635)\n+++ branches/SAMBA_3_0/README.Coding\t2007-06-27 18:28:18 UTC (rev 23636)\n@@ -0,0 +1,87 @@\n+##\n+## Coding conventions in the Samba 3.0 tree\n+##\n+\n+===========\n+Quick Start\n+===========\n+\n+Coding style guidelines are about reducing the number of unnecessary\n+reformatting patches and making things easier developers to work together.\n+You don't have to like them or even agree with them, but once put in place\n+we all have to abide by them (or vote to change them).  However, coding\n+style should never outweigh coding itself and so the the guidelines\n+described here are hopefully easier enough to follow as they are very\n+common and supported by tools and editors.\n+\n+The basic style, also mentioned in the SAMBA_4_0/prog_guide.txt is the\n+Linux kernel coding style (See Documentation/CodingStyle in the kernel\n+source tree).  The closely matches what most Samba developers use already\n+anyways.\n+\n+But to save you the trouble of reading the Linux kernel style guide, here\n+are the highlights.\n+\n+\n+* Maximum Line Width is 80 Characters\n+  The reason is not for people with low-res screens but rather sticking\n+  to 80 columns prevents you from easily nesting more than one level of\n+  if statements or other code blocks.  Use source/script/count_80_col.pl\n+  to check your changes.\n+\n+* Use 8 Space Tabs to Indent\n+  No whitespace filler.\n+\n+* No Trailing Whitespace\n+  Use source/script/strip_trail_ws.pl to clean you files before committing.\n+\n+* Follow the K&R guidelines.  We won't go throw them all here.  You have\n+  a copy of \"The C Programming Language\" anyways right?  You can also use\n+  the format_indent.sh script found in source/script/ if all else fails.\n+\n+\n+\n+============\n+Editor Hints\n+============\n+\n+Emacs\n+-----\n+Add the follow to your $HOME/.emacs file:\n+\n+  (add-hook 'c-mode-hook\n+\t(lambda ()\n+\t\t(c-set-style \"linux\")\n+\t\t(c-toggle-auto-state)))\n+\n+\n+Vi\n+--\n+(Thanks to SATOH Fumiyasu  for these hints):\n+\n+For the basic vi eitor including with all variants of *nix, add the \n+following to $HOME/.exrc:\n+\n+  set tabstop=8\n+  set shiftwidth=8\n+\n+For Vim, the following settings in $HOME/.vimrc will also deal with \n+disaplaying trailing whitespace:\n+\n+  if has(\"syntax\") && (&t_Co > 2 || has(\"gui_running\"))\n+\tsyntax on\n+\tfunction! ActivateInvisibleCharIndicator()\n+\t\tsyntax match TrailingSpace \"[ \\t]\\+$\" display containedin=ALL\n+\t\thighlight TrailingSpace ctermbg=Red\n+\tendf\n+\tautocmd BufNewFile,BufRead * call ActivateInvisibleCharIndicator()\n+  endif\n+\n+\n+===================\n+Statement Reference\n+===================\n+\n+To be filled later in as needed.\n+\n+\n\nAdded: branches/SAMBA_3_0_25/README.Coding\n===================================================================\n--- branches/SAMBA_3_0_25/README.Coding\t2007-06-27 17:48:30 UTC (rev 23635)\n+++ branches/SAMBA_3_0_25/README.Coding\t2007-06-27 18:28:18 UTC (rev 23636)\n@@ -0,0 +1,87 @@\n+##\n+## Coding conventions in the Samba 3.0 tree\n+##\n+\n+===========\n+Quick Start\n+===========\n+\n+Coding style guidelines are about reducing the number of unnecessary\n+reformatting patches and making things easier developers to work together.\n+You don't have to like them or even agree with them, but once put in place\n+we all have to abide by them (or vote to change them).  However, coding\n+style should never outweigh coding itself and so the the guidelines\n+described here are hopefully easier enough to follow as they are very\n+common and supported by tools and editors.\n+\n+The basic style, also mentioned in the SAMBA_4_0/prog_guide.txt is the\n+Linux kernel coding style (See Documentation/CodingStyle in the kernel\n+source tree).  The closely matches what most Samba developers use already\n+anyways.\n+\n+But to save you the trouble of reading the Linux kernel style guide, here\n+are the highlights.\n+\n+\n+* Maximum Line Width is 80 Characters\n+  The reason is not for people with low-res screens but rather sticking\n+  to 80 columns prevents you from easily nesting more than one level of\n+  if statements or other code blocks.  Use source/script/count_80_col.pl\n+  to check your changes.\n+\n+* Use 8 Space Tabs to Indent\n+  No whitespace filler.\n+\n+* No Trailing Whitespace\n+  Use source/script/strip_trail_ws.pl to clean you files before committing.\n+\n+* Follow the K&R guidelines.  We won't go throw them all here.  You have\n+  a copy of \"The C Programming Language\" anyways right?  You can also use\n+  the format_indent.sh script found in source/script/ if all else fails.\n+\n+\n+\n+============\n+Editor Hints\n+============\n+\n+Emacs\n+-----\n+Add the follow to your $HOME/.emacs file:\n+\n+  (add-hook 'c-mode-hook\n+\t(lambda ()\n+\t\t(c-set-style \"linux\")\n+\t\t(c-toggle-auto-state)))\n+\n+\n+Vi\n+--\n+(Thanks to SATOH Fumiyasu  for these hints):\n+\n+For the basic vi eitor including with all variants of *nix, add the \n+following to $HOME/.exrc:\n+\n+  set tabstop=8\n+  set shiftwidth=8\n+\n+For Vim, the following settings in $HOME/.vimrc will also deal with \n+disaplaying trailing whitespace:\n+\n+  if has(\"syntax\") && (&t_Co > 2 || has(\"gui_running\"))\n+\tsyntax on\n+\tfunction! ActivateInvisibleCharIndicator()\n+\t\tsyntax match TrailingSpace \"[ \\t]\\+$\" display containedin=ALL\n+\t\thighlight TrailingSpace ctermbg=Red\n+\tendf\n+\tautocmd BufNewFile,BufRead * call ActivateInvisibleCharIndicator()\n+  endif\n+\n+\n+===================\n+Statement Reference\n+===================\n+\n+To be filled later in as needed.\n+\n+\n\nAdded: branches/SAMBA_3_0_26/README.Coding\n===================================================================\n--- branches/SAMBA_3_0_26/README.Coding\t2007-06-27 17:48:30 UTC (rev 23635)\n+++ branches/SAMBA_3_0_26/README.Coding\t2007-06-27 18:28:18 UTC (rev 23636)\n@@ -0,0 +1,87 @@\n+##\n+## Coding conventions in the Samba 3.0 tree\n+##\n+\n+===========\n+Quick Start\n+===========\n+\n+Coding style guidelines are about reducing the number of unnecessary\n+reformatting patches and making things easier developers to work together.\n+You don't have to like them or even agree with them, but once put in place\n+we all have to abide by them (or vote to change them).  However, coding\n+style should never outweigh coding itself and so the the guidelines\n+described here are hopefully easier enough to follow as they are very\n+common and supported by tools and editors.\n+\n+The basic style, also mentioned in the SAMBA_4_0/prog_guide.txt is the\n+Linux kernel coding style (See Documentation/CodingStyle in the kernel\n+source tree).  The closely matches what most Samba developers use already\n+anyways.\n+\n+But to save you the trouble of reading the Linux kernel style guide, here\n+are the highlights.\n+\n+\n+* Maximum Line Width is 80 Characters\n+  The reason is not for people with low-res screens but rather sticking\n+  to 80 columns prevents you from easily nesting more than one level of\n+  if statements or other code blocks.  Use source/script/count_80_col.pl\n+  to check your changes.\n+\n+* Use 8 Space Tabs to Indent\n+  No whitespace filler.\n+\n+* No Trailing Whitespace\n+  Use source/script/strip_trail_ws.pl to clean you files before committing.\n+\n+* Follow the K&R guidelines.  We won't go throw them all here.  You have\n+  a copy of \"The C Programming Language\" anyways right?  You can also use\n+  the format_indent.sh script found in source/script/ if all else fails.\n+\n+\n+\n+============\n+Editor Hints\n+============\n+\n+Emacs\n+-----\n+Add the follow to your $HOME/.emacs file:\n+\n+  (add-hook 'c-mode-hook\n+\t(lambda ()\n+\t\t(c-set-style \"linux\")\n+\t\t(c-toggle-auto-state)))\n+\n+\n+Vi\n+--\n+(Thanks to SATOH Fumiyasu  for these hints):\n+\n+For the basic vi eitor including with all variants of *nix, add the \n+following to $HOME/.exrc:\n+\n+  set tabstop=8\n+  set shiftwidth=8\n+\n+For Vim, the following settings in $HOME/.vimrc will also deal with \n+disaplaying trailing whitespace:\n+\n+  if has(\"syntax\") && (&t_Co > 2 || has(\"gui_running\"))\n+\tsyntax on\n+\tfunction! ActivateInvisibleCharIndicator()\n+\t\tsyntax match TrailingSpace \"[ \\t]\\+$\" display containedin=ALL\n+\t\thighlight TrailingSpace ctermbg=Red\n+\tendf\n+\tautocmd BufNewFile,BufRead * call ActivateInvisibleCharIndicator()\n+  endif\n+\n+\n+===================\n+Statement Reference\n+===================\n+\n+To be filled later in as needed.\n+\n+\n\n"}