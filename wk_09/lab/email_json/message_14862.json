{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Larry Wall <larry@wall.org>", "subject": "Re: [svn:perl6-synopsis] r14376 - doc/trunk/design/syn", "body": "On Tue, Apr 24, 2007 at 06:45:12PM -0400, Charles Bailey wrote:\n: On 4/17/07, larry@cvs.perl.org  wrote:\n: >Note that unless no longer allows an else\n: It's probably that I'm just having another day where skull > brain, but I'm\n: not sure I see the benefit to the language here.\n: \n: I think of \"unless\" as an alternate spelling for \"if not\", so it seems\n: natural that it be possible to follow it with an \"else\".  I'll grant that\n: the (common) idiomatic usage of \"unless\" doesn't include an \"else\", but that\n: seems more an argument not to use an \"else\" rather than to forbid it.  It's\n: a bit like saying one can \"continue\" after a \"while\" but not an \"until\".\n: \n: Is there a parsing advantage that I've missed, or does it disambiguate some\n: other construct?\n\nYes, it's slightly easier to parse this way, and yes, it bugs me that\nunless/else is not English, but mostly I changed it as a not-so-gentle\nprod towards refactoring, based on the notion that if you have to\ninstall a guard on a storage location being false, you've probably\ngot the scope of the storage location wrong.  And even if not, there\nare several other ways to write it, at least one of which will be\ngenerally more readable to other people.\n\nI freely admit that it's less orthogonal and that I'm being high-handed. :)\n\nLarry\n\n"}