{"category": "ham", "to_address": "\"Alex Jamestin\" <alex.jamestin@gmail.com>", "from_address": "\"Tom Phoenix\" <tom@stonehenge.com>", "subject": "Re: How can i make a perl program lauch another perl program that takes options", "body": "On 6/29/07, Alex Jamestin  wrote:\n\n> Well, i tried both the options -\n>\n> > system(\"perl vplan_all.pl\", \"5.6\",  \"24.0\") == 0\n> >     or die \"blah\";\n> >\n> > or\n> >\n> > system( \"perl\", \"vplan_all.pl\",  \"5.6\",  \"24.0\") == 0\n> >     or die \"blah\";\n>\n> I think when perl -> shell -> perl . Here perl doesn't seem to\n> understand that vplan_all.pl is the script name and 5.6 and 24.0\n> are options to be passed.\n>\n> The exact same text ie. perl vplan_all.pl 5.6 21.0 works fine when i\n> just run it from the command line. Confusing! :\\\n\nCould it be that you have a different $PATH, a different directory or\nother envronment changes? If your perl binary is properly built and\ninstalled, it should be capable of running another perl.\n\n    system(\"perl\", \"-lwe\", \"print q(perl works!)\") == 0\n      or die \"Can't call perl: $!\";\n\nCheers!\n\n--Tom Phoenix\nStonehenge Perl Training\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}