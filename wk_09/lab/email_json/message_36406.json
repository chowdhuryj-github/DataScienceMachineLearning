{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r23150 - in branches: SAMBA_3_0/source/smbd\n\tSAMBA_3_0_25/source/smbd SAMBA_3_0_26/source/smbd", "body": "Author: jra\nDate: 2007-05-26 01:19:51 +0000 (Sat, 26 May 2007)\nNew Revision: 23150\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23150\n\nLog:\nFix Samba3 in the build farm again. In the case where the\nfile was being created and we go into the race condition check,\nwe were testing for compatible open modes, but were not breaking\noplocks in the same way as if the file existed. This meant that\nwe weren't going into the code path that sets fsp->oplock = FAKE_LEVEL_II_OPLOCK\nif the client didn't ask for an oplock on file create. We need\nto do this as internally it's what Windows does.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/smbd/open.c\n   branches/SAMBA_3_0_25/source/smbd/open.c\n   branches/SAMBA_3_0_26/source/smbd/open.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/open.c\t2007-05-26 00:25:22 UTC (rev 23149)\n+++ branches/SAMBA_3_0/source/smbd/open.c\t2007-05-26 01:19:51 UTC (rev 23150)\n@@ -1650,6 +1650,15 @@\n \t\t\treturn NT_STATUS_SHARING_VIOLATION;\n \t\t}\n \n+\t\t/* First pass - send break only on batch oplocks. */\n+\t\tif (delay_for_oplocks(lck, fsp, 1, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\tstatus = open_mode_check(conn, fname, lck,\n \t\t\t\t\t access_mask, share_access,\n \t\t\t\t\t create_options, &file_existed);\n@@ -1677,6 +1686,14 @@\n \t\t\treturn status;\n \t\t}\n \n+\t\tif (delay_for_oplocks(lck, fsp, 2, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\t/*\n \t\t * We exit this block with the share entry *locked*.....\n \t\t */\n\nModified: branches/SAMBA_3_0_25/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/smbd/open.c\t2007-05-26 00:25:22 UTC (rev 23149)\n+++ branches/SAMBA_3_0_25/source/smbd/open.c\t2007-05-26 01:19:51 UTC (rev 23150)\n@@ -1652,6 +1652,15 @@\n \t\t\treturn NT_STATUS_SHARING_VIOLATION;\n \t\t}\n \n+\t\t/* First pass - send break only on batch oplocks. */\n+\t\tif (delay_for_oplocks(lck, fsp, 1, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\tstatus = open_mode_check(conn, fname, lck,\n \t\t\t\t\t access_mask, share_access,\n \t\t\t\t\t create_options, &file_existed);\n@@ -1679,6 +1688,14 @@\n \t\t\treturn status;\n \t\t}\n \n+\t\tif (delay_for_oplocks(lck, fsp, 2, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\t/*\n \t\t * We exit this block with the share entry *locked*.....\n \t\t */\n\nModified: branches/SAMBA_3_0_26/source/smbd/open.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/open.c\t2007-05-26 00:25:22 UTC (rev 23149)\n+++ branches/SAMBA_3_0_26/source/smbd/open.c\t2007-05-26 01:19:51 UTC (rev 23150)\n@@ -1654,6 +1654,15 @@\n \t\t\treturn NT_STATUS_SHARING_VIOLATION;\n \t\t}\n \n+\t\t/* First pass - send break only on batch oplocks. */\n+\t\tif (delay_for_oplocks(lck, fsp, 1, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\tstatus = open_mode_check(conn, fname, lck,\n \t\t\t\t\t access_mask, share_access,\n \t\t\t\t\t create_options, &file_existed);\n@@ -1681,6 +1690,14 @@\n \t\t\treturn status;\n \t\t}\n \n+\t\tif (delay_for_oplocks(lck, fsp, 2, oplock_request)) {\n+\t\t\tschedule_defer_open(lck, request_time);\n+\t\t\tTALLOC_FREE(lck);\n+\t\t\tfd_close(conn, fsp);\n+\t\t\tfile_free(fsp);\n+\t\t\treturn NT_STATUS_SHARING_VIOLATION;\n+\t\t}\n+\n \t\t/*\n \t\t * We exit this block with the share entry *locked*.....\n \t\t */\n\n"}