{"category": "ham", "to_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "from_address": "\"Luke Palmer\" <lrpalmer@gmail.com>", "subject": "Re: Generalizing ?? !!", "body": "On 6/11/07, Jonathan Lang  wrote:\n> mark.a.biggar@comcast.net wrote:\n> > Besides ?? !! with out an else part is just &&.\n>\n> No, it isn't.  While && behaves properly when the condition turns out\n> to be true, the result of the condition turning out to be false is\n> whatever the condition turned out to be.\n>\n> Still, Damian has a good point - which renders the bulk of this\n> discussion moot.  The one thing left to consider (IMHO) is whether or\n> not it's worthwhile (or even possible) to go back to '$c ? $t : $f' or\n> to '$c ? $t ! $f'.  As I said, the primary concern originally\n> expressed about the Perl 5 syntax involved matters of ambiguity which\n> seem to have been resolved since then.  A case could be made that if\n> the Perl 5 syntax for this doesn't clash with the rest of Perl 6, it\n> should be used: anything else would be change for change's sake.\n\nFirst, don't consider it a change.  We're making a new language, not\nmodding Perl 5.\n\nBut I think there's a very good, if obvious, reason to change ? : to\n?? !!.  ? : is simply too small for the behavior of this construct.\nThe ternary conditional is control flow, I'd say moreso than && and\n||.  It should stand out; it's one of the more important things in a\nsentence.  It also has a nice pseudosymmetry with && and ||, what with\nits doubled characters.\n\nBut we seem to be missing the junctional ternary conditional \"? !\" :-p\n\nLuke\n\n"}