{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22372 - in branches/SAMBA_4_0/source/lib/util: .", "body": "Author: metze\nDate: 2007-04-19 14:14:11 +0000 (Thu, 19 Apr 2007)\nNew Revision: 22372\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22372\n\nLog:\nsplit out become_daemon() into it's own function\n\nthis remove the dependency of util.o to swrap_close\nwhich causes sometrouble with the pidl tests\non some hosts\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/lib/util/config.mk\n   branches/SAMBA_4_0/source/lib/util/util.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/util/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/config.mk\t2007-04-19 13:30:07 UTC (rev 22371)\n+++ branches/SAMBA_4_0/source/lib/util/config.mk\t2007-04-19 14:14:11 UTC (rev 22372)\n@@ -26,7 +26,8 @@\n \t\tms_fnmatch.o \\\n \t\tmutex.o \\\n \t\tidtree.o \\\n-\t\tmodule.o\n+\t\tmodule.o \\\n+\t\tbecome_daemon.o\n PUBLIC_DEPENDENCIES = \\\n \t\tLIBTALLOC LIBCRYPTO \\\n \t\tSOCKET_WRAPPER EXT_NSL \\\n\nModified: branches/SAMBA_4_0/source/lib/util/util.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/util/util.c\t2007-04-19 13:30:07 UTC (rev 22371)\n+++ branches/SAMBA_4_0/source/lib/util/util.c\t2007-04-19 14:14:11 UTC (rev 22372)\n@@ -141,42 +141,6 @@\n }       \n \n \n-/*******************************************************************\n- Close the low 3 fd's and open dev/null in their place.\n-********************************************************************/\n-static void close_low_fds(BOOL stderr_too)\n-{\n-#ifndef VALGRIND\n-\tint fd;\n-\tint i;\n-\n-\tclose(0);\n-\tclose(1); \n-\n-\tif (stderr_too)\n-\t\tclose(2);\n-\n-\t/* try and use up these file descriptors, so silly\n-\t\tlibrary routines writing to stdout etc won't cause havoc */\n-\tfor (i=0;i<3;i++) {\n-\t\tif (i == 2 && !stderr_too)\n-\t\t\tcontinue;\n-\n-\t\tfd = open(\"/dev/null\",O_RDWR,0);\n-\t\tif (fd < 0)\n-\t\t\tfd = open(\"/dev/null\",O_WRONLY,0);\n-\t\tif (fd < 0) {\n-\t\t\tDEBUG(0,(\"Can't open /dev/null\\n\"));\n-\t\t\treturn;\n-\t\t}\n-\t\tif (fd != i) {\n-\t\t\tDEBUG(0,(\"Didn't get file descriptor %d\\n\",i));\n-\t\t\treturn;\n-\t\t}\n-\t}\n-#endif\n-}\n-\n /**\n  Set a fd into blocking/nonblocking mode. Uses POSIX O_NONBLOCK if available,\n  else\n@@ -224,36 +188,6 @@\n }\n \n /**\n- Become a daemon, discarding the controlling terminal.\n-**/\n-\n-_PUBLIC_ void become_daemon(BOOL Fork)\n-{\n-\tif (Fork) {\n-\t\tif (fork()) {\n-\t\t\t_exit(0);\n-\t\t}\n-\t}\n-\n-  /* detach from the terminal */\n-#ifdef HAVE_SETSID\n-\tsetsid();\n-#elif defined(TIOCNOTTY)\n-\t{\n-\t\tint i = open(\"/dev/tty\", O_RDWR, 0);\n-\t\tif (i != -1) {\n-\t\t\tioctl(i, (int) TIOCNOTTY, (char *)0);      \n-\t\t\tclose(i);\n-\t\t}\n-\t}\n-#endif /* HAVE_SETSID */\n-\n-\t/* Close fd's 0,1,2. Needed if started by rsh */\n-\tclose_low_fds(False);  /* Don't close stderr, let the debug system\n-\t\t\t\t  attach it to the logfile */\n-}\n-\n-/**\n  Get my own name, return in malloc'ed storage.\n **/\n \n\n"}