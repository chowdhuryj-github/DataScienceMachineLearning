{"category": "ham", "to_address": "\"Jeremy Goldhaber-Fiebert\" <JGOLDHAB@hsph.harvard.edu>", "from_address": "\"Martin Henry H. Stevens\" <HStevens@muohio.edu>", "subject": "Re: [R] Fwd: Using odesolve to produce non-negative solutions", "body": "Hi Jeremy,\nFirst, setting hmax to a small number could prevent a large step, if  \nyou think that is a problem. Second, however, I don't see how you can  \nget a negative population size when using the log trick. I would  \nthink that that would prevent completely any negative values of N  \n(i.e. e^-100000 > 0). Can you explain? or do you want to a void that  \ntrick? The only other solver I know of is rk4 and it is not recommended.\nHank\nOn Jun 11, 2007, at 11:46 AM, Jeremy Goldhaber-Fiebert wrote:\n\n> Hi Spencer,\n>\n> Thank you for your response. I also did not see anything on the  \n> lsoda help page which is the reason that I wrote to the list.\n>\n>> From your response, I am not sure if I asked my question clearly.\n>\n> I am modeling a group of people (in a variety of health states)  \n> moving through time (and getting infected with an infectious  \n> disease). This means that the count of the number of people in each  \n> state should be positive at all times.\n>\n> What appears to happen is that lsoda asks for a derivative at a  \n> given point in time t and then adjusts the state of the population.  \n> However, perhaps due to numerical instability, it occasionally  \n> lower the population count below 0 for one of the health states  \n> (perhaps because it's step size is too big or something).\n>\n> I have tried both the logarithm trick and also changing the  \n> relative and absolute tolerance inputs but I still get the problem  \n> for certain combinations of parameters and initial conditions.\n>\n> It occurs both under MS Windows XP Service Pack 2 and on a Linux  \n> cluster so I am pretty sure it is not platform specific.\n>\n> My real question to the group is if there is not a work around in  \n> lsoda are there other ode solvers in R that will allow the  \n> constraint of solutions to the ODEs remain non-negative?\n>\n> Best regards,\n> Jeremy\n>\n>\n>>>> Spencer Graves  6/8/2007 9:51 AM >>>\n> On the 'lsoda' help page, I did not see any option to force some\n> or all parameters to be nonnegative.\n>\n>       Have you considered replacing the parameters that must be\n> nonnegative with their logarithms?  This effective moves the 0 lower\n> limit to (-Inf) and seems to have worked well for me in the past.\n> Often, it can even make the log likelihood or sum of squares surface\n> more elliptical, which means that the standard normal approximation  \n> for\n> the sampling distribution of parameter estimates will likely be more\n> accurate.\n>\n>       Hope this helps.\n>       Spencer Graves\n> p.s.  Your example seems not to be self contained.  If I could have\n> easily copied it from your email and run it myself, I might have been\n> able to offer more useful suggestions.\n>\n> Jeremy Goldhaber-Fiebert wrote:\n>> Hello,\n>>\n>> I am using odesolve to simulate a group of people moving through  \n>> time and transmitting infections to one another.\n>>\n>> In Matlab, there is a NonNegative option which tells the Matlab  \n>> solver to keep the vector elements of the ODE solution non- \n>> negative at all times. What is the right way to do this in R?\n>>\n>> Thanks,\n>> Jeremy\n>>\n>> P.S., Below is a simplified version of the code I use to try to do  \n>> this, but I am not sure that it is theoretically right\n>>\n>> dynmodel <- function(t,y,p)\n>> {\n>> ## Initialize parameter values\n>>\n>> \tbirth <- p$mybirth(t)\n>> \tdeath <- p$mydeath(t)\n>> \trecover <- p$myrecover\n>> \tbeta <- p$mybeta\n>> \tvaxeff <- p$myvaxeff\n>> \tvaccinated <- p$myvax(t)\n>>\n>> \tvax <- vaxeff*vaccinated/100\n>>\n>> ## If the state currently has negative quantities (shouldn't  \n>> have), then reset to reasonable values for computing meaningful  \n>> derivatives\n>>\n>> \tfor (i in 1:length(y)) {\n>> \t\tif (y[i]<0) {\n>> \t\t\ty[i] <- 0\n>> \t\t}\n>> \t}\n>>\n>> \tS <- y[1]\n>> \tI <- y[2]\n>> \tR <- y[3]\n>> \tN <- y[4]\n>>\n>> \tshat <- (birth*(1-vax)) - (death*S) - (beta*S*I/N)\n>> \tihat <- (beta*S*I/N) - (death*I) - (recover*I)\n>> \trhat <- (birth*(vax)) + (recover*I) - (death*R)\n>>\n>> ## Do we overshoot into negative space, if so shrink derivative to  \n>> bring state to 0\n>> ## then rescale the components that take the derivative negative\n>>\n>> \tif (shat+S<0) {\n>> \t\tshat_old <- shat\n>> \t\tshat <- -1*S\n>> \t\tscaled_transmission <- (shat/shat_old)*(beta*S*I/N)\n>> \t\tihat <- scaled_transmission - (death*I) - (recover*I)\n>> \t\t\n>> \t}\t\n>> \tif (ihat+I<0) {\n>> \t\tihat_old <- ihat\n>> \t\tihat <- -1*I\n>> \t\tscaled_recovery <- (ihat/ihat_old)*(recover*I)\n>> \t\trhat <- scaled_recovery +(birth*(vax)) - (death*R)\n>> \t\n>> \t}\t\n>> \tif (rhat+R<0) {\n>> \t\trhat <- -1*R\n>> \t}\t\n>>\n>> \tnhat <- shat + ihat + rhat\n>>\n>> \tif (nhat+N<0) {\n>> \t\tnhat <- -1*N\t\n>> \t}\t\n>>\n>> ## return derivatives\n>>\n>> \tlist(c(shat,ihat,rhat,nhat),c(0))\n>>\n>> }\n>>\n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide http://www.R-project.org/posting- \n>> guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n>>\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting- \n> guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n\n\n\nDr. Hank Stevens, Assistant Professor\n338 Pearson Hall\nBotany Department\nMiami University\nOxford, OH 45056\n\nOffice: (513) 529-4206\nLab: (513) 529-4262\nFAX: (513) 529-4243\nhttp://www.cas.muohio.edu/~stevenmh/\nhttp://www.muohio.edu/ecology/\nhttp://www.muohio.edu/botany/\n\n\"E Pluribus Unum\"\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}