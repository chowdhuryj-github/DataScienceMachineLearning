{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "larry@cvs.develooper.com", "subject": "[svn:perl6-synopsis] r14412 - doc/trunk/design/syn", "body": "Author: larry\nDate: Fri Jun  1 12:44:27 2007\nNew Revision: 14412\n\nModified:\n   doc/trunk/design/syn/S06.pod\n\nLog:\nnote that parsed/reparsed also influences whether trailing bracket is assumed\n\n\nModified: doc/trunk/design/syn/S06.pod\n==============================================================================\n--- doc/trunk/design/syn/S06.pod\t(original)\n+++ doc/trunk/design/syn/S06.pod\tFri Jun  1 12:44:27 2007\n@@ -13,9 +13,9 @@\n \n   Maintainer: Larry Wall \n   Date: 21 Mar 2003\n-  Last Modified: 30 May 2007\n+  Last Modified: 1 Jun 2007\n   Number: 6\n-  Version: 86\n+  Version: 87\n \n \n This document summarizes Apocalypse 6, which covers subroutines and the\n@@ -1467,14 +1467,17 @@\n =item C\n \n Specifies the subrule by which a macro call is parsed.  The parse\n-always starts after the macro's initial token.\n+always starts after the macro's initial token.  If the operator has\n+two parts (circumfix or postcircumfix), the final token is also automatically\n+matched, and should not be matched by the supplied regex.\n \n =item C\n \n Also specifies the subrule by which a macro call is parsed, but restarts\n the parse before the macro's initial token, usually because you want\n to parse using an existing rule that expects to traverse the initial\n-token.\n+token.  If the operator has two parts (circumfix or postcircumfix), the\n+final token must also be explicitly matched by the supplied regex.\n \n =item C\n"}