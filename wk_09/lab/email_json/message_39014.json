{"category": "ham", "to_address": "\"Chas Owens\" <chas.owens@gmail.com>", "from_address": "\"Gaal Yahas\" <gaal@forum2.org>", "subject": "Re: How to die", "body": "On 5/30/07, Chas Owens  wrote:\n> I have poked around a bit in the code and can't find a good way to\n> die.  I am currently using\n>\n> perlReplicate n a = if n == 1/0\n>     then error \"Infinite replications would exhaust memory\"\n>     else if n < 0\n>         then genericReplicate 0 a\n>         else genericReplicate (truncate n) a\n>\n> But that gives the following message\n>\n> pugs> \"a\" x Inf\n> Internal error while running expression:\n> Infinite replications would exhaust memory\n>\n> But this isn't an internal error; it is a user error, so I want a message like\n>\n> pugs> \"a\" x Inf\n> *** Infinite replications would exhaust memory\n>     at  line 1, column 1-9\n>\n\nI'm not near a compiling box right now, but the fix would be to lift\nperlReplicate into\na monad (Eval, or just leave a Monad m context); then fail when the need arises.\n\nSomthing like (untested):\nperlReplicate :: VInt -> a -> Eval [a]\nperlReplicate (1/0) _ = fail \"Infinite replications would exhaust memory\"\nperlReplicate i a       = return $ flip genericReplicate a $ if i < 0\nthen 0 else a\n\nYou'll need to tweak the calling site to be monadic too.\n\n-- \nGaal Yahas \nhttp://gaal.livejournal.com/\n\n"}