{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23427 - in branches/SAMBA_3_0_26/source:\n\tregistry rpc_server services", "body": "Author: obnox\nDate: 2007-06-12 09:12:29 +0000 (Tue, 12 Jun 2007)\nNew Revision: 23427\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23427\n\nLog:\nMerge r19947 from 3_0:\n\nChange regkey_open_internal to take the parent key and a talloc_ctx as\narguments. This also replaces regkey_close_internal by TALLOC_FREE.\n\n(The modification to srv_winreg_nt.c differs from the original patch\nand is kept as minimal as possible due to preliminary commits not\nhaving been merged.)\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/registry/reg_frontend.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\n   branches/SAMBA_3_0_26/source/rpc_server/srv_winreg_nt.c\n   branches/SAMBA_3_0_26/source/services/services_db.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/registry/reg_frontend.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/registry/reg_frontend.c\t2007-06-12 08:02:32 UTC (rev 23426)\n+++ branches/SAMBA_3_0_26/source/registry/reg_frontend.c\t2007-06-12 09:12:29 UTC (rev 23427)\n@@ -345,44 +345,67 @@\n /***********************************************************************\n ***********************************************************************/\n \n-WERROR regkey_open_internal( REGISTRY_KEY **regkey, const char *path, \n+static int regkey_destructor(REGISTRY_KEY *key)\n+{\n+\treturn regdb_close();\n+}\n+\n+WERROR regkey_open_internal( TALLOC_CTX *mem_ctx, REGISTRY_KEY *parent,\n+\t\t\t     REGISTRY_KEY **regkey, const char *name,\n                              NT_USER_TOKEN *token, uint32 access_desired )\n {\n \tWERROR     \tresult = WERR_OK;\n-\tREGISTRY_KEY    *keyinfo;\n+\tREGISTRY_KEY    *key;\n \tREGSUBKEY_CTR\t*subkeys = NULL;\n-\tuint32 access_granted;\n-\t\n-\tif ( !(W_ERROR_IS_OK(result = regdb_open()) ) )\n-\t\treturn result;\n+\tsize_t path_len;\n \n-\tDEBUG(7,(\"regkey_open_internal: name = [%s]\\n\", path));\n+\tDEBUG(7,(\"regkey_open_internal: name = [%s]\\n\", name));\n \n-\tif ( !(*regkey = TALLOC_ZERO_P(NULL, REGISTRY_KEY)) ) {\n-\t\tregdb_close();\n+\tif ( !(key = TALLOC_ZERO_P(mem_ctx, REGISTRY_KEY)) ) {\n \t\treturn WERR_NOMEM;\n \t}\n+\n+\tif ( !(W_ERROR_IS_OK(result = regdb_open()) ) )\n+\t\treturn result;\n+\n+\ttalloc_set_destructor(key, regkey_destructor);\n \t\t\n-\tkeyinfo = *regkey;\n-\t\t\n \t/* initialization */\n \t\n-\tkeyinfo->type = REG_KEY_GENERIC;\n-\tif (!(keyinfo->name = talloc_strdup(keyinfo, path))) {\n+\tkey->type = REG_KEY_GENERIC;\n+\tif (!(key->name = talloc_strdup(key, name))) {\n \t\tresult = WERR_NOMEM;\n \t\tgoto done;\n \t}\n \n+\tif (parent != NULL) {\n+\t\tchar *tmp;\n+\t\tif (!(tmp = talloc_asprintf(key, \"%s%s%s\", \n+\t\t\t\t\t    parent ? parent->name : \"\",\n+\t\t\t\t\t    parent ? \"\\\\\" : \"\", \n+\t\t\t\t\t    key->name))) {\n+\t\t\tresult = WERR_NOMEM;\n+\t\t\tgoto done;\n+\t\t}\n+\t\tTALLOC_FREE(key->name);\n+\t\tkey->name = tmp;\n+\t}\n+\n+\tpath_len = strlen( key->name );\n+\tif ( (path_len != 0) && (key->name[path_len-1] == '\\\\') ) {\n+\t\tkey->name[path_len-1] = '\\0';\n+\t}\n+\n \t/* Tag this as a Performance Counter Key */\n \n-\tif( StrnCaseCmp(path, KEY_HKPD, strlen(KEY_HKPD)) == 0 )\n-\t\tkeyinfo->type = REG_KEY_HKPD;\n+\tif( StrnCaseCmp(key->name, KEY_HKPD, strlen(KEY_HKPD)) == 0 )\n+\t\tkey->type = REG_KEY_HKPD;\n \t\n \t/* Look up the table of registry I/O operations */\n \n-\tif ( !(keyinfo->hook = reghook_cache_find( keyinfo->name )) ) {\n-\t\tDEBUG(0,(\"open_registry_key: Failed to assigned a REGISTRY_HOOK to [%s]\\n\",\n-\t\t\tkeyinfo->name ));\n+\tif ( !(key->hook = reghook_cache_find( key->name )) ) {\n+\t\tDEBUG(0,(\"open_registry_key: Failed to assigned a \"\n+\t\t\t \"REGISTRY_HOOK to [%s]\\n\", key->name ));\n \t\tresult = WERR_BADFILE;\n \t\tgoto done;\n \t}\n@@ -390,40 +413,31 @@\n \t/* check if the path really exists; failed is indicated by -1 */\n \t/* if the subkey count failed, bail out */\n \n-\tif ( !(subkeys = TALLOC_ZERO_P( keyinfo, REGSUBKEY_CTR )) ) {\n+\tif ( !(subkeys = TALLOC_ZERO_P( key, REGSUBKEY_CTR )) ) {\n \t\tresult = WERR_NOMEM;\n \t\tgoto done;\n \t}\n \n-\tif ( fetch_reg_keys( keyinfo, subkeys ) == -1 )  {\n+\tif ( fetch_reg_keys( key, subkeys ) == -1 )  {\n \t\tresult = WERR_BADFILE;\n \t\tgoto done;\n \t}\n \t\n \tTALLOC_FREE( subkeys );\n \n-\tif ( !regkey_access_check( keyinfo, access_desired, &access_granted, token ) ) {\n+\tif ( !regkey_access_check( key, access_desired, &key->access_granted,\n+\t\t\t\t   token ) ) {\n \t\tresult = WERR_ACCESS_DENIED;\n \t\tgoto done;\n \t}\n+\n+\t*regkey = key;\n+\tresult = WERR_OK;\n \t\n-\tkeyinfo->access_granted = access_granted;\n-\n done:\n \tif ( !W_ERROR_IS_OK(result) ) {\n-\t\tregkey_close_internal( *regkey );\n+\t\tTALLOC_FREE(key);\n \t}\n \n \treturn result;\n }\n-\n-/*******************************************************************\n-*******************************************************************/\n-\n-WERROR regkey_close_internal( REGISTRY_KEY *key )\n-{\n-\tTALLOC_FREE( key );\n-\tregdb_close();\n-\n-\treturn WERR_OK;\n-}\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\t2007-06-12 08:02:32 UTC (rev 23426)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_eventlog_nt.c\t2007-06-12 09:12:29 UTC (rev 23427)\n@@ -411,9 +411,8 @@\n \n \tpstr_sprintf( path, \"%s/%s\", KEY_EVENTLOG, elogname );\n \n-\twresult =\n-\t\tregkey_open_internal( &keyinfo, path, get_root_nt_token(  ),\n-\t\t\t\t      REG_KEY_READ );\n+\twresult = regkey_open_internal( NULL, NULL, &keyinfo, path,\n+\t\t\t\t\tget_root_nt_token(  ), REG_KEY_READ );\n \n \tif ( !W_ERROR_IS_OK( wresult ) ) {\n \t\tDEBUG( 4,\n@@ -436,7 +435,7 @@\n \tif ( ( val = regval_ctr_getvalue( values, \"MaxSize\" ) ) != NULL )\n \t\tuiMaxSize = IVAL( regval_data_p( val ), 0 );\n \n-\tregkey_close_internal( keyinfo );\n+\tTALLOC_FREE( keyinfo );\n \n \ttdb_store_int32( ELOG_TDB_CTX(info->etdb), EVT_MAXSIZE, uiMaxSize );\n \ttdb_store_int32( ELOG_TDB_CTX(info->etdb), EVT_RETENTION, uiRetention );\n\nModified: branches/SAMBA_3_0_26/source/rpc_server/srv_winreg_nt.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/rpc_server/srv_winreg_nt.c\t2007-06-12 08:02:32 UTC (rev 23426)\n+++ branches/SAMBA_3_0_26/source/rpc_server/srv_winreg_nt.c\t2007-06-12 09:12:29 UTC (rev 23427)\n@@ -40,7 +40,7 @@\n  \n static void free_regkey_info(void *ptr)\n {\n-\tregkey_close_internal( (REGISTRY_KEY*)ptr );\n+\tTALLOC_FREE(ptr);\n };\n \n /******************************************************************\n@@ -72,31 +72,19 @@\n                                  REGISTRY_KEY **keyinfo, REGISTRY_KEY *parent,\n \t\t\t\t const char *subkeyname, uint32 access_desired  )\n {\n-\tpstring         keypath;\n-\tint\t\tpath_len;\n \tWERROR     \tresult = WERR_OK;\n \n-\t/* create a full registry path and strip any trailing '\\' \n-\t   characters */\n-\t   \n-\tpstr_sprintf( keypath, \"%s%s%s\", \n-\t\tparent ? parent->name : \"\",\n-\t\tparent ? \"\\\\\" : \"\", \n-\t\tsubkeyname );\n-\t\n-\tpath_len = strlen( keypath );\n-\tif ( path_len && keypath[path_len-1] == '\\\\' )\n-\t\tkeypath[path_len-1] = '\\0';\n-\t\n-\t/* now do the internal open */\n-\t\t\n-\tresult = regkey_open_internal( keyinfo, keypath, p->pipe_user.nt_user_token, access_desired );\n-\tif ( !W_ERROR_IS_OK(result) )\n+\tresult = regkey_open_internal( NULL, parent, keyinfo, subkeyname, \n+\t\t\t\t       p->pipe_user.nt_user_token, \n+\t\t\t\t       access_desired );\n+\tif ( !W_ERROR_IS_OK(result) ) {\n+\t\tTALLOC_FREE( *keyinfo );\n \t\treturn result;\n+\t}\n \t\n \tif ( !create_policy_hnd( p, hnd, free_regkey_info, *keyinfo ) ) {\n \t\tresult = WERR_BADFILE; \n-\t\tregkey_close_internal( *keyinfo );\n+\t\tTALLOC_FREE( *keyinfo );\n \t}\n \t\n \treturn result;\n\nModified: branches/SAMBA_3_0_26/source/services/services_db.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/services/services_db.c\t2007-06-12 08:02:32 UTC (rev 23426)\n+++ branches/SAMBA_3_0_26/source/services/services_db.c\t2007-06-12 09:12:29 UTC (rev 23427)\n@@ -322,8 +322,8 @@\n \t/* open the new service key */\n \n \tpstr_sprintf( path, \"%s\\\\%s\", KEY_SERVICES, name );\n-\twresult = regkey_open_internal( &key_service, path, get_root_nt_token(), \n-\t\tREG_KEY_ALL );\n+\twresult = regkey_open_internal( NULL, NULL, &key_service, path,\n+\t\t\t\t\tget_root_nt_token(), REG_KEY_ALL );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -334,7 +334,7 @@\n \n \tif ( !(svc_subkeys = TALLOC_ZERO_P( key_service, REGSUBKEY_CTR )) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key_service );\n+\t\tTALLOC_FREE( key_service );\n \t\treturn;\n \t}\n \t\n@@ -346,7 +346,7 @@\n \t\n \tif ( !(values = TALLOC_ZERO_P( key_service, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key_service );\n+\t\tTALLOC_FREE( key_service );\n \t\treturn;\n \t}\n \n@@ -355,29 +355,29 @@\n \n \t/* cleanup the service key*/\n \n-\tregkey_close_internal( key_service );\n+\tTALLOC_FREE( key_service );\n \n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\\\\%s\", KEY_SERVICES, name, \"Security\" );\n-\twresult = regkey_open_internal( &key_secdesc, path, get_root_nt_token(), \n-\t\tREG_KEY_ALL );\n+\twresult = regkey_open_internal( NULL, NULL, &key_secdesc, path,\n+\t\t\t\t\tget_root_nt_token(), REG_KEY_ALL );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n-\t\tregkey_close_internal( key_secdesc );\n+\t\tTALLOC_FREE( key_secdesc );\n \t\treturn;\n \t}\n \n \tif ( !(values = TALLOC_ZERO_P( key_secdesc, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key_secdesc );\n+\t\tTALLOC_FREE( key_secdesc );\n \t\treturn;\n \t}\n \n \tif ( !(sd = construct_service_sd(key_secdesc)) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: Failed to create default sec_desc!\\n\"));\n-\t\tregkey_close_internal( key_secdesc );\n+\t\tTALLOC_FREE( key_secdesc );\n \t\treturn;\n \t}\n \t\n@@ -394,7 +394,7 @@\n \t/* finally cleanup the Security key */\n \t\n \tprs_mem_free( &ps );\n-\tregkey_close_internal( key_secdesc );\n+\tTALLOC_FREE( key_secdesc );\n \n \treturn;\n }\n@@ -412,8 +412,8 @@\n \t\n \t/* bad mojo here if the lookup failed.  Should not happen */\n \t\n-\twresult = regkey_open_internal( &key, KEY_SERVICES, get_root_nt_token(), \n-\t\tREG_KEY_ALL );\n+\twresult = regkey_open_internal( NULL, NULL, &key, KEY_SERVICES,\n+\t\t\t\t\tget_root_nt_token(), REG_KEY_ALL );\n \n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"init_services_keys: key lookup failed! (%s)\\n\", \n@@ -425,7 +425,7 @@\n \t\n \tif ( !(subkeys = TALLOC_ZERO_P( key, REGSUBKEY_CTR )) ) {\n \t\tDEBUG(0,(\"init_services_keys: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn;\n \t}\n \t\n@@ -447,7 +447,7 @@\n \t\tadd_new_svc_name( key, subkeys, service_list[i] );\n \t}\n \n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \n \t/* initialize the control hooks */\n \n@@ -476,7 +476,8 @@\n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\\\\%s\", KEY_SERVICES, name, \"Security\" );\n-\twresult = regkey_open_internal( &key, path, token, REG_KEY_ALL );\n+\twresult = regkey_open_internal( NULL, NULL, &key, path, token,\n+\t\t\t\t\tREG_KEY_ALL );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"svcctl_get_secdesc: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -485,7 +486,7 @@\n \n \tif ( !(values = TALLOC_ZERO_P( key, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn NULL;\n \t}\n \n@@ -494,7 +495,7 @@\n \tif ( !(val = regval_ctr_getvalue( values, \"Security\" )) ) {\n \t\tDEBUG(6,(\"svcctl_get_secdesc: constructing default secdesc for service [%s]\\n\", \n \t\t\tname));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn construct_service_sd( ctx );\n \t}\n \t\n@@ -505,7 +506,7 @@\n \tprs_give_memory( &ps, (char *)regval_data_p(val), regval_size(val), False );\n \t\n \tif ( !sec_io_desc(\"sec_desc\", &sd, &ps, 0 ) ) {\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn construct_service_sd( ctx );\n \t}\n \t\n@@ -514,7 +515,7 @@\n \t/* finally cleanup the Security key */\n \t\n \tprs_mem_free( &ps );\n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \n \treturn ret_sd;\n }\n@@ -535,7 +536,8 @@\n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\\\\%s\", KEY_SERVICES, name, \"Security\" );\n-\twresult = regkey_open_internal( &key, path, token, REG_KEY_ALL );\n+\twresult = regkey_open_internal( NULL, NULL, &key, path, token,\n+\t\t\t\t\tREG_KEY_ALL );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"svcctl_get_secdesc: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -544,7 +546,7 @@\n \n \tif ( !(values = TALLOC_ZERO_P( key, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"add_new_svc_name: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn False;\n \t}\n \t\n@@ -561,7 +563,7 @@\n \t/* cleanup */\n \t\n \tprs_mem_free( &ps );\n-\tregkey_close_internal( key);\n+\tTALLOC_FREE( key);\n \n \treturn ret;\n }\n@@ -581,7 +583,8 @@\n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\", KEY_SERVICES, name );\n-\twresult = regkey_open_internal( &key, path, token, REG_KEY_READ );\n+\twresult = regkey_open_internal( NULL, NULL, &key, path, token,\n+\t\t\t\t\tREG_KEY_READ );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"svcctl_lookup_dispname: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -590,7 +593,7 @@\n \n \tif ( !(values = TALLOC_ZERO_P( key, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"svcctl_lookup_dispname: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\tgoto fail;\n \t}\n \n@@ -601,13 +604,13 @@\n \n \trpcstr_pull( display_name, regval_data_p(val), sizeof(display_name), regval_size(val), 0 );\n \n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \t\n \treturn display_name;\n \n fail:\n \t/* default to returning the service name */\n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \tfstrcpy( display_name, name );\n \treturn display_name;\n }\n@@ -627,7 +630,8 @@\n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\", KEY_SERVICES, name );\n-\twresult = regkey_open_internal( &key, path, token, REG_KEY_READ );\n+\twresult = regkey_open_internal( NULL, NULL, &key, path, token,\n+\t\t\t\t\tREG_KEY_READ );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"svcctl_lookup_dispname: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -636,7 +640,7 @@\n \n \tif ( !(values = TALLOC_ZERO_P( key, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"svcctl_lookup_dispname: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn NULL;\n \t}\n \n@@ -647,7 +651,7 @@\n \telse\n \t\trpcstr_pull( description, regval_data_p(val), sizeof(description), regval_size(val), 0 );\n \n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \t\n \treturn description;\n }\n@@ -666,7 +670,8 @@\n \t/* now add the security descriptor */\n \n \tpstr_sprintf( path, \"%s\\\\%s\", KEY_SERVICES, name );\n-\twresult = regkey_open_internal( &key, path, token, REG_KEY_READ );\n+\twresult = regkey_open_internal( NULL, NULL, &key, path, token,\n+\t\t\t\t\tREG_KEY_READ );\n \tif ( !W_ERROR_IS_OK(wresult) ) {\n \t\tDEBUG(0,(\"svcctl_fetch_regvalues: key lookup failed! [%s] (%s)\\n\", \n \t\t\tpath, dos_errstr(wresult)));\n@@ -675,13 +680,13 @@\n \n \tif ( !(values = TALLOC_ZERO_P( NULL, REGVAL_CTR )) ) {\n \t\tDEBUG(0,(\"svcctl_fetch_regvalues: talloc() failed!\\n\"));\n-\t\tregkey_close_internal( key );\n+\t\tTALLOC_FREE( key );\n \t\treturn NULL;\n \t}\n \t\n \tfetch_reg_values( key, values );\n \n-\tregkey_close_internal( key );\n+\tTALLOC_FREE( key );\n \t\n \treturn values;\n }\n\n"}