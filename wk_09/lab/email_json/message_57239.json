{"category": "ham", "to_address": "R-help@stat.math.ethz.ch", "from_address": "Bart Vandewoestyne <Bart.Vandewoestyne@telenet.be>", "subject": "[R] maximum difference between two ECDF's", "body": "Hello,\n\nI have a vector of samples x of length N.  Associated with each\nsample x_i is a certain weight w_i.  All the weights are in another\nvector w of the same length N.\n\nI have another vector of samples y of length n (small n).  All\nthese samples have equal weights 1/n.  The ECDF of these samples\nis defined as for example at\nhttp://en.wikipedia.org/wiki/Empirical_distribution_function and\nI can compute it using the ecdf() function in R.\n\nI define the 'ECDF' of the samples x with their associated\nweights in the following way:\n\nF_N(x) = 1/N * sum_{i=1}^{N}w_i * Indicator(x_i <= x)\n\n(does this 'ECDF' have another name???)\n\nSo it's basically the same formula as the one on the above URL, but the\nonly difference is that I multiply the indicator function for x_i with\nthe weight w_i.\n\nNow suppose F_n(x) is the ECDF of the n samples with equal\nweights 1/n, and F_N(x) is the 'ECDF' of the other samples with\ntheir associated weights.\n\nWhat I now would like to compute is the maximum difference\nbetween these two, so:\n\nmax(abs(F_N(x)-F_n(x)))\n\nSo it's like computing the Kolmogorov-Smirnov statistic of two\ndiscrete CDF's.\n\nIf i didn't have these weights, or if one of the two was a\ncontinuous CDF, then I could simply use the ks.test() function.\nHowever, my situation is different... my first set of samples has\nassociated weights and therefore the 'ECDF' has a slightly\ndifferent definition.\n\nHow can I compute max(abs(F_N(x)-F_n(x))) ?  Do there exist\nstandard functions for this?\n\nThanks,\nBart\n\n-- \n\t\"Share what you know.  Learn what you don't.\"\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}