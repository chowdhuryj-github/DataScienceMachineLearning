{"category": "ham", "to_address": "\"Chris Elsaesser\" <chris.elsaesser@spadac.com>, r-help@stat.math.ethz.ch", "from_address": "\"Liaw, Andy\" <andy_liaw@merck.com>", "subject": "Re: [R] using lm() with variable formula  [Broadcast]", "body": "One way to do it is by giving a data frame with the right variables to\nlm() as the first argument each time.  If lm() is given a data frame as\nthe first argument, it will treat the first variable as the LHS and the\nrest as the RHS of the formula.\n\nAs examples, you can do:\n\nlm(myData[c(\"height\", \"weight\", \"BP\", \"Cals\")])\n\n(The drawback to this is that the \"formula\" in the fitted model object\nlooks a bit strange...)\n\nAndy\n\n\nFrom: Chris Elsaesser\n> \n> New to R; please excuse me if this is a dumb question.  I \n> tried to RTFM;\n> didn't help.\n> \n> I want to do a series of regressions over the columns in a data.frame,\n> systematically varying the response variable and the the \n> terms; and not\n> necessarily including all the non-response columns.  In my case, the\n> columns are time series. I don't know if that makes a difference; it\n> does mean I have to call lag() to offset non-response terms. I can not\n> assume a specific number of columns in the data.frame; might \n> be 3, might\n> be 20. \n> \n> My central problem is that the formula given to lm() is different each\n> time.  For example, say a data.frame had columns with the following\n> headings:  height, weight, BP (blood pressure), and Cals \n> (calorie intake\n> per time frame).  In that case, I'd need something like the following:\n> \n> \tlm(height ~ weight + BP + Cals)\n> \tlm(height ~ weight + BP)\n> \tlm(height ~ weight + Cals)\n> \tlm(height ~ BP + Cals)\n> \tlm(weight ~ height + BP)\n> \tlm(weight ~ height + Cals)\n> \tetc.\n> \n> In general, I'll have to read the header to get the argument labels.\n> \n> Do I have to write several functions, each taking a different \n> number of\n> arguments?  I'd like to construct a string or list representing the\n> varialbes in the formula and apply lm(), so to say  [I'm mainly a Lisp\n> programmer where that part would be very simple. Anyone have \n> a Lisp API\n> for R? :-}]\n> \n> Thanks,\n> chris\n> \n> Chris Elsaesser, PhD        \n> Principal Scientist, Machine Learning\n> SPADAC Inc.\n> 7921 Jones Branch Dr. Suite 600  \n> McLean, VA 22102  \n> \n> 703.371.7301 (m)\n> 703.637.9421 (o)\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide \n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n> \n> \n> \n\n\n------------------------------------------------------------------------------\nNotice:  This e-mail message, together with any attachments,...{{dropped}}\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}