{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: Query in pack and unpack functions", "body": "Dharshana Eswaran wrote:\n> Hi All,\n\nHello,\n\n> My aim is to supply a hexadecimal value and print its binary value.\n> \n> I have written a small piece of code for the same:\n> \n> $input = 23;     #any decimal value\n> $hex1 = sprintf (\"%x\",$input);\n> $binary = unpack 'B*', pack 'H*', $hex1;\n> @fields1 = unpack 'A4A4', $binary;\n> print \"$fields1[1]   $fields1[0]\";    # i need to print the Lower Nibble\n> first and then the Higher nibble\n> \n> Output:\n> 0111  0010\n\nI get a different output:\n\n$ perl -le'\n$input = 23;\n$hex1 = sprintf \"%x\", $input;\n$binary = unpack \"B*\", pack \"H*\", $hex1;\n@fields1 = unpack \"A4A4\", $binary;\nprint \"$fields1[1]   $fields1[0]\";\n'\n0111   0001\n\n\nPerhaps you want something like this:\n\n$ perl -le'\n$input = 23;\nprintf \"%04b  %04b\\n\", $input & 15, $input >> 4;\n'\n0111  0001\n\n\n> This works fine for any double digit number.\n> \n> But this logic does not work with single digit number as input. When i give\n> a single digit number (for eg: 5) as input, it is stored as 01010000 in\n> $binary variable instead of 00000101.\n\n$ perl -le'\n$input = 5;\nprintf \"%08b\\n\", $input;\n'\n00000101\n\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}