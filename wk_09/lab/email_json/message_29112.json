{"category": "ham", "to_address": "Mathew <theillien@yahoo.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Stuck on a hash referrence, kinda", "body": "My understanding of the problem:\n\nYou have a ref to a HoH and you need to find all of the first set of\nkeys that have a specific, but unspecified at coding time, second key\nor value.\n\nFor key I would do something like this\n\nmy $key2 = func_to_get_key2();\nfor $key1 (grep { exists $store->{$key1}{$key2} } sort keys %$store) {\n    process($store, $key1, $key2);\n}\n\nFor value I would use a similar construct\n\nmy ($key2, $value) = func_to_get_key2_and_value();\nfor $key1 (grep { $store->{$key1}{$key2} eq $value } sort keys %$store) {\n    process($store, $key1, $key2);\n}\n\nN.B. eq is not a good test of equality for numbers (use == instead)\nand == is not a good test of equality for floating point numbers that\nare the result of even simple operations (use an inequaltiy with an\nappropriate delta* instead); hopefully objects will provide an\noverridden eq or == operator or will provide an explicit method for\ntesting equality.\n\n\n* I may have butchered that, what I mean is something like\n($value <= $target-$delta and $value <= $target+$delta)\nwhere $delta is a small value that is equal to the amount of rounding\nerror you think may have crept in.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}