{"category": "ham", "to_address": "parrotbug-followup@parrotcode.org", "from_address": "\"jerry gay\" <jerry.gay@gmail.com>", "subject": "Re: [perl #42360] [TODO]: Unit tests for Parrot::Revision", "body": "On 5/1/07, James Keenan via RT  wrote:\n> In the course of writing tests for Parrot::Revision (see the 'reconfigure' branch), I noticed that\n> much of the code depends on the definedness and value of $svn_entries.  However, since\n> $svn_entries is explicitly undefined at the top of lib/Parrot/Revision.pm, and since it's never\n> assigned to within that package, it's not clear what all that code is for.\n>\n> Here's the result of ack-ing for svn_entries in trunk:\n>\n> #####\n> [parrot] 502 $ ack --nohtml --nophp svn_entries\n> config/gen/revision.pm\n> 31:    my $entries  = $Parrot::Revision::svn_entries;\n>\n> lib/Parrot/Revision.pm\n> 27:our $svn_entries = undef;\n> 42:    elsif ( defined $svn_entries and -r $svn_entries ) {\n> 43:        open FH, '<', $svn_entries\n> 44:            or die \"Unable to open file ($svn_entries). Aborting. Error returned was: $!\";\n> #####\n>\n> If $svn_entries starts out undef-ed and is never assigned to, it can never pass the test for\n> definedness in line 42 above, which means that the subsequent elsif stanza can never be\n> reached -- and should therefore be refactored out of existence.\n>\n> Is my interpretation correct?\n>\nyour interpretation is correct. '.svn_entries' is an svn metadata file\nthat's not even available in newer svn releases. Parrot::Revision\nshould never have been mucking with svn internals, anyway, and should\nnow be using the external api to get this info.\n\nthis code should be ripped out.\n~jerry\n\n"}