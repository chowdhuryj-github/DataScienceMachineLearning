{"category": "ham", "to_address": "\"Tom Allison\" <tom@tacocat.net>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: forking problem with dbd::mysql", "body": "On 5/9/07, Tom Allison  wrote:\n> > sing its handle unexpectedly.\n> >\n> > The solution:\n> >\n> > Setting a flag (InactiveDestroy) on the parent's handle inside the\n> > child process prevents the automagic closing of the connection.\n> >\n> > * the magic in this case is the DESTROY method of DBI::db\n>\n> Where do you get the inactiveDestroy?\n> Is this something missed in the RTFM?\n>\nfrom perldoc DBI (version 1.53, I don't know when it debuted)\n       \"InactiveDestroy\" (boolean)\n           The default value, false, means a handle will be fully destroyed as\n           normal when the last reference to it is removed, just as you'd\n           expect.\n\n           If set true then the handle will be treated by the DESTROY as if it\n           was no longer Active, and so the database engine related effects of\n           DESTROYing a handle will be skipped.\n\n           Think of the name as meaning 'treat the handle as not-Active in the\n           DESTROY method'.\n\n           For a database handle, this attribute does not disable an explicit\n           call to the disconnect method, only the implicit call from DESTROY\n           that happens if the handle is still marked as \"Active\".\n\n           This attribute is specifically designed for use in Unix applica\u001b$B!>\u001b(B\n           tions that \"fork\" child processes. Either the parent or the child\n           process, but not both, should set \"InactiveDestroy\" true on all\n           their shared handles.  (Note that some databases, including Oracle,\n           don't support passing a database connection across a fork.)\n\n           To help tracing applications using fork the process id is shown in\n           the trace log whenever a DBI or handle trace() method is called.\n           The process id also shown for every method call if the DBI trace\n           level (not handle trace level) is set high enough to show the trace\n           from the DBI's method dispatcher, e.g. >= 9.\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}