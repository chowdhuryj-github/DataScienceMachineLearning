{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "Thomas Wittek <mail@gedankenkonstrukt.de>", "subject": "Re: Sigils by example", "body": "Juerd Waalboer wrote:\n> Thomas Wittek skribis 2007-05-14 22:20 (+0200):\n>> But I think that the name of an identifier (noun/verb, single/plural,\n>> the meaning of the word) already gives enough context to understand what\n>> type it is.\n>\n> [examples]\n\nYou are right, I should have weakened this sentence by \"in most cases\".\nTricky from you to cut out my next sentence, which was about additional\ncontext that's needed in this cases and that your examples are missing\nof course:\n\n> Thomas Wittek also wrote:\n>> And every use of it (assigning and reading) additionally makes it\n>> clear.\n>> So _for me_ there is no need for an additional hint for the type.\n\nJuerd Waalboer wrote:\n> And how on earth would you write \"object.foo()\", where foo is a variable\n> holding a reference to a method, not the name of the method, if you had\n> no sigils?\n\nThat would not happen in my code.\nI consider having the same name for different things bad.\nI even wouldn't do that _with_ sigils.\n\n> The Perl Way:\n> $object.foo() calls the method called \"foo\".\n> $object.$foo() calls the method that is in the variable $foo.\n\nMy way:\nsomeref = &somemethod\nobject.someref()\n\nOf course you could argue that you don't know in advance, if \"object\"\nhas a method with that name, so you cannot manually avoid the conflict.\nBut it should be no problem to put out a warning/error at runtime (or\nmaybe even at compile time) when a variable name clashes with a method name.\n\n-- \nThomas Wittek\nhttp://gedankenkonstrukt.de/\nJabber: streawkceur@jabber.i-pobox.net\n\n"}