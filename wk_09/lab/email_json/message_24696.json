{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "vlendec@samba.org", "subject": "svn commit: samba r22745 - in branches/SAMBA_3_0/source: . nsswitch", "body": "Author: vlendec\nDate: 2007-05-07 13:56:57 +0000 (Mon, 07 May 2007)\nNew Revision: 22745\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22745\n\nLog:\nAdd local groups to the --required-membership-sid test. This needs\nmerging to 3_0_26 once Michael's net conf changes have been merged. It\ndepends on token_utils.c.\n\nModified:\n   branches/SAMBA_3_0/source/Makefile.in\n   branches/SAMBA_3_0/source/nsswitch/winbindd_pam.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/Makefile.in\n===================================================================\n--- branches/SAMBA_3_0/source/Makefile.in\t2007-05-07 13:39:25 UTC (rev 22744)\n+++ branches/SAMBA_3_0/source/Makefile.in\t2007-05-07 13:56:57 UTC (rev 22745)\n@@ -829,7 +829,8 @@\n \t\tnsswitch/winbindd_async.o \\\n \t\tnsswitch/winbindd_creds.o \\\n \t\tnsswitch/winbindd_cred_cache.o \\\n-\t\tnsswitch/winbindd_ccache_access.o\n+\t\tnsswitch/winbindd_ccache_access.o \\\n+\t\tauth/token_util.o\n \n WINBINDD_OBJ = \\\n \t\t$(WINBINDD_OBJ1) $(PASSDB_OBJ) $(GROUPDB_OBJ) \\\n\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_pam.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_pam.c\t2007-05-07 13:39:25 UTC (rev 22744)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_pam.c\t2007-05-07 13:56:57 UTC (rev 22745)\n@@ -127,17 +127,12 @@\n {\n \tDOM_SID *require_membership_of_sid;\n \tsize_t num_require_membership_of_sid;\n-\tDOM_SID *all_sids;\n-\t/* UserSID, GroupSID, Grooup2SIDs, OtherSIDs, WellKnownSIDs */\n-\tsize_t num_all_sids = (2 + \n-\t\t\t       info3->num_groups2 + \n-\t\t\t       info3->num_other_sids + \n-\t\t\t       2 );\n-\tsize_t i, j = 0, k;\n-\tsize_t group_sid_length;\n-\tconst char *search_location;\n-\tchar *single_group_sid;\n-\tconst char *comma;\n+\tfstring req_sid;\n+\tconst char *p;\n+\tDOM_SID sid;\n+\tsize_t i;\n+\tstruct nt_user_token *token;\n+\tNTSTATUS status;\n \n \t/* Parse the 'required group' SID */\n \t\n@@ -146,93 +141,59 @@\n \t\treturn NT_STATUS_OK;\n \t}\n \n-\tnum_require_membership_of_sid = 1;\n-\tgroup_sid_length = strlen(group_sid);\n-\tfor (i = 0; i < group_sid_length; i++) {\n-\t\tif (',' == group_sid[i]) {\n-\t\t\tnum_require_membership_of_sid++;\n-\t\t}\n+\tif (!(token = TALLOC_ZERO_P(mem_ctx, struct nt_user_token))) {\n+\t\tDEBUG(0, (\"talloc failed\\n\"));\n+\t\treturn NT_STATUS_NO_MEMORY;\n \t}\n \n-\trequire_membership_of_sid = TALLOC_ARRAY(mem_ctx, DOM_SID, num_require_membership_of_sid);\n-\tif (!require_membership_of_sid)\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tnum_require_membership_of_sid = 0;\n+\trequire_membership_of_sid = NULL;\n \n-\ti = 0;\n-\tsearch_location = group_sid;\n+\tp = group_sid;\n \n-\tif (num_require_membership_of_sid > 1) {\n+\twhile (next_token(&p, req_sid, \",\", sizeof(req_sid))) {\n+\t\tif (!string_to_sid(&sid, req_sid)) {\n+\t\t\tDEBUG(0, (\"check_info3_in_group: could not parse %s \"\n+\t\t\t\t  \"as a SID!\", req_sid));\n+\t\t\treturn NT_STATUS_INVALID_PARAMETER;\n+\t\t}\n \n-\t\t/* Allocate the maximum possible size */\n-\t\tsingle_group_sid = TALLOC(mem_ctx, group_sid_length);\n-\t\tif (!single_group_sid)\n+\t\tif (!add_sid_to_array(mem_ctx, &sid,\n+\t\t\t\t      &require_membership_of_sid,\n+\t\t\t\t      &num_require_membership_of_sid)) {\n+\t\t\tDEBUG(0, (\"add_sid_to_array failed\\n\"));\n \t\t\treturn NT_STATUS_NO_MEMORY;\n-\n-\t\twhile ( (comma = strstr(search_location, \",\")) != NULL ) {\n-\n-\t\t\tstrncpy(single_group_sid, search_location, comma - search_location);\n-\t\t\tsingle_group_sid[comma - search_location] = 0;\n-\n-\t\t\tif (!string_to_sid(&require_membership_of_sid[i++], single_group_sid)) {\n-\t\t\t\tDEBUG(0, (\"check_info3_in_group: could not parse %s as a SID!\", \n-\t\t\t\t\t  single_group_sid));\n-\t\t\t\n-\t\t\t\treturn NT_STATUS_INVALID_PARAMETER;\n-\t\t\t}\n-\n-\t\t\tsearch_location = comma + 1;\n \t\t}\n \t}\n \n-\tif (!string_to_sid(&require_membership_of_sid[i++], search_location)) {\n-\t\tDEBUG(0, (\"check_info3_in_group: could not parse %s as a SID!\", \n-\t\t\t  search_location));\n-\n-\t\treturn NT_STATUS_INVALID_PARAMETER;\n-\t}\n-\n-\tall_sids = TALLOC_ARRAY(mem_ctx, DOM_SID, num_all_sids);\n-\tif (!all_sids)\n-\t\treturn NT_STATUS_NO_MEMORY;\n-\n-\t/* and create (by appending rids) the 'domain' sids */\n-\t\n-\tsid_copy(&all_sids[0], &(info3->dom_sid.sid));\n-\t\n-\tif (!sid_append_rid(&all_sids[0], info3->user_rid)) {\n-\t\tDEBUG(3,(\"could not append user's primary RID 0x%x\\n\",\n+\tif (!sid_compose(&sid, &(info3->dom_sid.sid),\n+\t\t\t info3->user_rid)\n+\t    || !add_sid_to_array(mem_ctx, &sid,\n+\t\t\t\t &token->user_sids, &token->num_sids)) {\n+\t\tDEBUG(3,(\"could not add user SID from rid 0x%x\\n\",\n \t\t\t info3->user_rid));\t\t\t\n-\t\t\n \t\treturn NT_STATUS_INVALID_PARAMETER;\n \t}\n-\tj++;\n \n-\tsid_copy(&all_sids[1], &(info3->dom_sid.sid));\n-\t\t\n-\tif (!sid_append_rid(&all_sids[1], info3->group_rid)) {\n+\tif (!sid_compose(&sid, &(info3->dom_sid.sid),\n+\t\t\t info3->group_rid)\n+\t    || !add_sid_to_array(mem_ctx, &sid, \n+\t\t\t\t &token->user_sids, &token->num_sids)) {\n \t\tDEBUG(3,(\"could not append additional group rid 0x%x\\n\",\n \t\t\t info3->group_rid));\t\t\t\n \t\t\n \t\treturn NT_STATUS_INVALID_PARAMETER;\n \t}\n-\tj++;\t\n \n-\t/* Well-Known SIDs */\n-\n-\tsid_copy( &all_sids[j++], &global_sid_World );\n-\tsid_copy( &all_sids[j++], &global_sid_Authenticated_Users );\n-\t\n \tfor (i = 0; i < info3->num_groups2; i++) {\n-\t\n-\t\tsid_copy(&all_sids[j], &(info3->dom_sid.sid));\n-\t\t\n-\t\tif (!sid_append_rid(&all_sids[j], info3->gids[i].g_rid)) {\n+\t\tif (!sid_compose(&sid, &(info3->dom_sid.sid),\n+\t\t\t\t info3->gids[i].g_rid)\n+\t\t    || !add_sid_to_array(mem_ctx, &sid,\n+\t\t\t\t\t &token->user_sids, &token->num_sids)) {\n \t\t\tDEBUG(3,(\"could not append additional group rid 0x%x\\n\",\n-\t\t\t\tinfo3->gids[i].g_rid));\t\t\t\n-\t\t\t\t\n+\t\t\t\t info3->gids[i].g_rid));\t\n \t\t\treturn NT_STATUS_INVALID_PARAMETER;\n \t\t}\n-\t\tj++;\n \t}\n \n \t/* Copy 'other' sids.  We need to do sid filtering here to\n@@ -242,21 +203,32 @@\n          */\n \n \tfor (i = 0; i < info3->num_other_sids; i++) {\n-\t\tsid_copy(&all_sids[info3->num_groups2 + i + 2],\n-\t\t\t &info3->other_sids[i].sid);\n-\t\tj++;\n+\t\tif (!add_sid_to_array(mem_ctx, &info3->other_sids[i].sid,\n+\t\t\t\t      &token->user_sids, &token->num_sids)) {\n+\t\t\tDEBUG(3, (\"could not add SID to array: %s\\n\",\n+\t\t\t\t  sid_string_static(&info3->other_sids[i].sid)));\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n \t}\n \n-\tfor (i = 0; i < j; i++) {\n-\t\tfstring sid1, sid2;\n-\t\tDEBUG(10, (\"User has SID: %s\\n\", \n-\t\t\t   sid_to_string(sid1, &all_sids[i])));\n-\t\tfor (k = 0; k < num_require_membership_of_sid; k++) {\n-\t\t\tif (sid_equal(&require_membership_of_sid[k], &all_sids[i])) {\n-\t\t\t\tDEBUG(10, (\"SID %s matches %s - user permitted to authenticate!\\n\", \n-\t\t\t\t\t   sid_to_string(sid1, &require_membership_of_sid[k]), sid_to_string(sid2, &all_sids[i])));\n-\t\t\t\treturn NT_STATUS_OK;\n-\t\t\t}\n+\tif (!NT_STATUS_IS_OK(status = add_aliases(get_global_sam_sid(),\n+\t\t\t\t\t\t  token))\n+\t    || !NT_STATUS_IS_OK(status = add_aliases(&global_sid_Builtin,\n+\t\t\t\t\t\t     token))) {\n+\t\tDEBUG(3, (\"could not add aliases: %s\\n\",\n+\t\t\t  nt_errstr(status)));\n+\t\treturn status;\n+\t}\n+\n+\tdebug_nt_user_token(DBGC_CLASS, 10, token);\n+\n+\tfor (i=0; i<num_require_membership_of_sid; i++) {\n+\t\tDEBUG(10, (\"Checking SID %s\\n\", sid_string_static(\n+\t\t\t\t   &require_membership_of_sid[i])));\n+\t\tif (nt_token_check_sid(&require_membership_of_sid[i],\n+\t\t\t\t       token)) {\n+\t\t\tDEBUG(10, (\"Access ok\\n\"));\n+\t\t\treturn NT_STATUS_OK;\n \t\t}\n \t}\n \t\n\n"}