{"category": "ham", "to_address": "Thomas Pujol <thomas.pujol@yahoo.com>", "from_address": "Duncan Murdoch <murdoch@stats.uwo.ca>", "subject": "Re: [R] speed issues / pros & cons: dataframe vs. matrix", "body": "On 22/06/2007 6:21 PM, Thomas Pujol wrote:\n> I've read that certain operations performed on a matrix (e.g. ribind, cbind) are often much faster compared to operations performed on a data frame.\n> \n> Other then the \"bind functions\", what are the main operations that are significantly faster on a a matrix?\n\nIndexing (e.g. x[1,3]) is much faster on a matrix.\n> \n> I know that data frames allow for columnnames and rownames, and that each column in a data frame can have different data types.  Are there any other advantages of storing data in a a dataframe rather then a matrix?\n\nData frames are lists, so you can use things like df$columnname, \nwith(df, expression), attach(df), etc.  Data frame columns have names, \nbut matrices don't necessarily.\n\nI'd generally use data frames in any situation where the rows are cases \nand the columns are characteristics, until I found they were too slow: \nand then I'd consider temporary conversion to a matrix to speed things \nup.  As Knuth said, premature optimization is the root of all evil.\n\nDuncan Murdoch\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}