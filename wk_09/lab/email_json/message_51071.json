{"category": "ham", "to_address": "perl6-compiler@perl.org", "from_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "subject": "perl6/parrot now passes 01-sanity", "body": "As many of you may have gleaned from some of the recent Parrot\nannouncements, we now have the Perl6/Parrot compiler (\"perl6\") \npassing all of the \"01-sanity\" tests.  Special thanks go to \nWill Coleda (Coke), chromatic, Jerry Gay (particle), Mark \nGlines, and anyone else I might have forgotten for their efforts \nin getting us to this milestone.\n\nNow that we've reached the milestone, it's a good opportunity\nto outline where I think things will head from here.\n\nFirst, I had erroneously anticipated that by passing the 01-sanity\ntests we would then be able to quickly make use the Test.pm module \nthat is in Pugs.  Unfortunately, that module seems to have evolved \nsubstantially (in entirely reasonable ways, I will add), so Test.pm\nnow makes use of Perl 6 features that we haven't yet implemented \nin the perl6 compiler, and that may take a bit of time yet to develop.\nWhile we will certainly continue to focus on getting Test.pm to run,\nwe also want to progress on other components at the same time.\nSo, in all likelihood we'll build a very temporary Test.pm be able\nto start running other tests, until we're sufficiently far enough\nalong to converge on the Pugs Test.pm module.\n\nThis is also a good time to make an official declaration that for\nthe foreseeable future, the test suite that exists in Pugs will \nbe the designated canonical test suite for perl6-on-parrot.  In fact,\nthe current plan is that all patches and commits to the Perl 6 test \nsuite will continue to take place in the Pugs repository, and then \nwe'll find ways to make those tests easily available for use by \nthe perl6 compiler in Parrot.\n\nThis will also make it easy for people to participate in contributing\nand revising tests -- just get a Pugs commit bit!  \n\nAs we start looking at resolving tests, we'll also want to look at\nthe test files themselves, and making sure they're still consistent\nwith the Perl 6 specification as it has evolved.  As questions or\ninconsistencies arise, we can post them to this list (or perl6-language)\nfor clarifications and decisions.\n\nLastly, we're always looking for people who can help with the building\nof the perl6 compiler itself, and patches are welcome!  Just get the\nlatest version of parrot from http://www.parrotcode.org/ and start\nlooking in the languages/perl6/ directory.\n\nYes, perl6 still requires a fair knowledge of PIR -- we're working \non tools to substantially reduce that.  We're also going to be \nproviding more information about the compiler on the mailing list\nand in various documents, and there will be sessions and hackathons\nat YAPC::NA for people who want to get involved there.\n\nThanks!\n\nPm\n\n"}