{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 174: - prevent sending dmaster requests to ourselves in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 174\nrevision-id: tridge@samba.org-20070421072246-91c4db739a442283\nparent: tridge@samba.org-20070421030822-6af160dfe70a87e4\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-04-21 09:22:46 +0200\nmessage:\n  - prevent sending dmaster requests to ourselves\n  \n  - add some debug code\nmodified:\n  common/ctdb_call.c             ctdb_call.c-20061128065342-to93h6eejj5kon81-1\n  common/ctdb_client.c           ctdb_client.c-20070411010216-3kd8v37k61steeya-1\n=== modified file 'common/ctdb_call.c'\n--- a/common/ctdb_call.c\t2007-04-20 07:58:37 +0000\n+++ b/common/ctdb_call.c\t2007-04-21 07:22:46 +0000\n@@ -370,9 +370,10 @@\n \t   then give them the record\n \t   or if the node requested an immediate migration\n \t*/\n-\tif ( (header.laccessor == c->hdr.srcnode\n-\t      && header.lacount >= ctdb->max_lacount)\n-\t   || c->flags&CTDB_IMMEDIATE_MIGRATION ) {\n+\tif ( c->hdr.srcnode != ctdb->vnn &&\n+\t     ((header.laccessor == c->hdr.srcnode\n+\t       && header.lacount >= ctdb->max_lacount)\n+\t      || (c->flags&CTDB_IMMEDIATE_MIGRATION)) ) {\n \t\tctdb_call_send_dmaster(ctdb_db, c, &header, &call.key, &data);\n \t\ttalloc_free(data.dptr);\n \t\tctdb_ltdb_unlock(ctdb_db, call.key);\n@@ -419,7 +420,7 @@\n \n \tstate = idr_find_type(ctdb->idr, hdr->reqid, struct ctdb_call_state);\n \tif (state == NULL) {\n-\t\tDEBUG(0, (\"reqid %d not found\\n\", hdr->reqid));\n+\t\tDEBUG(0, (__location__ \" reqid %d not found\\n\", hdr->reqid));\n \t\treturn;\n \t}\n \n@@ -562,6 +563,7 @@\n \t\t       struct timeval t, void *private_data)\n {\n \tstruct ctdb_call_state *state = talloc_get_type(private_data, struct ctdb_call_state);\n+\tDEBUG(0,(__location__ \" call timeout for reqid %d\\n\", state->c->hdr.reqid));\n \tstate->state = CTDB_CALL_ERROR;\n \tctdb_set_error(state->node->ctdb, \"ctdb_call %u timed out\",\n \t\t       state->c->hdr.reqid);\n\n=== modified file 'common/ctdb_client.c'\n--- a/common/ctdb_client.c\t2007-04-20 10:07:47 +0000\n+++ b/common/ctdb_client.c\t2007-04-21 07:22:46 +0000\n@@ -71,7 +71,7 @@\n \n \tstate = idr_find_type(ctdb->idr, hdr->reqid, struct ctdb_client_call_state);\n \tif (state == NULL) {\n-\t\tDEBUG(0, (\"reqid %d not found\\n\", hdr->reqid));\n+\t\tDEBUG(0,(__location__ \" reqid %d not found\\n\", hdr->reqid));\n \t\treturn;\n \t}\n \n@@ -628,7 +628,7 @@\n \n \tstate = idr_find_type(ctdb->idr, hdr->reqid, struct ctdb_status_state);\n \tif (state == NULL) {\n-\t\tDEBUG(0, (\"reqid %d not found\\n\", hdr->reqid));\n+\t\tDEBUG(0,(__location__ \" reqid %d not found\\n\", hdr->reqid));\n \t\treturn;\n \t}\n \n\n"}