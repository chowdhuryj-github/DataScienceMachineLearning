{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "Steve Peters <steve@fisharerojo.org>", "subject": "Re: [perl #42615] [PATCH] C89 doesn't allow non-constant initializers", "body": "On Thu, Apr 19, 2007 at 11:24:43AM -0700, Andy Spieherty wrote:\n> # New Ticket Created by  Andy Spieherty \n> # Please include the string:  [perl #42615]\n> # in the subject line of all future correspondence about this issue. \n> # \n> \n> \n> This patch works around the following error message:\n> \n> \"src/inter_call.c\", line 1350: non-constant initializer: op \"U&\"\n> \"src/inter_call.c\", line 1350: non-constant initializer: op \"U&\"\n> \"src/inter_call.c\", line 1351: non-constant initializer: op \"NAME\"\n> \"src/inter_call.c\", line 1351: non-constant initializer: op \"NAME\"\n> \n> diff -ru parrot-current/src/inter_call.c parrot-andy/src/inter_call.c\n> --- parrot-current/src/inter_call.c\tSun Apr 15 03:15:15 2007\n> +++ parrot-andy/src/inter_call.c\tThu Apr 19 10:26:02 2007\n> @@ -1347,8 +1347,8 @@\n>      PMC* save_current_object;\n>  \n>      /* temporary state vars for building PCC index and PCC signature arrays. */\n> -    opcode_t *indexes[2] = { arg_indexes, result_indexes };\n> -    PMC *sigs[2] = { args_sig, results_sig };\n> +    opcode_t *indexes[2]; /* = { arg_indexes, result_indexes }; */\n> +    PMC *sigs[2]; /* = { args_sig, results_sig }; */\n>      int arg_ret_cnt[2] = { 0, 0 }; /* # of arg args, # of result args */\n>      int max_regs[8] = { 0, 0, 0, 0, 0, 0, 0, 0 }; /* INSP args, INSP results */\n>      int seen_arrow = 0;\n> @@ -1359,6 +1359,11 @@\n>  \n>      va_list list;\n>      va_start(list, signature);\n> +\n> +    indexes[0] = arg_indexes;\n> +    indexes[1] = result_indexes;\n> +    sigs[0] = args_sig;\n> +    sigs[1] = results_sig;\n>  \n>      /* account for passing invocant in-band */\n>      if (pmc) {\n> \n\nCool!  I meant to look into this one since it also breaks Borland C++ and\ncauses warnings under -ansi -pedantic.\n\nSteve Peters\nsteve@fisharerojo.org\n\n"}