{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "allison@cvs.develooper.com", "subject": "[svn:parrot-pdd] r18212 - trunk/docs/pdds/draft", "body": "Author: allison\nDate: Sat Apr 14 17:00:11 2007\nNew Revision: 18212\n\nModified:\n   trunk/docs/pdds/draft/pdd17_basic_types.pod\n\nLog:\n[pdd]: Adding some questions about PMC role composition from IRC.\n\n\nModified: trunk/docs/pdds/draft/pdd17_basic_types.pod\n==============================================================================\n--- trunk/docs/pdds/draft/pdd17_basic_types.pod\t(original)\n+++ trunk/docs/pdds/draft/pdd17_basic_types.pod\tSat Apr 14 17:00:11 2007\n@@ -22,6 +22,36 @@\n available to them. (With the possible exception of Parrot programs executing on\n an embedded device or other restricted environment)\n \n+=head1 QUESTIONS\n+\n+=over 4\n+\n+=item *\n+\n+Where should c-level role implementations live? In src/pmc? What naming\n+convention should we use for the files? Singleton role goes to rsingleton.pmc?\n+\n+=item *\n+\n+Should we create a pmrole keyword like pmclass? And pmr2c to translate them to\n+C? How different are classes and roles at the PMC level?\n+\n+=item *\n+\n+ pmclass needs a keyword to specify what roles a class is composed\n+from.  We're already using 'does', but in an ad hoc way, from what I can see in\n+the little docs there are about 'does'.\n+\n+=item *\n+\n+ Do c-level roles have custom flags like PMCs? Class PMC has a custom\n+flag for 'instantiated', right now it uses a full int, which I think is a waste\n+of space.  8 bits is pretty limited, and IIRC we've already run into\n+the limitation. This runs back to Leo's proposal to make PMCs a little more\n+flexible, so we wouldn't have to hold all PMCs to the same 8 bits\n+\n+=back\n+\n =head1 IMPLEMENTATION\n \n =head2 Scalar types\n\n"}