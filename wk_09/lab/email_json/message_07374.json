{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22291 - in branches: SAMBA_3_0/source/smbd\n\tSAMBA_3_0_25/source/smbd", "body": "Author: jra\nDate: 2007-04-17 02:14:28 +0000 (Tue, 17 Apr 2007)\nNew Revision: 22291\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22291\n\nLog:\nFix off-by-one in tconX parsing.\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/smbd/reply.c\n   branches/SAMBA_3_0_25/source/smbd/reply.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/reply.c\t2007-04-17 01:32:55 UTC (rev 22290)\n+++ branches/SAMBA_3_0/source/smbd/reply.c\t2007-04-17 02:14:28 UTC (rev 22291)\n@@ -469,13 +469,22 @@\n  \n \tif (global_encrypted_passwords_negotiated) {\n \t\tpassword = data_blob(smb_buf(inbuf),passlen);\n+\t\tif (lp_security() == SEC_SHARE) {\n+\t\t\t/*\n+\t\t\t * Security = share always has a pad byte\n+\t\t\t * after the password.\n+\t\t\t */\n+\t\t\tp = smb_buf(inbuf) + passlen + 1;\n+\t\t} else {\n+\t\t\tp = smb_buf(inbuf) + passlen;\n+\t\t}\n \t} else {\n \t\tpassword = data_blob(smb_buf(inbuf),passlen+1);\n \t\t/* Ensure correct termination */\n-\t\tpassword.data[passlen]=0;    \n+\t\tpassword.data[passlen]=0;\n+\t\tp = smb_buf(inbuf) + passlen + 1;\n \t}\n \n-\tp = smb_buf(inbuf) + passlen;\n \tp += srvstr_pull_buf(inbuf, path, p, sizeof(path), STR_TERMINATE);\n \n \t/*\n\nModified: branches/SAMBA_3_0_25/source/smbd/reply.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/smbd/reply.c\t2007-04-17 01:32:55 UTC (rev 22290)\n+++ branches/SAMBA_3_0_25/source/smbd/reply.c\t2007-04-17 02:14:28 UTC (rev 22291)\n@@ -468,13 +468,22 @@\n  \n \tif (global_encrypted_passwords_negotiated) {\n \t\tpassword = data_blob(smb_buf(inbuf),passlen);\n+\t\tif (lp_security() == SEC_SHARE) {\n+\t\t\t/*\n+\t\t\t * Security = share always has a pad byte\n+\t\t\t * after the password.\n+\t\t\t */\n+\t\t\tp = smb_buf(inbuf) + passlen + 1;\n+\t\t} else {\n+\t\t\tp = smb_buf(inbuf) + passlen;\n+\t\t}\n \t} else {\n \t\tpassword = data_blob(smb_buf(inbuf),passlen+1);\n \t\t/* Ensure correct termination */\n-\t\tpassword.data[passlen]=0;    \n+\t\tpassword.data[passlen]=0;\n+\t\tp = smb_buf(inbuf) + passlen + 1;\n \t}\n \n-\tp = smb_buf(inbuf) + passlen;\n \tp += srvstr_pull_buf(inbuf, path, p, sizeof(path), STR_TERMINATE);\n \n \t/*\n\n"}