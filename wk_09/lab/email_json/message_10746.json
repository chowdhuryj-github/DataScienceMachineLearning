{"category": "ham", "to_address": "\"Alberto Monteiro\" <albmont@centroin.com.br>", "from_address": "Hans-Peter <gchappi@gmail.com>", "subject": "Re: [R] importing excel-file", "body": "Hi Alberto,\n\n\n> I can't call read.xls while Excel is opening the xls file.\n> R crashes and must be aborted.\n\nCould not reproduce here (Win2000, Excel 2003, R 2.4.1 and\n2.5.0.alpha). Who knows... but I cannot think of anything that could\ncause such a problem: xlsReadWrite works on the plain file (Excel is\nnot even needed), doesn't lock the file and, if there were problems,\nhandles eventual exceptions before leaving the DLL. If you have a\nreproducible test case I would be very interested in it.\n\n[Unrelated with this, I found that read.xls doesn't work any longer\nwith R versions <= 2.3.1. Reason: I used 'default.stringsAsFactors()'\nin the stringsAsFactor argument.  => DESCRIPTION-Depends field updated\nin v1.3.3].\n\n\n> I have a spreadsheet where in the first line A1..ZZ1 there are the\n> names of some products. However, A1 is empty,\n                                   ~~~~~~~~~~~~\nThis is the problem. With rowNames=NA (the default) the first Excel\ncolumn will be *considered* (under certain conditions) to contain the\n*rownames*. The first element beeing empty is such a condition. It's\nin the help, but not 100 % clear and some conditions have been\nmissing. [=> help text updated in v1.3.3]\n\n'rowNames = FALSE' prevents the auto-row-consideration.\n\n\n> I will lose the first column: test1[1,1] will be B2.\n\nThe first column has been taken for the rownames.\n\n\n> If I do:\n> test3 <- read.xls(filename, sheet = \"sheet name\", colNames = FALSE)\n> I will get A8..A311 (but these are not numbers, and I can't convert them to the dates.\n\nIf you have a title row in Excel, you should skip this row (i.e. in\nyour case use 'from=2') because otherwise the columns will be\nrecognized as character columns which is not what you want.\n\n\n> I get A8..A311 as something remotely similar to dates (I can even\n> display them as dates:\n> as.POSIXlt(\"1899-12-30\", \"GMT\") + test4[8:17, 1] * 86400\n\nIf you set dateTimeAs=\"isodatetime\" or use the colClasses entries\n\"isodate\", \"isotime\" or \"isodatetime\" you can get them directly as\ncharacter date strings.\n\nAnother option is to retrieve the numbers and use the new conversion\nfunctions dateTimeToStr or dateTimeToIsoStr.\n\n\n> will return a vector of dates!), but then I will lose the meaning\n> of the columns, because test4[,1] is no longer the list of the\n> product names.\n> So it seems that none of the four possibilities is entirely satisfactory.\n\nWell, supreme satisfaction can definitely only be gained with the pro\nversion...\n\n...but the following should make you happy too:\n\ntest9 <- read.xls( filename, sheet = \"sheet name\", rowNames = FALSE,\ndateTimeAs = \"isodatetime\" )\n\n;-)\n\n\n-- \nRegards,\nHans-Peter\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}