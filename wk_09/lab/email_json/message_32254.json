{"category": "ham", "to_address": "\"jiho\" <jo.irisson@gmail.com>", "from_address": "\"Dimitris Rizopoulos\" <dimitris.rizopoulos@med.kuleuven.be>", "subject": "Re: [R] lapply not reading arguments from the correct environment", "body": "subset() was not defined inside myfun(); try this version instead:\n\nmyfun <- function () {\n    foo <- data.frame(1:10, 10:1)\n    foos <- list(foo)\n    fooCollumn <- 2\n    my.subset <- function(...) subset(...)\n    cFoo <-  lapply(foos, my.subset, select = fooCollumn)\n    cFoo\n}\nmyfun()\n\n\nI hope it helps.\n\nBest,\nDimitris\n\n----\nDimitris Rizopoulos\nPh.D. Student\nBiostatistical Centre\nSchool of Public Health\nCatholic University of Leuven\n\nAddress: Kapucijnenvoer 35, Leuven, Belgium\nTel: +32/(0)16/336899\nFax: +32/(0)16/337015\nWeb: http://med.kuleuven.be/biostat/\n     http://www.student.kuleuven.be/~m0390867/dimitris.htm\n\n\n----- Original Message ----- \nFrom: \"jiho\" \nTo: \nSent: Friday, May 18, 2007 4:41 PM\nSubject: [R] lapply not reading arguments from the correct environment\n\n\n> Hello,\n>\n> I am facing a problem with lapply which I ''''think''' may be a bug.\n> This is the most basic function in which I can reproduce it:\n>\n> myfun <- function()\n> {\n> foo = data.frame(1:10,10:1)\n> foos = list(foo)\n> fooCollumn=2\n> cFoo = lapply(foos,subset,select=fooCollumn)\n> return(cFoo)\n> }\n>\n> I am building a list of dataframes, in each of which I want to keep\n> only column 2 (obviously I would not do it this way in real life but\n> that's just to demonstrate the bug).\n> If I execute the commands inline it works but if I clean my\n> environment, then define the function and then execute:\n> > myfun()\n> I get this error:\n> Error in eval(expr, envir, enclos) : object \"fooCollumn\" not found\n> while fooCollumn is defined, in the function, right before lapply. \n> In\n> addition, if I define it outside the function and then execute the\n> function:\n> > fooCollumn=1\n> > myfun()\n> it works but uses the value defined in the general environment and\n> not the one defined in the function.\n> This is with R 2.5.0 on both OS X and Linux (Fedora Core 6)\n> What did I do wrong? Is this indeed a bug? An intended behavior?\n> Thanks in advance.\n>\n> JiHO\n> ---\n> http://jo.irisson.free.fr/\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide \n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n> \n\n\nDisclaimer: http://www.kuleuven.be/cwis/email_disclaimer.htm\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}