{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Ken Foskey <foskey@optushome.com.au>", "subject": "Re: Test of scripts with Test::More", "body": "On Tue, 2007-04-24 at 14:44 -0400, yaron@kahanovitch.com wrote:\n> Hi,\n> \n> Recently i wrote a perl module that includes package and a script.\n> As part of the module sanity tests, I would like to run the script and verify a success.\n> For that, I am using Test::More and Test::Simple.\n> Is there any recommendations how to do this?\n\nunder your programs create a t directory (t for testing) and add a\nseries of scripts to test your application as xyz.t.\n\nMy safemove module has the following test script.  I also have a check\nto ensure that pod is coded in the modules.\n\n#!/usr/bin/perl -w\n# vi:set sw=4 ts=4 et cin:\n# $Id: SafeMove.t,v 1.2 2006/04/24 02:43:07 foskey Exp $\n\n=head1 NAME\n\nSafeMove.t\n\n=head1 DESCRIPTION\n\nEnsure that the SafeMove module is functioning correctly.\n\n=HEAD1 AUTHOR\n\nKen Foskey\n\n=cut\n\n# Libraries\nuse strict;\nuse warnings;\n\nuse Test::More;\nuse File::Temp;\nuse File::Basename;\n\nuse lib \"/apps/bin/modules\";\nuse SafeMove;\n\nmy $handle;\nmy $filename;\nmy $filename2;\nmy $basename;\nmy @files; # for glob...\n\n\nplan( tests=>4 );   ## number of test coded.\n\n($handle, $filename) = mkstemp( '/tmp/SafeMove.XXXX' );\n($handle, $filename2) = mkstemp( '/tmp/SafeMove.XXXX' );\nclose( $handle );\n\nSafeMove::rename_timestamp( $filename );\n\nok( ! (-f $filename ), \"$filename should not exist\" );\n\n@files = glob( \"$filename*\" );\n\nok( @files == 1, \"$filename* should have one entry\" );\n\n\nunlink( $filename );\n\nSafeMove( $filename2, $filename );\n\nok( -f $filename, \"moving file to new file name\" );\n\nmkdir( $filename2 );\n\nSafeMove( $filename, $filename2 );\n\n$basename = $filename2.'/'.basename($filename);\nok( -f $basename, \"Moving from file to directory\" );\n\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}