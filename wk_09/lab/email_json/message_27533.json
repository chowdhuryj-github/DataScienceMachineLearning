{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "gd@samba.org", "subject": "svn commit: samba r22795 - in branches/SAMBA_3_0_26/source: .\n\tinclude libads libsmb nsswitch", "body": "Author: gd\nDate: 2007-05-11 12:02:33 +0000 (Fri, 11 May 2007)\nNew Revision: 22795\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22795\n\nLog:\nMerge krb5_get_init_creds_opt_get_error() usage from 3_0.\n\nGuenther\n\nModified:\n   branches/SAMBA_3_0_26/source/configure.in\n   branches/SAMBA_3_0_26/source/include/ads.h\n   branches/SAMBA_3_0_26/source/libads/kerberos.c\n   branches/SAMBA_3_0_26/source/libsmb/clikrb5.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_cred_cache.c\n   branches/SAMBA_3_0_26/source/nsswitch/winbindd_pam.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/configure.in\n===================================================================\n--- branches/SAMBA_3_0_26/source/configure.in\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/configure.in\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -3538,6 +3538,7 @@\n   AC_CHECK_FUNC_EXT(initialize_krb5_error_table, $KRB5_LIBS)\n   AC_CHECK_FUNC_EXT(krb5_get_init_creds_opt_alloc, $KRB5_LIBS)\n   AC_CHECK_FUNC_EXT(krb5_get_init_creds_opt_free, $KRB5_LIBS)\n+  AC_CHECK_FUNC_EXT(krb5_get_init_creds_opt_get_error, $KRB5_LIBS)\n \n   LIBS=\"$KRB5_LIBS $LIBS\"\n \n\nModified: branches/SAMBA_3_0_26/source/include/ads.h\n===================================================================\n--- branches/SAMBA_3_0_26/source/include/ads.h\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/include/ads.h\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -298,6 +298,12 @@\n \n #ifdef HAVE_KRB5\n typedef struct {\n+\tNTSTATUS ntstatus;\n+\tuint32 unknown1;\n+\tuint32 unknown2; /* 0x00000001 */\n+} KRB5_EDATA_NTSTATUS;\n+\n+typedef struct {\n #if defined(HAVE_MAGIC_IN_KRB5_ADDRESS) && defined(HAVE_ADDRTYPE_IN_KRB5_ADDRESS) /* MIT */\n \tkrb5_address **addrs;\n #elif defined(HAVE_KRB5_ADDRESSES) /* Heimdal */\n\nModified: branches/SAMBA_3_0_26/source/libads/kerberos.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/libads/kerberos.c\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/libads/kerberos.c\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -55,6 +55,127 @@\n \treturn 0;\n }\n \n+static BOOL smb_krb5_err_io_nstatus(TALLOC_CTX *mem_ctx, \n+\t\t\t\t    DATA_BLOB *edata_blob, \n+\t\t\t\t    KRB5_EDATA_NTSTATUS *edata)\n+{\n+\tBOOL ret = False;\n+\tprs_struct ps;\n+\n+\tif (!mem_ctx || !edata_blob || !edata) \n+\t\treturn False;\n+\n+\tif (!prs_init(&ps, edata_blob->length, mem_ctx, UNMARSHALL))\n+\t\treturn False;\n+\n+\tif (!prs_copy_data_in(&ps, (char *)edata_blob->data, edata_blob->length))\n+\t\tgoto out;\n+\n+\tprs_set_offset(&ps, 0);\n+\n+\tif (!prs_ntstatus(\"ntstatus\", &ps, 1, &edata->ntstatus))\n+\t\tgoto out;\n+\n+\tif (!prs_uint32(\"unknown1\", &ps, 1, &edata->unknown1))\n+\t\tgoto out;\n+\n+\tif (!prs_uint32(\"unknown2\", &ps, 1, &edata->unknown2)) /* only seen 00000001 here */\n+\t\tgoto out;\n+\n+\tret = True;\n+ out:\n+\tprs_mem_free(&ps);\n+\n+\treturn ret;\n+}\n+\n+ static BOOL smb_krb5_get_ntstatus_from_krb5_error(krb5_error *error,\n+\t\t\t\t\t\t   NTSTATUS *nt_status)\n+{\n+\tDATA_BLOB edata;\n+\tDATA_BLOB unwrapped_edata;\n+\tTALLOC_CTX *mem_ctx;\n+\tKRB5_EDATA_NTSTATUS parsed_edata;\n+\n+#ifdef HAVE_E_DATA_POINTER_IN_KRB5_ERROR\n+\tedata = data_blob(error->e_data->data, error->e_data->length);\n+#else\n+\tedata = data_blob(error->e_data.data, error->e_data.length);\n+#endif /* HAVE_E_DATA_POINTER_IN_KRB5_ERROR */\n+\n+#ifdef DEVELOPER\n+\tdump_data(10, edata.data, edata.length);\n+#endif /* DEVELOPER */\n+\n+\tmem_ctx = talloc_init(\"smb_krb5_get_ntstatus_from_krb5_error\");\n+\tif (mem_ctx == NULL) {\n+\t\tdata_blob_free(&edata);\n+\t\treturn False;\n+\t}\n+\n+\tif (!unwrap_edata_ntstatus(mem_ctx, &edata, &unwrapped_edata)) {\n+\t\tdata_blob_free(&edata);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn False;\n+\t}\n+\n+\tdata_blob_free(&edata);\n+\n+\tif (!smb_krb5_err_io_nstatus(mem_ctx, &unwrapped_edata, &parsed_edata)) {\n+\t\tdata_blob_free(&unwrapped_edata);\n+\t\tTALLOC_FREE(mem_ctx);\n+\t\treturn False;\n+\t}\n+\n+\tdata_blob_free(&unwrapped_edata);\n+\n+\tif (nt_status) {\n+\t\t*nt_status = parsed_edata.ntstatus;\n+\t}\n+\n+\tTALLOC_FREE(mem_ctx);\n+\n+\treturn True;\n+}\n+\n+ static BOOL smb_krb5_get_ntstatus_from_krb5_error_init_creds_opt(krb5_context ctx, \n+ \t\t\t\t\t\t\t\t  krb5_get_init_creds_opt *opt, \n+\t\t\t\t\t\t\t\t  NTSTATUS *nt_status)\n+{\n+\tBOOL ret = False;\n+\tkrb5_error *error = NULL;\n+\n+#ifdef HAVE_KRB5_GET_INIT_CREDS_OPT_GET_ERROR\n+\tret = krb5_get_init_creds_opt_get_error(ctx, opt, &error);\n+\tif (ret) {\n+\t\tDEBUG(1,(\"krb5_get_init_creds_opt_get_error gave: %s\\n\", \n+\t\t\terror_message(ret)));\n+\t\treturn False;\n+\t}\n+#endif /* HAVE_KRB5_GET_INIT_CREDS_OPT_GET_ERROR */\n+\n+\tif (!error) {\n+\t\tDEBUG(1,(\"no krb5_error\\n\"));\n+\t\treturn False;\n+\t}\n+\n+#ifdef HAVE_E_DATA_POINTER_IN_KRB5_ERROR\n+\tif (!error->e_data) {\n+#else\n+\tif (error->e_data.data == NULL) {\n+#endif /* HAVE_E_DATA_POINTER_IN_KRB5_ERROR */\n+\t\tDEBUG(1,(\"no edata in krb5_error\\n\")); \n+\t\tkrb5_free_error(ctx, error);\n+\t\treturn False;\n+\t}\n+\n+\tret = smb_krb5_get_ntstatus_from_krb5_error(error, nt_status);\n+\n+\tkrb5_free_error(ctx, error);\n+\n+\treturn ret;\n+}\n+\n /*\n   simulate a kinit, putting the tgt in the given cache location. If cache_name == NULL\n   place in default cache location.\n@@ -68,19 +189,22 @@\n \t\t\t\tconst char *cache_name,\n \t\t\t\tBOOL request_pac,\n \t\t\t\tBOOL add_netbios_addr,\n-\t\t\t\ttime_t renewable_time)\n+\t\t\t\ttime_t renewable_time,\n+\t\t\t\tNTSTATUS *ntstatus)\n {\n \tkrb5_context ctx = NULL;\n \tkrb5_error_code code = 0;\n \tkrb5_ccache cc = NULL;\n-\tkrb5_principal me;\n+\tkrb5_principal me = NULL;\n \tkrb5_creds my_creds;\n \tkrb5_get_init_creds_opt *opt = NULL;\n \tsmb_krb5_addresses *addr = NULL;\n \n+\tZERO_STRUCT(my_creds);\n+\n \tinitialize_krb5_error_table();\n \tif ((code = krb5_init_context(&ctx)))\n-\t\treturn code;\n+\t\tgoto out;\n \n \tif (time_offset != 0) {\n \t\tkrb5_set_real_time(ctx, time(NULL) + time_offset, 0);\n@@ -91,21 +215,15 @@\n \t\t\tgetenv(\"KRB5_CONFIG\")));\n \n \tif ((code = krb5_cc_resolve(ctx, cache_name ? cache_name : krb5_cc_default_name(ctx), &cc))) {\n-\t\tkrb5_free_context(ctx);\n-\t\treturn code;\n+\t\tgoto out;\n \t}\n \t\n \tif ((code = smb_krb5_parse_name(ctx, principal, &me))) {\n-\t\tkrb5_cc_close(ctx, cc);\n-\t\tkrb5_free_context(ctx);\t\n-\t\treturn code;\n+\t\tgoto out;\n \t}\n \n-\tcode = smb_krb5_get_init_creds_opt_alloc(ctx, &opt);\n-\tif (code) {\n-\t\tkrb5_cc_close(ctx, cc);\n-\t\tkrb5_free_context(ctx);\t\n-\t\treturn code;\n+\tif ((code = smb_krb5_get_init_creds_opt_alloc(ctx, &opt))) {\n+\t\tgoto out;\n \t}\n \n \tkrb5_get_init_creds_opt_set_renew_life(opt, renewable_time);\n@@ -117,55 +235,29 @@\n \n #ifdef HAVE_KRB5_GET_INIT_CREDS_OPT_SET_PAC_REQUEST\n \tif (request_pac) {\n-\t\tcode = krb5_get_init_creds_opt_set_pac_request(ctx, opt, (krb5_boolean)request_pac);\n-\t\tif (code) {\n-\t\t\tkrb5_cc_close(ctx, cc);\n-\t\t\tkrb5_free_principal(ctx, me);\n-\t\t\tkrb5_free_context(ctx);\n-\t\t\treturn code;\n+\t\tif ((code = krb5_get_init_creds_opt_set_pac_request(ctx, opt, (krb5_boolean)request_pac))) {\n+\t\t\tgoto out;\n \t\t}\n \t}\n #endif\n \tif (add_netbios_addr) {\n-\t\tcode = smb_krb5_gen_netbios_krb5_address(&addr);\n-\t\tif (code) {\n-\t\t\tkrb5_cc_close(ctx, cc);\n-\t\t\tkrb5_free_principal(ctx, me);\n-\t\t\tkrb5_free_context(ctx);\t\t\n-\t\t\treturn code;\t\n+\t\tif ((code = smb_krb5_gen_netbios_krb5_address(&addr))) {\n+\t\t\tgoto out;\n \t\t}\n \t\tkrb5_get_init_creds_opt_set_address_list(opt, addr->addrs);\n \t}\n \n \tif ((code = krb5_get_init_creds_password(ctx, &my_creds, me, CONST_DISCARD(char *,password), \n-\t\t\t\t\t\t kerb_prompter, NULL, 0, NULL, opt)))\n-\t{\n-\t\tsmb_krb5_get_init_creds_opt_free(ctx, opt);\n-\t\tsmb_krb5_free_addresses(ctx, addr);\n-\t\tkrb5_cc_close(ctx, cc);\n-\t\tkrb5_free_principal(ctx, me);\n-\t\tkrb5_free_context(ctx);\n-\t\treturn code;\n+\t\t\t\t\t\t kerb_prompter, NULL, 0, NULL, opt))) {\n+\t\tgoto out;\n \t}\n \n-\tsmb_krb5_get_init_creds_opt_free(ctx, opt);\n-\n \tif ((code = krb5_cc_initialize(ctx, cc, me))) {\n-\t\tsmb_krb5_free_addresses(ctx, addr);\n-\t\tkrb5_free_cred_contents(ctx, &my_creds);\n-\t\tkrb5_cc_close(ctx, cc);\n-\t\tkrb5_free_principal(ctx, me);\n-\t\tkrb5_free_context(ctx);\t\t\n-\t\treturn code;\n+\t\tgoto out;\n \t}\n \t\n \tif ((code = krb5_cc_store_cred(ctx, cc, &my_creds))) {\n-\t\tkrb5_cc_close(ctx, cc);\n-\t\tsmb_krb5_free_addresses(ctx, addr);\n-\t\tkrb5_free_cred_contents(ctx, &my_creds);\n-\t\tkrb5_free_principal(ctx, me);\n-\t\tkrb5_free_context(ctx);\t\t\n-\t\treturn code;\n+\t\tgoto out;\n \t}\n \n \tif (expire_time) {\n@@ -175,14 +267,47 @@\n \tif (renew_till_time) {\n \t\t*renew_till_time = (time_t) my_creds.times.renew_till;\n \t}\n+ out:\n+\tif (ntstatus) {\n \n-\tkrb5_cc_close(ctx, cc);\n-\tsmb_krb5_free_addresses(ctx, addr);\n+\t\tNTSTATUS status;\n+\n+\t\t/* fast path */\n+\t\tif (code == 0) {\n+\t\t\t*ntstatus = NT_STATUS_OK;\n+\t\t\tgoto cleanup;\n+\t\t}\n+\n+\t\t/* try to get ntstatus code out of krb5_error when we have it\n+\t\t * inside the krb5_get_init_creds_opt - gd */\n+\n+\t\tif (opt && smb_krb5_get_ntstatus_from_krb5_error_init_creds_opt(ctx, opt, &status)) {\n+\t\t\t*ntstatus = status;\n+\t\t\tgoto cleanup;\n+\t\t}\n+\n+\t\t/* fall back to self-made-mapping */\n+\t\t*ntstatus = krb5_to_nt_status(code);\n+\t}\n+\n+ cleanup:\n \tkrb5_free_cred_contents(ctx, &my_creds);\n-\tkrb5_free_principal(ctx, me);\n-\tkrb5_free_context(ctx);\t\t\n-\t\n-\treturn 0;\n+\tif (me) {\n+\t\tkrb5_free_principal(ctx, me);\n+\t}\n+\tif (addr) {\n+\t\tsmb_krb5_free_addresses(ctx, addr);\n+\t}\n+ \tif (opt) {\n+\t\tsmb_krb5_get_init_creds_opt_free(ctx, opt);\n+\t}\n+\tif (cc) {\n+\t\tkrb5_cc_close(ctx, cc);\n+\t}\n+\tif (ctx) {\n+\t\tkrb5_free_context(ctx);\n+\t}\n+\treturn code;\n }\n \n \n@@ -220,7 +345,8 @@\n \t}\n \t\n \tret = kerberos_kinit_password_ext(s, ads->auth.password, ads->auth.time_offset,\n-\t\t\t&ads->auth.tgt_expire, NULL, NULL, False, False, ads->auth.renewable);\n+\t\t\t&ads->auth.tgt_expire, NULL, NULL, False, False, ads->auth.renewable, \n+\t\t\tNULL);\n \n \tif (ret) {\n \t\tDEBUG(0,(\"kerberos_kinit_password %s failed: %s\\n\", \n@@ -479,7 +605,8 @@\n \t\t\t\t\t   cache_name,\n \t\t\t\t\t   False,\n \t\t\t\t\t   False,\n-\t\t\t\t\t   0);\n+\t\t\t\t\t   0,\n+\t\t\t\t\t   NULL);\n }\n \n /************************************************************************\n\nModified: branches/SAMBA_3_0_26/source/libsmb/clikrb5.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/libsmb/clikrb5.c\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/libsmb/clikrb5.c\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -272,6 +272,45 @@\n }\n #endif\n \n+BOOL unwrap_edata_ntstatus(TALLOC_CTX *mem_ctx, \n+\t\t\t   DATA_BLOB *edata, \n+\t\t\t   DATA_BLOB *edata_out)\n+{\n+\tDATA_BLOB edata_contents;\n+\tASN1_DATA data;\n+\tint edata_type;\n+\n+\tif (!edata->length) {\n+\t\treturn False;\n+\t}\n+\n+\tasn1_load(&data, *edata);\n+\tasn1_start_tag(&data, ASN1_SEQUENCE(0));\n+\tasn1_start_tag(&data, ASN1_CONTEXT(1));\n+\tasn1_read_Integer(&data, &edata_type);\n+\n+\tif (edata_type != KRB5_PADATA_PW_SALT) {\n+\t\tDEBUG(0,(\"edata is not of required type %d but of type %d\\n\", \n+\t\t\tKRB5_PADATA_PW_SALT, edata_type));\n+\t\tasn1_free(&data);\n+\t\treturn False;\n+\t}\n+\t\n+\tasn1_start_tag(&data, ASN1_CONTEXT(2));\n+\tasn1_read_OctetString(&data, &edata_contents);\n+\tasn1_end_tag(&data);\n+\tasn1_end_tag(&data);\n+\tasn1_end_tag(&data);\n+\tasn1_free(&data);\n+\n+\t*edata_out = data_blob_talloc(mem_ctx, edata_contents.data, edata_contents.length);\n+\n+\tdata_blob_free(&edata_contents);\n+\n+\treturn True;\n+}\n+\n+\n BOOL unwrap_pac(TALLOC_CTX *mem_ctx, DATA_BLOB *auth_data, DATA_BLOB *unwrapped_pac_data)\n {\n \tDATA_BLOB pac_contents;\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_cred_cache.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_cred_cache.c\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_cred_cache.c\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -111,7 +111,8 @@\n \t\t\t\t\t\t  entry->ccname,\n \t\t\t\t\t\t  False, /* no PAC required anymore */\n \t\t\t\t\t\t  True,\n-\t\t\t\t\t\t  WINBINDD_PAM_AUTH_KRB5_RENEW_TIME);\n+\t\t\t\t\t\t  WINBINDD_PAM_AUTH_KRB5_RENEW_TIME,\n+\t\t\t\t\t\t  NULL);\n \t\tgain_root_privilege();\n \n \t\tif (ret) {\n@@ -224,7 +225,8 @@\n \t\t\t\t\t\tentry->ccname,\n \t\t\t\t\t\tFalse, /* no PAC required anymore */\n \t\t\t\t\t\tTrue,\n-\t\t\t\t\t\tWINBINDD_PAM_AUTH_KRB5_RENEW_TIME);\n+\t\t\t\t\t\tWINBINDD_PAM_AUTH_KRB5_RENEW_TIME,\n+\t\t\t\t\t\tNULL);\n \t\tgain_root_privilege();\n \n \t\tif (ret) {\n\nModified: branches/SAMBA_3_0_26/source/nsswitch/winbindd_pam.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/nsswitch/winbindd_pam.c\t2007-05-11 11:54:41 UTC (rev 22794)\n+++ branches/SAMBA_3_0_26/source/nsswitch/winbindd_pam.c\t2007-05-11 12:02:33 UTC (rev 22795)\n@@ -579,12 +579,12 @@\n \t\t\t\t\t       cc, \n \t\t\t\t\t       True,\n \t\t\t\t\t       True,\n-\t\t\t\t\t       WINBINDD_PAM_AUTH_KRB5_RENEW_TIME);\n+\t\t\t\t\t       WINBINDD_PAM_AUTH_KRB5_RENEW_TIME,\n+\t\t\t\t\t       &result);\n \n \tif (krb5_ret) {\n \t\tDEBUG(1,(\"winbindd_raw_kerberos_login: kinit failed for '%s' with: %s (%d)\\n\", \n \t\t\tprincipal_s, error_message(krb5_ret), krb5_ret));\n-\t\tresult = krb5_to_nt_status(krb5_ret);\n \t\tgoto failed;\n \t}\n \n\n"}