{"category": "ham", "to_address": "Thom Boyer <thom@boyers.org>", "from_address": "Mark Overmeer <mark@overmeer.net>", "subject": "Re: POD <-> Code entanglement", "body": "* Thom Boyer (thom@boyers.org) [070614 15:49]:\n> the existing S26, say things like:\n> \n>     =Method the method synopsis goes here....\n>     =begin Parameters\n>     =item foo is the fooiest parameter\n>     =item bar is the barstest parameter\n>     =end Parameters\n\nWhere is the link with the code?  That's the point: there is no\nautomatic checking/avoidance of repetition.  Besides, your example\nis not defined by S26: one can decide to use the tags, someone\nelse chooses other names, and they then cannot be combined into\none nice homogeneous set of pages.  That's a horror!\n\nAnd if you really like above syntax, why not define\n      =method the method synopsis goes here....\n      =option   foo is the fooiest parameter\n      =default  foo 10\n      =requires bar is the barstest parameter\nWhich is close to how OODoc is extending POD for Perl5.\nIMO We can (should) do better for Perl6.\n-- \n               MarkOv\n\n------------------------------------------------------------------------\n       Mark Overmeer MSc                                MARKOV Solutions\n       Mark@Overmeer.net                          solutions@overmeer.net\nhttp://Mark.Overmeer.net                   http://solutions.overmeer.net\n\n"}