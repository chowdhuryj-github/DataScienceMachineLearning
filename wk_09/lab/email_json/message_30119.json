{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "metze@samba.org", "subject": "svn commit: samba r22894 - in\n\tbranches/SAMBA_4_0/source/torture/smb2: .", "body": "Author: metze\nDate: 2007-05-15 10:50:25 +0000 (Tue, 15 May 2007)\nNew Revision: 22894\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22894\n\nLog:\ndon't send a 2nd request before the last one returned (at least with\nSTATUS_PENDING) otherwise longhorn beta3 just drops the connection\n\nmetze\nModified:\n   branches/SAMBA_4_0/source/torture/smb2/notify.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/smb2/notify.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/smb2/notify.c\t2007-05-15 10:47:40 UTC (rev 22893)\n+++ branches/SAMBA_4_0/source/torture/smb2/notify.c\t2007-05-15 10:50:25 UTC (rev 22894)\n@@ -27,6 +27,9 @@\n #include \"torture/torture.h\"\n #include \"torture/smb2/proto.h\"\n \n+#include \"libcli/raw/libcliraw.h\"\n+#include \"lib/events/events.h\"\n+\n #define CHECK_STATUS(status, correct) do { \\\n \tif (!NT_STATUS_EQUAL(status, correct)) { \\\n \t\tprintf(\"(%s) Incorrect status %s - should be %s\\n\", \\\n@@ -71,6 +74,12 @@\n \tn.in.unknown\t\t= 0x00000000;\n \treq = smb2_notify_send(tree, &n);\n \n+\twhile (!req->cancel.can_cancel && req->state <= SMB2_REQUEST_RECV) {\n+\t\tif (event_loop_once(req->transport->socket->event.ctx) != 0) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n \tstatus = torture_setup_complex_file(tree, FNAME);\n \tCHECK_STATUS(status, NT_STATUS_OK);\n \n@@ -87,6 +96,12 @@\n \tn.in.buffer_size\t= 0x00000000;\n \treq = smb2_notify_send(tree, &n);\n \n+\twhile (!req->cancel.can_cancel && req->state <= SMB2_REQUEST_RECV) {\n+\t\tif (event_loop_once(req->transport->socket->event.ctx) != 0) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n \tstatus = torture_setup_complex_file(tree, FNAME);\n \tCHECK_STATUS(status, NT_STATUS_OK);\n \n@@ -100,6 +115,12 @@\n \tn.in.buffer_size\t= 0x00080000;\n \treq = smb2_notify_send(tree, &n);\n \n+\twhile (!req->cancel.can_cancel && req->state <= SMB2_REQUEST_RECV) {\n+\t\tif (event_loop_once(req->transport->socket->event.ctx) != 0) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n \tstatus = torture_setup_complex_file(tree, FNAME);\n \tCHECK_STATUS(status, NT_STATUS_OK);\n \n@@ -126,6 +147,12 @@\n \tn.in.unknown\t\t= 0x00000000;\n \treq = smb2_notify_send(tree, &n);\n \n+\twhile (!req->cancel.can_cancel && req->state <= SMB2_REQUEST_RECV) {\n+\t\tif (event_loop_once(req->transport->socket->event.ctx) != 0) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n \tstatus = torture_setup_complex_file(tree, FNAME);\n \tCHECK_STATUS(status, NT_STATUS_OK);\n \n@@ -134,6 +161,11 @@\n \n \tn.in.buffer_size\t= 0x00080000;\n \treq = smb2_notify_send(tree, &n);\n+\twhile (!req->cancel.can_cancel && req->state <= SMB2_REQUEST_RECV) {\n+\t\tif (event_loop_once(req->transport->socket->event.ctx) != 0) {\n+\t\t\tbreak;\n+\t\t}\n+\t}\n \n \tstatus = torture_setup_complex_file(tree, FNAME);\n \tCHECK_STATUS(status, NT_STATUS_OK);\n\n"}