{"category": "ham", "to_address": "\"Karyn Williams\" <karyn@calarts.edu>,\n   \"Perl Beginners\" \n    <beginners@perl.org>", "from_address": "\"Wagner, David --- Senior Programmer Analyst --- WGO\" \n    <David.Wagner@freight.fedex.com>", "subject": "RE: substitute and assign in one line", "body": "> -----Original Message-----\n> From: Karyn Williams [mailto:karyn@calarts.edu] \n> Sent: Tuesday, April 17, 2007 15:14\n> To: Perl Beginners\n> Subject: substitute and assign in one line\n> \n> This is probably very simple, but I'm not seeing it. I want to do the\n> following:\n> \n> \n> my $lfirst = $first;\n> $lfirst =~ s/[^a-zA-Z]//g;\n> \n> in one line. I tried :\n> \n> my $lfirst = ($first =~ s/[^a-zA-Z]//g); \n\tclose, but try\n(my $lfirst = $first) =~ s/[^a-zA-Z]//g;\n Wags ;)\n\n> \n> but it returned either a blank or null.\n> \n> I want to maintain the state of $first and store the alpha \n> only version in\n> $lfirst.\n> \n> TIA.\n> \n> \n> \n> -- \n> \n> Karyn Williams\n> Network Services Manager\n> California Institute of the Arts\n> karyn@calarts.edu\n> http://www.calarts.edu/network\n> \n> -- \n> To unsubscribe, e-mail: beginners-unsubscribe@perl.org\n> For additional commands, e-mail: beginners-help@perl.org\n> http://learn.perl.org/\n> \n> \n> \n\n**********************************************************************\nThis message contains information that is confidential and proprietary to FedEx Freight or its affiliates.  It is intended only for the recipient named and for the express  purpose(s) described therein.  Any other use is prohibited.\n**********************************************************************\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n"}