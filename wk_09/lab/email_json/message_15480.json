{"category": "ham", "to_address": "yitzle <yitzle@users.sourceforge.net>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Sort + Use of uninitialized value", "body": "On 4/25/07, yitzle  wrote:\n> Warning message:\n> Use of uninitialized value in numeric comparison (<=>) at ...\n>\n> Code:\n> foreach (sort { $dHash{$b}{'VAL} <=> $dHash{$a}{'VAL'} } keys %dHash) {\n>\n> How do I fix? Should my sort function be checking for variable\n> defined? What do I return on undefined?\n\nIt sounds like one of your keys does not have the key 'VAL' defined or\nits value is undef.  This may or may not be an error (which is why it\nis a warning message).  I would loop over %dHash until I found the bad\nvalue(s) and then decided what to do from there.\n\nfor my $key (sort keys %dHash) {\n    if (not exists $dHash{$key}{VAL}) {\n        print \"$key does not have a VAL\\n\";\n    elsif (not defined $dHash{$key}{VAL}) {\n         print \"$key's VAL is undefined\"\n    }\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}