{"category": "ham", "to_address": "beginners perl <beginners@perl.org>", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: Equal keys in hash", "body": "Andrej Kastrin wrote:\n> Deal all,\n> \n> if the key already exists in the hash, then its value is overwritten. \n> So, if I have the following structure of the input file\n> \n> A foo\n> A faa\n> A hoo\n> B foo\n> B aaa\n> C bbb\n> \n> what is the procedure of choice to store all key-value pairs into the \n> hash and print it out?\n> \n> Thanks in advance for any suggestion.\n\nDoes this do what you want?\n\nuse strict;\nuse warnings;\n\nmy %data;\n\nwhile () {\n  my ($key, $val) = split;\n  push @{$data{$key}}, $val;\n}\n\nforeach my $key (sort keys %data) {\n\n  foreach my $val (@{$data{$key}}) {\n    printf \"%s %s\\n\", $key, $val;\n  }\n}\n\n__END__\nA foo\nA faa\nA hoo\nB foo\nB aaa\nC bbb\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}