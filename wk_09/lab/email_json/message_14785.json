{"category": "ham", "to_address": "Tomas Mikoviny <tomas.mikoviny@gmail.com>", "from_address": "Achim Zeileis <Achim.Zeileis@wu-wien.ac.at>", "subject": "Re: [R] time series problem", "body": "On Tue, 24 Apr 2007, Tomas Mikoviny wrote:\n\n> Hi everybody,\n>\n> I work with data with following pattern\n>\n>  > comm\n>\n> \t\"Date\"\t\t\"Value\"\n> 1\t4/10/2007\t361.2\n> 2\t4/11/2007\t370.1\n> 3\t4/12/2007\t357.2\n> 4\t4/13/2007\t362.3\n> 5\t4/16/2007\t363.5\n> 6\t4/17/2007\t368.7\n> 7\t4/18/2007\t354.7\n> 8\t4/19/2007\t368.8\n> 9\t4/20/2007\t367.1\n> 10\t...\t\t\t...\n>\n> and trying to convert it to time series using:\n>\n>  > t=strptime(comm[1,1],\"%m/%d/%Y\")\n>  > x=ts(comm, start=as.POSIXct(t))\n>\n> Error in Math.difftime((end - start) * frequency + 1.01) :\n> \tfloornot defined for \"difftime\" objects\n>\n> Definitely I do something wrong but I can't find what is it!\n\nAt least things:\n  - ts() can only work with numeric time stamps (not POSIXct)\n  - you try to create a regular series (although your data is\n    not: there is not an observation on each day)\n\nI would recommend to create a \"zoo\" series with \"Date\" index:\n  R> library(\"zoo\")\n  R> z <- zoo(comm[,2], as.Date(strptime(comm[,1], \"%m/%d/%Y\")))\n  R> z\n  2007-04-10 2007-04-11 2007-04-12 2007-04-13 2007-04-16 2007-04-17\n       361.2      370.1      357.2      362.3      363.5      368.7\n  2007-04-18 2007-04-19 2007-04-20\n       354.7      368.8      367.1\n\nhth,\nZ\n\n> Can anyone help me with this?\n>\n> Thanks.\n>\n> Tomas\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}