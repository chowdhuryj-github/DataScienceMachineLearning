{"category": "ham", "to_address": "\"Juerd Waalboer\" <juerd@convolution.nl>, p6l <perl6-language@perl.org>", "from_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "subject": "Re: Sigils by example (was: Re: Is Perl 6 too late?)", "body": "Good examples.  Now could you provide some to explain to me why it's\nimportant to distinguish between '$', '@', '%', and '&'?  I ask\nbecause I've seen a lot of object-based code that has said stuff like\n'$container{$key}'; it seems that there's an assumption that $foo can\nbe used as a list, a hash, or even a routine if the object that it's\ntied to has list-, hash-, or routine-like behavior: i.e., it no longer\nseems to be \"a scalar variable\", but rather \"a variable\".  Whereas\n'@', '%', and '&' still seem to promise list, hash, and routine\nfunctionality, respectively.  In short, there no longer appears to be\na sigil that says \"I give my solemn promise that the contents herein\nwill be scalar.\"\n\n-- \nJonathan \"Dataweaver\" Lang\n\n"}