{"category": "ham", "to_address": "\"ivo welch\" <ivowel@gmail.com>", "from_address": "\"Spielas Bates\" <bates@stat.wisc.edu>", "subject": "Re: [R] skeleton for C code?", "body": "On 6/27/07, ivo welch  wrote:\n> Dear R experts---I would like to write a replacement for the read.csv\n> function that is less general, but also more efficient.\n>\n> could someone please provide me with a skeleton function that shows me\n> how to read the arguments and return a data frame for a call to a C\n> function that handles\n>\n>      returned.data.frame = my.read.csv(file, header = TRUE, sep = \",\",\n> quote=\"\\\"\", dec=\".\",\n>               fill = TRUE, comment.char=\"\", ...)\n>\n> this may be very difficult, of course, in which case writing such a\n> function would not be worth it.  I guess I would be happy just to\n> learn how to return a basic data frame that holds data vectors that\n> are either strings or numbers---nothing more complex.\n>\n> help appreciated.\n\nShould we assume that you have already read the relevant sections of\nthe manual \"Writing R Extensions\"?\n\nThe .Call interface is the easiest way to return an object like a data\nframe.  I might pass the result back as a list and use something like\n\ndo.call(data.frame, .Call(\"my_csv_reader\", file, ...))\n\nrather than duplicating all the error checking that is done in the\ndata.frame function.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}