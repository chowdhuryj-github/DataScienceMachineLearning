{"category": "ham", "to_address": "perl_power <campbell262@gmail.com>", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Problems Assigning Unique Values to a Hash", "body": "On 6/27/07, perl_power  wrote:\n> Tom,\n>\n> I did make some changes but that actually is still causing me to\n> output each line while looping through the file instead of only adding\n> unique key value pairs to the hash.  I can only guess I am overriding\n> the hash each time it loops?  Also don't understand the line break I\n> am getting between the number and is unique.\nsnip\n\nHere is the output I get from your code:\nThe cellphone is unique\nThe cola is unique\nThe monitors is unique\nThe mugs is unique\n\nOkay, I see 3 possibilities.\n    1. You are not running the code you think your are running\n(unsaved file, saved to wrong file, etc)\n    2. There is something weird about your environment you haven't told us yet.\n    3. You copied the code by hand and fixed the bug in the transfer.\n\nAlso, here is a list of things you can do (or not do) to make your code better.\n    1. always use the strict pragma\n    2. always use the three argument version of open\n    3. use \\n inside strings rather than counting on a literal linefeed working\n    4. numbering your errors in die is worthless, the file and line\nnumber are printed automatically if the the error string does not end\nwith \\n\n    5. only use parenthesis when you really need them, \"my (%hash);\" is foolish\n    6. learn when you need to specify the default variable ($_) and\nwhen you don't\n    7. never use an if statement just to get the else clause, use\n\"unless (exists $hash{$product})\", \"if (not exists $hash{$product})\",\nor \"if (!exists $hash{$product})\"\n\nHere is your code after following the advice above.\n\n#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nmy $infile = 'products.out';\nopen my $file, '<', $infile\n        or die \"could not open $infile for reading:$!\\nStopped\";\n\nmy %hash;\nwhile(<$file>) {\n        my ($product, $qty) = split /\\|/;\n        unless (exists $hash{$product}) {\n                $hash{$product} = $qty;\n                print \"The $product is unique\\n\";\n        }\n}\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}