{"category": "ham", "to_address": "Jonathan Worthington <jonathan@jnthn.net>", "from_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "subject": "Re: [perl #43269] [BUG] setline is tied to PIR source", "body": "On Thu, Jun 21, 2007 at 12:08:33AM +0100, Jonathan Worthington wrote:\n> Patrick R.Michaud (via RT) wrote:\n> >The 'setline' opcode doesn't do what I expect it to do, which\n> >is to associate runtime errors with lines in HLL source.\n>  \n> Currently HLL debug info stuff is spec'd, but not implemented. Well, OK, \n> the storage of it in bytecode is spec'd, the exact PIR syntax for it \n> isn't. So there are two tasks: implement the underlying storage model \n> for this and sort out some PIR syntax for it.\n> \n> How important/blocking is this to you? I can direct some tuits this way \n> in the near future if you're needing it.\n\nWell, it's not too big a block for me personally.  But for\nmany other people who are now starting to work on testing\nthe perl6 compiler or building the compiler itself, it's\nhugely frustrating (and I can understand that).\n\nFor example, consider something like:\n\n    $ cat foo.p6\n    use OtherModule;   # imports some functions\n\n    my $x = 1;\n    bar($x);\n    baz($x);\n\nSomeone who runs this program gets the very cryptic:\n\n    $ ../../parrot perl6.pbc foo.p6\n    Null PMC access in invoke()\n    current instr.: 'parrot;Perl6::Compiler;main' pc 138 (perl6.pir:98)\n    $\n\nThis doesn't give many clues about where the program is failing\n(perl6.pir:98 is the location of the rethrown exception).\n\nSo, it's important (to others) but not currently a block (to me).\nI'll probably come up with a workaround in PAST.pm of some sort\nin the meantime.\n\nPersonally, unless fixing this is very easy/straightforward I'd\n_much_ prefer to see some of the pdd15 items completed first.\n\nThanks!\n\nPm\n\n"}