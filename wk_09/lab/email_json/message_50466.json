{"category": "ham", "to_address": "Andy Lester <andy@petdance.com>", "from_address": "Joshua Isom <jrisom@gmail.com>", "subject": "Re: memcpy", "body": "\nOn Jun 18, 2007, at 4:48 PM, Andy Lester wrote:\n\n> Is there a reason we use\n>\n>   memcpy( dest, src, sizeof(FOO) );\n>\n> instead of\n>\n>   *dest = *src;\n>\n> The latter should be the exact same code, but be much less likely to \n> be screwed up.\n\nNo, they're extremely different.  In the first, the data of FOO is \ncopied to dest, so dest can be modified without changing src.  In the \nsecond, src and dest point to the same data.  If you modify one, all \nare modified.  If you want to clone something, or just move it to a new \nlocation, you can't just set the pointer.  If I'm missing something, \nwell maybe someone who knows more can provide more advice.\n\n> At the very least we should be using:\n>\n>   memcpy( dest, src, sizeof(*dest) );\n>\n> Of course, I'm only talking about when we're passing around structs.  \n> Clearly this won't work everywhere.\n>\n> --\n> Andy Lester => andy@petdance.com => www.petdance.com => AIM:petdance\n>\n>\n>\n>\n\n"}