{"category": "ham", "to_address": "\"Ajit Pawar\" <ajitpawar75@gmail.com>", "from_address": "\"jim holtman\" <jholtman@gmail.com>", "subject": "Re: [R] Converting \"list of data frame\" to data frame", "body": "This does not look like a \"list of dataframes\" where each dataframe is\nan element of the list.  This appears to just be a list with all the\nelements of the data frames at the same levels.  A list of data frames\nwould look like this:\n\n> x <- list(data.frame(a=1:5, b=1:5), data.frame(a=6:10, b=6:10))\n\n> str(x)\nList of 2\n $ :'data.frame':       5 obs. of  2 variables:\n  ..$ a: int [1:5] 1 2 3 4 5\n  ..$ b: int [1:5] 1 2 3 4 5\n $ :'data.frame':       5 obs. of  2 variables:\n  ..$ a: int [1:5] 6 7 8 9 10\n  ..$ b: int [1:5] 6 7 8 9 10\n>\n\nIt would appear that if you have one large list, then you will have to\nindividually split off each of the 10 elements (this appears to be the\npattern) into a data frame and then 'rbind' the data.\n\n\nOn 4/30/07, Ajit Pawar  wrote:\n> Greetings Spielas/Jim/John/R-help,\n>          Thanks for your help so far.\n>\n>           Answering your questions - doing an \"str' on the list reveals\n> following (head) information  :\n>\n> ---------------\n>  $ : Factor w/ 729 levels \"XX1\",\"YY1\",..: 6 9 10 12 13 14 19 22 29 30 ...\n>  $ : int [1:109] 19950201 19950201 19950201 19950201 19950201 19950201\n> 19950201 19950201 19950201 19950201 ...\n>  $ : num [1:109] -0.01046 -0.00528 -0.02559  0.02216  0.00847 ...\n>  $ : int [1:109] -133822 -351764 -7525444 127357 572325 -68655 -22455\n> -1241321 298967 -208658 ...\n>  $ : num [1:109]  -523244  -263823 -1279325  1108006   423520 ...\n>  $ : int [1:109] 19950301 19950301 19950301 19950301 19950301 19950301\n> 19950301 19950301 19950301 19950301 ...\n>  $ : int [1:109] 2 4 5 6 13 10 4 3 7 9 ...\n>  $ : num [1:109] 3.93 0.74 0.17 9.28 0.7 8.45 1.3 0.66 4.76 1.35 ...\n>  $ : num [1:109] 0.001536 0.000246 0.000107 0.000755 0.000541 ...\n>  $ : num [1:109]  0.0051 -0.0133  0.0000  0.0667 -0.0541 ...\n>  $ : Factor w/ 729 levels \"XX1\",\"YY1\",..: 4 5 6 9 10 11 12 13 14 16 ...\n>  $ : int [1:196] 19950301 19950301 19950301 19950301 19950301 19950301\n> 19950301 19950301 19950301 19950301 ...\n>  $ : num [1:196]  0.00424  0.02575 -0.01155 -0.00540 -0.00272 ...\n>  $ : int [1:196] 152489 146440 -152062 -377393 -828313 220702 107320 572325\n> -156050 -298177 ...\n>  $ : num [1:196]  219584 1332604 -597604 -279271 -140813 ...\n>  $ : int [1:196] 19950401 19950401 19950401 19950401 NA 19950401 19950401\n> 19950401 19950401 19950401 ...\n>  $ : int [1:196] 2 7 2 4 NA 4 6 13 10 1 ...\n>  $ : num [1:196] 1.38 9.08 3.55 0.91 NA 1.57 11 0.54 8.35 3.48 ...\n>  $ : num [1:196] 0.000801 0.003298 0.001468 0.000303       NA ...\n>  $ : num [1:196] -0.0069 -0.0022 -0.0967  0.2297      NA ...\n>  $ : Factor w/ 729 levels \"XX1\",\"YY1\",..: 4 5 6 9 11 12 13 14 16 17 ...\n>\n> ---------------\n> Just typing the list name reveals the following information:\n>\n>      [,1]        [,2]        [,3]        [,4]        [,5]        [,6]\n> idfactor,109  factor,196  factor,199  factor,181  factor,183  factor,181\n> info1  Integer,109 Integer,196 Integer,199 Integer,181 Integer,183\n> Integer,181\n> info2 Numeric,109 Numeric,196 Numeric,199 Numeric,181 Numeric,183\n> Numeric,181\n> info3  Integer,109 Integer,196 Integer,199 Integer,181 Integer,183\n> Integer,181\n> info4  Numeric,109 Numeric,196 Numeric,199 Numeric,181 Numeric,183\n> Numeric,181\n> info5  Integer,109 Integer,196 Integer,199 Integer,181 Integer,183\n> Integer,181\n> ..\n> ....\n> ...\n> info10  Integer,109 Integer,196 Integer,199 Integer,181 Integer,183\n> Integer,181\n>\n>  ---------------\n> and dim & typeof information  shows the following:\n>\n> dim => [1]  10 140\n>\n> typeof => [1] \"list\"\n>\n> ---------------------\n>\n>        Does the above information help?\n>\n>\n> Thanks a bunch!\n>\n> AP.\n>\n>\n>\n> On 4/30/07, John Kane  wrote:\n> >\n> > I just tried an artifical example and the approach\n> > seems to work okay\n> >\n> > # Joining data.frames stored in a list\n> > # From \"Spielas Bates\"\n> >\n> > aa <- 1:4\n> > bb <- 2:5\n> > cc <- 3:6\n> > dd <- 4:7\n> > ee <- 5:8\n> > ff <- c(rep(NA,4))\n> > gg <- 6:9\n> >\n> > lst <- list(data.frame(aa,bb), data.frame(cc,dd),\n> > data.frame(ee,ff,gg))\n> > tatiana <- names(lst)  <-  c(\"A\", \"C\", \"E\")\n> >\n> > maxy  <- do.call(\"rbind\", c(lst$A, lst$C, lst$E)) ;\n> > maxy\n> >\n> > miny  <- do.call(\"cbind\", c(lst$A, lst$C, lst$E)) ;\n> > miny\n> >\n> > What are the dimensions of your data frames?\n> > --- Ajit Pawar  wrote:\n> >\n> > > Spielas/R-help,\n> > >         Thanks for your reply. I did try the\n> > > solution but the result is not\n> > > what I expect and I also get the following warning\n> > > message:\n> > >\n> > > -------------------\n> > >  Warning message:\n> > >  number of columns of result\n> > >         is not a multiple of vector length (arg 1)\n> > > in: rbind(1, c(6, 9, 10,\n> > > 12, 13, 14, 19, 22, 29, 30, 42, 45, 47,\n> > >  -------------------\n> > >\n> > >         The \"list of data frames\" that sapply\n> > > returns has same number of\n> > > columns *but* different number of rows depending on\n> > > the index of sapply.\n> > >\n> > >         Any idea what might be going wrong?\n> > >\n> > >         Many thanks in advance!.\n> > >\n> > > Cheers\n> > >\n> > > AP\n> > >\n> > >\n> > >\n> > >\n> > >\n> > >\n> > > On 4/29/07, Spielas Bates \n> > > wrote:\n> > > >\n> > > > On 4/28/07, Ajit Pawar \n> > > wrote:\n> > > > > Greetings,\n> > > > >       This might be something very simple but a\n> > > nice solution eludes\n> > > > me!!\n> > > > >\n> > > > >        I have a function that I call within\n> > > sapply that generates data\n> > > > frame\n> > > > > in each call. Now when sapply returns me back\n> > > the result - it's in the\n> > > > form\n> > > > > of a \"list of data frames\". so in order to\n> > > extract the information into\n> > > > a\n> > > > > single data frame I have to loop thru the\n> > > following code:\n> > > > >\n> > > > >        for(i=1:n) {\n> > > > >            my.df =\n> > > rbind(my.df,list.from.sapply[,i]);\n> > > > >        }\n> > > > >\n> > > > >    Is there anyway to code it better?\n> > > >\n> > > > do.call(\"rbind\", my.df.list.from.sapply)\n> > > >\n> > >\n> > >       [[alternative HTML version deleted]]\n> > >\n> > > ______________________________________________\n> > > R-help@stat.math.ethz.ch mailing list\n> > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > PLEASE do read the posting guide\n> > > http://www.R-project.org/posting-guide.html\n> > > and provide commented, minimal, self-contained,\n> > > reproducible code.\n> > >\n> >\n> >\n> >\n> >      Be smarter than spam. See how smart SpamGuard is at giving junk email\n> > the boot with the All-new Yahoo! Mail at\n> > http://mrd.mail.yahoo.com/try_beta?.intl=ca\n> >\n> >\n>\n>        [[alternative HTML version deleted]]\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n\n-- \nJim Holtman\nCincinnati, OH\n+1 513 646 9390\n\nWhat is the problem you are trying to solve?\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}