{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Scott Hyde <hydes@byuh.edu>", "subject": "Re: [R] an array of matrices", "body": "\nThanks for the replies Jim and Petr!\n\nI decided to do it a slightly different way. Using Jim's method, the matrices needed to be created before the array, whereas I needed the array to be allocated first, and then filled.  Here's how I did it:\n\nThis command creates a blank array of lists\n\n> y=array(list(),c(i,j,k))\n\nThen each item can be accessed (and assigned) using\n\n> y[[i,j,k]]\n\nFor example:\n\n> for (i in 1:2)\n+   for (j in 1:2)\n+     for (k in 1:2)\n+       y[[i,j,k]] <- diag(i+j+k)\n\n> y\n, , 1\n\n     [,1]       [,2]      \n[1,] Numeric,9  Numeric,16\n[2,] Numeric,16 Numeric,25\n\n, , 2\n\n     [,1]       [,2]      \n[1,] Numeric,16 Numeric,25\n[2,] Numeric,25 Numeric,36\n\n> y[[1,1,1]]\n     [,1] [,2] [,3]\n[1,]    1    0    0\n[2,]    0    1    0\n[3,]    0    0    1\n\n> y[[2,1,2]]\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    0    0    0    0\n[2,]    0    1    0    0    0\n[3,]    0    0    1    0    0\n[4,]    0    0    0    1    0\n[5,]    0    0    0    0    1\n\n\nThanks again for the help!\n\n-Scott\n\n\n\n\n\n\n---- Original message ----\n>Date: Mon, 21 May 2007 04:57:40 -0400\n>From: \"jim holtman\"   \n>Subject: Re: [R] an array of matrices  \n>To: \"Scott Hyde\" \n>Cc: r-help@stat.math.ethz.ch\n>\n>   Create a matrix of list:\n>    \n>   > A = matrix(1:4,2,2)\n>   > B = matrix(1:25,5,5)\n>   > C = matrix(1,3,3)\n>   > D = matrix(1,4,4)\n>   > x <- list(A,B,C,D)\n>   > dim(x) <- c(2,2)\n>   > x[[1,1]]\n>        [,1] [,2]\n>   [1,]    1    3\n>   [2,]    2    4\n>   > x[[2,2]]\n>        [,1] [,2] [,3] [,4]\n>   [1,]    1    1    1    1\n>   [2,]    1    1    1    1\n>   [3,]    1    1    1    1\n>   [4,]    1    1    1    1\n>\n>    \n>   On 5/21/07, Scott Hyde  wrote:\n>\n>     I'd like to have a three dimensional array of\n>     matrices.   I thought I could construct a five\n>     dimensional array to have the three dimensional\n>     array of matrices.  However, not all of the\n>     matrices in the array have the same dimensions,\n>     which seems to mean I can't use a five dimensional\n>     array.\n>\n>     What I'd like is this:\n>\n>     A = matrix(1:4,2,2)\n>     B = matrix(1:25,5,5)\n>     C = matrix(1,3,3)\n>     D = matrix(1,4,4)\n>\n>     I'd like to construct an array for which, if I\n>     type F[1,1], it returns matrix A, type F[1,2] and\n>     it returns B, type F[2,1] and it returns C, or\n>     type F[2,2] and it returns D.\n>\n>     Essentially, I'd like to be able to access them\n>     like they were elements of a matrix.  Although\n>     this example is only a two dimensional array of\n>     matrices, I'd like it to also work with three\n>     dimensions also.\n>\n>     The only thing I thought of to try was to make an\n>     array of lists and store the matrices inside of an\n>     array of lists (where each matrix is stored as a\n>     list with one item).\n>\n>     Any suggestions?\n>\n>     -Scott\n>\n>     ______________________________________________\n>     R-help@stat.math.ethz.ch mailing list\n>     https://stat.ethz.ch/mailman/listinfo/r-help\n>     PLEASE do read the posting guide\n>     http://www.R-project.org/posting-guide.html\n>     and provide commented, minimal, self-contained,\n>     reproducible code.\n>\n>   --\n>   Jim Holtman\n>   Cincinnati, OH\n>   +1 513 646 9390\n>\n>   What is the problem you are trying to solve?\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}