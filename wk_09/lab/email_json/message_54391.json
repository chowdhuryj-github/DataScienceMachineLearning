{"category": "ham", "to_address": "\"nobull67@gmail.com\" <nobull67@gmail.com>, <beginners@perl.org>", "from_address": "Jeff <pl@loserville.org>", "subject": "Re: Conditional in regex", "body": "\n\n\nOn 6/24/07 10:42 AM, \"nobull67@gmail.com\"  wrote:\n\n\n> You don't need to repeat the pattern by hand - the /g will do that for\n> you.\n> \nThanks to everyone for the replies.\n\n I expected what you pointed out above, that /\\b(w+)\\s+(\\w+)\\s+/gs would\nmatch every instance of the pattern. Instead I got wildly results, with\nrandom letters in some variables and the values I wanted in a different\noffset every time. I cannot explain that, but the pattern works with the\nleft hand values written as literals (/\\b(word)\\s+(.*)\\s+/)\n\n> Are newlines significant? Or can just treat it as a list of\n> alternating keys and values delimited by whitespace?\n> \nThis can be treated as key/values delimited by whitespace.\n\nI wonder if the unexpected results could be related to tabs or something\nelse besides \\n? How do I see what's used for white space? Shouldn't \\s\nmatch any whitespace character?\n\n\n > Probably a list of hashes would be the most natural.\n> \n> my @LoH = map { { split } } $file_contents =~ /\\{(.*?)\\}/gs;\n\nThanks. That's cool. Since this is the beginner's list, I'll just dive in\nand ask a(nother) dumb question. I'm not sure I understand the double curly\nbraces around split. Would you mind showing me that in a less terse form?\n \n\n \n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}