{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Northstardomus <northstardomus@gmail.com>", "subject": "Re: Database insertion, escape issue", "body": "On Jun 12, 8:48 am, J...@Krynicky.cz (Jenda Krynicky) wrote:\n> From: \"Mumia W.\" \n>\n> > On 06/11/2007 06:52 PM, Northstardomus wrote:\n> > > [...]\n> > >         print \"Inserting into Database , @values.\";\n>\n> > Use the \"quotemeta\" function to escape special characters\n> > that may be in the values.\n>\n> Please don't!\n>\n>\n>\n>\n>\n> >    my @values_copy = @values;\n> >    @values = map quotemeta($_), @values;\n>\n> > >         $dbh->do(\"INSERT INTO area_status (areaID, survey_date,\n> > > update_time,\n>\n> > > status ) VALUES ('$values[0]', '$values[1]', '$values[2]',\n> > > '$values[3]')\");\n> > >         $dbh->disconnect();\n> > >     }\n> > > }\n>\n> > Read \"perldoc -f quotemeta\"\n>\n> Please do!\n>\n> The quotemeta() should NOT be used to escape data for the database.\n> It was not designed for that and it knows nothing about your\n> database. So it will most likely escape too much (it doesn't look too\n> professional to display the text with backslashes scattered\n> everywhere) and/or it may escape something in a different way than\n> the database expects.\n>\n> Either use the DATABASE SPECIFIC $dbh->quote() or even better use\n> $dbh->prepare() and placeholders. That's by far the safest and most\n> efficient solution.\n>\n> Jenda\n> ===== J...@Krynicky.cz ===http://Jenda.Krynicky.cz=====\n> When it comes to wine, women and song, wizards are allowed\n> to get drunk and croon as much as they like.\n>         -- Terry Pratchett in Sourcery- Hide quoted text -\n>\n> - Show quoted text -\n\nWell, I replaced the commented code below with the prepare method...\n\n#    if ($OK2INSERT) {\n#        $dbh = DBI->connect(\"DBI:SQLite:dbname=C:/Lanosrep/beW/Perl/\nHelpPage/area.db\", \"\", \"\", {'RaiseError' => 1});\n#        print \"Inserting into Database , @values.\";\n#        $dbh->do(\"INSERT INTO area_status (areaID, survey_date,\nupdate_time, status ) VALUES ('$values[0]', '$values[1]',\n'$values[2]', '$values[3]')\");\n#        $dbh->disconnect();\n#    }\n    if ($OK2INSERT) {\n        $dbh = DBI->connect(\"DBI:SQLite:dbname=C:/Lanosrep/beW/Perl/\nHelpPage/area.db\", \"\", \"\", {'RaiseError' => 1});\n        print \"Inserting into Database , @values.\";\n        $dbh->prepare('INSERT INTO area_status (areaID, survey_date,\nupdate_time, status ) VALUES (?,?,?,?)');\n        $dbh->execute('$values[0]', '$values[1]', '$values[2]',\n'$values[3]');\n        $dbh->disconnect();\n    }\n\n...but I get this error...is there a package I'm missing?\n\nSystem error: closing dbh with active statement handles at\ntest_script.pl line 171.\nCan't locate object method \"execute\" via package \"DBI::db\" at\ntest_script.pl\n\tline 182 (#1)\n    (F) You called a method correctly, and it correctly indicated a\npackage\n    functioning as a class, but that package doesn't define that\nparticular\n    method, nor does any of its base classes.  See perlobj.\n\nUncaught exception from user code:\n\tCan't locate object method \"execute\" via package \"DBI::db\" at\ntest_script.pl line 182.\n at test_script.pl line 182\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}