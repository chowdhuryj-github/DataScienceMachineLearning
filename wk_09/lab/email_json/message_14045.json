{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r22497 - in branches/SAMBA_4_0/source:\n\tdsdb/samdb/ldb_modules lib/ldb/tools setup", "body": "Author: abartlet\nDate: 2007-04-24 05:57:56 +0000 (Tue, 24 Apr 2007)\nNew Revision: 22497\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22497\n\nLog:\nSupport renaming objectclasses and attributes for the LDAP backend. \n\nOpenLDAP is fussy about operational attributes in user-supplied\nschema.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/dsdb/samdb/ldb_modules/entryUUID.c\n   branches/SAMBA_4_0/source/lib/ldb/tools/ad2oLschema.c\n   branches/SAMBA_4_0/source/setup/schema-map-openldap-2.3\n   branches/SAMBA_4_0/source/setup/schema_samba4.ldif\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/dsdb/samdb/ldb_modules/entryUUID.c\n===================================================================\n--- branches/SAMBA_4_0/source/dsdb/samdb/ldb_modules/entryUUID.c\t2007-04-24 00:12:28 UTC (rev 22496)\n+++ branches/SAMBA_4_0/source/dsdb/samdb/ldb_modules/entryUUID.c\t2007-04-24 05:57:56 UTC (rev 22497)\n@@ -352,6 +352,15 @@\n \t\t}\n \t},\n \t{\n+\t\t.local_name = \"objectClasses\",\n+\t\t.type = MAP_RENAME,\n+\t\t.u = {\n+\t\t\t.rename = {\n+\t\t\t\t .remote_name = \"sambaObjectClasses\"\n+\t\t\t }\n+\t\t}\n+\t},\n+\t{\n \t\t.local_name = \"sambaPassword\",\n \t\t.type = MAP_RENAME,\n \t\t.u = {\n@@ -446,9 +455,21 @@\n \t}\n };\n \n+/* This objectClass conflicts with builtin classes on OpenLDAP */\n+const struct ldb_map_objectclass entryUUID_objectclasses[] =\n+{\n+\t{\n+\t\t.local_name = \"subSchema\",\n+\t\t.remote_name = \"samba4SubSchema\"\n+\t},\n+\t{\n+\t\t.local_name = NULL\n+\t}\n+};\n+\n /* These things do not show up in wildcard searches in OpenLDAP, but\n  * we need them to show up in the AD-like view */\n-const char * const wildcard_attributes[] = {\n+const char * const entryUUID_wildcard_attributes[] = {\n \t\"objectGUID\", \n \t\"whenCreated\", \n \t\"whenChanged\",\n@@ -471,7 +492,7 @@\n \t\t\t},\n \t\t},\n \t},\n-\t/* objectSid */\n+\t/* objectSid */\t\n \t{\n \t\t.local_name = \"objectSid\",\n \t\t.type = MAP_CONVERT,\n@@ -751,7 +772,7 @@\n \tstruct entryUUID_private *entryUUID_private;\n \tstruct ldb_dn *schema_dn;\n \n-\tret = ldb_map_init(module, entryUUID_attributes, NULL, wildcard_attributes, NULL);\n+\tret = ldb_map_init(module, entryUUID_attributes, entryUUID_objectclasses, entryUUID_wildcard_attributes, NULL);\n         if (ret != LDB_SUCCESS)\n                 return ret;\n \n\nModified: branches/SAMBA_4_0/source/lib/ldb/tools/ad2oLschema.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/tools/ad2oLschema.c\t2007-04-24 00:12:28 UTC (rev 22496)\n+++ branches/SAMBA_4_0/source/lib/ldb/tools/ad2oLschema.c\t2007-04-24 05:57:56 UTC (rev 22497)\n@@ -246,7 +246,12 @@\n \t\tchar *old_oid;\n \t\tchar *new_oid;\n \t} *oid_map = NULL;\n-\tint num_maps = 0;\n+\tint num_oid_maps = 0;\n+\tstruct attr_map {\n+\t\tchar *old_attr;\n+\t\tchar *new_attr;\n+\t} *attr_map = NULL;\n+\tint num_attr_maps = 0;\t\n \tstruct ldb_result *attrs_res, *objectclasses_res;\n \tstruct ldb_dn *schemadn;\n \tstruct schema_conv ret;\n@@ -269,25 +274,36 @@\n \t\tif (isdigit(line[0])) {\n \t\t\tchar *p = strchr(line, ':');\n \t\t\tIF_NULL_FAIL_RET(p);\n-\t\t\tif (!p) {\n-\t\t\t\tret.failures = 1;\n-\t\t\t\treturn ret;\n-\t\t\t}\n \t\t\tp[0] = '\\0';\n \t\t\tp++;\n-\t\t\toid_map = talloc_realloc(mem_ctx, oid_map, struct oid_map, num_maps + 2);\n+\t\t\toid_map = talloc_realloc(mem_ctx, oid_map, struct oid_map, num_oid_maps + 2);\n \t\t\ttrim_string(line, \" \", \" \");\n-\t\t\toid_map[num_maps].old_oid = talloc_move(oid_map, &line);\n+\t\t\toid_map[num_oid_maps].old_oid = talloc_move(oid_map, &line);\n \t\t\ttrim_string(p, \" \", \" \");\n-\t\t\toid_map[num_maps].new_oid = p;\n-\t\t\tnum_maps++;\n-\t\t\toid_map[num_maps].old_oid = NULL;\n+\t\t\toid_map[num_oid_maps].new_oid = p;\n+\t\t\tnum_oid_maps++;\n+\t\t\toid_map[num_oid_maps].old_oid = NULL;\n \t\t} else {\n-\t\t\tattrs_skip = talloc_realloc(mem_ctx, attrs_skip, const char *, num_skip + 2);\n-\t\t\ttrim_string(line, \" \", \" \");\n-\t\t\tattrs_skip[num_skip] = talloc_move(attrs_skip, &line);\n-\t\t\tnum_skip++;\n-\t\t\tattrs_skip[num_skip] = NULL;\n+\t\t\tchar *p = strchr(line, ':');\n+\t\t\tif (p) {\n+\t\t\t\t/* remap attribute/objectClass */\n+\t\t\t\tp[0] = '\\0';\n+\t\t\t\tp++;\n+\t\t\t\tattr_map = talloc_realloc(mem_ctx, attr_map, struct attr_map, num_attr_maps + 2);\n+\t\t\t\ttrim_string(line, \" \", \" \");\n+\t\t\t\tattr_map[num_attr_maps].old_attr = talloc_move(attr_map, &line);\n+\t\t\t\ttrim_string(p, \" \", \" \");\n+\t\t\t\tattr_map[num_attr_maps].new_attr = p;\n+\t\t\t\tnum_attr_maps++;\n+\t\t\t\tattr_map[num_attr_maps].old_attr = NULL;\n+\t\t\t} else {\n+\t\t\t\t/* skip attribute/objectClass */\n+\t\t\t\tattrs_skip = talloc_realloc(mem_ctx, attrs_skip, const char *, num_skip + 2);\n+\t\t\t\ttrim_string(line, \" \", \" \");\n+\t\t\t\tattrs_skip[num_skip] = talloc_move(attrs_skip, &line);\n+\t\t\t\tnum_skip++;\n+\t\t\t\tattrs_skip[num_skip] = NULL;\n+\t\t\t}\n \t\t}\n \t}\n \n@@ -327,7 +343,7 @@\n \n \t\tif (!name) {\n \t\t\tprintf(\"Failed to find lDAPDisplayName for schema DN: %s\\n\", ldb_dn_get_linearized(msg->dn));\n-\t\t\tret.failures = 1;\n+\t\t\tret.failures++;\n \t\t\tcontinue;\n \t\t}\n \n@@ -359,6 +375,14 @@\n \t\t}\n \t\tIF_NULL_FAIL_RET(schema_entry);\n \n+\t\t/* We might have been asked to remap this name, due to a conflict */\n+\t\tfor (j=0; name && attr_map && attr_map[j].old_attr; j++) {\n+\t\t\tif (strcmp(name, attr_map[j].old_attr) == 0) {\n+\t\t\t\tname =  attr_map[j].new_attr;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t\t\n \t\tschema_entry = talloc_asprintf_append(schema_entry, \n \t\t\t\t\t\t      \"  NAME '%s'\\n\", name);\n \t\tIF_NULL_FAIL_RET(schema_entry);\n@@ -437,6 +461,12 @@\n \t\tchar *schema_entry = NULL;\n \t\tint j;\n \n+\t\tif (!name) {\n+\t\t\tprintf(\"Failed to find lDAPDisplayName for schema DN: %s\\n\", ldb_dn_get_linearized(msg->dn));\n+\t\t\tret.failures++;\n+\t\t\tcontinue;\n+\t\t}\n+\n \t\t/* We have been asked to skip some attributes/objectClasses */\n \t\tif (attrs_skip && str_list_check_ci(attrs_skip, name)) {\n \t\t\tret.skipped++;\n@@ -469,6 +499,14 @@\n \t\t\tbreak;\n \t\t}\n \n+\t\t/* We might have been asked to remap this name, due to a conflict */\n+\t\tfor (j=0; name && attr_map && attr_map[j].old_attr; j++) {\n+\t\t\tif (strcmp(name, attr_map[j].old_attr) == 0) {\n+\t\t\t\tname =  attr_map[j].new_attr;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\t\t\n \t\tschema_entry = talloc_asprintf_append(schema_entry, \n \t\t\t\t\t\t      \"  NAME '%s'\\n\", name);\n \t\tIF_NULL_FAIL_RET(schema_entry);\n@@ -509,9 +547,19 @@\n \t\tdo {\t\t\t\t\t\t\\\n \t\t\tint k;\t\t\t\t\t\t\\\n \t\t\tfor (k=0; attributes && k < attributes->num_values; k++) { \\\n+\t\t\t\tint attr_idx; \\\n+\t\t\t\tconst char *attr_name = (const char *)attributes->values[k].data;  \\\n+\t\t\t\t/* We might have been asked to remap this name, due to a conflict */ \\\n+\t\t\t\tfor (attr_idx=0; attr_name && attr_map && attr_map[attr_idx].old_attr; attr_idx++) { \\\n+\t\t\t\t\tif (strcmp(attr_name, attr_map[attr_idx].old_attr) == 0) { \\\n+\t\t\t\t\t\tattr_name =  attr_map[attr_idx].new_attr; \\\n+\t\t\t\t\t\tbreak;\t\t\t\\\n+\t\t\t\t\t}\t\t\t\t\\\n+\t\t\t\t}\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n \t\t\t\tschema_entry = talloc_asprintf_append(schema_entry, \\\n \t\t\t\t\t\t\t\t      \" %s\", \\\n-\t\t\t\t\t\t\t\t      (const char *)attributes->values[k].data); \\\n+\t\t\t\t\t\t\t\t      attr_name); \\\n \t\t\t\tIF_NULL_FAIL_RET(schema_entry);\t\t\\\n \t\t\t\tif (k != (attributes->num_values - 1)) { \\\n \t\t\t\t\tschema_entry = talloc_asprintf_append(schema_entry, \\\n\nModified: branches/SAMBA_4_0/source/setup/schema-map-openldap-2.3\n===================================================================\n--- branches/SAMBA_4_0/source/setup/schema-map-openldap-2.3\t2007-04-24 00:12:28 UTC (rev 22496)\n+++ branches/SAMBA_4_0/source/setup/schema-map-openldap-2.3\t2007-04-24 05:57:56 UTC (rev 22497)\n@@ -1,7 +1,6 @@\n #Standard OpenLDAP attributes\n name\n labeledURI\n-objectClasses\n createTimeStamp\n attributeTypes\n objectClass\n@@ -10,7 +9,6 @@\n uid\n subSchemaSubEntry\n structuralObjectClass\n-modifyTimeStamp\n distinguishedName\n description\n cn\n@@ -18,8 +16,14 @@\n top\n #This shouldn't make it to the ldap server\n sambaPassword\n-#Skip ObjectClasses\n-subSchema\n+#These conflict with OpenLDAP builtins\n+objectClasses:samba4ObjectClasses\n+2.5.21.6:1.3.6.1.4.1.7165.4.255.5\n+subSchema:samba4SubSchema\n+2.5.20.1:1.3.6.1.4.1.7165.4.255.4\n+#Remap these so that we don't put operational attributes in a schema MAY\n+modifyTimeStamp:samba4ModifyTimestamp\n+2.5.18.2:1.3.6.1.4.1.7165.4.255.3\n #MiddleName has a conflicting OID\n 2.16.840.1.113730.3.1.34:1.3.6.1.4.1.7165.4.255.1\n #defaultGroup has a conflicting OID\n\nModified: branches/SAMBA_4_0/source/setup/schema_samba4.ldif\n===================================================================\n--- branches/SAMBA_4_0/source/setup/schema_samba4.ldif\t2007-04-24 00:12:28 UTC (rev 22496)\n+++ branches/SAMBA_4_0/source/setup/schema_samba4.ldif\t2007-04-24 05:57:56 UTC (rev 22497)\n@@ -165,3 +165,7 @@\n #Allocated: (middleName) attributeID: 1.3.6.1.4.1.7165.4.255.1\n \n #Allocated: (defaultGroup) attributeID: 1.3.6.1.4.1.7165.4.255.2\n+\n+#Allocated: (modifyTimestamp) samba4ModifyTimestamp: 1.3.6.1.4.1.7165.4.255.3\n+#Allocated: (subSchema) samba4SubSchema: 1.3.6.1.4.1.7165.4.255.4\n+#Allocated: (objectClasses) samba4ObjectClasses: 1.3.6.1.4.1.7165.4.255.5\n\n"}