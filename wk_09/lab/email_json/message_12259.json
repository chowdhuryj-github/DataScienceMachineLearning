{"category": "ham", "to_address": "chromatic <chromatic@wgz.org>", "from_address": "Patrick Rutkowski <rutski89@gmail.com>", "subject": "Re: I Don't Understand The Context Allocation/Destruction Code", "body": "\nOn Apr 22, 2007, at 12:59 AM, chromatic wrote:\n\n> On Saturday 21 April 2007 21:26, Patrick Rutkowski wrote:\n>\n>> I was just reading (s/reading/trying to read/) the same routine\n>> earlier this morning. I'm glad to see that I'm not alone in my\n>> confusion.\n>\n> Me too, but I'm now seriously wondering *why* you were reading it.   \n> It's not\n> the lightest, brightest part of the code (not that I'm complaining  \n> that\n> someone else is looking over it).\n\nI'm not looking at it for any particular reason. My interest in\nhelping work on parrot began only yesterday. First I spent last night\nreading a few pdds. Then this morning in an effort to familiarize\nmyself with the implementation details I opened up main.c and just\nstarted reading line by line assuming hello.pasm as\ninput. Unfortunately Parrot_alloc_context() is the first non-trivial\ncode that one runs into when doing that. The call stack basically\ngoes:\n\nmain() ->\n   Parrot_new() ->\n     make_interpreter() ->\n       create_initial_context() ->\n         Parrot_alloc_context() ->\n           walk_away_from_computer_in_confusion()\n\n>\n>> Is it possible to track down the author of those odd bit-shifting\n>> statements in order to ask him about it directly? I would do it  \n>> myself\n>> but I'm still learning my way around the finer points of SVN.\n>\n> I only traced it as far back as the CVS -> SVN shift.  Since then,  \n> Leo and Bob\n> Rogers touched it, but apart from a few optimizations and the big  \n> change to\n> variable-sized register frames, I didn't see the origins of the most\n> confusing parts:\n>\n> \thttp://svn.perl.org/viewcvs/parrot?rev=9645&view=rev\n\nIn that case I'll keep on digging. If I pinpoint the person who authored\nthe confusing bits then I'll forward him a link to this thread on\nnntp.perl.org.\n\n"}