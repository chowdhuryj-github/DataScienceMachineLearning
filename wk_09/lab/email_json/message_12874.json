{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11979: Fix tests for Samba3 client generator. in\n\tfile:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 11979\nrevision-id: jelmer@samba.org-20070422151749-lyirte2r0dtzyy5b\nparent: svn-v2:22456@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Sun 2007-04-22 17:17:49 +0200\nmessage:\n  Fix tests for Samba3 client generator.\nmodified:\n  source/pidl/lib/Parse/Pidl/Samba3/ClientNDR.pm svn-v2:15437@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fpidl%2flib%2fParse%2fPidl%2fSamba3%2fClientNDR.pm\n  source/pidl/pidl               svn-v2:9459@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fpidl%2fpidl\n  source/pidl/tests/samba3-cli.pl svn-v2:21338@0c0555d6-39d7-0310-84fc-f1cc0bd64818-branches%2fSAMBA_4_0-source%2fpidl%2ftests%2fsamba3%2dcli.pl\n=== modified file 'source/pidl/lib/Parse/Pidl/Samba3/ClientNDR.pm'\n--- a/source/pidl/lib/Parse/Pidl/Samba3/ClientNDR.pm\t2007-04-19 01:26:15 +0000\n+++ b/source/pidl/lib/Parse/Pidl/Samba3/ClientNDR.pm\t2007-04-22 15:17:49 +0000\n@@ -20,14 +20,18 @@\n use vars qw($VERSION);\n $VERSION = '0.01';\n \n-my $res;\n-my $res_hdr;\n-my $tabs = \"\";\n-sub indent() { $tabs.=\"\\t\"; }\n-sub deindent() { $tabs = substr($tabs, 1); }\n-sub pidl($) { $res .= $tabs.(shift).\"\\n\"; }\n-sub pidl_hdr($) { $res_hdr .= (shift).\"\\n\"; }\n-sub fn_declare($) { my ($n) = @_; pidl $n; pidl_hdr \"$n;\"; }\n+sub indent($) { my ($self) = @_; $self->{tabs}.=\"\\t\"; }\n+sub deindent($) { my ($self) = @_; $self->{tabs} = substr($self->{tabs}, 1); }\n+sub pidl($$) { my ($self,$txt) = @_; $self->{res} .= \"$self->{tabs}$txt\\n\"; }\n+sub pidl_hdr($$) { my ($self, $txt) = @_; $self->{res_hdr} .= \"$txt\\n\"; } \n+sub fn_declare($$) { my ($self,$n) = @_; $self->pidl($n); $self->pidl_hdr(\"$n;\"); }\n+\n+sub new($)\n+{\n+\tmy ($class) = shift;\n+\tmy $self = { res => \"\", res_hdr => \"\", tabs => \"\" };\n+\tbless($self, $class);\n+}\n \n sub GenerateFunctionInEnv($)\n {\n@@ -43,9 +47,9 @@\n \treturn \\%env;\n }\n \n-sub ParseFunction($$)\n+sub ParseFunction($$$)\n {\n-\tmy ($uif, $fn) = @_;\n+\tmy ($self, $uif, $fn) = @_;\n \n \tmy $inargs = \"\";\n \tmy $defargs = \"\";\n@@ -54,42 +58,42 @@\n \tforeach (@{$fn->{ELEMENTS}}) {\n \t\t$defargs .= \", \" . DeclLong($_);\n \t}\n-\tfn_declare \"NTSTATUS rpccli_$fn->{NAME}(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx$defargs)\";\n-\tpidl \"{\";\n-\tindent;\n-\tpidl \"struct $fn->{NAME} r;\";\n-\tpidl \"NTSTATUS status;\";\n-\tpidl \"\";\n-\tpidl \"/* In parameters */\";\n+\t$self->fn_declare(\"NTSTATUS rpccli_$fn->{NAME}(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx$defargs)\");\n+\t$self->pidl(\"{\");\n+\t$self->indent;\n+\t$self->pidl(\"struct $fn->{NAME} r;\");\n+\t$self->pidl(\"NTSTATUS status;\");\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"/* In parameters */\");\n \n \tforeach (@{$fn->{ELEMENTS}}) {\n \t\tif (grep(/in/, @{$_->{DIRECTION}})) {\n-\t\t\tpidl \"r.in.$_->{NAME} = $_->{NAME};\";\n+\t\t\t$self->pidl(\"r.in.$_->{NAME} = $_->{NAME};\");\n \t\t} \n \t}\n \n-\tpidl \"\";\n-\tpidl \"if (DEBUGLEVEL >= 10)\";\n-\tpidl \"\\tNDR_PRINT_IN_DEBUG($fn->{NAME}, &r);\";\n-\tpidl \"\";\n-\tpidl \"status = cli_do_rpc_ndr(cli, mem_ctx, PI_$uif, $ufn, &r, (ndr_pull_flags_fn_t)ndr_pull_$fn->{NAME}, (ndr_push_flags_fn_t)ndr_push_$fn->{NAME});\";\n-\tpidl \"\";\n-\n-\tpidl \"if (!NT_STATUS_IS_OK(status)) {\";\n-\tindent;\n-\tpidl \"return status;\";\n-\tdeindent;\n-\tpidl \"}\";\n-\n-\tpidl \"\";\n-\tpidl \"if (DEBUGLEVEL >= 10)\";\n-\tpidl \"\\tNDR_PRINT_OUT_DEBUG($fn->{NAME}, &r);\";\n-\tpidl \"\";\n-\tpidl \"if (NT_STATUS_IS_ERR(status)) {\";\n-\tpidl \"\\treturn status;\";\n-\tpidl \"}\";\n-\tpidl \"\";\n-\tpidl \"/* Return variables */\";\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"if (DEBUGLEVEL >= 10)\");\n+\t$self->pidl(\"\\tNDR_PRINT_IN_DEBUG($fn->{NAME}, &r);\");\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"status = cli_do_rpc_ndr(cli, mem_ctx, PI_$uif, $ufn, &r, (ndr_pull_flags_fn_t)ndr_pull_$fn->{NAME}, (ndr_push_flags_fn_t)ndr_push_$fn->{NAME});\");\n+\t$self->pidl(\"\");\n+\n+\t$self->pidl(\"if (!NT_STATUS_IS_OK(status)) {\");\n+\t$self->indent;\n+\t$self->pidl(\"return status;\");\n+\t$self->deindent;\n+\t$self->pidl(\"}\");\n+\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"if (DEBUGLEVEL >= 10)\");\n+\t$self->pidl(\"\\tNDR_PRINT_OUT_DEBUG($fn->{NAME}, &r);\");\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"if (NT_STATUS_IS_ERR(status)) {\");\n+\t$self->pidl(\"\\treturn status;\");\n+\t$self->pidl(\"}\");\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"/* Return variables */\");\n \tforeach my $e (@{$fn->{ELEMENTS}}) {\n \t\tnext unless (grep(/out/, @{$e->{DIRECTION}}));\n \n@@ -97,8 +101,8 @@\n \n \t\tif ( ($e->{LEVELS}[0]->{TYPE} eq \"POINTER\") and\n \t\t\t ($e->{LEVELS}[0]->{POINTER_TYPE} ne \"ref\") ) {\n-\t\t\tpidl \"if ( $e->{NAME} ) {\";\n-\t\t\tindent;\n+\t\t\t$self->pidl(\"if ( $e->{NAME} ) {\");\n+\t\t\t$self->indent;\n \t\t}\n \n \t\tif ($e->{LEVELS}[0]->{TYPE} eq \"ARRAY\") {\n@@ -108,70 +112,67 @@\n \t\t\t# to allocate a structure of the right size.\n \t\t\tmy $env = GenerateFunctionInEnv($fn);\n \t\t\tmy $size_is = ParseExpr($e->{LEVELS}[0]->{SIZE_IS}, $env, $e);\n-\t\t\tpidl \"memcpy($e->{NAME}, r.out.$e->{NAME}, $size_is);\";\n+\t\t\t$self->pidl(\"memcpy($e->{NAME}, r.out.$e->{NAME}, $size_is);\");\n \t\t} else {\n-\t\t\tpidl \"*$e->{NAME} = *r.out.$e->{NAME};\";\n+\t\t\t$self->pidl(\"*$e->{NAME} = *r.out.$e->{NAME};\");\n \t\t}\n \n \t\tif ( ($e->{LEVELS}[0]->{TYPE} eq \"POINTER\") and\n \t\t\t ($e->{LEVELS}[0]->{POINTER_TYPE} ne \"ref\") ) {\n-\t\t\tdeindent;\n-\t\t\tpidl \"}\";\n+\t\t\t$self->deindent;\n+\t\t\t$self->pidl(\"}\");\n \t\t}\n \t}\n \n-\tpidl\"\";\n-\tpidl \"/* Return result */\";\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"/* Return result */\");\n \tif (not $fn->{RETURN_TYPE}) {\n-\t\tpidl \"return NT_STATUS_OK;\";\n+\t\t$self->pidl(\"return NT_STATUS_OK;\");\n \t} elsif ($fn->{RETURN_TYPE} eq \"NTSTATUS\") {\n-\t\tpidl \"return r.out.result;\";\n+\t\t$self->pidl(\"return r.out.result;\");\n \t} elsif ($fn->{RETURN_TYPE} eq \"WERROR\") {\n-\t\tpidl \"return werror_to_ntstatus(r.out.result);\";\n+\t\t$self->pidl(\"return werror_to_ntstatus(r.out.result);\");\n \t} else {\n \t\twarning($fn->{ORIGINAL}, \"Unable to convert $fn->{RETURN_TYPE} to NTSTATUS\");\n-\t\tpidl \"return NT_STATUS_OK;\";\n+\t\t$self->pidl(\"return NT_STATUS_OK;\");\n \t}\n \n-\tdeindent;\n-\tpidl \"}\";\n-\tpidl \"\";\n+\t$self->deindent;\n+\t$self->pidl(\"}\");\n+\t$self->pidl(\"\");\n }\n \n-sub ParseInterface($)\n+sub ParseInterface($$)\n {\n-\tmy $if = shift;\n+\tmy ($self, $if) = @_;\n \n \tmy $uif = uc($if->{NAME});\n \n-\tpidl_hdr \"#ifndef __CLI_$uif\\__\";\n-\tpidl_hdr \"#define __CLI_$uif\\__\";\n-\tParseFunction(uc($if->{NAME}), $_) foreach (@{$if->{FUNCTIONS}});\n-\tpidl_hdr \"#endif /* __CLI_$uif\\__ */\";\n+\t$self->pidl_hdr(\"#ifndef __CLI_$uif\\__\");\n+\t$self->pidl_hdr(\"#define __CLI_$uif\\__\");\n+\t$self->ParseFunction(uc($if->{NAME}), $_) foreach (@{$if->{FUNCTIONS}});\n+\t$self->pidl_hdr(\"#endif /* __CLI_$uif\\__ */\");\n }\n \n-sub Parse($$$)\n+sub Parse($$$$)\n {\n-\tmy($ndr,$header,$ndr_header) = @_;\n-\n-\t$res = \"\";\n-\t$res_hdr = \"\";\n-\n-\tpidl \"/*\";\n-\tpidl \" * Unix SMB/CIFS implementation.\";\n-\tpidl \" * client auto-generated by pidl. DO NOT MODIFY!\";\n-\tpidl \" */\";\n-\tpidl \"\";\n-\tpidl \"#include \\\"includes.h\\\"\";\n-\tpidl \"#include \\\"$header\\\"\";\n-\tpidl_hdr \"#include \\\"$ndr_header\\\"\";\n-\tpidl \"\";\n+\tmy($self,$ndr,$header,$ndr_header) = @_;\n+\n+\t$self->pidl(\"/*\");\n+\t$self->pidl(\" * Unix SMB/CIFS implementation.\");\n+\t$self->pidl(\" * client auto-generated by pidl. DO NOT MODIFY!\");\n+\t$self->pidl(\" */\");\n+\t$self->pidl(\"\");\n+\t$self->pidl(\"#include \\\"includes.h\\\"\");\n+\t$self->pidl(\"#include \\\"$header\\\"\");\n+\t$self->pidl_hdr(\"#include \\\"$ndr_header\\\"\");\n+\t$self->pidl(\"\");\n \t\n \tforeach (@$ndr) {\n-\t\tParseInterface($_) if ($_->{TYPE} eq \"INTERFACE\");\n+\t\t$self->ParseInterface($_) if ($_->{TYPE} eq \"INTERFACE\");\n \t}\n \n-\treturn ($res, $res_hdr);\n+\treturn ($self->{res}, $self->{res_hdr});\n }\n \n 1;\n\n=== modified file 'source/pidl/pidl'\n--- a/source/pidl/pidl\t2007-04-22 13:57:07 +0000\n+++ b/source/pidl/pidl\t2007-04-22 15:17:49 +0000\n@@ -702,7 +702,8 @@\n \t\tmy $client = ($opt_samba3_ndr_client or \"$outputdir/cli_$basename.c\");\n \t\tmy $header = $client; $header =~ s/\\.c$/\\.h/;\n \t\trequire Parse::Pidl::Samba3::ClientNDR;\n-\t\tmy ($c_code,$h_code) = Parse::Pidl::Samba3::ClientNDR::Parse($ndr, $header, $h_filename);\n+\t\tmy $generator = new Parse::Pidl::Samba3::ClientNDR();\n+\t\tmy ($c_code,$h_code) = $generator->Parse($ndr, $header, $h_filename);\n \t\tFileSave($client, $c_code);\n \t\tFileSave($header, $h_code);\n \t}\n\n=== modified file 'source/pidl/tests/samba3-cli.pl'\n--- a/source/pidl/tests/samba3-cli.pl\t2007-02-14 14:23:59 +0000\n+++ b/source/pidl/tests/samba3-cli.pl\t2007-04-22 15:17:49 +0000\n@@ -9,8 +9,7 @@\n use lib \"$RealBin\";\n use Util;\n use Parse::Pidl::Util qw(MyDumper);\n-use Parse::Pidl::Samba3::ClientNDR qw(GenerateFunctionInEnv ParseFunction $res \n-    $res_hdr);\n+use Parse::Pidl::Samba3::ClientNDR qw(GenerateFunctionInEnv ParseFunction);\n \n # Make sure GenerateFunctionInEnv and GenerateFunctionOutEnv work\n my $fn = { ELEMENTS => [ { DIRECTION => [\"in\"], NAME => \"foo\" } ] };\n@@ -22,9 +21,11 @@\n $fn = { ELEMENTS => [ { DIRECTION => [\"out\"], NAME => \"foo\" } ] };\n is_deeply({ }, GenerateFunctionInEnv($fn));\n \n+my $x = new Parse::Pidl::Samba3::ClientNDR();\n+\n $fn = { NAME => \"bar\", ELEMENTS => [ ] };\n-ParseFunction(\"foo\", $fn);\n-is($res, \"NTSTATUS rpccli_bar(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx)\n+$x->ParseFunction(\"foo\", $fn);\n+is($x->{res}, \"NTSTATUS rpccli_bar(struct rpc_pipe_client *cli, TALLOC_CTX *mem_ctx)\n {\n \\tstruct bar r;\n \\tNTSTATUS status;\n\n"}