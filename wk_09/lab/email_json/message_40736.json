{"category": "ham", "to_address": "Michael Adam <ma@sernet.de>", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: svn commit: samba r23290 - in branches:\n\tSAMBA_3_0/source/nsswitch SAMBA_3_0_26/source/nsswitch", "body": "On Sat, Jun 02, 2007 at 01:01:39AM +0200, Michael Adam wrote:\n> \n> Correct. What is the benefit of using mem_ctx?\n> \n> Volker told me a couple of days ago that the using the\n> array as parent context for talloc'ing entries is the\n> most natural thing.\n> \n> Maybe using mem_ctx, when the heirarchy is not needed,\n> is more obvious that it the argument is treated as a talloc \n> context? (in this case I _know_ I have talloced the array,\n> so i can safely use it as a talloc contecxt). What else? \n> Is it better (with respect to the administrative efforts) \n> to keep the hierarchy flat?\n> \n> Any enlightenment appreciated!\n\nI'm not sure there's any enlightenment here :-).\n\nPersonally I think it's just a style thing. \n\nI am wary of the \"any pointer is a talloc\npointer\" idiom as it's easy to screw up\nwhen you have a mixture of malloc and\ntalloc pointers. So I tend to explicitly\nuse the top-level context to remind me.\n\nBut that might be because my coding style\nsucks :-), but I find it easier to remember\nby doing that.\n\nJeremy.\n\n"}