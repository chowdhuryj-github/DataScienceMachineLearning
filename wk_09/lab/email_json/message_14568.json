{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 11996: Remove some more cruft. in\n\tfile:///home/jelmer/bzr.samba/python/", "body": "At file:///home/jelmer/bzr.samba/python/\n\n------------------------------------------------------------\nrevno: 11996\nrevision-id: jelmer@samba.org-20070423224827-r2ol1o27vwplxbj1\nparent: jelmer@samba.org-20070423204721-oazsviba59vu2tpu\ncommitter: Jelmer Vernooij \nbranch nick: python\ntimestamp: Tue 2007-04-24 00:48:27 +0200\nmessage:\n  Remove some more cruft.\nmodified:\n  source/lib/python/config.m4    configure.in-20070423105804-3mrp9flhlt8pjj8v-11\n  source/lib/python/config.mk    makefile.pre.in-20070423105804-3mrp9flhlt8pjj8v-5\n=== modified file 'source/lib/python/config.m4'\n--- a/source/lib/python/config.m4\t2007-04-23 20:38:05 +0000\n+++ b/source/lib/python/config.m4\t2007-04-23 22:48:27 +0000\n@@ -31,464 +31,6 @@\n # them.\n AC_DEFINE(__BSD_VISIBLE, 1, [Define on FreeBSD to activate all library features])\n \n-# The later defininition of _XOPEN_SOURCE and _POSIX_C_SOURCE disables\n-# u_int on Irix 5.3. Defining _BSD_TYPES brings it back.\n-AC_DEFINE(_BSD_TYPES, 1, [Define on Irix to enable u_int])\n-\n-define_xopen_source=yes\n-\n-# Some systems cannot stand _XOPEN_SOURCE being defined at all; they\n-# disable features if it is defined, without any means to access these\n-# features as extensions. For these systems, we skip the definition of\n-# _XOPEN_SOURCE. Before adding a system to the list to gain access to\n-# some feature, make sure there is no alternative way to access this\n-# feature. Also, when using wildcards, make sure you have verified the\n-# need for not defining _XOPEN_SOURCE on all systems matching the\n-# wildcard, and that the wildcard does not include future systems\n-# (which may remove their limitations).\n-dnl quadrigraphs \"@<:@\" and \"@:>@\" produce \"[\" and \"]\" in the output\n-case $ac_sys_system/$ac_sys_release in\n-  # On OpenBSD, select(2) is not available if _XOPEN_SOURCE is defined,\n-  # even though select is a POSIX function. Reported by J. Ribbens.\n-  # Reconfirmed for OpenBSD 3.3 by Zachary Hamm, for 3.4 by Jason Ish.\n-  OpenBSD/2.* | OpenBSD/3.@<:@0090687678@:>@ | OpenBSD/4.@<:@0@:>@) \n-    define_xopen_source=no;;\n-  # Defining _XOPEN_SOURCE on NetBSD version prior to the introduction of\n-  # _NETBSD_SOURCE disables certain features (eg. setgroups). Reported by\n-  # Marc Recht\n-  NetBSD/1.5 | NetBSD/1.5.* | NetBSD/1.6 | NetBSD/1.6.* | NetBSD/1.6[A-S])\n-    define_xopen_source=no;;\n-  # On Solaris 2.6, sys/wait.h is inconsistent in the usage\n-  # of union __?sigval. Reported by Stuart Bishop.\n-  SunOS/5.6)\n-    define_xopen_source=no;;\n-  # On UnixWare 7, u_long is never defined with _XOPEN_SOURCE,\n-  # but used in /usr/include/netinet/tcp.h. Reported by Tim Rice.\n-  # Reconfirmed for 7.1.4 by Martin v. Loewis.\n-  OpenUNIX/8.0.0| UnixWare/7.1.@<:@0-4@:>@)\n-    define_xopen_source=no;;\n-  # On OpenServer 5, u_short is never defined with _XOPEN_SOURCE,\n-  # but used in struct sockaddr.sa_family. Reported by Tim Rice.\n-  SCO_SV/3.2)\n-    define_xopen_source=no;;\n-  # On FreeBSD 4.8 and MacOS X 10.2, a bug in ncurses.h means that\n-  # it craps out if _XOPEN_EXTENDED_SOURCE is defined. Apparently,\n-  # this is fixed in 10.3, which identifies itself as Darwin/7.*\n-  # This should hopefully be fixed in FreeBSD 4.9\n-  FreeBSD/4.8* | Darwin/6* )\n-    define_xopen_source=no;;\n-  # On AIX 4 and 5.1, mbstate_t is defined only when _XOPEN_SOURCE == 500 but\n-  # used in wcsnrtombs() and mbsnrtowcs() even if _XOPEN_SOURCE is not defined\n-  # or has another value. By not (re)defining it, the defaults come in place.\n-  AIX/4)\n-    define_xopen_source=no;;\n-  AIX/5)\n-    if test `uname -r` -eq 1; then\n-      define_xopen_source=no\n-    fi\n-    ;;\n-  # On Mac OS X 10.4, defining _POSIX_C_SOURCE or _XOPEN_SOURCE\n-  # disables platform specific features beyond repair.\n-  # On Mac OS X 10.3, defining _POSIX_C_SOURCE or _XOPEN_SOURCE \n-  # has no effect, don't bother defining them\n-  Darwin/@<:@789@:>@.*)\n-    define_xopen_source=no\n-    ;;\n-\n-esac\n-\n-if test $define_xopen_source = yes\n-then\n-  # On Solaris w/ g++ it appears that _XOPEN_SOURCE has to be\n-  # defined precisely as g++ defines it\n-  # Furthermore, on Solaris 10, XPG6 requires the use of a C99\n-  # compiler\n-  case $ac_sys_system/$ac_sys_release in\n-    SunOS/5.8|SunOS/5.9|SunOS/5.10)\n-      AC_DEFINE(_XOPEN_SOURCE, 500, \n-                Define to the level of X/Open that your system supports)\n-      ;;\n-    *)\n-      AC_DEFINE(_XOPEN_SOURCE, 600, \n-                Define to the level of X/Open that your system supports)\n-      ;;\n-  esac\n-\n-  # On Tru64 Unix 4.0F, defining _XOPEN_SOURCE also requires\n-  # definition of _XOPEN_SOURCE_EXTENDED and _POSIX_C_SOURCE, or else\n-  # several APIs are not declared. Since this is also needed in some\n-  # cases for HP-UX, we define it globally.\n-  # except for Solaris 10, where it must not be defined, \n-  # as it implies XPG4.2\n-  case $ac_sys_system/$ac_sys_release in\n-    SunOS/5.10)\n-      ;;\n-    *)\n-      AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1,\n-      \t\tDefine to activate Unix95-and-earlier features)\n-      ;;\n-  esac\n-\n-  AC_DEFINE(_POSIX_C_SOURCE, 200112L, Define to activate features from IEEE Stds 1003.1-2001)\n-  \n-fi\n-\n-#\n-# SGI compilers allow the specification of the both the ABI and the\n-# ISA on the command line.  Depending on the values of these switches,\n-# different and often incompatable code will be generated.\n-#\n-# The SGI_ABI variable can be used to modify the CC and LDFLAGS and\n-# thus supply support for various ABI/ISA combinations.  The MACHDEP\n-# variable is also adjusted.\n-#\n-AC_SUBST(SGI_ABI)\n-if test ! -z \"$SGI_ABI\"\n-then\n-        CC=\"cc $SGI_ABI\"\n-        LDFLAGS=\"$SGI_ABI $LDFLAGS\"\n-        MACHDEP=`echo \"${MACHDEP}${SGI_ABI}\" | sed 's/ *//g'`\n-fi\n-AC_MSG_RESULT($MACHDEP)\n-\n-# And add extra plat-mac for darwin\n-AC_SUBST(EXTRAPLATDIR)\n-AC_SUBST(EXTRAMACHDEPPATH)\n-AC_MSG_CHECKING(EXTRAPLATDIR)\n-if test -z \"$EXTRAPLATDIR\"\n-then\n-\tcase $MACHDEP in\n-\tdarwin)\t\n-\t\tEXTRAPLATDIR=\"\\$(PLATMACDIRS)\"\n-\t\tEXTRAMACHDEPPATH=\"\\$(PLATMACPATH)\"\n-\t\t;;\n-\t*) \n-\t\tEXTRAPLATDIR=\"\"\n-\t\tEXTRAMACHDEPPATH=\"\"\n-\t\t;;\n-\tesac\n-fi\n-AC_MSG_RESULT($EXTRAPLATDIR)\n-\n-# Record the configure-time value of MACOSX_DEPLOYMENT_TARGET,\n-# it may influence the way we can build extensions, so distutils\n-# needs to check it\n-AC_SUBST(CONFIGURE_MACOSX_DEPLOYMENT_TARGET)\n-AC_SUBST(EXPORT_MACOSX_DEPLOYMENT_TARGET)\n-CONFIGURE_MACOSX_DEPLOYMENT_TARGET=\n-EXPORT_MACOSX_DEPLOYMENT_TARGET='#'\n-\n-# Check for unsupported systems\n-case $ac_sys_system/$ac_sys_release in\n-Linux*/1*)\n-   echo This system \\($ac_sys_system/$ac_sys_release\\) is no longer supported.\n-   echo See README for details.\n-   exit 1;;\n-esac\n-\n-case $MACHDEP in\n-bsdos*)\n-    case $CC in\n-    gcc) CC=\"$CC -D_HAVE_BSDI\";;\n-    esac;;\n-esac\n-\n-case $ac_sys_system in\n-hp*|HP*)\n-    case $CC in\n-    cc|*/cc) CC=\"$CC -Ae\";;\n-    esac;;\n-Monterey*)\n-    case $CC in\n-    cc) CC=\"$CC -Wl,-Bexport\";;\n-    esac;;\n-SunOS*)\n-    # Some functions have a prototype only with that define, e.g. confstr\n-    AC_DEFINE(__EXTENSIONS__, 1, [Defined on Solaris to see additional function prototypes.])\n-    ;;\n-esac\n-\n-\n-# LDLIBRARY is the name of the library to link against (as opposed to the\n-# name of the library into which to insert object files). BLDLIBRARY is also\n-# the library to link against, usually. On Mac OS X frameworks, BLDLIBRARY\n-# is blank as the main program is not linked directly against LDLIBRARY.\n-# LDLIBRARYDIR is the path to LDLIBRARY, which is made in a subdirectory. On\n-# systems without shared libraries, LDLIBRARY is the same as LIBRARY\n-# (defined in the Makefiles). On Cygwin LDLIBRARY is the import library,\n-# DLLLIBRARY is the shared (i.e., DLL) library.\n-# \n-# RUNSHARED is used to run shared python without installed libraries\n-#\n-# INSTSONAME is the name of the shared library that will be use to install\n-# on the system - some systems like version suffix, others don't\n-AC_SUBST(LDLIBRARY)\n-AC_SUBST(DLLLIBRARY)\n-AC_SUBST(BLDLIBRARY)\n-AC_SUBST(LDLIBRARYDIR)\n-AC_SUBST(INSTSONAME)\n-AC_SUBST(RUNSHARED)\n-LDLIBRARY=\"$LIBRARY\"\n-BLDLIBRARY='$(LDLIBRARY)'\n-INSTSONAME='$(LDLIBRARY)'\n-DLLLIBRARY=''\n-LDLIBRARYDIR=''\n-RUNSHARED=''\n-\n-AC_MSG_CHECKING(LDLIBRARY)\n-\n-# Other platforms follow\n-if test $enable_shared = \"yes\"; then\n-  AC_DEFINE(Py_ENABLE_SHARED, 1, [Defined if Python is built as a shared library.])\n-  case $ac_sys_system in\n-    BeOS*)\n-          LDLIBRARY='libpython$(VERSION).so'\n-          ;;\n-    CYGWIN*)\n-          LDLIBRARY='libpython$(VERSION).dll.a'\n-          DLLLIBRARY='libpython$(VERSION).dll'\n-          ;;\n-    SunOS*)\n-\t  LDLIBRARY='libpython$(VERSION).so'\n-\t  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(VERSION)'\n-\t  RUNSHARED=LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}\n-\t  INSTSONAME=\"$LDLIBRARY\".$SOVERSION\n-          ;;\n-    Linux*|GNU*|NetBSD*|FreeBSD*|DragonFly*)\n-\t  LDLIBRARY='libpython$(VERSION).so'\n-\t  BLDLIBRARY='-L. -lpython$(VERSION)'\n-\t  RUNSHARED=LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}\n-\t  case $ac_sys_system in\n-\t      FreeBSD*)\n-\t\tSOVERSION=`echo $SOVERSION|cut -d \".\" -f 1`\n-\t\t;;\n-\t  esac\n-\t  INSTSONAME=\"$LDLIBRARY\".$SOVERSION\n-\t  ;;\n-    hp*|HP*)\n-\t  case `uname -m` in\n-\t\tia64)\n-\t\t\tLDLIBRARY='libpython$(VERSION).so'\n-\t\t\t;;\n-\t\t*)\n-\t\t\tLDLIBRARY='libpython$(VERSION).sl'\n-\t\t\t;;\n-\t  esac\n-\t  BLDLIBRARY='-Wl,+b,$(LIBDIR) -L. -lpython$(VERSION)'\n-\t  RUNSHARED=SHLIB_PATH=`pwd`:${SHLIB_PATH}\n-\t  ;;\n-    OSF*)\n-\t  LDLIBRARY='libpython$(VERSION).so'\n-\t  BLDLIBRARY='-rpath $(LIBDIR) -L. -lpython$(VERSION)'\n-\t  RUNSHARED=LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}\n-\t  ;;\n-    atheos*)\n-\t  LDLIBRARY='libpython$(VERSION).so'\n-\t  BLDLIBRARY='-L. -lpython$(VERSION)'\n-\t  RUNSHARED=DLL_PATH=`pwd`:${DLL_PATH:-/atheos/sys/libs:/atheos/autolnk/lib}\n-\t  ;;\n-  esac\n-else # shared is disabled\n-  case $ac_sys_system in\n-    CYGWIN*)\n-          BLDLIBRARY='$(LIBRARY)'\n-          LDLIBRARY='libpython$(VERSION).dll.a'\n-          ;;\n-  esac\n-fi\n-\n-AC_MSG_RESULT($LDLIBRARY)\n-\n-AC_PROG_RANLIB\n-AC_SUBST(AR)\n-AC_CHECK_PROGS(AR, ar aal, ar)\n-\n-case $MACHDEP in\n-bsdos*|hp*|HP*)\n-\t# install -d does not work on BSDI or HP-UX\n-\tif test -z \"$INSTALL\"\n-\tthen\n-\t\tINSTALL=\"${srcdir}/install-sh -c\"\n-\tfi\n-esac\n-AC_PROG_INSTALL\n-\n-# Not every filesystem supports hard links\n-AC_SUBST(LN)\n-if test -z \"$LN\" ; then\n-\tcase $ac_sys_system in\n-\t\tBeOS*) LN=\"ln -s\";;\n-\t\tCYGWIN*) LN=\"ln -s\";;\n-\t\tatheos*) LN=\"ln -s\";;\n-\t\t*) LN=ln;;\n-\tesac\n-fi\n-\n-# XXX Shouldn't the code above that fiddles with BASECFLAGS and OPT be\n-# merged with this chunk of code?\n-\n-# Optimizer/debugger flags\n-# ------------------------\n-# (The following bit of code is complicated enough - please keep things\n-# indented properly.  Just pretend you're editing Python code. ;-)\n-\n-# There are two parallel sets of case statements below, one that checks to\n-# see if OPT was set and one that does BASECFLAGS setting based upon\n-# compiler and platform.  BASECFLAGS tweaks need to be made even if the\n-# user set OPT.\n-\n-# tweak OPT based on compiler and platform, only if the user didn't set\n-# it on the command line\n-AC_SUBST(OPT)\n-if test -z \"$OPT\"\n-then\n-    case $GCC in\n-    yes)\n-        if test \"$CC\" != 'g++' ; then\n-\t    STRICT_PROTO=\"-Wstrict-prototypes\"\n-\tfi\n-\tcase $ac_cv_prog_cc_g in\n-\tyes)\n-\t    if test \"$Py_DEBUG\" = 'true' ; then\n-\t\t# Optimization messes up debuggers, so turn it off for\n-\t\t# debug builds.\n-\t\tOPT=\"-g -Wall $STRICT_PROTO\"\n-\t    else\n-\t\tOPT=\"-g -O3 -Wall $STRICT_PROTO\"\n-\t    fi\n-\t    ;;\n-\t*)\n-\t    OPT=\"-O3 -Wall $STRICT_PROTO\"\n-\t    ;;\n-\tesac\n-\tcase $ac_sys_system in\n-\t    SCO_SV*) OPT=\"$OPT -m486 -DSCO5\"\n-\t    ;;\n-        esac\n-\t;;\n-\n-    *)\n-\tOPT=\"-O\"\n-\t;;\n-    esac\n-\n-    # The current (beta) Monterey compiler dies with optimizations\n-    # XXX what is Monterey? Does it still die w/ -O? Can we get rid of this?\n-    case $ac_sys_system in\n-\tMonterey*)\n-\t    OPT=\"\"\n-\t    ;;\n-    esac\n-\n-fi\n-\n-AC_SUBST(BASECFLAGS)\n-# tweak BASECFLAGS based on compiler and platform\n-case $GCC in\n-yes)\n-    # Python violates C99 rules, by casting between incompatible\n-    # pointer types. GCC may generate bad code as a result of that,\n-    # so use -fno-strict-aliasing if supported.\n-    AC_MSG_CHECKING(whether $CC accepts -fno-strict-aliasing)\n-     ac_save_cc=\"$CC\"\n-     CC=\"$CC -fno-strict-aliasing\"\n-     AC_TRY_RUN([int main() { return 0; }],\n-     ac_cv_no_strict_aliasing_ok=yes,\n-     ac_cv_no_strict_aliasing_ok=no,\n-     ac_cv_no_strict_aliasing_ok=no)\n-     CC=\"$ac_save_cc\"\n-    AC_MSG_RESULT($ac_cv_no_strict_aliasing_ok)\n-    if test $ac_cv_no_strict_aliasing_ok = yes\n-    then\n-      BASECFLAGS=\"$BASECFLAGS -fno-strict-aliasing\"\n-    fi\n-    case $ac_sys_system in\n-\tSCO_SV*)\n-\t    BASECFLAGS=\"$BASECFLAGS -m486 -DSCO5\"\n-\t    ;;\n-\t# is there any other compiler on Darwin besides gcc?\n-\tDarwin*)\n-\t    BASECFLAGS=\"$BASECFLAGS -Wno-long-double -no-cpp-precomp -mno-fused-madd\"\n-\t    if test \"${enable_universalsdk}\"; then\n-\t\tBASECFLAGS=\"-arch ppc -arch i386 -isysroot ${UNIVERSALSDK} ${BASECFLAGS}\"\n-\t    fi\n-\n-\t    ;;\n-\tOSF*)\n-\t    BASECFLAGS=\"$BASECFLAGS -mieee\"\n-\t    ;;\n-    esac\n-    ;;\n-\n-*)\n-    case $ac_sys_system in\n-    OpenUNIX*|UnixWare*)\n-\tBASECFLAGS=\"$BASECFLAGS -K pentium,host,inline,loop_unroll,alloca \"\n-\t;;\n-    OSF*)\n-\tBASECFLAGS=\"$BASECFLAGS -ieee -std\"\n-    \t;;\n-    SCO_SV*)\n-\tBASECFLAGS=\"$BASECFLAGS -belf -Ki486 -DSCO5\"\n-\t;;\n-    esac\n-    ;;\n-esac\n-\n-if test \"$Py_DEBUG\" = 'true'; then\n-  :\n-else\n-  OPT=\"-DNDEBUG $OPT\"\n-fi\n-\n-if test \"$ac_arch_flags\"\n-then\n-\tBASECFLAGS=\"$BASECFLAGS $ac_arch_flags\"\n-fi\n-\n-# disable check for icc since it seems to pass, but generates a warning\n-if test \"$CC\" = icc\n-then\n-  ac_cv_opt_olimit_ok=no\n-fi\n-\n-AC_MSG_CHECKING(whether $CC accepts -OPT:Olimit=0)\n-AC_CACHE_VAL(ac_cv_opt_olimit_ok,\n-[ac_save_cc=\"$CC\"\n-CC=\"$CC -OPT:Olimit=0\"\n-AC_TRY_RUN([int main() { return 0; }],\n-  ac_cv_opt_olimit_ok=yes,\n-  ac_cv_opt_olimit_ok=no,\n-  ac_cv_opt_olimit_ok=no)\n-CC=\"$ac_save_cc\"])\n-AC_MSG_RESULT($ac_cv_opt_olimit_ok)\n-if test $ac_cv_opt_olimit_ok = yes; then\n-    case $ac_sys_system in\n-\t# XXX is this branch needed? On MacOSX 10.2.2 the result of the\n-\t# olimit_ok test is \"no\".  Is it \"yes\" in some other Darwin-esque\n-\t# environment?\n-        Darwin*)\n-\t    ;;\n-        *)\n-\t    BASECFLAGS=\"$BASECFLAGS -OPT:Olimit=0\"\n-\t    ;;\n-    esac\n-else\n-  AC_MSG_CHECKING(whether $CC accepts -Olimit 1500)\n-  AC_CACHE_VAL(ac_cv_olimit_ok,\n-  [ac_save_cc=\"$CC\"\n-  CC=\"$CC -Olimit 1500\"\n-  AC_TRY_RUN([int main() { return 0; }],\n-    ac_cv_olimit_ok=yes,\n-    ac_cv_olimit_ok=no,\n-    ac_cv_olimit_ok=no)\n-  CC=\"$ac_save_cc\"])\n-  AC_MSG_RESULT($ac_cv_olimit_ok)\n-  if test $ac_cv_olimit_ok = yes; then\n-    BASECFLAGS=\"$BASECFLAGS -Olimit 1500\"\n-  fi\n-fi\n-\n # Check whether GCC supports PyArg_ParseTuple format\n if test \"$GCC\" = \"yes\"\n then\n@@ -515,7 +57,6 @@\n dnl AC_MSG_RESULT($cpp_type)\n \n # checks for header files\n-AC_HEADER_STDC\n AC_CHECK_HEADERS(asm/types.h conio.h curses.h direct.h dlfcn.h errno.h \\\n fcntl.h grp.h \\\n io.h langinfo.h libintl.h ncurses.h poll.h process.h \\\n@@ -743,20 +284,6 @@\n     LIBTOOL_CRUFT=$LIBTOOL_CRUFT' -compatibility_version $(VERSION) -current_version $(VERSION)';;\n esac\n \n-AC_MSG_CHECKING(for --enable-framework)\n-if test \"$enable_framework\"\n-then\n-\tBASECFLAGS=\"$BASECFLAGS -fno-common -dynamic\"\n-\t# -F. is needed to allow linking to the framework while \n-\t# in the build location.\n-\tAC_DEFINE(WITH_NEXT_FRAMEWORK, 1, \n-         [Define if you want to produce an OpenStep/Rhapsody framework\n-         (shared library plus accessory files).])\n-\tAC_MSG_RESULT(yes)\n-else\n-\tAC_MSG_RESULT(no)\n-fi\n-\n AC_MSG_CHECKING(for dyld)\n case $ac_sys_system/$ac_sys_release in\n   Darwin/*)\n@@ -805,118 +332,6 @@\n \tsleep 10\n fi\n AC_MSG_RESULT($SO)\n-AC_DEFINE_UNQUOTED(SHLIB_EXT, \"$SO\", [Define this to be extension of shared libraries (including the dot!).])\n-# LDSHARED is the ld *command* used to create shared library\n-# -- \"cc -G\" on SunOS 5.x, \"ld -shared\" on IRIX 5\n-# (Shared libraries in this instance are shared modules to be loaded into\n-# Python, as opposed to building Python itself as a shared library.)\n-AC_MSG_CHECKING(LDSHARED)\n-if test -z \"$LDSHARED\"\n-then\n-\tcase $ac_sys_system/$ac_sys_release in\n-\tAIX*)\n-\t\tBLDSHARED=\"\\$(srcdir)/lib/python/Modules/ld_so_aix \\$(CC) -bI:lib/python/Modules/python.exp\"\n-\t\tLDSHARED=\"\\$(BINLIBDEST)/config/ld_so_aix \\$(CC) -bI:\\$(BINLIBDEST)/config/python.exp\"\n-\t\t;;\n-\tBeOS*)\n-\t\tBLDSHARED=\"\\$(srcdir)/lib/python/Modules/ld_so_beos $LDLIBRARY\"\n-\t\tLDSHARED=\"\\$(BINLIBDEST)/config/ld_so_beos \\$(LIBDIR)/$LDLIBRARY\"\n-\t\t;;\n-\tIRIX/5*) LDSHARED=\"ld -shared\";;\n-\tIRIX*/6*) LDSHARED=\"ld ${SGI_ABI} -shared -all\";;\n-\tSunOS/5*) \n-\t\tif test \"$GCC\" = \"yes\"\n-\t\tthen LDSHARED='$(CC) -shared'\n-\t\telse LDSHARED='$(CC) -G';\n-\t\tfi ;;\n-\thp*|HP*) LDSHARED=\"ld -b\";;\n-\tOSF*) LDSHARED=\"ld -shared -expect_unresolved \\\"*\\\"\";;\n-\tDarwin/1.3*)\n-\t\tLDSHARED='$(CC) $(LDFLAGS) -bundle'\n-\t\tif test \"$enable_framework\" ; then\n-\t\t\t# Link against the framework. All externals should be defined.\n-\t\t\tBLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\t\tLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKPREFIX)/$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\telse\n-\t\t\t# No framework. Ignore undefined symbols, assuming they come from Python\n-\t\t\tLDSHARED=\"$LDSHARED -undefined suppress\"\n-\t\tfi ;;\n-\tDarwin/1.4*|Darwin/5.*|Darwin/6.*)\n-\t\tLDSHARED='$(CC) $(LDFLAGS) -bundle'\n-\t\tif test \"$enable_framework\" ; then\n-\t\t\t# Link against the framework. All externals should be defined.\n-\t\t\tBLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\t\tLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKPREFIX)/$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\telse\n-\t\t\t# No framework, use the Python app as bundle-loader\n-\t\t\tBLDSHARED=\"$LDSHARED \"'-bundle_loader $(BUILDPYTHON)'\n-\t\t\tLDSHARED=\"$LDSHARED \"'-bundle_loader $(BINDIR)/python$(VERSION)$(EXE)'\n-\t\tfi ;;\n-\tDarwin/*)\n-\t\t# Use -undefined dynamic_lookup whenever possible (10.3 and later).\n-\t\t# This allows an extension to be used in any Python\n-\t\tcur_target=`sw_vers -productVersion | sed 's/\\(10\\.[[0-9]]*\\).*/\\1/'`\n-\t\tif test ${cur_target} '>' 10.2; then\n-\t\t\tcur_target=10.3\n-\t\tfi\n-\t\tCONFIGURE_MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET-${cur_target}}\n-\t\tEXPORT_MACOSX_DEPLOYMENT_TARGET=''\n-\t\tif test ${MACOSX_DEPLOYMENT_TARGET-${cur_target}} '>' 10.2\n-\t\tthen\n-\t\t\tif test \"${enable_universalsdk}\"; then\n-\t\t\t\tLDFLAGS=\"-arch i386 -arch ppc -isysroot ${UNIVERSALSDK} ${LDFLAGS}\"\n-\t\t\tfi\n-\t\t\tLDSHARED='$(CC) $(LDFLAGS) -bundle -undefined dynamic_lookup'\n-\t\t\tBLDSHARED=\"$LDSHARED\"\n-\t\telse\n-\t\t\tLDSHARED='$(CC) $(LDFLAGS) -bundle'\n-\t\t\tif test \"$enable_framework\" ; then\n-\t\t\t\t# Link against the framework. All externals should be defined.\n-\t\t\t\tBLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\t\t\tLDSHARED=\"$LDSHARED \"'$(PYTHONFRAMEWORKPREFIX)/$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'\n-\t\t\telse\n-\t\t\t\t# No framework, use the Python app as bundle-loader\n-\t\t\t\tBLDSHARED=\"$LDSHARED \"'-bundle_loader $(BUILDPYTHON)'\n-\t\t\t\tLDSHARED=\"$LDSHARED \"'-bundle_loader $(BINDIR)/python$(VERSION)$(EXE)'\n-\t\t\tfi\n-\t\tfi\n-\t\t;;\n-\tLinux*|GNU*) LDSHARED='$(CC) -shared';;\n-\tBSD/OS*/4*) LDSHARED=\"gcc -shared\";;\n-\tFreeBSD*)\n-\t\tif [[ \"`$CC -dM -E - \n-#include \n-], void *x=socketpair,\n-  AC_DEFINE(HAVE_SOCKETPAIR, 1, Define if you have the 'socketpair' function.)\n-  AC_MSG_RESULT(yes),\n-  AC_MSG_RESULT(no)\n-)\n-\n # check if sockaddr has sa_len member\n AC_MSG_CHECKING(if sockaddr has sa_len member)\n AC_TRY_COMPILE([#include \n@@ -1744,43 +1132,6 @@\n fi],\n [AC_MSG_RESULT(no)])\n \n-# check for --with-libm=...\n-AC_SUBST(LIBM)\n-case $ac_sys_system in\n-Darwin) ;;\n-BeOS) ;;\n-*) LIBM=-lm\n-esac\n-AC_MSG_CHECKING(for --with-libm=STRING)\n-AC_ARG_WITH(libm,\n-            AC_HELP_STRING(--with-libm=STRING, math library),\n-[\n-if test \"$withval\" = no\n-then LIBM=\n-     AC_MSG_RESULT(force LIBM empty)\n-elif test \"$withval\" != yes\n-then LIBM=$withval\n-     AC_MSG_RESULT(set LIBM=\"$withval\")\n-else AC_MSG_ERROR([proper usage is --with-libm=STRING])\n-fi],\n-[AC_MSG_RESULT(default LIBM=\"$LIBM\")])\n-\n-# check for --with-libc=...\n-AC_SUBST(LIBC)\n-AC_MSG_CHECKING(for --with-libc=STRING)\n-AC_ARG_WITH(libc,\n-            AC_HELP_STRING(--with-libc=STRING, C library),\n-[\n-if test \"$withval\" = no\n-then LIBC=\n-     AC_MSG_RESULT(force LIBC empty)\n-elif test \"$withval\" != yes\n-then LIBC=$withval\n-     AC_MSG_RESULT(set LIBC=\"$withval\")\n-else AC_MSG_ERROR([proper usage is --with-libc=STRING])\n-fi],\n-[AC_MSG_RESULT(default LIBC=\"$LIBC\")])\n-\n # check for hypot() in math library\n LIBS_SAVE=$LIBS\n LIBS=\"$LIBS $LIBM\"\n@@ -2291,13 +1642,6 @@\n #endif\n ])\n \n-AC_SUBST(THREADHEADERS)\n-\n-for h in `(cd $srcdir;echo Python/thread_*.h)`\n-do\n-  THREADHEADERS=\"$THREADHEADERS \\$(srcdir)/$h\"\n-done\n-\n # generate output files\n AC_CONFIG_FILES(lib/python/Modules/Setup.config)\n \n@@ -2307,10 +1651,4 @@\n \tcp $srcdir/lib/python/Modules/Setup.dist lib/python/Modules/Setup\n fi\n \n-echo \"creating lib/python/Modules/Setup.local\"\n-if test ! -f lib/python/Modules/Setup.local\n-then\n-\techo \"# Edit this file for local setup changes\" >lib/python/Modules/Setup.local\n-fi\n-\n AC_DEFINE_UNQUOTED(PLATFORM, $MACHDEP, [Platforms])\n\n=== modified file 'source/lib/python/config.mk'\n--- a/source/lib/python/config.mk\t2007-04-23 20:38:05 +0000\n+++ b/source/lib/python/config.mk\t2007-04-23 22:48:27 +0000\n@@ -1,38 +1,9 @@\n-# Symbols used for using shared libraries\n-SO=\t\t@SO@\n-LDSHARED=\t@LDSHARED@\n-BLDSHARED=\t@BLDSHARED@\n-DESTSHARED=\t$(BINLIBDEST)/lib-dynload\n-\n-# Environment to run shared python without installed libraries\n-RUNSHARED=       @RUNSHARED@\n-\n-# Modes for directories, executables and data files created by the\n-# install process.  Default to user-only-writable for all file types.\n-DIRMODE=\t755\n-EXEMODE=\t755\n-FILEMODE=\t644\n-\n-LIBRARY=\t@LIBRARY@\n-LDLIBRARY=      @LDLIBRARY@\n-BLDLIBRARY=     @BLDLIBRARY@\n-DLLLIBRARY=\t@DLLLIBRARY@\n-LDLIBRARYDIR=   @LDLIBRARYDIR@\n-INSTSONAME=\t@INSTSONAME@\n-\n-\n-# === Definitions added by makesetup ===\n-\n-\n-\n-\n ##########################################################################\n # Grammar\n GRAMMAR_H=\t$(srcdir)/lib/python/Include/graminit.h\n GRAMMAR_C=\t$(srcdir)/lib/python/Python/graminit.c\n GRAMMAR_INPUT=\t$(srcdir)/lib/python/Grammar/Grammar\n \n-\n ##########################################################################\n # Parser\n [SUBSYSTEM::PYTHON_PARSER_HOST]\n@@ -66,7 +37,7 @@\n \n [LIBRARY::PYTHON]\n LDFLAGS = -lm -lutil\n-CFLAGS = -DPy_BUILD_CORE -Ilib/python/Include -Ilib/python -DPYTHONPATH=\":plat-linux2\" -DVERSION=\"2.6\"\n+CFLAGS = -DPy_BUILD_CORE -Ilib/python/Include -Ilib/python -DPYTHONPATH=\":plat-linux2\" -DVERSION=\"2.6\" -DPLATFORM=\"linux2\"\n OBJ_FILES =\t\\\n \t\tPython/getplatform.o \\\n \t\tModules/_typesmodule.o \\\n@@ -181,31 +152,6 @@\n OBJ_FILES = \\\n \t\t\tModules/python.o\n \n-# Build the shared modules\n-sharedmods: $(BUILDPYTHON)\n-\t@case $$MAKEFLAGS in \\\n-\t*-s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \\\n-\t*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \\\n-\tesac\n-\n-# Build static library\n-# avoid long command lines, same as LIBRARY_OBJS\n-$(LIBRARY): $(LIBRARY_OBJS)\n-\t-rm -f $@\n-\t$(AR) cr $@ Modules/getbuildinfo.o\n-\t$(AR) cr $@ Modules/_typesmodule.o\n-\t$(AR) cr $@ $(PARSER_OBJS)\n-\t$(AR) cr $@ $(OBJECT_OBJS)\n-\t$(AR) cr $@ $(PYTHON_OBJS)\n-\t$(AR) cr $@ $(MODULE_OBJS) $(SIGNAL_OBJS)\n-\t$(AR) cr $@ $(MODOBJS)\n-\t$(RANLIB) $@\n-\n-oldsharedmods: $(SHAREDMODS)\n-\n-############################################################################\n-# Special rules for object files\n-\n $(GRAMMAR_H) $(GRAMMAR_C): bin/pgen $(GRAMMAR_INPUT)\n \t\t-bin/pgen $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)\n \n@@ -238,102 +184,3 @@\n \n lib/python/Objects/unicodectype.o:\t$(srcdir)/lib/python/Objects/unicodectype.c \\\n \t\t\t\t$(srcdir)/lib/python/Objects/unicodetype_db.h\n-\n-############################################################################\n-# Header files\n-\n-PYTHON_HEADERS= \\\n-\t\tInclude/Python.h \\\n-\t\tInclude/Python-ast.h \\\n-\t\tInclude/asdl.h \\\n-\t\tInclude/abstract.h \\\n-\t\tInclude/boolobject.h \\\n-\t\tInclude/bufferobject.h \\\n-\t\tInclude/ceval.h \\\n-\t\tInclude/classobject.h \\\n-\t\tInclude/cobject.h \\\n-\t\tInclude/code.h \\\n-\t\tInclude/codecs.h \\\n-\t\tInclude/compile.h \\\n-\t\tInclude/complexobject.h \\\n-\t\tInclude/descrobject.h \\\n-\t\tInclude/dictobject.h \\\n-\t\tInclude/enumobject.h \\\n-\t\tInclude/genobject.h \\\n-\t\tInclude/fileobject.h \\\n-\t\tInclude/floatobject.h \\\n-\t\tInclude/funcobject.h \\\n-\t\tInclude/import.h \\\n-\t\tInclude/intobject.h \\\n-\t\tInclude/intrcheck.h \\\n-\t\tInclude/iterobject.h \\\n-\t\tInclude/listobject.h \\\n-\t\tInclude/longobject.h \\\n-\t\tInclude/methodobject.h \\\n-\t\tInclude/modsupport.h \\\n-\t\tInclude/moduleobject.h \\\n-\t\tInclude/object.h \\\n-\t\tInclude/objimpl.h \\\n-\t\tInclude/parsetok.h \\\n-\t\tInclude/patchlevel.h \\\n-\t\tInclude/pyarena.h \\\n-\t\tInclude/pydebug.h \\\n-\t\tInclude/pyerrors.h \\\n-\t\tInclude/pyfpe.h \\\n-\t\tInclude/pymem.h \\\n-\t\tInclude/pyport.h \\\n-\t\tInclude/pystate.h \\\n-\t\tInclude/pythonrun.h \\\n-\t\tInclude/rangeobject.h \\\n-        Include/setobject.h \\\n-\t\tInclude/sliceobject.h \\\n-\t\tInclude/stringobject.h \\\n-\t\tInclude/structseq.h \\\n-\t\tInclude/structmember.h \\\n-\t\tInclude/symtable.h \\\n-\t\tInclude/sysmodule.h \\\n-\t\tInclude/traceback.h \\\n-\t\tInclude/tupleobject.h \\\n-\t\tInclude/unicodeobject.h \\\n-\t\tInclude/weakrefobject.h \\\n-\t\tpyconfig.h\n-\n-$(LIBRARY_OBJS) $(MODOBJS) Modules/python.o: $(PYTHON_HEADERS)\n-\n-# Install the library\n-PLATDIR=\tplat-$(MACHDEP)\n-EXTRAPLATDIR= @EXTRAPLATDIR@\n-EXTRAMACHDEPPATH=@EXTRAMACHDEPPATH@\n-MACHDEPS=\t$(PLATDIR) $(EXTRAPLATDIR)\n-XMLLIBSUBDIRS=  xml xml/dom xml/etree xml/parsers xml/sax\n-PLATMACDIRS= plat-mac plat-mac/Carbon plat-mac/lib-scriptpackages \\\n-\tplat-mac/lib-scriptpackages/_builtinSuites \\\n-\tplat-mac/lib-scriptpackages/CodeWarrior \\\n-\tplat-mac/lib-scriptpackages/Explorer \\\n-\tplat-mac/lib-scriptpackages/Finder \\\n-\tplat-mac/lib-scriptpackages/Netscape \\\n-\tplat-mac/lib-scriptpackages/StdSuites \\\n-\tplat-mac/lib-scriptpackages/SystemEvents \\\n-\tplat-mac/lib-scriptpackages/Terminal \n-PLATMACPATH=:plat-mac:plat-mac/lib-scriptpackages\n-LIBSUBDIRS=\tlib-tk site-packages test test/output test/data \\\n-\t\ttest/decimaltestdata \\\n-\t\tencodings compiler hotshot \\\n-\t\temail email/mime email/test email/test/data \\\n-\t\tsqlite3 sqlite3/test \\\n-\t\tlogging bsddb bsddb/test csv wsgiref \\\n-\t\tctypes ctypes/test ctypes/macholib idlelib idlelib/Icons \\\n-\t\tdistutils distutils/command distutils/tests $(XMLLIBSUBDIRS) \\\n-\t\tsetuptools setuptools/command setuptools/tests setuptools.egg-info \\\n-\t\tcurses $(MACHDEPS)\n-\n-# Create the PLATDIR source directory, if one wasn't distributed..\n-$(srcdir)/lib/python/Lib/$(PLATDIR):\n-\tmkdir $(srcdir)/lib/python/Lib/$(PLATDIR)\n-\tcp $(srcdir)/Lib/plat-generic/regen $(srcdir)/lib/python/Lib/$(PLATDIR)/regen\n-\texport PATH; PATH=\"`pwd`:$$PATH\"; \\\n-\texport PYTHONPATH; PYTHONPATH=\"`pwd`/Lib\"; \\\n-\texport DYLD_FRAMEWORK_PATH; DYLD_FRAMEWORK_PATH=\"`pwd`\"; \\\n-\texport EXE; EXE=\"$(BUILDEXE)\"; \\\n-\tcd $(srcdir)/Lib/lib/python/$(PLATDIR); ./regen\n-\n\n"}