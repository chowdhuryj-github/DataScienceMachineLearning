{"category": "ham", "to_address": "\"Keith Alan Chamberlain\" <Keith.Chamberlain@colorado.edu>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] A More efficient method?", "body": "This was in error since s3 was not set.  The as.numeric in the calculation\nof s3 can be omitted if its ok to have an integer rather than numeric result\nand in that case its still faster yet.\n\n> set.seed(1)\n> C <- sample(c(\"a\", \"b\"), 1000000, replace = TRUE)\n> system.time({\n+ s0 <- vector(length = length(C))\n+ for(i in seq_along(C)) s0[i] <- if (C[i] == \"a\") 1 else -1\n+ s0\n+ })\n   user  system elapsed\n  21.32    0.02   26.10\n> system.time(s1 <- ifelse(C == \"a\", 1, -1))\n   user  system elapsed\n   2.37    0.26    2.64\n> system.time(s2 <- 2 * (C == \"a\") - 1)\n   user  system elapsed\n   0.32    0.02    0.35\n> system.time({tmp <- C == \"a\"; s3 <- as.numeric(tmp - !tmp)})\n   user  system elapsed\n   0.28    0.02    0.31\n> identical(s0, s1)\n[1] TRUE\n> identical(s0, s2)\n[1] TRUE\n> identical(s0, s3)\n[1] TRUE\n>\n\n\nOn 7/4/07, Gabor Grothendieck  wrote:\n> In thinking about this a bit more I have found a slightly faster one still.\n> See s3.  Also I have added s0, the original solution, to the timings.\n>\n> > set.seed(1)\n> > C <- sample(c(\"a\", \"b\"), 1000000, replace = TRUE)\n> > system.time({\n> + s0 <- vector(length = length(C))\n> + for(i in seq_along(C)) s0[i] <- if (C[i] == \"a\") 1 else -1\n> + s0\n> + })\n>   user  system elapsed\n>  21.75    0.02   25.99\n> > system.time(s1 <- ifelse(C == \"a\", 1, -1))\n>   user  system elapsed\n>   2.32    0.17    2.54\n> > system.time(s2 <- 2 * (C == \"a\") - 1)\n>   user  system elapsed\n>   0.29    0.02    0.32\n> > system.time({tmp <- C == \"a\"; tmp - !tmp})\n>   user  system elapsed\n>   0.21    0.00    0.21\n> > identical(s0, s1)\n> [1] TRUE\n> > identical(s0, s2)\n> [1] TRUE\n> > identical(s0, s3)\n> [1] TRUE\n>\n> On 7/4/07, Gabor Grothendieck  wrote:\n> > Here are two ways.  The second way is more than 10x faster.\n> >\n> > > set.seed(1)\n> > > C <- sample(c(\"a\", \"b\"), 100000, replace = TRUE)\n> > > system.time(s1 <- ifelse(C == \"a\", 1, -1))\n> >   user  system elapsed\n> >   0.37    0.01    0.38\n> > > system.time(s2 <- 2 * (C == \"a\") - 1)\n> >   user  system elapsed\n> >   0.02    0.00    0.02\n> > > identical(s1, s2)\n> > [1] TRUE\n> >\n> > On 7/4/07, Keith Alan Chamberlain  wrote:\n> > > Dear Rhelpers,\n> > >\n> > > Is there a faster way than below to set a vector based on values from\n> > > another vector? I'd like to call a pre-existing function for this, but one\n> > > which can also handle an arbitrarily large number of categories. Any ideas?\n> > >\n> > > Cat=c('a','a','a','b','b','b','a','a','b')      # Categorical variable\n> > > C1=vector(length=length(Cat))   # New vector for numeric values\n> > >\n> > > # Cycle through each column and set C1 to corresponding value of Cat.\n> > > for(i in 1:length(C1)){\n> > >        if(Cat[i]=='a') C1[i]=-1 else C1[i]=1\n> > > }\n> > >\n> > > C1\n> > > [1] -1 -1 -1  1  1  1 -1 -1  1\n> > > Cat\n> > > [1] \"a\" \"a\" \"a\" \"b\" \"b\" \"b\" \"a\" \"a\" \"b\"\n> > >\n> > > Sincerely,\n> > > KeithC.\n> > > Psych Undergrad, CU Boulder (US)\n> > > RE McNair Scholar\n> > >\n> > > ______________________________________________\n> > > R-help@stat.math.ethz.ch mailing list\n> > > https://stat.ethz.ch/mailman/listinfo/r-help\n> > > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> > > and provide commented, minimal, self-contained, reproducible code.\n> > >\n> >\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}