{"category": "ham", "to_address": "\"David Lindelof\" <lindelof@ieee.org>", "from_address": "\"Gabor Grothendieck\" <ggrothendieck@gmail.com>", "subject": "Re: [R] Passing a missing argument", "body": "First define a function which is like list() except it ignores all\nNULL components.   Using that we can write:\n\n\nlist.wo.null <- function(...) list(...)[!sapply(list(...), is.null)]\n\nlibrary(lattice)\nmyhist <- function(limits) do.call(\"histogram\", list.wo.null(~ height, singer,\n\tendpoints = if (!missing(limits)) limits))\n}\n\nmyhist()\nmyhist(c(0, 100))\n\n\n\nOn 5/27/07, David Lindelof  wrote:\n> Dear userRs,\n>\n> Is there a way to explicitly set an argument to a function call as\n> missing?\n>\n> E.g.,\n>\n> histogram(foo,\n>          bar,\n>          endpoints=ifelse(!missing(limits),limits,NA/NULL/whatever)))\n>\n> In this call I want to set a value to the endpoints argument only if the\n> `limits' variable has been set, and leave the defaults otherwise.\n>\n> The only way I could do it is thus:\n>\n> if (!missing(limits)) histogram(foo,bar,endpoints=limits)\n> else histogram(foo,bar)\n>\n> Is there a cleaner way?\n>\n> Kind regards,\n>\n> David Lindelof\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}