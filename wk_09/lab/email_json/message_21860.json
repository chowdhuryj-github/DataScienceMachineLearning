{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jelmer@samba.org", "subject": "svn commit: samba r22642 - in branches/SAMBA_4_0/source/lib/ldb: .\n\texternal include", "body": "Author: jelmer\nDate: 2007-05-02 22:05:48 +0000 (Wed, 02 May 2007)\nNew Revision: 22642\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22642\n\nLog:\nAllow standalone build to work without tdb or talloc checked out, but \nprovided by the system.\n\nAdded:\n   branches/SAMBA_4_0/source/lib/ldb/external/\n   branches/SAMBA_4_0/source/lib/ldb/external/libpopt.m4\n   branches/SAMBA_4_0/source/lib/ldb/external/libtalloc.m4\n   branches/SAMBA_4_0/source/lib/ldb/external/libtdb.m4\n   branches/SAMBA_4_0/source/lib/ldb/external/pkg.m4\nModified:\n   branches/SAMBA_4_0/source/lib/ldb/autogen.sh\n   branches/SAMBA_4_0/source/lib/ldb/include/includes.h\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/ldb/autogen.sh\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/autogen.sh\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/autogen.sh\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -7,6 +7,11 @@\n IPATHS=\"$IPATHS -I lib/talloc -I talloc -I ../talloc\"\n IPATHS=\"$IPATHS -I lib/tdb -I tdb -I ../tdb\"\n IPATHS=\"$IPATHS -I lib/popt -I popt -I ../popt\"\n+\n+# Always keep this listed last, so the built-in versions of tdb and talloc\n+# get used if available.\n+IPATHS=\"$IPATHS -I ./external\"\n+\n autoheader $IPATHS || exit 1\n autoconf $IPATHS || exit 1\n \n\nAdded: branches/SAMBA_4_0/source/lib/ldb/external/libpopt.m4\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/external/libpopt.m4\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/external/libpopt.m4\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -0,0 +1,7 @@\n+POPT_OBJ=\"\"\n+AC_SUBST(POPT_OBJ)\n+AC_SUBST(POPT_LIBS)\n+AC_SUBST(POPT_CFLAGS)\n+\n+AC_CHECK_HEADERS(popt.h)\n+AC_CHECK_LIB(popt, poptGetContext, [ POPT_LIBS=\"-lpopt\" ])\n\nAdded: branches/SAMBA_4_0/source/lib/ldb/external/libtalloc.m4\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/external/libtalloc.m4\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/external/libtalloc.m4\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -0,0 +1,4 @@\n+m4_include(pkg.m4)\n+TALLOC_OBJ=\"\"\n+AC_SUBST(TALLOC_OBJ)\n+PKG_CHECK_MODULES(TALLOC, talloc)\n\nAdded: branches/SAMBA_4_0/source/lib/ldb/external/libtdb.m4\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/external/libtdb.m4\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/external/libtdb.m4\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -0,0 +1,4 @@\n+m4_include(pkg.m4)\n+TDB_OBJ=\"\"\n+AC_SUBST(TDB_OBJ)\n+PKG_CHECK_MODULES(TDB, tdb >= 1.1.0)\n\nAdded: branches/SAMBA_4_0/source/lib/ldb/external/pkg.m4\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/external/pkg.m4\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/external/pkg.m4\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -0,0 +1,157 @@\n+# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-\n+# \n+# Copyright \u00a9 2004 Scott James Remnant .\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that program.\n+\n+# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n+# ----------------------------------\n+AC_DEFUN([PKG_PROG_PKG_CONFIG],\n+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n+m4_pattern_allow([^PKG_CONFIG(_PATH)?$])\n+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl\n+if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n+\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n+fi\n+if test -n \"$PKG_CONFIG\"; then\n+\t_pkg_min_version=m4_default([$1], [0.9.0])\n+\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n+\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n+\t\tAC_MSG_RESULT([yes])\n+\telse\n+\t\tAC_MSG_RESULT([no])\n+\t\tPKG_CONFIG=\"\"\n+\tfi\n+\t\t\n+fi[]dnl\n+])# PKG_PROG_PKG_CONFIG\n+\n+# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# Check to see whether a particular set of modules exists.  Similar\n+# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n+#\n+#\n+# Similar to PKG_CHECK_MODULES, make sure that the first instance of\n+# this or PKG_CHECK_MODULES is called, or make sure to call\n+# PKG_CHECK_EXISTS manually\n+# --------------------------------------------------------------\n+AC_DEFUN([PKG_CHECK_EXISTS],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+if test -n \"$PKG_CONFIG\" && \\\n+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n+  m4_ifval([$2], [$2], [:])\n+m4_ifvaln([$3], [else\n+  $3])dnl\n+fi])\n+\n+\n+# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n+# ---------------------------------------------\n+m4_define([_PKG_CONFIG],\n+[if test -n \"$PKG_CONFIG\"; then\n+    if test -n \"$$1\"; then\n+        pkg_cv_[]$1=\"$$1\"\n+    else\n+        PKG_CHECK_EXISTS([$3],\n+                         [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`],\n+\t\t\t [pkg_failed=yes])\n+    fi\n+else\n+\tpkg_failed=untried\n+fi[]dnl\n+])# _PKG_CONFIG\n+\n+# _PKG_SHORT_ERRORS_SUPPORTED\n+# -----------------------------\n+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n+        _pkg_short_errors_supported=yes\n+else\n+        _pkg_short_errors_supported=no\n+fi[]dnl\n+])# _PKG_SHORT_ERRORS_SUPPORTED\n+\n+\n+# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n+# [ACTION-IF-NOT-FOUND])\n+#\n+#\n+# Note that if there is a possibility the first call to\n+# PKG_CHECK_MODULES might not happen, you should be sure to include an\n+# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n+#\n+#\n+# --------------------------------------------------------------\n+AC_DEFUN([PKG_CHECK_MODULES],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n+\n+pkg_failed=no\n+AC_MSG_CHECKING([for $1])\n+\n+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n+_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n+\n+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n+and $1[]_LIBS to avoid the need to call pkg-config.\n+See the pkg-config man page for more details.])\n+\n+if test $pkg_failed = yes; then\n+        _PKG_SHORT_ERRORS_SUPPORTED\n+        if test $_pkg_short_errors_supported = yes; then\n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors \"$2\"`\n+        else \n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"$2\"`\n+        fi\n+\t# Put the nasty error message in config.log where it belongs\n+\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n+\n+\tifelse([$4], , [AC_MSG_ERROR(dnl\n+[Package requirements ($2) were not met:\n+\n+$$1_PKG_ERRORS\n+\n+Consider adjusting the PKG_CONFIG_PATH environment variable if you\n+installed software in a non-standard prefix.\n+\n+_PKG_TEXT\n+])],\n+\t\t[AC_MSG_RESULT([no])\n+                $4])\n+elif test $pkg_failed = untried; then\n+\tifelse([$4], , [AC_MSG_FAILURE(dnl\n+[The pkg-config script could not be found or is too old.  Make sure it\n+is in your PATH or set the PKG_CONFIG environment variable to the full\n+path to pkg-config.\n+\n+_PKG_TEXT\n+\n+To get pkg-config, see .])],\n+\t\t[$4])\n+else\n+\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n+\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n+        AC_MSG_RESULT([yes])\n+\tifelse([$3], , :, [$3])\n+fi[]dnl\n+])# PKG_CHECK_MODULES\n\nModified: branches/SAMBA_4_0/source/lib/ldb/include/includes.h\n===================================================================\n--- branches/SAMBA_4_0/source/lib/ldb/include/includes.h\t2007-05-02 18:10:57 UTC (rev 22641)\n+++ branches/SAMBA_4_0/source/lib/ldb/include/includes.h\t2007-05-02 22:05:48 UTC (rev 22642)\n@@ -20,7 +20,7 @@\n #include \"system/filesys.h\"\n #include \"system/network.h\"\n #include \"system/time.h\"\n-#include \"talloc/talloc.h\"\n+#include \"talloc.h\"\n #include \"ldb.h\"\n #include \"ldb_errors.h\"\n #include \"ldb_private.h\"\n\n"}