{"category": "ham", "to_address": "Allison Randal <allison@perl.org>", "from_address": "Andy Lester <andy@petdance.com>", "subject": "Re: memcpy", "body": "\nOn Jun 21, 2007, at 1:39 AM, Allison Randal wrote:\n\n> Andy Lester wrote:\n>> I guess I don't see the need to document a standard C behavior  \n>> with a macro.\n>\n> If you had read all the way through the message, you would see that  \n> the biggest benefit is the ability to hang debugging hooks off the  \n> macro.\n> We have a number of these kinds of debugging hooks throughout  \n> Parrot (src/gc/memory.c is a good example).\n\nNo, I saw that, too.  My point was just about documentation.\n\nIf we're set on using a macro for doing struct copies, then it needs  \nto handle copying multiple structs, since there a bunch of places  \nwe're doing memcpy()s with math for multiple structs.  I'll work on  \nthat today.  Getting rid of the math may be the best reason to use a  \nmacro yet.\n\nAndy\n\n--\nAndy Lester => andy@petdance.com => www.petdance.com => AIM:petdance\n\n\n\n\n"}