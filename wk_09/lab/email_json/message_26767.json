{"category": "ham", "to_address": "Martin Morgan <mtmorgan@fhcrc.org>", "from_address": "ml-r-help@epigenomics.com", "subject": "Re: [R] Unit Testing Frameworks: summary and brief discussion", "body": "Martin Morgan wrote:\n> Oops, taking a look at the unit tests in RUnit, I see that specifying\n> 'where=.GlobalEnv' is what I had been missing.\n> \n> testCreateClass <- function() {\n>     setClass(\"A\", contains=\"numeric\", where=.GlobalEnv)\n>     a=new(\"A\")\n>     checkTrue(validObject(a))\n>     removeClass(\"A\", where=.GlobalEnv)\n>     checkException(new(\"A\"))\n> }\n>\nthis is necessary as the test code file is sourced and thus evaluated \nfrom the test runner residing inside RUnits namespace. Thus the setClass \ncall is evaluated inside RUnits namespace which will fail unless you \nspecify the call to take place in .GlobalEnv.\n\none comment to our example: it has paid off to use\non.exit(removeClass(\"A\", where=.GlobalEnv))\nand likewise for removeMethod\nto ensure a failing test case will leave no temporary class definition \naround. Otherwise this could side effect on subsequent test cases and \nyou'd be looking for errors in the wrong place. Currently RUnit does try \nto preserve the workspace as it is before each test case execution - but \nthis does not hold for S4 classes and methods defined in test cases.\n\nRegards,\n\n   Matthias\n\n> Executing test function testCreateClass  ...  done successfully.\n> \n> RUNIT TEST PROTOCOL -- Wed May  9 11:11:27 2007 \n> *********************************************** \n> Number of test functions: 1 \n> Number of errors: 0 \n> Number of failures: 0 \n> \n> Sorry for the noise. Martin\n> \n> Martin Morgan  writes:\n> \n>> ml-r-help@epigenomics.com writes:\n>>\n>>> anthony.rossini@novartis.com wrote:\n>>> [...]\n>>>> ============= From Seth Falcon:\n>>>>   1. At last check, you cannot create classes in unit test code and\n>>>>      this makes it difficult to test some types of functionality.  I'm\n>>>>      really not sure to what extent this is RUnit's fault as opposed\n>>>>      to limitation of the S4 implemenation in R.\n>>> I'd be very interested to hear what problems you experienced. If you \n>>> have any example ready I'd be happy to take a look at it.\n>>> So far we have not observed (severe) problems to create S4 classes and \n>>> test them in unit test code. We actually use RUnit mainly on S4 classes \n>>> and methods. There are even some very simple checks in RUnits own test \n>>> cases which create and use S4 classes. For example in tests/runitRunit.r\n>>> in the source package.\n>> RUnit has been great for me, helping to develop a more rigorous\n>> programming approach and gaining confidence that my refactoring\n>> doesn't (unintentionally) break the established contract.\n>>\n>> One of the strengths of unit tests -- reproducible and expressible in\n>> the way that language sometimes is not:\n>>\n>> testCreateClass <- function() {\n>>     setClass(\"A\", contains=\"numeric\")\n>>     checkTrue(TRUE)\n>> }\n>>\n>>\n>> RUNIT TEST PROTOCOL -- Wed May  9 10:36:53 2007 \n>> *********************************************** \n>> Number of test functions: 1 \n>> Number of errors: 1 \n>> Number of failures: 0 \n>>\n>>  \n>> 1 Test Suite : \n>> CreateClass_test - 1 test function, 1 error, 0 failures\n>> ERROR in testCreateClass: Error in assign(mname, def, where) : cannot add bindings to a locked environment\n>>\n>>> sessionInfo()\n>> R version 2.6.0 Under development (unstable) (2007-05-07 r41468) \n>> x86_64-unknown-linux-gnu \n>>\n>> locale:\n>> LC_CTYPE=en_US;LC_NUMERIC=C;LC_TIME=en_US;LC_COLLATE=en_US;LC_MONETARY=en_US;LC_MESSAGES=en_US;LC_PAPER=en_US;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=en_US;LC_IDENTIFICATION=C\n>>\n>> attached base packages:\n>> [1] \"tools\"     \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\" \n>> [7] \"methods\"   \"base\"     \n>>\n>> other attached packages:\n>>    RUnit\n>> \"0.4.15\"\n>>\n>> -- \n>> Martin Morgan\n>> Bioconductor / Computational Biology\n>> http://bioconductor.org\n>>\n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n> \n\n\n-- \nMatthias Burger                     Project Manager/ Biostatistician\nEpigenomics AG    Kleine Praesidentenstr. 1    10178 Berlin, Germany\nphone:+49-30-24345-371                          fax:+49-30-24345-555\nhttp://www.epigenomics.com           matthias.burger@epigenomics.com\n--\nEpigenomics AG Berlin           Amtsgericht Charlottenburg HRB 75861\nVorstand:   Geert Nygaard (CEO/Vorsitzender),  Dr. Kurt Berlin (CSO)\n               Oliver Schacht PhD (CFO),  Christian Piepenbrock (COO)\nAufsichtsrat:   Prof. Dr. Dr. hc. Rolf Krebs (Chairman/Vorsitzender)\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}