{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "(Ted Harding) <ted.harding@nessie.mcc.ac.uk>", "subject": "Re: [R] Simulation using parts of density function", "body": "On 02-May-07 07:45:48, Prof Brian Ripley wrote:\n> Please do not send everything twice: you are using R-help in both the\n> To: \n> and Cc: fields.\n> \n> I disagree with Ted: it _is_ much easier to create a generator for this\n> purpose.\n> \n> Consider\n> \n> rtgamma <- function(n, ..., tr = log(5000000))\n> {\n>      p <- pgamma(tr, ...)\n>      qgamma(p*runif(n), ...)\n> }\n> \n> as inversion (especially at C level) is plenty fast enough.\n\nOf course ... !!\n\nJust to explain Brian's solution above:\n\nSince pgamma(rgamma(...),...) is uniformly distributed on (0,1),\nif rgamma is truncated to (0,tr) them pgamma(rgamma) will be\ntruncated to (0,pgamma(tr)), and hence uniformly distributed\non this range.\n\nBest wishes,\nTed.\n\n\n\n--------------------------------------------------------------------\nE-Mail: (Ted Harding) \nFax-to-email: +44 (0)870 094 0861\nDate: 02-May-07                                       Time: 09:16:08\n------------------------------ XFMail ------------------------------\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}