{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r23613 - in branches/SAMBA_3_0_RELEASE: .\n\tsource/utils", "body": "Author: jerry\nDate: 2007-06-26 19:23:07 +0000 (Tue, 26 Jun 2007)\nNew Revision: 23613\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23613\n\nLog:\npull in net idmap change from the 3.0.25 tree\nModified:\n   branches/SAMBA_3_0_RELEASE/WHATSNEW.txt\n   branches/SAMBA_3_0_RELEASE/source/utils/net_idmap.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_RELEASE/WHATSNEW.txt\n===================================================================\n--- branches/SAMBA_3_0_RELEASE/WHATSNEW.txt\t2007-06-26 19:15:26 UTC (rev 23612)\n+++ branches/SAMBA_3_0_RELEASE/WHATSNEW.txt\t2007-06-26 19:23:07 UTC (rev 23613)\n@@ -76,8 +76,10 @@\n o   Volker Lendecke \n     * Fix record state check error when reviewing entries in nmbd's\n       WINS database.\n+    * Revert 'net idmap dump' behavior to 3.0.24 behavior to fix change \n+      in command line syntax that would overwrite winbindd_idmap.tdb.\n+      \n \n-\n o   Justin Maggard \n     * Don't expire a password if it's explicitly set as ACB_PWNOTREQ.\n \n\nModified: branches/SAMBA_3_0_RELEASE/source/utils/net_idmap.c\n===================================================================\n--- branches/SAMBA_3_0_RELEASE/source/utils/net_idmap.c\t2007-06-26 19:15:26 UTC (rev 23612)\n+++ branches/SAMBA_3_0_RELEASE/source/utils/net_idmap.c\t2007-06-26 19:23:07 UTC (rev 23613)\n@@ -28,50 +28,51 @@\n \t} } while(0)\n \n /***********************************************************\n- Dump the current idmap\n+ Helper function for net_idmap_dump. Dump one entry.\n  **********************************************************/\n-static int net_idmap_dump(int argc, const char **argv)\n+static int net_idmap_dump_one_entry(TDB_CONTEXT *tdb,\n+\t\t\t\t    TDB_DATA key,\n+\t\t\t\t    TDB_DATA data,\n+\t\t\t\t    void *unused)\n {\n-\tTALLOC_CTX *ctx;\n-\tchar *filename;\n-\n-\tif (argc != 1) {\n-\t\treturn net_help_idmap(argc, argv);\n+\tif (strcmp(key.dptr, \"USER HWM\") == 0) {\n+\t\tprintf(\"USER HWM %d\\n\", IVAL(data.dptr,0));\n+\t\treturn 0;\n \t}\n \n-\tif (! winbind_ping()) {\n-\t\td_fprintf(stderr, \"To use net idmap Winbindd must be running.\\n\");\n-\t\treturn -1;\n+\tif (strcmp(key.dptr, \"GROUP HWM\") == 0) {\n+\t\tprintf(\"GROUP HWM %d\\n\", IVAL(data.dptr,0));\n+\t\treturn 0;\n \t}\n \n-\tctx = talloc_new(NULL);\n-\tALLOC_CHECK(ctx);\n+\tif (strncmp(key.dptr, \"S-\", 2) != 0)\n+\t\treturn 0;\n \n-\tfilename = talloc_strdup(ctx, argv[0]);\n-\tALLOC_CHECK(filename);\n+\tprintf(\"%s %s\\n\", data.dptr, key.dptr);\n+\treturn 0;\n+}\n \n-\t/* filename must be absolute */\n-\tif (*filename != '/') {\n-\t\tchar path[4096];\n-\t\t\n-\t\tfilename = getcwd(path, 4095);\n-\t\tif ( ! filename) {\n-\t\t\td_fprintf(stderr, \"Failed to obtain full output file path\");\n-\t\t\ttalloc_free(ctx);\n-\t\t\treturn -1;\n-\t\t}\n+/***********************************************************\n+ Dump the current idmap\n+ **********************************************************/\n+static int net_idmap_dump(int argc, const char **argv)\n+{\n+\tTDB_CONTEXT *idmap_tdb;\n \n-\t\tfilename = talloc_asprintf(ctx, \"%s/%s\", path, argv[0]);\n-\t\tALLOC_CHECK(filename);\n-\t}\n+\tif ( argc != 1 )\n+\t\treturn net_help_idmap( argc, argv );\n \n-\tif ( ! winbind_idmap_dump_maps(ctx, filename)) {\n-\t\td_fprintf(stderr, \"Failed to obtain idmap data from winbindd\\n\");\n-\t\ttalloc_free(ctx);\n+\tidmap_tdb = tdb_open_log(argv[0], 0, TDB_DEFAULT, O_RDONLY, 0);\n+\n+\tif (idmap_tdb == NULL) {\n+\t\td_fprintf(stderr, \"Could not open idmap: %s\\n\", argv[0]);\n \t\treturn -1;\n \t}\n \n-\ttalloc_free(ctx);\n+\ttdb_traverse(idmap_tdb, net_idmap_dump_one_entry, NULL);\n+\n+\ttdb_close(idmap_tdb);\n+\n \treturn 0;\n }\n \n\n"}