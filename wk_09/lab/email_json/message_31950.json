{"category": "ham", "to_address": "perl6-internals@perl.org", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #42974] [BUG] Hungry Alligator Eats Integer; Developer Registers Complaint", "body": "On Wednesday 16 May 2007 21:15:53 Mehmet Yavuz Selim Soyturk wrote:\n\n> The following patch solves that issue.\n>\n> --- src/pmc/class.pmc   (revision 18568)\n> +++ src/pmc/class.pmc   (working copy)\n> @@ -1111,8 +1111,9 @@\n>              PMC    *role     = VTABLE_get_pmc_keyed_int(interp, role_list,\n> i); (STRING *r_name) = PCCINVOKE(interp, role, \"name\");\n>\n> -            if (string_compare(interp, role_name, r_name))\n> +            if (string_compare(interp, role_name, r_name) == 0) {\n>                  PCCRETURN(INTVAL 1);\n> +            }\n>          }\n>\n>          PCCRETURN(INTVAL 0);\n\nSort of, but it also breaks test #15 in t/pmc/class.t.  That's not your fault \nthough; the code fails to take into account role composition into roles.  I \nkeep trying to fix it, but it gets a lot more complex than I thought.\n\nI suspect what needs to happen is that Class#does() ought to loop through all \nof the roles composed into the class, check if their names match the given \nname, then call does() on each of them in turn.\n\n-- c\n\n"}