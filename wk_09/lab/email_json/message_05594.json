{"category": "ham", "to_address": "Perl 6 Internals <perl6-internals@perl.org>", "from_address": "James Keenan <jkeen@verizon.net>", "subject": "Configure.pl:  Question about block calling arrot::Configure::runstep()", "body": "I am trying to determine the purpose of a certain block of code in  \nConfigure.pl.  In the most recent version in trunk, we find:\n\n     if ( exists $args{step} ) {\n         $conf->data()->slurp();\n         $conf->runstep( $args{step} );\n         print \"\\n\";\n         exit(0);\n     } else {\n         # Run the actual steps\n         $conf->runsteps or exit(1);\n     }\n\nThe 'else' block is what normally executes when you call 'perl  \nConfigure.pl'.  The 'if' block is what puzzles me.  Translating it,  \nwe say:\n\n\"If command-line option 'step' has been provided with a value such as  \n'foo', read in the configuration data already found in % \nParrot::Config::PConfig (that's what Parrot::Configure::Data::slurp()  \ndoes), then run step 'foo' (presumably to add it to the configuration  \nsetup).\"\n\nMy questions are:\n\n1.  If you've already configured, why would you want to add another  \nstep before calling 'make'?\n\n2.  Does anybody actually use Configure.pl in this way, and to what  \npurpose?\n\n3.  Even granting that this is functionality someone finds useful,  \nwouldn't we be better off if we placed in a separate Perl script  \nfocused strictly on supplementing/overriding aspect of a current  \nParrot configuration?\n\nAfter all, there are several functions called in Configure.pl's  \nnormal operation -- print_introduction(); Parrot::Configure::new();  \nget_steps_list; print_conclusion() -- which you would probably *not*  \nwant or need to run if you were doing supplementary configuration  \nbecause they've already been run during Configure.pl.\n\nSince Parrot::Configure::runstep() -- as distinct from runsteps() and  \n_runstep() -- appears only to be called during Configure.pl,  \nanswering these questions would help me in testing and refactoring.\n\nThank you very much.\nkid51\n\n"}