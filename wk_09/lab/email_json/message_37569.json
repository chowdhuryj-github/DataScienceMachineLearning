{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: Array of Array refs", "body": "Brian wrote:\n> Hi All-\n>   I am trudging through some DBI, XML, etc.. I had a problem and was\n> baffled by how to get at array elements out of a series of pushed\n> array refs. But, by simplifying the problem, I found that the syntax I\n> used was in error. here is the small sample, already debugged. Hope\n> this helps someone...\n> \n> #!/usr/bin/perl\n> \n> \tmy @tRespsA;\n> \n> \tmy @fieldList = ( \"one\", \"two\", \"three\", \"four\" );\n> \tmy @r1 = ( 1, 2, 3, 4 );\n> \tmy @r2 = ( 13, 14, 15, 16 );\n> \tmy @r3 = ( 23, 24, 25, 26 );\n> \n> \tpush @tRespsA, \\@r1;\n> \tpush @tRespsA, \\@r2;\n> \tpush @tRespsA, \\@r3;\n> \n> \tforeach my $tRowRef ( @tRespsA ) {\n> \t\tmy $tCnt=0;\n> \t\tforeach my $tFld (@fieldList) {\n> \t\t\t#if ( $tRowRef->[ $tCnt] eq \"\") { next; }\n> \t\t\tprint $tFld . \"='\" . $tRowRef->[ $tCnt++ ] . \"' \\r\";\n> \t\t}\n> \t}\n\nFirst of all, /always/\n\n  use strict;\n  use warnings;\n\nI think you're still a little confused and thinking in another language - something\nlike C? Your program works, sure, but iterating over a list of header names in the\ninner loop confuses things and won't provide a general solution. Also your cryptic\nvariable names don't help.\n\nTake a look at this program and see what you think. The variable $i wouldn't be\nnecessary at all if we weren't displaying header names as well as the array data.\n\nHTH,\n\nRob\n\n\nuse strict;\nuse warnings;\n\nmy @r1 = ( 1, 2, 3, 4 );\nmy @r2 = ( 13, 14, 15, 16 );\nmy @r3 = ( 23, 24, 25, 26 );\n\nmy @array2d;\npush @array2d, \\@r1;\npush @array2d, \\@r2;\npush @array2d, \\@r3;\n\nmy @heads = qw/ one two three four /;\n\nforeach my $row (@array2d) {\n  my $i = 0;\n  foreach my $col (@$row) {\n    printf \"%s = %s\\n\", $heads[$i++], $col;\n  }\n  print \"\\n\";\n}\n\n**OUTPUT**\n\none = 1\ntwo = 2\nthree = 3\nfour = 4\n\none = 13\ntwo = 14\nthree = 15\nfour = 16\n\none = 23\ntwo = 24\nthree = 25\nfour = 26\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}