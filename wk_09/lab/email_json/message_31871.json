{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jerry@samba.org", "subject": "svn commit: samba r22978 - in branches: SAMBA_3_0/source/smbd\n\tSAMBA_3_0_25/source/smbd SAMBA_3_0_26/source/smbd", "body": "Author: jerry\nDate: 2007-05-17 22:27:42 +0000 (Thu, 17 May 2007)\nNew Revision: 22978\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22978\n\nLog:\nDon't use current_user to prep the security ctx in change_to_user \nsince any SID/uid/gid translation calls will reset the struct when \npopping the security ctx.  This should fix the standalone server\nconfiguration issues reported by David Rankin (thanks for the logs).\n\n\n\nModified:\n   branches/SAMBA_3_0/source/smbd/uid.c\n   branches/SAMBA_3_0_25/source/smbd/uid.c\n   branches/SAMBA_3_0_26/source/smbd/uid.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/smbd/uid.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/uid.c\t2007-05-17 19:56:54 UTC (rev 22977)\n+++ branches/SAMBA_3_0/source/smbd/uid.c\t2007-05-17 22:27:42 UTC (rev 22978)\n@@ -156,7 +156,9 @@\n \tchar group_c;\n \tBOOL must_free_token = False;\n \tNT_USER_TOKEN *token = NULL;\n-\n+\tint num_groups = 0;\n+\tgid_t *group_list = NULL;\n+\t\n \tif (!conn) {\n \t\tDEBUG(2,(\"change_to_user: Connection not open\\n\"));\n \t\treturn(False);\n@@ -195,14 +197,14 @@\n \tif (conn->force_user) /* security = share sets this too */ {\n \t\tuid = conn->uid;\n \t\tgid = conn->gid;\n-\t\tcurrent_user.ut.groups = conn->groups;\n-\t\tcurrent_user.ut.ngroups = conn->ngroups;\n+\t        group_list = conn->groups;\n+\t\tnum_groups = conn->ngroups;\n \t\ttoken = conn->nt_user_token;\n \t} else if (vuser) {\n \t\tuid = conn->admin_user ? 0 : vuser->uid;\n \t\tgid = vuser->gid;\n-\t\tcurrent_user.ut.ngroups = vuser->n_groups;\n-\t\tcurrent_user.ut.groups  = vuser->groups;\n+\t\tnum_groups = vuser->n_groups;\n+\t\tgroup_list  = vuser->groups;\n \t\ttoken = vuser->nt_user_token;\n \t} else {\n \t\tDEBUG(2,(\"change_to_user: Invalid vuid used %d in accessing \"\n@@ -235,8 +237,8 @@\n \t\t\t */\n \n \t\t\tint i;\n-\t\t\tfor (i = 0; i < current_user.ut.ngroups; i++) {\n-\t\t\t\tif (current_user.ut.groups[i] == conn->gid) {\n+\t\t\tfor (i = 0; i < num_groups; i++) {\n+\t\t\t\tif (group_list[i] == conn->gid) {\n \t\t\t\t\tgid = conn->gid;\n \t\t\t\t\tgid_to_sid(&token->user_sids[1], gid);\n \t\t\t\t\tbreak;\n@@ -248,6 +250,12 @@\n \t\t}\n \t}\n \t\n+\t/* Now set current_user since we will immediately also call\n+\t   set_sec_ctx() */\n+\n+\tcurrent_user.ut.ngroups = num_groups;\n+\tcurrent_user.ut.groups  = group_list;\t\n+\n \tset_sec_ctx(uid, gid, current_user.ut.ngroups, current_user.ut.groups,\n \t\t    token);\n \n\nModified: branches/SAMBA_3_0_25/source/smbd/uid.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/smbd/uid.c\t2007-05-17 19:56:54 UTC (rev 22977)\n+++ branches/SAMBA_3_0_25/source/smbd/uid.c\t2007-05-17 22:27:42 UTC (rev 22978)\n@@ -156,7 +156,9 @@\n \tchar group_c;\n \tBOOL must_free_token = False;\n \tNT_USER_TOKEN *token = NULL;\n-\n+\tint num_groups = 0;\n+\tgid_t *group_list = NULL;\n+\t\n \tif (!conn) {\n \t\tDEBUG(2,(\"change_to_user: Connection not open\\n\"));\n \t\treturn(False);\n@@ -195,14 +197,14 @@\n \tif (conn->force_user) /* security = share sets this too */ {\n \t\tuid = conn->uid;\n \t\tgid = conn->gid;\n-\t\tcurrent_user.ut.groups = conn->groups;\n-\t\tcurrent_user.ut.ngroups = conn->ngroups;\n+\t        group_list = conn->groups;\n+\t\tnum_groups = conn->ngroups;\n \t\ttoken = conn->nt_user_token;\n \t} else if (vuser) {\n \t\tuid = conn->admin_user ? 0 : vuser->uid;\n \t\tgid = vuser->gid;\n-\t\tcurrent_user.ut.ngroups = vuser->n_groups;\n-\t\tcurrent_user.ut.groups  = vuser->groups;\n+\t\tnum_groups = vuser->n_groups;\n+\t\tgroup_list  = vuser->groups;\n \t\ttoken = vuser->nt_user_token;\n \t} else {\n \t\tDEBUG(2,(\"change_to_user: Invalid vuid used %d in accessing \"\n@@ -235,8 +237,8 @@\n \t\t\t */\n \n \t\t\tint i;\n-\t\t\tfor (i = 0; i < current_user.ut.ngroups; i++) {\n-\t\t\t\tif (current_user.ut.groups[i] == conn->gid) {\n+\t\t\tfor (i = 0; i < num_groups; i++) {\n+\t\t\t\tif (group_list[i] == conn->gid) {\n \t\t\t\t\tgid = conn->gid;\n \t\t\t\t\tgid_to_sid(&token->user_sids[1], gid);\n \t\t\t\t\tbreak;\n@@ -248,6 +250,12 @@\n \t\t}\n \t}\n \t\n+\t/* Now set current_user since we will immediately also call\n+\t   set_sec_ctx() */\n+\n+\tcurrent_user.ut.ngroups = num_groups;\n+\tcurrent_user.ut.groups  = group_list;\t\n+\n \tset_sec_ctx(uid, gid, current_user.ut.ngroups, current_user.ut.groups,\n \t\t    token);\n \n\nModified: branches/SAMBA_3_0_26/source/smbd/uid.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/smbd/uid.c\t2007-05-17 19:56:54 UTC (rev 22977)\n+++ branches/SAMBA_3_0_26/source/smbd/uid.c\t2007-05-17 22:27:42 UTC (rev 22978)\n@@ -156,7 +156,9 @@\n \tchar group_c;\n \tBOOL must_free_token = False;\n \tNT_USER_TOKEN *token = NULL;\n-\n+\tint num_groups = 0;\n+\tgid_t *group_list = NULL;\n+\t\n \tif (!conn) {\n \t\tDEBUG(2,(\"change_to_user: Connection not open\\n\"));\n \t\treturn(False);\n@@ -195,14 +197,14 @@\n \tif (conn->force_user) /* security = share sets this too */ {\n \t\tuid = conn->uid;\n \t\tgid = conn->gid;\n-\t\tcurrent_user.ut.groups = conn->groups;\n-\t\tcurrent_user.ut.ngroups = conn->ngroups;\n+\t        group_list = conn->groups;\n+\t\tnum_groups = conn->ngroups;\n \t\ttoken = conn->nt_user_token;\n \t} else if (vuser) {\n \t\tuid = conn->admin_user ? 0 : vuser->uid;\n \t\tgid = vuser->gid;\n-\t\tcurrent_user.ut.ngroups = vuser->n_groups;\n-\t\tcurrent_user.ut.groups  = vuser->groups;\n+\t\tnum_groups = vuser->n_groups;\n+\t\tgroup_list  = vuser->groups;\n \t\ttoken = vuser->nt_user_token;\n \t} else {\n \t\tDEBUG(2,(\"change_to_user: Invalid vuid used %d in accessing \"\n@@ -235,8 +237,8 @@\n \t\t\t */\n \n \t\t\tint i;\n-\t\t\tfor (i = 0; i < current_user.ut.ngroups; i++) {\n-\t\t\t\tif (current_user.ut.groups[i] == conn->gid) {\n+\t\t\tfor (i = 0; i < num_groups; i++) {\n+\t\t\t\tif (group_list[i] == conn->gid) {\n \t\t\t\t\tgid = conn->gid;\n \t\t\t\t\tgid_to_sid(&token->user_sids[1], gid);\n \t\t\t\t\tbreak;\n@@ -248,6 +250,12 @@\n \t\t}\n \t}\n \t\n+\t/* Now set current_user since we will immediately also call\n+\t   set_sec_ctx() */\n+\n+\tcurrent_user.ut.ngroups = num_groups;\n+\tcurrent_user.ut.groups  = group_list;\t\n+\n \tset_sec_ctx(uid, gid, current_user.ut.ngroups, current_user.ut.groups,\n \t\t    token);\n \n\n"}