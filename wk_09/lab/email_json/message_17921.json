{"category": "ham", "to_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "from_address": "Matthew Neilson <matt@gneilson.plus.com>", "subject": "Re: [R] Unwanted white borders on semi-transparent polygons?", "body": "Hey again,\n\nJust to let you know that I managed to test out R-2.5.0, and the \ntransparency glitch has thankfully disappeared. I apologise for wasting \nyour time with this.\n\nOne final question, though. Did you mean to say that the known \ntransparency bug was fixed in version 2.5.0? Or was it fixed in a \npatched version of R-2.4.0? Only asking because, if the final Panther \nbinary (version 2.4.0) available on CRAN doesn't fix the bug, there's \nno point in me installing this on top of my happily working (and \notherwise fully functional) version of R.\n\nMany thanks,\n\n\n-Matt\n\n\n\nOn 27 Apr 2007, at 13:35, Matthew Neilson wrote:\n\n> Hi Brian,\n>\n> Terribly sorry if I accidentally broke a rule. sessionInfo() produces \n> the following:\n>\n>> sessionInfo()\n> R version 2.2.1, 2005-12-20, powerpc-apple-darwin7.9.0\n>\n> attached base packages:\n> [1] \"methods\"   \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \n> \"datasets\"\n> [7] \"base\"\n>\n> I cannot upgrade to the latest version of R, since I'm using OS X \n> 10.3.9 (Panther) and the latest builds require 10.4.4 (Tiger) or \n> greater. It's interesting to know that R version 2.4.0\n> contains a transparency bug, though - I'll ask IT Services to install \n> the latest version of R on the G5 and see if that helps.\n>\n> Many thanks for all your help,\n>\n>\n> -Matt\n>\n>\n>\n> On Fri Apr 27 12:58 , Prof Brian Ripley  sent:\n>\n>> The posting guide says\n>>\n>>   For questions about unexpected behavior or a possible bug, you \n>> should,\n>>   at a minimum, copy and paste the output from sessionInfo() into \n>> your message.\n>>\n>>   If you are using an old version of R and think it does not work\n>>   properly, upgrade to the latest version and try that, before \n>> posting.\n>>\n>> [There is a known bug in 2.4.0 related to semi-transparency, fixed in\n>> 2.4.0.  I would not have attempted to answer a question about 2.1.1, \n>> and\n>> we do rely on people seeking free technical assistance doing their \n>> bit.]\n>>\n>>\n>> On Fri, 27 Apr 2007, Matthew Neilson wrote:\n>>\n>>> Thanks for your fast response.\n>>>\n>>> I'm using R version 2.1.1 on OS X 10.3.9 to create the pdfs. I have \n>>> tried viewing the pdf output in both Acrobat 6 and 7 (both display a \n>>> white border around each polygon) as well\n> as\n>>> Preview (displays fine). I have emailed the pdf file to some \n>>> correspondents running Windows, and they also see white borders when \n>>> viewing with Acrobat (version unspecified).\n>>>\n>>> I have tried using R version 2.4.0 on a G5 machine (which I can \n>>> access remotely) running OS X 10.4.8, but the resulting pdf renders \n>>> incorrectly (i.e. with a white border around\n> each\n>>> polygon) in both Acrobat *and* Preview. So it would appear that the \n>>> combination of R 2.1.1 and OS X 10.3.9 gives slightly better results \n>>> - although plots still appear incorrect\n> when\n>>> printed or viewed in Acrobat.\n>>>\n>>> Unfortunately, I don't have access to a Windows machine to test this \n>>> out. Even if I did, many of my scripts include various Unix system \n>>> calls so I don't think that would be a viable\n>>> solution. Could this be a bug in the OS X pdf driver?\n>>\n>> The R pdf() device is the same on all platforms.\n>>\n>>> Many thanks,\n>>>\n>>>\n>>> -Matt\n>>>\n>>>\n>>>\n>>> On 27 Apr 2007, at 06:42, Prof Brian Ripley wrote:\n>>>\n>>>> What version of R, what OS, what version of Acrobat?\n>>>>\n>>>> I don't see this in 2.5.0 on Windows (using Acrobat 7: Acrobat does \n>>>> not\n>>>> exist on Linux, AFAIK).  And reading the PDF produced shows no sign \n>>>> of an\n>>>> extra object for the border.\n>>>>\n>>>> On Fri, 27 Apr 2007, Matthew Neilson wrote:\n>>>>\n>>>>> Hey all,\n>>>>>\n>>>>> I'm trying to create a plot of two semi-transparent regions. The \n>>>>> reason they need to be partially transparent is so that I can see \n>>>>> if there's any overlap. Here's some example\n> code:\n>>>>>\n>>>>> # BEGIN\n>>>>>\n>>>>> pdf(file=\"test.pdf\",version=\"1.4\")\n>>>>> plot(0,0,type=\"l\",ylim=range(-3,3),xlim=range(-1,5))\n>>>>> polygon(c(0,1,2,3,4,3,2,1,0), c(0,1,2,1,0,-1,-2,-1,0), \n>>>>> col=rgb(1,0,0,0.5),\n>>>>> border=NA)\n>>>>> polygon(c(1,2,3,4,5,4,3,2,1), c(0,1,2,1,0,-1,-2,-1,0), \n>>>>> col=rgb(0,0,1,0.5),\n>>>>> border=NA)\n>>>>> dev.off()\n>>>>>\n>>>>> # END\n>>>>>\n>>>>> The problem with this is that, despite setting \"border = NA\", I \n>>>>> get a\n>>>>> big white border surrounding each polygon!! Funnily enough, \n>>>>> setting the\n>>>>> alpha channel equal to 1 (as opposed to 0.5) *doesn't* give the \n>>>>> border,\n>>>>> but an alpha channel of 1 produces an opaque polygon! :S\n>>>>>\n>>>>> I have read the FAQ, and (unfortunately) turning off line-art \n>>>>> smoothing\n>>>>> does not give the desired effect. Furthermore, my pdfs print with a\n>>>>> white border surrounding each transparent polygon.\n>>>>>\n>>>>> Now, here comes the really bizarre part. Whilst Adobe Acrobat \n>>>>> displays\n>>>>> the unwanted white border, Apple Preview respects the \"border=NA\"\n>>>>> argument and shows the two diamonds as they are intended. However,\n>>>>> opening up the pdf in Illustrator CS reveals that there is in fact \n>>>>> a\n>>>>> transparent (according to Illustrator) border *on top* of each \n>>>>> diamond.\n>>>>> Deleting these two borders (one for each polygon) and re-saving \n>>>>> the pdf\n>>>>> appears to correct the issue. So the obvious question is: how did \n>>>>> the\n>>>>> surrounding borders get there in the first place? A bug in the \n>>>>> polygon\n>>>>> function, perhaps?\n>>>>>\n>>>>> Does anyone have any ideas for preventing these unwanted borders \n>>>>> around\n>>>>> semi-transparent polygons (without having to resort to \n>>>>> Illustrator)? Has\n>>>>> anyone else even come across this problem?\n>>>>>\n>>>>> Many thanks,\n>>>>>\n>>>>>\n>>>>> -Matt\n>>>>>\n>>>>\n>>>> --\n>>>> Brian D. Ripley,                  ripley@stats.ox.ac.uk\n>>>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\n>>>> University of Oxford,             Tel:  +44 1865 272861 (self)\n>>>> 1 South Parks Road,                     +44 1865 272866 (PA)\n>>>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595\n>>>\n>>> ______________________________________________\n>>> R-help@stat.math.ethz.ch mailing list\n>>> https://stat.ethz.ch/mailman/listinfo/r-help\n>>> PLEASE do read the posting guide \n>>> http://www.R-project.org/posting-guide.html\n>>> and provide commented, minimal, self-contained, reproducible code.\n>>>\n>>\n>> -- \n>> Brian D. Ripley,                  ripley@stats.ox.ac.uk\n>> Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/\n>> University of Oxford,             Tel:  +44 1865 272861 (self)\n>> 1 South Parks Road,                     +44 1865 272866 (PA)\n>> Oxford OX1 3TG, UK                Fax:  +44 1865 272595\n>\n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide \n> http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n>\n>\n\n--\n************************************\nMatthew Neilson\nUniversity of Strathclyde\nDepartment of Mathematics\nLivingstone Tower\n26 Richmond Street\nGlasgow G1 1XH\n\nTel : + 44(0)141 548 4559\ne-mail : rs.mnei@maths.strath.ac.uk\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}