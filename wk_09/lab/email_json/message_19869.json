{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "jra@samba.org", "subject": "svn commit: samba r22590 - in branches: SAMBA_3_0/source/lib\n\tSAMBA_3_0/source/libads SAMBA_3_0/source/libgpo\n\tSAMBA_3_0/source/libmsrpc SAMBA_3_0/source/nsswitch\n\tSAMBA_3_0/source/registry SAMBA_3_0/source/smbd\n\tSAMBA_3_0/source/utils SAMBA_3_0_25/source/lib\n\tSAMBA_3_0_25/source/libads SAMBA_3_0_25/source/libgpo\n\tSAMBA_3_0_25/source/libmsrpc SAMBA_3_0_25/source/nsswitch\n\tSAMBA_3_0_25/source/registry SAMBA_3_0_25/source/smbd\n\tSAMBA_3_0_25/source/utils", "body": "Author: jra\nDate: 2007-04-30 02:51:26 +0000 (Mon, 30 Apr 2007)\nNew Revision: 22590\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22590\n\nLog:\nMake TALLOC_ARRAY consistent across all uses.\nThat should be it....\nJeremy.\n\nModified:\n   branches/SAMBA_3_0/source/lib/secace.c\n   branches/SAMBA_3_0/source/libads/dns.c\n   branches/SAMBA_3_0/source/libgpo/gpo_ldap.c\n   branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\n   branches/SAMBA_3_0/source/nsswitch/idmap.c\n   branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n   branches/SAMBA_3_0/source/registry/regfio.c\n   branches/SAMBA_3_0/source/smbd/msdfs.c\n   branches/SAMBA_3_0/source/utils/net_rpc_samsync.c\n   branches/SAMBA_3_0_25/source/lib/secace.c\n   branches/SAMBA_3_0_25/source/libads/dns.c\n   branches/SAMBA_3_0_25/source/libgpo/gpo_ldap.c\n   branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\n   branches/SAMBA_3_0_25/source/nsswitch/idmap.c\n   branches/SAMBA_3_0_25/source/nsswitch/winbindd_ads.c\n   branches/SAMBA_3_0_25/source/registry/regfio.c\n   branches/SAMBA_3_0_25/source/smbd/msdfs.c\n   branches/SAMBA_3_0_25/source/utils/net_rpc_samsync.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/lib/secace.c\n===================================================================\n--- branches/SAMBA_3_0/source/lib/secace.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/lib/secace.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -122,8 +122,12 @@\n \n \tif (!ctx || !pp_new || !old || !sid || !num)  return NT_STATUS_INVALID_PARAMETER;\n \n-\tif((pp_new[0] = TALLOC_ZERO_ARRAY(ctx, SEC_ACE, *num )) == 0)\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (*num) {\n+\t\tif((pp_new[0] = TALLOC_ZERO_ARRAY(ctx, SEC_ACE, *num )) == 0)\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tpp_new[0] = NULL;\n+\t}\n \n \tfor (i = 0; i < *num; i ++) {\n \t\tif (sid_compare(&old[i].trustee, sid) != 0)\n\nModified: branches/SAMBA_3_0/source/libads/dns.c\n===================================================================\n--- branches/SAMBA_3_0/source/libads/dns.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/libads/dns.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -355,10 +355,14 @@\n \tDEBUG(4,(\"ads_dns_lookup_srv: %d records returned in the answer section.\\n\", \n \t\tanswer_count));\n \t\t\n-\tif ( (dcs = TALLOC_ZERO_ARRAY(ctx, struct dns_rr_srv, answer_count)) == NULL ) {\n-\t\tDEBUG(0,(\"ads_dns_lookup_srv: talloc() failure for %d char*'s\\n\", \n-\t\t\tanswer_count));\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (answer_count) {\n+\t\tif ( (dcs = TALLOC_ZERO_ARRAY(ctx, struct dns_rr_srv, answer_count)) == NULL ) {\n+\t\t\tDEBUG(0,(\"ads_dns_lookup_srv: talloc() failure for %d char*'s\\n\", \n+\t\t\t\tanswer_count));\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tdcs = NULL;\n \t}\n \n \t/* now skip the header */\n\nModified: branches/SAMBA_3_0/source/libgpo/gpo_ldap.c\n===================================================================\n--- branches/SAMBA_3_0/source/libgpo/gpo_ldap.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/libgpo/gpo_ldap.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -47,19 +47,26 @@\n \n \tgp_ext->num_exts = i;\n \t\n-\tgp_ext->extensions = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->extensions_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->snapins = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->snapins_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\tif (gp_ext->num_exts) {\n+\t\tgp_ext->extensions = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->extensions_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->snapins = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->snapins_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t} else {\n+\t\tgp_ext->extensions = NULL;\n+\t\tgp_ext->extensions_guid = NULL;\n+\t\tgp_ext->snapins = NULL;\n+\t\tgp_ext->snapins_guid = NULL;\n+\t}\n \n-\tgp_ext->gp_extension = talloc_strdup(mem_ctx, extension_raw);\n-\n \tif (gp_ext->extensions == NULL || gp_ext->extensions_guid == NULL || \n \t    gp_ext->snapins == NULL || gp_ext->snapins_guid == NULL || \n \t    gp_ext->gp_extension == NULL) {\n \t\tgoto parse_error;\n \t}\n \n+\tgp_ext->gp_extension = talloc_strdup(mem_ctx, extension_raw);\n+\n \tfor (i = 0; ext_list[i] != NULL; i++) {\n \n \t\tint k;\n@@ -161,8 +168,13 @@\n \tgp_link->gp_opts = options;\n \tgp_link->num_links = i;\n \t\n-\tgp_link->link_names = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_link->num_links);\n-\tgp_link->link_opts = TALLOC_ZERO_ARRAY(mem_ctx, uint32, gp_link->num_links);\n+\tif (gp_link->num_links) {\n+\t\tgp_link->link_names = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_link->num_links);\n+\t\tgp_link->link_opts = TALLOC_ZERO_ARRAY(mem_ctx, uint32, gp_link->num_links);\n+\t} else {\n+\t\tgp_link->link_names = NULL;\n+\t\tgp_link->link_opts = NULL;\n+\t}\n \t\n \tgp_link->gp_link = talloc_strdup(mem_ctx, gp_link_raw);\n \n\nModified: branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\n===================================================================\n--- branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -713,9 +713,13 @@\n \tif ( !mem_ctx || !svc )\n \t\treturn NULL;\n \n-\tservices = TALLOC_ZERO_ARRAY( mem_ctx, CacService, num_services );\n-\tif ( !services )\n-\t\treturn NULL;\n+\tif (num_services) {\n+\t\tservices = TALLOC_ZERO_ARRAY( mem_ctx, CacService, num_services );\n+\t\tif ( !services )\n+\t\t\treturn NULL;\n+\t} else {\n+\t\tservices = NULL;\n+\t}\n \n \tfor ( i = 0; i < num_services; i++ ) {\n \t\tservices[i].service_name =\n\nModified: branches/SAMBA_3_0/source/nsswitch/idmap.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/idmap.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/nsswitch/idmap.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -1026,9 +1026,15 @@\n \n \t/* split list per domain */\n \n-\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n-\tIDMAP_CHECK_ALLOC(dom_ids);\n-\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\tif (num_domains) {\n+\t\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n+\t\tIDMAP_CHECK_ALLOC(dom_ids);\n+\t\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\t\tIDMAP_CHECK_ALLOC(counters);\n+\t} else {\n+\t\tdom_ids = NULL;\n+\t\tcounters = NULL;\n+\t}\n \n \t/* partition the requests by domain */\n \n\nModified: branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\n===================================================================\n--- branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/nsswitch/winbindd_ads.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -907,16 +907,21 @@\n \t   the problem is that the members are in the form of distinguised names\n \t*/\n \n-\t(*sid_mem) = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_members);\n-\t(*name_types) = TALLOC_ZERO_ARRAY(mem_ctx, uint32, num_members);\n-\t(*names) = TALLOC_ZERO_ARRAY(mem_ctx, char *, num_members);\n+\tif (num_members) {\n+\t\t(*sid_mem) = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_members);\n+\t\t(*name_types) = TALLOC_ZERO_ARRAY(mem_ctx, uint32, num_members);\n+\t\t(*names) = TALLOC_ZERO_ARRAY(mem_ctx, char *, num_members);\n \n-\tif ((num_members != 0) &&\n-\t    ((members == NULL) || (*sid_mem == NULL) ||\n-\t     (*name_types == NULL) || (*names == NULL))) {\n-\t\tDEBUG(1, (\"talloc failed\\n\"));\n-\t\tstatus = NT_STATUS_NO_MEMORY;\n-\t\tgoto done;\n+\t\tif ((members == NULL) || (*sid_mem == NULL) ||\n+\t\t     (*name_types == NULL) || (*names == NULL)) {\n+\t\t\tDEBUG(1, (\"talloc failed\\n\"));\n+\t\t\tstatus = NT_STATUS_NO_MEMORY;\n+\t\t\tgoto done;\n+\t\t}\n+\t} else {\n+\t\t(*sid_mem) = NULL;\n+\t\t(*name_types) = NULL;\n+\t\t(*names) = NULL;\n \t}\n  \n \tfor (i=0;isubkeys.header, \"lf\", REC_HDR_SIZE );\n \t\t\n \t\tnk->subkeys.num_keys = nk->num_subkeys;\n-\t\tif ( !(nk->subkeys.hashes = TALLOC_ZERO_ARRAY( file->mem_ctx, REGF_HASH_REC, nk->subkeys.num_keys )) )\n-\t\t\treturn NULL;\n+\t\tif (nk->subkeys.num_keys) {\n+\t\t\tif ( !(nk->subkeys.hashes = TALLOC_ZERO_ARRAY( file->mem_ctx, REGF_HASH_REC, nk->subkeys.num_keys )) )\n+\t\t\t\treturn NULL;\n+\t\t} else {\n+\t\t\tnk->subkeys.hashes = NULL;\n+\t\t}\n \t\tnk->subkey_index = 0;\n \n \t\t/* update the max_bytes_subkey{name,classname} fields */\n\nModified: branches/SAMBA_3_0/source/smbd/msdfs.c\n===================================================================\n--- branches/SAMBA_3_0/source/smbd/msdfs.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0/source/smbd/msdfs.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -264,10 +264,14 @@\n \n \tDEBUG(10,(\"parse_msdfs_symlink: count=%d\\n\", count));\n \n-\treflist = *preflist = TALLOC_ZERO_ARRAY(ctx, struct referral, count);\n-\tif(reflist == NULL) {\n-\t\tDEBUG(0,(\"parse_msdfs_symlink: talloc failed!\\n\"));\n-\t\treturn False;\n+\tif (count) {\n+\t\treflist = *preflist = TALLOC_ZERO_ARRAY(ctx, struct referral, count);\n+\t\tif(reflist == NULL) {\n+\t\t\tDEBUG(0,(\"parse_msdfs_symlink: talloc failed!\\n\"));\n+\t\t\treturn False;\n+\t\t}\n+\t} else {\n+\t\treflist = *preflist = NULL;\n \t}\n \t\n \tfor(i=0;inum_members)) == NULL) {\n-\t\tDEBUG(0, (\"talloc failed\\n\"));\n-\t\ttalloc_free(t);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (delta->num_members) {\n+\t\tif ((nt_members = TALLOC_ZERO_ARRAY(t, char *, delta->num_members)) == NULL) {\n+\t\t\tDEBUG(0, (\"talloc failed\\n\"));\n+\t\t\ttalloc_free(t);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tnt_members = NULL;\n \t}\n \n \tfor (i=0; inum_members; i++) {\n\nModified: branches/SAMBA_3_0_25/source/lib/secace.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/lib/secace.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/lib/secace.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -124,8 +124,12 @@\n \n \tif (!ctx || !pp_new || !old || !sid || !num)  return NT_STATUS_INVALID_PARAMETER;\n \n-\tif((pp_new[0] = TALLOC_ZERO_ARRAY(ctx, SEC_ACE, *num )) == 0)\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (*num) {\n+\t\tif((pp_new[0] = TALLOC_ZERO_ARRAY(ctx, SEC_ACE, *num )) == 0)\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t} else {\n+\t\tpp_new[0] = NULL;\n+\t}\n \n \tfor (i = 0; i < *num; i ++) {\n \t\tif (sid_compare(&old[i].trustee, sid) != 0)\n\nModified: branches/SAMBA_3_0_25/source/libads/dns.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/libads/dns.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/libads/dns.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -355,10 +355,14 @@\n \tDEBUG(4,(\"ads_dns_lookup_srv: %d records returned in the answer section.\\n\", \n \t\tanswer_count));\n \t\t\n-\tif ( (dcs = TALLOC_ZERO_ARRAY(ctx, struct dns_rr_srv, answer_count)) == NULL ) {\n-\t\tDEBUG(0,(\"ads_dns_lookup_srv: talloc() failure for %d char*'s\\n\", \n-\t\t\tanswer_count));\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (answer_count) {\n+\t\tif ( (dcs = TALLOC_ZERO_ARRAY(ctx, struct dns_rr_srv, answer_count)) == NULL ) {\n+\t\t\tDEBUG(0,(\"ads_dns_lookup_srv: talloc() failure for %d char*'s\\n\", \n+\t\t\t\tanswer_count));\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tdcs = NULL;\n \t}\n \n \t/* now skip the header */\n\nModified: branches/SAMBA_3_0_25/source/libgpo/gpo_ldap.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/libgpo/gpo_ldap.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/libgpo/gpo_ldap.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -47,19 +47,26 @@\n \n \tgp_ext->num_exts = i;\n \t\n-\tgp_ext->extensions = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->extensions_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->snapins = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n-\tgp_ext->snapins_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\tif (gp_ext->num_exts) {\n+\t\tgp_ext->extensions = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->extensions_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->snapins = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t\tgp_ext->snapins_guid = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_ext->num_exts);\n+\t} else {\n+\t\tgp_ext->extensions = NULL;\n+\t\tgp_ext->extensions_guid = NULL;\n+\t\tgp_ext->snapins = NULL;\n+\t\tgp_ext->snapins_guid = NULL;\n+\t}\n \n-\tgp_ext->gp_extension = talloc_strdup(mem_ctx, extension_raw);\n-\n \tif (gp_ext->extensions == NULL || gp_ext->extensions_guid == NULL || \n \t    gp_ext->snapins == NULL || gp_ext->snapins_guid == NULL || \n \t    gp_ext->gp_extension == NULL) {\n \t\tgoto parse_error;\n \t}\n \n+\tgp_ext->gp_extension = talloc_strdup(mem_ctx, extension_raw);\n+\n \tfor (i = 0; ext_list[i] != NULL; i++) {\n \n \t\tint k;\n@@ -161,8 +168,13 @@\n \tgp_link->gp_opts = options;\n \tgp_link->num_links = i;\n \t\n-\tgp_link->link_names = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_link->num_links);\n-\tgp_link->link_opts = TALLOC_ZERO_ARRAY(mem_ctx, uint32, gp_link->num_links);\n+\tif (gp_link->num_links) {\n+\t\tgp_link->link_names = TALLOC_ZERO_ARRAY(mem_ctx, char *, gp_link->num_links);\n+\t\tgp_link->link_opts = TALLOC_ZERO_ARRAY(mem_ctx, uint32, gp_link->num_links);\n+\t} else {\n+\t\tgp_link->link_names = NULL;\n+\t\tgp_link->link_opts = NULL;\n+\t}\n \t\n \tgp_link->gp_link = talloc_strdup(mem_ctx, gp_link_raw);\n \n\nModified: branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/libmsrpc/libmsrpc_internal.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -713,9 +713,13 @@\n \tif ( !mem_ctx || !svc )\n \t\treturn NULL;\n \n-\tservices = TALLOC_ZERO_ARRAY( mem_ctx, CacService, num_services );\n-\tif ( !services )\n-\t\treturn NULL;\n+\tif (num_services) {\n+\t\tservices = TALLOC_ZERO_ARRAY( mem_ctx, CacService, num_services );\n+\t\tif ( !services )\n+\t\t\treturn NULL;\n+\t} else {\n+\t\tservices = NULL;\n+\t}\n \n \tfor ( i = 0; i < num_services; i++ ) {\n \t\tservices[i].service_name =\n\nModified: branches/SAMBA_3_0_25/source/nsswitch/idmap.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/idmap.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/nsswitch/idmap.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -1026,9 +1026,15 @@\n \n \t/* split list per domain */\n \n-\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n-\tIDMAP_CHECK_ALLOC(dom_ids);\n-\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\tif (num_domains) {\n+\t\tdom_ids = TALLOC_ZERO_ARRAY(ctx, struct id_map **, num_domains);\n+\t\tIDMAP_CHECK_ALLOC(dom_ids);\n+\t\tcounters = TALLOC_ZERO_ARRAY(ctx, int, num_domains);\n+\t\tIDMAP_CHECK_ALLOC(counters);\n+\t} else {\n+\t\tdom_ids = NULL;\n+\t\tcounters = NULL;\n+\t}\n \n \t/* partition the requests by domain */\n \n\nModified: branches/SAMBA_3_0_25/source/nsswitch/winbindd_ads.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/nsswitch/winbindd_ads.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/nsswitch/winbindd_ads.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -961,16 +961,21 @@\n \t   the problem is that the members are in the form of distinguised names\n \t*/\n \n-\t(*sid_mem) = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_members);\n-\t(*name_types) = TALLOC_ZERO_ARRAY(mem_ctx, uint32, num_members);\n-\t(*names) = TALLOC_ZERO_ARRAY(mem_ctx, char *, num_members);\n+\tif (num_members) {\n+\t\t(*sid_mem) = TALLOC_ZERO_ARRAY(mem_ctx, DOM_SID, num_members);\n+\t\t(*name_types) = TALLOC_ZERO_ARRAY(mem_ctx, uint32, num_members);\n+\t\t(*names) = TALLOC_ZERO_ARRAY(mem_ctx, char *, num_members);\n \n-\tif ((num_members != 0) &&\n-\t    ((members == NULL) || (*sid_mem == NULL) ||\n-\t     (*name_types == NULL) || (*names == NULL))) {\n-\t\tDEBUG(1, (\"talloc failed\\n\"));\n-\t\tstatus = NT_STATUS_NO_MEMORY;\n-\t\tgoto done;\n+\t\tif ((members == NULL) || (*sid_mem == NULL) ||\n+\t\t     (*name_types == NULL) || (*names == NULL)) {\n+\t\t\tDEBUG(1, (\"talloc failed\\n\"));\n+\t\t\tstatus = NT_STATUS_NO_MEMORY;\n+\t\t\tgoto done;\n+\t\t}\n+\t} else {\n+\t\t(*sid_mem) = NULL;\n+\t\t(*name_types) = NULL;\n+\t\t(*names) = NULL;\n \t}\n  \n \tfor (i=0;isubkeys.header, \"lf\", REC_HDR_SIZE );\n \t\t\n \t\tnk->subkeys.num_keys = nk->num_subkeys;\n-\t\tif ( !(nk->subkeys.hashes = TALLOC_ZERO_ARRAY( file->mem_ctx, REGF_HASH_REC, nk->subkeys.num_keys )) )\n-\t\t\treturn NULL;\n+\t\tif (nk->subkeys.num_keys) {\n+\t\t\tif ( !(nk->subkeys.hashes = TALLOC_ZERO_ARRAY( file->mem_ctx, REGF_HASH_REC, nk->subkeys.num_keys )) )\n+\t\t\t\treturn NULL;\n+\t\t} else {\n+\t\t\tnk->subkeys.hashes = NULL;\n+\t\t}\n \t\tnk->subkey_index = 0;\n \n \t\t/* update the max_bytes_subkey{name,classname} fields */\n\nModified: branches/SAMBA_3_0_25/source/smbd/msdfs.c\n===================================================================\n--- branches/SAMBA_3_0_25/source/smbd/msdfs.c\t2007-04-30 02:39:34 UTC (rev 22589)\n+++ branches/SAMBA_3_0_25/source/smbd/msdfs.c\t2007-04-30 02:51:26 UTC (rev 22590)\n@@ -264,10 +264,14 @@\n \n \tDEBUG(10,(\"parse_msdfs_symlink: count=%d\\n\", count));\n \n-\treflist = *preflist = TALLOC_ZERO_ARRAY(ctx, struct referral, count);\n-\tif(reflist == NULL) {\n-\t\tDEBUG(0,(\"parse_msdfs_symlink: talloc failed!\\n\"));\n-\t\treturn False;\n+\tif (count) {\n+\t\treflist = *preflist = TALLOC_ZERO_ARRAY(ctx, struct referral, count);\n+\t\tif(reflist == NULL) {\n+\t\t\tDEBUG(0,(\"parse_msdfs_symlink: talloc failed!\\n\"));\n+\t\t\treturn False;\n+\t\t}\n+\t} else {\n+\t\treflist = *preflist = NULL;\n \t}\n \t\n \tfor(i=0;inum_members)) == NULL) {\n-\t\tDEBUG(0, (\"talloc failed\\n\"));\n-\t\ttalloc_free(t);\n-\t\treturn NT_STATUS_NO_MEMORY;\n+\tif (delta->num_members) {\n+\t\tif ((nt_members = TALLOC_ZERO_ARRAY(t, char *, delta->num_members)) == NULL) {\n+\t\t\tDEBUG(0, (\"talloc failed\\n\"));\n+\t\t\ttalloc_free(t);\n+\t\t\treturn NT_STATUS_NO_MEMORY;\n+\t\t}\n+\t} else {\n+\t\tnt_members = NULL;\n \t}\n \n \tfor (i=0; inum_members; i++) {\n\n"}