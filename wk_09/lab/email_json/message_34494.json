{"category": "ham", "to_address": "r-help@stat.math.ethz.ch", "from_address": "Vladimir Eremeev <wl2776@gmail.com>", "subject": "Re: [R] Please, remind a function name", "body": "\nMy solution (after a cup of coffee :) ):\n\nmodel.formula<-switch(model.type,S=[s-model formula],HK=[hk-model formula])\nmodel<-lm(model.formula)\n\n\nGabor Grothendieck wrote:\n> \n> You could use the class dispatching mechanism:\n> \n> \n> mymodel <- function(a, b, method = \"S\") {\n> \t.Class <- method\n> \tNextMethod(\"mymodel\")\n> }\n> \n> mymodel.S <- function(a, b, method = \"S\") cat(\"S:\", a, b, method, \"\\n\")\n> mymodel.HK <- function(a, b, method = \"S\") cat(\"HK:\", a, b, method, \"\\n\")\n> \n> mymodel(1:3, 1:4)\n> mymodel(1:3, 1:4, \"S\")\n> mymodel(1:3, 1:4, \"HK\")\n> \n> \n> \n> On 5/22/07, Vladimir Eremeev  wrote:\n>>\n>> Sorry, I'm stuck. :)\n>>\n>> I am writing a function, which would fit either one linear model or\n>> another\n>> one, depending on its argument model.type.\n>> And I don't want to use several if's, because R allows doing it with much\n>> more beauty.\n>>\n>> That is I am looking for prettier alternative to the following\n>>\n>> AB2C<-function(a,b,model.type=\"S\") { # or HK, and return NULL if this\n>> argument has any other value\n>> [ do some stuff]\n>>\n>>  if(model.type==\"S\") model<-lm( [s.model formula] )\n>>  else if (model.type == \"HK\") model<-lm([hk.model formula])\n>>  else model<-NULL\n>>\n>>  return(model)\n>> }\n>>\n>> I was looking at \"switch\", but didn't come to solution. Sorry <:)\n> \n> \n\n-- \nView this message in context: http://www.nabble.com/Please%2C-remind-a-function-name-tf3797444.html#a10750855\nSent from the R help mailing list archive at Nabble.com.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}