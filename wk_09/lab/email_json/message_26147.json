{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Jelmer Vernooij <jelmer@samba.org>", "subject": "Rev 12127: Use service struct pointers rather than integers where\n\tpossible. in file:///home/jelmer/bzr.samba/SAMBA_4_0/", "body": "At file:///home/jelmer/bzr.samba/SAMBA_4_0/\n\n------------------------------------------------------------\nrevno: 12127\nrevision-id: jelmer@samba.org-20070509120026-tu719814our09bl5\nparent: jelmer@samba.org-20070509112813-hfcw7ovikq4o69bj\ncommitter: Jelmer Vernooij \nbranch nick: SAMBA_4_0\ntimestamp: Wed 2007-05-09 14:00:26 +0200\nmessage:\n  Use service struct pointers rather than integers where possible.\nmodified:\n  source/param/loadparm.c        svn-v2:2@0c0555d6-39d7-0310-84fc-f1cc0bd64818-trunk-source%2fparam%2floadparm.c\n=== modified file 'source/param/loadparm.c'\n--- a/source/param/loadparm.c\t2007-05-09 11:28:13 +0000\n+++ b/source/param/loadparm.c\t2007-05-09 12:00:26 +0000\n@@ -1174,7 +1174,7 @@\n  service. \n ***************************************************************************/\n \n-static int add_a_service(struct loadparm_context *ctx, \n+static struct service *add_a_service(struct loadparm_context *ctx, \n \t\t\t\t\t\t const struct service *pservice, const char *name)\n {\n \tint i;\n@@ -1197,7 +1197,7 @@\n \t\t\t\tdata = pdata;\n \t\t\t}\n \t\t\tctx->ServicePtrs[i]->param_opt = NULL;\n-\t\t\treturn i;\n+\t\t\treturn ctx->ServicePtrs[i];\n \t\t}\n \t}\n \n@@ -1215,7 +1215,7 @@\n \t\t\t\t\t   \n \t\tif (!tsp) {\n \t\t\tDEBUG(0,(\"add_a_service: failed to enlarge ServicePtrs!\\n\"));\n-\t\t\treturn (-1);\n+\t\t\treturn NULL;\n \t\t}\n \t\telse {\n \t\t\tctx->ServicePtrs = tsp;\n@@ -1223,7 +1223,7 @@\n \t\t}\n \t\tif (!ctx->ServicePtrs[ctx->iNumServices]) {\n \t\t\tDEBUG(0,(\"add_a_service: out of memory!\\n\"));\n-\t\t\treturn (-1);\n+\t\t\treturn NULL;\n \t\t}\n \n \t\tctx->iNumServices++;\n@@ -1236,7 +1236,7 @@\n \tcopy_service(ctx->ServicePtrs[i], &tservice, NULL);\n \tif (name)\n \t\tstring_set(ctx, &ctx->ServicePtrs[i]->szService, name);\n-\treturn i;\n+\treturn ctx->ServicePtrs[i];\n }\n \n /***************************************************************************\n@@ -1248,13 +1248,12 @@\n \t\t\t\t const char *pszHomename, int iDefaultService, \n \t\t\t\t const char *user, const char *pszHomedir)\n {\n-\tint i;\n \tpstring newHomedir;\n \n-\ti = add_a_service(ctx, ctx->ServicePtrs[iDefaultService], pszHomename);\n+\tstruct service *svc = add_a_service(ctx, ctx->ServicePtrs[iDefaultService], pszHomename);\n \n-\tif (i < 0)\n-\t\treturn (False);\n+\tif (svc == NULL)\n+\t\treturn false;\n \n \tif (!(*(ctx->ServicePtrs[iDefaultService]->szPath))\n \t    || strequal(ctx->ServicePtrs[iDefaultService]->szPath, lp_pathname(-1))) {\n@@ -1264,16 +1263,16 @@\n \t\tstring_sub(newHomedir,\"%H\", pszHomedir, sizeof(newHomedir)); \n \t}\n \n-\tstring_set(ctx, &ctx->ServicePtrs[i]->szPath, newHomedir);\n+\tstring_set(svc, &svc->szPath, newHomedir);\n \n-\tif (!(*(ctx->ServicePtrs[i]->comment))) {\n+\tif (!(*(svc->comment))) {\n \t\tpstring comment;\n \t\tslprintf(comment, sizeof(comment) - 1,\n \t\t\t \"Home directory of %s\", user);\n-\t\tstring_set(ctx, &ctx->ServicePtrs[i]->comment, comment);\n+\t\tstring_set(ctx, &svc->comment, comment);\n \t}\n-\tctx->ServicePtrs[i]->bAvailable = sDefault.bAvailable;\n-\tctx->ServicePtrs[i]->bBrowseable = sDefault.bBrowseable;\n+\tsvc->bAvailable = sDefault.bAvailable;\n+\tsvc->bBrowseable = sDefault.bBrowseable;\n \n \tDEBUG(3, (\"adding home's share [%s] for user '%s' at '%s'\\n\", pszHomename, \n \t       user, newHomedir));\n@@ -1285,7 +1284,7 @@\n  Add a new service, based on an old one.\n ***************************************************************************/\n \n-int lp_add_service(struct loadparm_context *ctx, \n+struct service *lp_add_service(struct loadparm_context *ctx, \n \t\t\t\t   const char *pszService, int iDefaultService)\n {\n \treturn (add_a_service(ctx, ctx->ServicePtrs[iDefaultService], pszService));\n@@ -1299,25 +1298,25 @@\n \t\t\t\t\t\t  const char *name, const char *fstype)\n {\n \tpstring comment;\n-\tint i = add_a_service(ctx, &sDefault, name);\n+\tstruct service *svc = add_a_service(ctx, &sDefault, name);\n \n-\tif (i < 0)\n-\t\treturn (False);\n+\tif (svc == NULL)\n+\t\treturn false;\n \n \tslprintf(comment, sizeof(comment) - 1,\n \t\t \"%s Service (%s)\", fstype, Globals.szServerString);\n \n-\tstring_set(ctx, &ctx->ServicePtrs[i]->szPath, tmpdir());\n-\tstring_set(ctx, &ctx->ServicePtrs[i]->comment, comment);\n-\tstring_set(ctx, &ctx->ServicePtrs[i]->fstype, fstype);\n-\tctx->ServicePtrs[i]->iMaxConnections = -1;\n-\tctx->ServicePtrs[i]->bAvailable = true;\n-\tctx->ServicePtrs[i]->bRead_only = true;\n-\tctx->ServicePtrs[i]->bPrint_ok = false;\n-\tctx->ServicePtrs[i]->bBrowseable = false;\n+\tstring_set(ctx, &svc->szPath, tmpdir());\n+\tstring_set(ctx, &svc->comment, comment);\n+\tstring_set(ctx, &svc->fstype, fstype);\n+\tsvc->iMaxConnections = -1;\n+\tsvc->bAvailable = true;\n+\tsvc->bRead_only = true;\n+\tsvc->bPrint_ok = false;\n+\tsvc->bBrowseable = false;\n \n \tif (strcasecmp(fstype, \"IPC\") == 0) {\n-\t\tlp_do_parameter(ctx, i, \"ntvfs handler\", \"default\");\n+\t\tstring_set(ctx, &svc->ntvfs_handler, \"default\");\n \t}\n \n \tDEBUG(3, (\"adding hidden service %s\\n\", name));\n@@ -1333,9 +1332,9 @@\n \t\t\t\t\tconst char *pszPrintername, int iDefaultService)\n {\n \tconst char *comment = \"From Printcap\";\n-\tint i = add_a_service(ctx, ctx->ServicePtrs[iDefaultService], pszPrintername);\n+\tstruct service *svc = add_a_service(ctx, ctx->ServicePtrs[iDefaultService], pszPrintername);\n \n-\tif (i < 0)\n+\tif (svc == NULL)\n \t\treturn false;\n \n \t/* note that we do NOT default the availability flag to true - */\n@@ -1344,13 +1343,13 @@\n \t/* entry (if/when the 'available' keyword is implemented!).    */\n \n \t/* the printer name is set to the service name. */\n-\tstring_set(ctx, &ctx->ServicePtrs[i]->szPrintername, pszPrintername);\n-\tstring_set(ctx, &ctx->ServicePtrs[i]->comment, comment);\n-\tctx->ServicePtrs[i]->bBrowseable = sDefault.bBrowseable;\n+\tstring_set(ctx, &svc->szPrintername, pszPrintername);\n+\tstring_set(ctx, &svc->comment, comment);\n+\tsvc->bBrowseable = sDefault.bBrowseable;\n \t/* Printers cannot be read_only. */\n-\tctx->ServicePtrs[i]->bRead_only = false;\n+\tsvc->bRead_only = false;\n \t/* Printer services must be printable. */\n-\tctx->ServicePtrs[i]->bPrint_ok = true;\n+\tsvc->bPrint_ok = true;\n \n \tDEBUG(3, (\"adding printer service %s\\n\", pszPrintername));\n \n@@ -2145,8 +2144,7 @@\n \t\t/* issued by the post-processing of a previous section. */\n \t\tDEBUG(2, (\"Processing section \\\"[%s]\\\"\\n\", pszSectionName));\n \n-\t\tif ((iServiceIndex = add_a_service(ctx, &sDefault, pszSectionName))\n-\t\t    < 0) {\n+\t\tif (add_a_service(ctx, &sDefault, pszSectionName) == NULL) {\n \t\t\tDEBUG(0, (\"Failed to add a new service\\n\"));\n \t\t\treturn false;\n \t\t}\n\n"}