{"category": "ham", "to_address": "\"Tim Wolak\" <twolak@sktydev.com>", "from_address": "\"Rene Schickbauer\" <cavac@magicbooks.org>", "subject": "Re: array and hash patter matching", "body": "\n> Morning all,\n>\n> I am working on a script that reads in /var/log/auth.log,, takes the ip\n> addresses puts them into a hash keeping track of how many times it finds\n> that address and compare it to addresses found in /etc/hosts.deny and\n> only write the addresses that are new in the file.  So far I can get the\n> addresses from the log file no problem and write them to the deny file,\n> however I am struggling on how to compare the hash with an array for any\n> duplicate addresses.  What is the best approach to take with this?\n\nI guess you mean the following part:\n\n> while () {\n>         if ($_ =~ /Invalid user/ || /Failed password for/) {\n>                push @origDeny, $_;\n>        }\n>                 foreach $orig (@origDeny) {\n>                         if ($off =~ /((\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+))/) {\n>                            push @hosts, $1;\n>                                 }\n>                 }\n> }\n> close DENY;\n\n\nYou could change that to something like:\nwhile () {\n        if ($_ =~ /Invalid user/ || /Failed password for/) {\n               push @origDeny, $_;\n       }\n                foreach $orig (@origDeny) {\n                        if ($off =~ /((\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+))/) {\n                          # BAD\n                           #push @hosts, $1;\n\n                          #GOOD {tm}:\n                          # Put every host as KEY into a hash with a TRUE\npseudo-values\n                          # so it is DEFINED ;-)\n                          $badHost{$1} = 1;\n\n                                }\n                }\n}\nclose DENY;\n\nNow, every host is unique. Then:\n\nopen (DENY, \">>/etc/hosts.deny\") or die \"Can't open log file: $!\\n\";\nwhile () {\n        if ($_ =~ /Invalid user/ || /Failed password for/) {\n                if ($off =~ /((\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+))/) {\n                        $host = $1;\n                        if(!defined($badHost{$host}) {\n                           $badHost{$host} = 1; # Remember the baddy\n                           print DENY \"$host\\n\";\n                       }\n                }\n        }\n}\nclose DENY\n\nBtw: use strict and use warnings and don't use barewords...\n\nLLAP & LG\nRene\n\n-- \n-----BEGIN GEEK CODE BLOCK-----\nVersion: 3.1    Visit  to decode\nGCS d- s:- a-- C++$ UBLA*++++$ P++++$ L+$ !E !W+++$ N+ o+ K--?\nw++$ !O M+ V-- PS PE Y+ PGP+ t+ 5 X- !R tv b+++ DI-- D++ G e h-- r-- y+\n------END GEEK CODE BLOCK------\n\n\n-----------------------------------------\nThis E-Mail was sent through MagicMail\n\nDownload our Jump'n'Run \"BlinkenSisters\":\n    http://www.blinkensisters.org\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}