{"category": "ham", "to_address": "\"OtherRecipients of perl Ticket #42360\": ;", "from_address": "\"James Keenan via RT\" <parrotbug-followup@parrotcode.org>", "subject": "[perl #42360] [TODO]:  Unit tests for Parrot::Revision ", "body": "On Tue May 01 15:58:34 2007, particle wrote:\n> > #####\n> > [parrot] 502 $ ack --nohtml --nophp svn_entries\n> > config/gen/revision.pm\n> > 31:    my $entries  = $Parrot::Revision::svn_entries;\n> >\n> >\n> your interpretation is correct. '.svn_entries' is an svn metadata file\n> that's not even available in newer svn releases. Parrot::Revision\n> should never have been mucking with svn internals, anyway, and should\n> now be using the external api to get this info.\n> \n> this code should be ripped out.\n> ~jerry\n> \n\nOkay, but we'll have to look at what to do with config/gen/revision.pm as well.  It contains \nthis code:\n\nsub runstep {\n    my ( $self, $conf ) = @_;\n\n    my $revision = $Parrot::Revision::current;\n    my $entries  = $Parrot::Revision::svn_entries;\n\n    $conf->data->set(\n        revision    => $revision,\n        SVN_ENTRIES => $entries\n    );\n...\n\nHere is the output of 'ack' for SVN_ENTRIES in trunk (post-Configure.pl, in this instance):\n\n[parrot] 521 $ ack --nohtml --nophp SVN_ENTRIES\nconfig/gen/revision.pm\n35:        SVN_ENTRIES => $entries\n\nconfig_lib.pasm\n274:    set P0[\"SVN_ENTRIES\"], P1\n\nlib/Parrot/Config/Generated.pm\n30:             'SVN_ENTRIES' => undef,\n\nThe 'undef' value for key 'SVN_ENTRIES' in the configuration hash is, now, not at all surprising \nand will simply go away when we eliminate the offending code from lib/Parrot/Revision.pm.\n\nBut do we have to do anything with config_lib.pasm?  (I've never patched any .pasm files).\n\nThanks.\n\nkid51\n\n"}