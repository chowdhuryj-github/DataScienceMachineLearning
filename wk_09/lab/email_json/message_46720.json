{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "obnox@samba.org", "subject": "svn commit: samba r23439 - in\n\tbranches/SAMBA_3_0_26/source/registry: .", "body": "Author: obnox\nDate: 2007-06-12 15:33:47 +0000 (Tue, 12 Jun 2007)\nNew Revision: 23439\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23439\n\nLog:\nMerge r20005 from 3_0:\n\nnew function reg_open_path should become the replacement for \nregkey_open_internal\n\nMichael\n\n\nModified:\n   branches/SAMBA_3_0_26/source/registry/reg_frontend.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0_26/source/registry/reg_frontend.c\n===================================================================\n--- branches/SAMBA_3_0_26/source/registry/reg_frontend.c\t2007-06-12 15:13:19 UTC (rev 23438)\n+++ branches/SAMBA_3_0_26/source/registry/reg_frontend.c\t2007-06-12 15:33:47 UTC (rev 23439)\n@@ -599,3 +599,61 @@\n \treturn WERR_ACCESS_DENIED;\n }\n \n+\n+/*\n+ * Utility function to open a complete registry path including the hive\n+ * prefix. This should become the replacement function for\n+ * regkey_open_internal.\n+ */\n+\n+WERROR reg_open_path(TALLOC_CTX *mem_ctx, const char *orig_path,\n+\t\t     uint32 desired_access, const struct nt_user_token *token,\n+\t\t     struct registry_key **pkey)\n+{\n+\tstruct registry_key *hive, *key;\n+\tchar *path, *p;\n+\tWERROR err;\n+\n+\tif (!(path = SMB_STRDUP(orig_path))) {\n+\t\treturn WERR_NOMEM;\n+\t}\n+\n+\tp = strchr(path, '\\\\');\n+\n+\tif ((p == NULL) || (p[1] == '\\0')) {\n+\t\t/*\n+\t\t * No key behind the hive, just return the hive\n+\t\t */\n+\n+\t\terr = reg_openhive(mem_ctx, path, desired_access, token,\n+\t\t\t\t   &hive);\n+\t\tif (!W_ERROR_IS_OK(err)) {\n+\t\t\tSAFE_FREE(path);\n+\t\t\treturn err;\n+\t\t}\n+\t\t*pkey = hive;\n+\t\tSAFE_FREE(path);\n+\t\treturn WERR_OK;\n+\t}\n+\n+\t*p = '\\0';\n+\n+\terr = reg_openhive(mem_ctx, path, SEC_RIGHTS_ENUM_SUBKEYS, token,\n+\t\t\t   &hive);\n+\tif (!W_ERROR_IS_OK(err)) {\n+\t\tSAFE_FREE(path);\n+\t\treturn err;\n+\t}\n+\n+\terr = reg_openkey(mem_ctx, hive, p+1, desired_access, &key);\n+\n+\tTALLOC_FREE(hive);\n+\tSAFE_FREE(path);\n+\n+\tif (!W_ERROR_IS_OK(err)) {\n+\t\treturn err;\n+\t}\n+\n+\t*pkey = key;\n+\treturn WERR_OK;\n+}\n\n"}