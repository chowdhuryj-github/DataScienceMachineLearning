{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "Michael Adam <ma@sernet.de>", "subject": "Rev 5364: Changes of the registry also trigger a reload of\n\tsmb.conf. in http://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/", "body": "At http://samba.sernet.de/ma/bzr/SAMBA_3_0-registry.bzr/\n\n------------------------------------------------------------\nrevno: 5364\nrevision-id: ma@sernet.de-20070416230151-bfcfb70d496cc600\nparent: ma@sernet.de-20070415225054-98f15a01f998d3c6\ncommitter: Michael Adam \nbranch nick: SAMBA_3_0-registry.bzr\ntimestamp: Tue 2007-04-17 01:01:51 +0200\nmessage:\n  Changes of the registry also trigger a reload of smb.conf.\n  \n  This is a first slighty hacked version of a registry watcher\n  in lp_file_list_changed. It uses the regdb sequence number\n  to decide whether the contents of the registry has changed.\n  The hack here is that the call to \"registry_init_regdb()\" \n  is now there in process_registry_shares() and and in \n  lp_file_list_changed(). It is needed in the latter function\n  because when a new smbd process is started, lp_file_list_changed \n  is called before lp_load(). Maybe, I have to think of a better\n  place to call regdb_init()... \nmodified:\n  source/param/loadparm.c        loadparm.c-20060530022627-1efa1edb3eb0e897\n=== modified file 'source/param/loadparm.c'\n--- a/source/param/loadparm.c\t2007-04-15 22:30:33 +0000\n+++ b/source/param/loadparm.c\t2007-04-16 23:01:51 +0000\n@@ -80,6 +80,9 @@\n #define INCLUDE_REGISTRY_NAME \"registry\"\n #endif\n \n+static int regdb_last_seqnum = 0;\n+static BOOL include_registry_globals = False;\n+\n /* some helpful bits */\n #define LP_SNUM_OK(i) (((i) >= 0) && ((i) < iNumServices) && (ServicePtrs != NULL) && ServicePtrs[(i)]->valid)\n #define VALID(i) (ServicePtrs != NULL && ServicePtrs[i]->valid)\n@@ -3084,6 +3087,24 @@\n \n  \tDEBUG(6, (\"lp_file_list_changed()\\n\"));\n \n+\n+\t/* hack - should't this go somewhere else?!\n+\t * now it is here and in process_registry_globals. \n+\t * so whichever function is called first wil init the\n+ \t * regdb. here we need it for querying the regdb seqnum */\n+\tif (!registry_init_regdb()) {\n+\t\tDEBUG(1, (\"Error initializing the registry.\\n\"));\n+\t\treturn False;\n+\t}\n+\n+\tif (include_registry_globals &&\n+\t    (regdb_last_seqnum != regdb_get_seqnum()))\n+\t{\n+\t\tDEBUGADD(6, (\"regdb seqnum changed: old = %d, new = %d\\n\",\n+\t\t\t     regdb_last_seqnum, regdb_get_seqnum()));\n+\t\treturn True;\n+\t}\n+\n \twhile (f) {\n \t\tpstring n2;\n \t\ttime_t mod_time;\n@@ -3193,6 +3214,8 @@\n \t\tsmb_panic(\"Failed to create talloc context!\");\n \t}\n \n+\tinclude_registry_globals = True;\n+\n \t/* It might not bee to clean to have the initialization here.\n \t * If the registry is already initialized, it does not do\n \t * any harm. */\n@@ -3231,7 +3254,7 @@\n \t\t\tpfunc(valname, value->v.sz.str);\n \t\t\tbreak;\n \t\tdefault:\n-\t\t\t/* ignore */\n+\t\t\t/* ignore other types */\n \t\t\tbreak;\n \t\t}\n \t\tTALLOC_FREE(value);\n@@ -3240,6 +3263,8 @@\n \n \tret = pfunc(\"registry shares\", \"yes\");\n \n+\tregdb_last_seqnum = regdb_get_seqnum();\n+\n done:\n \ttalloc_destroy(ctx);\n \treturn ret;\n\n"}