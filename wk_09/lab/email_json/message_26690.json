{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 272: merge from ronnie in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 272\nrevision-id: tridge@samba.org-20070510031558-ckupssp96wzoohkd\nparent: tridge@samba.org-20070510031023-yhipc23awqwfed3s\nparent: sahlberg@ronnie-20070510001058-a7ac6eddce1344a8\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Thu 2007-05-10 13:15:58 +1000\nmessage:\n  merge from ronnie\nmodified:\n  direct/ctdb_recoverd.c         recoverd.c-20070503213540-bvxuyd9jm1f7ig90-1\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  tools/ctdb_control.c           ctdb_control.c-20070426122705-9ehj1l5lu2gn9kuj-1\n    ------------------------------------------------------------\n    revno: 197.1.97\n    merged: sahlberg@ronnie-20070510001058-a7ac6eddce1344a8\n    parent: sahlberg@ronnie-20070510000321-89f72cadfa94fb77\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 10:10:58 +1000\n    message:\n      create a correct vnnmap structure to prevent a segv\n    ------------------------------------------------------------\n    revno: 197.1.96\n    merged: sahlberg@ronnie-20070510000321-89f72cadfa94fb77\n    parent: sahlberg@ronnie-20070509234814-caea2e55dd3bc4e7\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 10:03:21 +1000\n    message:\n      update ctdb_control to create a correct ctdb_vnn_map->map array\n    ------------------------------------------------------------\n    revno: 197.1.95\n    merged: sahlberg@ronnie-20070509234814-caea2e55dd3bc4e7\n    parent: sahlberg@ronnie-20070509234610-5cdd047d69014c36\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 09:48:14 +1000\n    message:\n      when starting a new election, also force all nodes into recovery mode so \n      there is no internode traffic to interfere with our election\n    ------------------------------------------------------------\n    revno: 197.1.94\n    merged: sahlberg@ronnie-20070509234610-5cdd047d69014c36\n    parent: sahlberg@ronnie-20070509234428-38b8689cb7bd25fe\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 09:46:10 +1000\n    message:\n      when starting recovery repoint dmaster to an invalid node and not the \n      current vnn\n    ------------------------------------------------------------\n    revno: 197.1.93\n    merged: sahlberg@ronnie-20070509234428-38b8689cb7bd25fe\n    parent: sahlberg@ronnie-20070509234301-c9fe15e2fffd523e\n    parent: tridge@samba.org-20070509222226-gxev7f84ugyfdkti\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 09:44:28 +1000\n    message:\n      merge from tridge\n    ------------------------------------------------------------\n    revno: 197.1.92\n    merged: sahlberg@ronnie-20070509234301-c9fe15e2fffd523e\n    parent: sahlberg@ronnie-20070509205528-ea549e31fa9af90b\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 09:43:01 +1000\n    message:\n      actually check the remote nodes and not just the local node\n    ------------------------------------------------------------\n    revno: 197.1.91\n    merged: sahlberg@ronnie-20070509205528-ea549e31fa9af90b\n    parent: sahlberg@ronnie-20070509040811-460ac8e7d6691f7f\n    parent: tridge@samba.org-20070509015437-c9u6pubosc3jz0um\n    committer: Ronnie Sahlberg \n    branch nick: ctdb\n    timestamp: Thu 2007-05-10 06:55:28 +1000\n    message:\n      merge from tridge\n=== modified file 'direct/ctdb_recoverd.c'\n--- a/direct/ctdb_recoverd.c\t2007-05-10 03:10:23 +0000\n+++ b/direct/ctdb_recoverd.c\t2007-05-10 03:15:58 +0000\n@@ -381,7 +381,7 @@\n \t/* repoint all local and remote database records to an invalid\n \t   node as being dmaster to stop the shortcut from working\n \t */\n-\tret = update_dmaster_on_all_databases(ctdb, nodemap, vnn, dbmap, mem_ctx);\n+\tret = update_dmaster_on_all_databases(ctdb, nodemap, 0xffffffff, dbmap, mem_ctx);\n \tif (ret != 0) {\n \t\tDEBUG(0, (__location__ \"Unable to update dmaster on all databases\\n\"));\n \t\treturn -1;\n@@ -546,6 +546,13 @@\n static void force_election(struct ctdb_context *ctdb, TALLOC_CTX *mem_ctx, uint32_t vnn, struct ctdb_node_map *nodemap)\n {\n \tint ret;\n+\n+\t/* set all nodes to recovery mode to stop all internode traffic */\n+\tret = set_recovery_mode(ctdb, nodemap, CTDB_RECOVERY_ACTIVE);\n+\tif (ret!=0) {\n+\t\tDEBUG(0, (__location__ \"Unable to set recovery mode to active on cluster\\n\"));\n+\t\treturn;\n+\t}\n \t\n \tret = send_election_request(ctdb, mem_ctx, vnn);\n \tif (ret!=0) {\n@@ -657,7 +664,7 @@\n \t\t\tcontinue;\n \t\t}\n \n-\t\tret = ctdb_ctrl_getrecmaster(ctdb, timeval_current_ofs(1, 0), vnn, &recmaster);\n+\t\tret = ctdb_ctrl_getrecmaster(ctdb, timeval_current_ofs(1, 0), nodemap->nodes[j].vnn, &recmaster);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(0, (__location__ \"Unable to get recmaster from node %u\\n\", vnn));\n \t\t\tgoto again;\n@@ -679,7 +686,7 @@\n \t\t\tcontinue;\n \t\t}\n \n-\t\tret = ctdb_ctrl_getrecmode(ctdb, timeval_current_ofs(1, 0), vnn, &recmode);\n+\t\tret = ctdb_ctrl_getrecmode(ctdb, timeval_current_ofs(1, 0), nodemap->nodes[j].vnn, &recmode);\n \t\tif (ret != 0) {\n \t\t\tDEBUG(0, (\"Unable to get recmode from node %u\\n\", vnn));\n \t\t\tgoto again;\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-05-09 22:13:19 +0000\n+++ b/include/ctdb_private.h\t2007-05-10 03:15:58 +0000\n@@ -260,18 +260,22 @@\n \n \n #define CTDB_NO_MEMORY(ctdb, p) do { if (!(p)) { \\\n+          DEBUG(0,(\"Out of memory for %s at %s\\n\", #p, __location__)); \\\n           ctdb_set_error(ctdb, \"Out of memory at %s:%d\", __FILE__, __LINE__); \\\n \t  return -1; }} while (0)\n \n #define CTDB_NO_MEMORY_VOID(ctdb, p) do { if (!(p)) { \\\n+          DEBUG(0,(\"Out of memory for %s at %s\\n\", #p, __location__)); \\\n           ctdb_set_error(ctdb, \"Out of memory at %s:%d\", __FILE__, __LINE__); \\\n \t  }} while (0)\n \n #define CTDB_NO_MEMORY_NULL(ctdb, p) do { if (!(p)) { \\\n+          DEBUG(0,(\"Out of memory for %s at %s\\n\", #p, __location__)); \\\n           ctdb_set_error(ctdb, \"Out of memory at %s:%d\", __FILE__, __LINE__); \\\n \t  return NULL; }} while (0)\n \n #define CTDB_NO_MEMORY_FATAL(ctdb, p) do { if (!(p)) { \\\n+          DEBUG(0,(\"Out of memory for %s at %s\\n\", #p, __location__)); \\\n           ctdb_fatal(ctdb, \"Out of memory in \" __location__ ); \\\n \t  }} while (0)\n \n\n=== modified file 'tools/ctdb_control.c'\n--- a/tools/ctdb_control.c\t2007-05-09 22:49:57 +0000\n+++ b/tools/ctdb_control.c\t2007-05-10 03:15:58 +0000\n@@ -604,13 +604,14 @@\n \tgeneration = strtoul(argv[1], NULL, 0);\n \tnum_nodes  = strtoul(argv[2], NULL, 0);\n \n-\tvnnmap = talloc_zero_size(ctdb, offsetof(struct ctdb_vnn_map, map) + 4*num_nodes);\n-\tif (vnnmap == NULL) {\n-\t\tDEBUG(0,(__location__ \" Unable to allocate vnn_map structure\\n\"));\n-\t\texit(1);\n-\t}\n+\tvnnmap = talloc(ctdb, struct ctdb_vnn_map);\n+\tCTDB_NO_MEMORY(ctdb, vnnmap);\n+\n \tvnnmap->generation = generation;\n \tvnnmap->size       = num_nodes;\n+\tvnnmap->map        = talloc_array(vnnmap, uint32_t, vnnmap->size);\n+\tCTDB_NO_MEMORY(ctdb, vnnmap->map);\n+\n \tfor (i=0;isize;i++) {\n \t\tvnnmap->map[i] = strtoul(argv[3+i], NULL, 0);\n \t}\n\n"}