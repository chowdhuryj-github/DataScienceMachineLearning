{"category": "ham", "to_address": "\"Luke Palmer\" <lrpalmer@gmail.com>", "from_address": "Uri Guttman <uri@stemsystems.com>", "subject": "Re: [svn:perl6-synopsis] r14376 - doc/trunk/design/syn", "body": ">>>>> \"LP\" == Luke Palmer  writes:\n\n  LP> On 4/17/07, larry@cvs.perl.org  wrote:\n  >> Note that unless no longer allows an else\n\n  LP> Hmm, that's interesting.  I don't _think_ I'm opposed, but maybe I am.\n  LP>  The main case that I can see this limiting me is where I like to put\n  LP> my error conditions at the end of my code, out of the way, like so:\n\n  LP>     unless $.something {\n  LP>         $.something = UsefulData.new;\n  LP>     }\n  LP>     else {\n  LP>         die \"Something exists!\";\n  LP>     }\n\n  LP> I don't want to switch the order of those blocks, and switching the\n  LP> condition to \"if !$.something\" defeats the whole purpose of unless.\n\nin perl5 i like to get the quick stuff like next/last/die out of the\nway. it saves a block, indents and else clauses. something like this in\np6 (just your code edited):\n\n\tdie \"Something exists!\" if $.something ;\n\n\t$.something = UsefulData.new;\n\ni don't like unnecessary blocks and indents if i can help it. unless\nwith else is very confusing and i never used that. i try to keep my\nunless clauses to be very simple. anything complex and i revert to if.\n\nuri\n\n-- \nUri Guttman  ------  uri@stemsystems.com  -------- http://www.stemsystems.com\n--Perl Consulting, Stem Development, Systems Architecture, Design and Coding-\nSearch or Offer Perl Jobs  ----------------------------  http://jobs.perl.org\n\n"}