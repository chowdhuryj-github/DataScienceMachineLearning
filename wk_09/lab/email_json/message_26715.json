{"category": "ham", "to_address": "mister_bluesman <mister_bluesman@hotmail.com>", "from_address": "Jim Lemon <jim@bitwrit.com.au>", "subject": "Re: [R] Representing a statistic as a colour on a 2d plot", "body": "mister_bluesman wrote:\n> Ive been getting the color.scale function to work. However, I really need to\n> know is that if i have values: 0.1 0.2, 0.3, 0.4, 0.5, for example, how I\n> can plot these using colours that would be different if the contents of the\n> file were 0.6, 0.7, 0.8, 0.9 and 1.0. Using color.scale scales them so that\n> they differ, but only relative to each other, rather than taking the actual\n> value and converting them to some unique colour/colour intensity.\n> \n> Many thanks\n> \nThere are a couple of ways to go about this. If you know that there are \nsay ten possible values, you can use the color.gradient function to \nassign ten colors across a particular range. Then you would have to map \nthe colors to the numbers (I would do something like creating a two \nelement list of the sorted unique numbers and the colors. Then assign \nthe color vector for the plot from this list.) Note that both \ncolor.scale and color.gradient are aimed at producing colors that \nvisually represent some range like cold(blue) to hot(red). If you just \nwant to get 20 easily discriminated colors and assign them to values, \nyou might be better off with ColorBrewer.\n\nJim\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}