{"category": "ham", "to_address": "Allison Randal <allison@perl.org>", "from_address": "\"Patrick R. Michaud\" <pmichaud@pobox.com>", "subject": "Re: PIR syntax methods ambiguity", "body": "On Tue, May 08, 2007 at 12:38:43PM -0700, Allison Randal wrote:\n> Patrick R. Michaud wrote:\n> >\n> >Well, since I've only come across a single case where the\n> >method I needed to call was in a String PMC, I've never found\n> >it annoying.  But again, perhaps that's just me and it really is\n> >a big annoyance to other PIR programmers.  :-)\n> \n> Oh, I was talking about a complete solution to the ambiguity: no string \n> method calls at all, only method PMC objects. So, eliminate these too:\n> \n> object.methodname()\n> object.'methodname'()\n> object.$S1()\n> \n> I guess your proposal was much more conservative.\n\nCorrect, I was only referring to the case where a PMC is a\nString holding a method name -- I've not really come across that\nas being a common case in the programming that I do.\n\nOf the three cases given above, the only one that really looks \nambiguous to me is the first one, because methodname could be \neither a bareword string or as a locally defined symbol.  For \nall the PIR code I work with I've been slowly-but-surely \nconverting any instances of the first to either explicitly \nuse quotes on the method name or (much less frequently) \nexplicitly use a $P register.\n\nBased on an informal frequency analysis of the PIR I've written\nby hand (as well as the syntax used by other OO languages \nI typically frequent), it would seem that it would be preferable \nto have\n\n   object.methodname()\n\nas always meaning\n\n   object.'methodname'()\n\nand that special syntax characters be used for the case where\nwe're invoking a method by something other than a constant string\nname.\n\n   object.$P0()          # invoke method $P0 on object\n   object.$S0()          # invoke method named $S0 on object\n   object.??methodname() # left as an exercise for the architect to\n                           decide what should go in place of '??'\n\nPm\n\n"}