{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "mimir@samba.org", "subject": "svn commit: samba r23124 - in\n\tbranches/SAMBA_4_0/source/scripting/ejs/ejsnet: .", "body": "Author: mimir\nDate: 2007-05-24 21:44:27 +0000 (Thu, 24 May 2007)\nNew Revision: 23124\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23124\n\nLog:\nadd host subcontext providing (at the moment) list of domains\nhosted on the server.\n\n\nrafal\n\n\nAdded:\n   branches/SAMBA_4_0/source/scripting/ejs/ejsnet/mpr_host.c\n   branches/SAMBA_4_0/source/scripting/ejs/ejsnet/net_host.c\nModified:\n   branches/SAMBA_4_0/source/scripting/ejs/ejsnet/config.mk\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/scripting/ejs/ejsnet/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/scripting/ejs/ejsnet/config.mk\t2007-05-24 21:29:15 UTC (rev 23123)\n+++ branches/SAMBA_4_0/source/scripting/ejs/ejsnet/config.mk\t2007-05-24 21:44:27 UTC (rev 23124)\n@@ -2,7 +2,9 @@\n OBJ_FILES = \\\n \t\tnet_ctx.o \\\n \t\tnet_user.o \\\n-\t\tmpr_user.o\n+\t\tmpr_user.o \\\n+\t\tnet_host.o \\\n+\t\tmpr_host.o\n SUBSYSTEM = smbcalls\n INIT_FUNCTION = smb_setup_ejs_net\n PRIVATE_PROTO_HEADER = proto.h\n\nAdded: branches/SAMBA_4_0/source/scripting/ejs/ejsnet/mpr_host.c\n===================================================================\n--- branches/SAMBA_4_0/source/scripting/ejs/ejsnet/mpr_host.c\t2007-05-24 21:29:15 UTC (rev 23123)\n+++ branches/SAMBA_4_0/source/scripting/ejs/ejsnet/mpr_host.c\t2007-05-24 21:44:27 UTC (rev 23124)\n@@ -0,0 +1,75 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+\n+   provides interfaces to libnet calls from ejs scripts\n+\n+   Copyright (C) Rafal Szczesniak  2005-2007\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+\n+#include \"includes.h\"\n+#include \"lib/appweb/ejs/ejs.h\"\n+#include \"libnet/libnet.h\"\n+#include \"scripting/ejs/smbcalls.h\"\n+#include \"events/events.h\"\n+#include \"auth/credentials/credentials.h\"\n+\n+\n+/*\n+  Properties:\n+  DomainsList.Domains[0]\n+  DomainsList.Status\n+*/\n+struct MprVar mprDomainsList(TALLOC_CTX *mem_ctx, struct libnet_DomainList *list, NTSTATUS result)\n+{\n+\tconst char *name = \"DomainsList\";\n+\tNTSTATUS status;\n+\tstruct MprVar mprDomainList, mprDomains;\n+\tstruct MprVar mprSid, mprDomainName;\n+\tstruct MprVar mprDomain;\n+\tint i;\n+\n+\tif (list == NULL || mem_ctx == NULL) {\n+\t\tmprDomainList = mprCreateNullVar();\n+\t\tgoto done;\n+\t}\n+\n+\tmprDomains = mprArray(\"Domains\");\n+\tfor (i = 0; i < list->out.count; i++) {\n+\t\tstruct domainlist d = list->out.domains[i];\n+\n+\t\t/* get domainlist fields */\n+\t\tmprSid        = mprString(d.sid);\n+\t\tmprDomainName = mprString(d.name);\n+\n+\t\tmprDomain = mprObject(\"Domain\");\n+\t\tmprSetVar(&mprDomain, \"Name\", mprDomainName);\n+\t\tmprSetVar(&mprDomain, \"SID\", mprSid);\n+\n+\t\tmprAddArray(&mprDomains, i, mprDomain);\n+\t}\n+\n+\tmprDomainList = mprObject(name);\n+\tstatus = mprSetVar(&mprDomainList, \"Domains\", mprDomains);\n+\tif (!NT_STATUS_IS_OK(status)) goto done;\n+\tstatus = mprSetVar(&mprDomainList, \"Count\", mprCreateIntegerVar(list->out.count));\n+\tif (!NT_STATUS_IS_OK(status)) goto done;\n+\tstatus = mprSetVar(&mprDomainList, \"Status\", mprNTSTATUS(result));\n+\n+done:\n+\treturn mprDomainList;\n+}\n\nAdded: branches/SAMBA_4_0/source/scripting/ejs/ejsnet/net_host.c\n===================================================================\n--- branches/SAMBA_4_0/source/scripting/ejs/ejsnet/net_host.c\t2007-05-24 21:29:15 UTC (rev 23123)\n+++ branches/SAMBA_4_0/source/scripting/ejs/ejsnet/net_host.c\t2007-05-24 21:44:27 UTC (rev 23124)\n@@ -0,0 +1,125 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+\n+   provides interfaces to libnet calls from ejs scripts\n+\n+   Copyright (C) Rafal Szczesniak  2005-2007\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+\n+#include \"includes.h\"\n+#include \"lib/appweb/ejs/ejs.h\"\n+#include \"libnet/libnet.h\"\n+#include \"scripting/ejs/ejsnet/proto.h\"\n+#include \"scripting/ejs/smbcalls.h\"\n+#include \"events/events.h\"\n+#include \"auth/credentials/credentials.h\"\n+\n+\n+static int ejs_net_domainlist(MprVarHandle eid, int argc, char **argv);\n+\n+\n+/*\n+  Usage:\n+  hostCtx = net.HostMgr(hostname = )\n+*/\n+int ejs_net_hostman(MprVarHandle eid, int argc, struct MprVar** argv)\n+{\n+\tstruct libnet_context *ctx;\n+\tconst char *hostname;\n+\tstruct MprVar obj;\n+\n+\t/* libnet context */\n+\tctx = mprGetThisPtr(eid, \"ctx\");\n+\tif (ctx == NULL) {\n+\t\tejsSetErrorMsg(eid, \"ctx property returns null pointer\");\n+\t\treturn 0;\n+\t}\n+\n+\t/* fetch the arguments: host name */\n+\tif (argc == 0) {\n+\t\t/* default host (machine) name is supplied in credentials */\n+\t\thostname = cli_credentials_get_workstation(ctx->cred);\n+\n+\t} else if (argc == 1 && mprVarIsString(argv[0]->type)) {\n+\t\t/* host name has been specified */\n+\t\thostname = mprToString(argv[0]);\n+\n+\t} else {\n+\t\tejsSetErrorMsg(eid, \"too many arguments\");\n+\t\treturn 0;\n+\t}\n+\n+\t/* create the NetHostCtx object */\n+\tobj = mprObject(\"NetHostCtx\");\n+\t\n+\t/* create a copy of the string for the object */\n+\thostname = talloc_strdup(ctx, hostname);\n+\n+\t/* add internal libnet_context pointer to the NetHostCtx object */\n+\tmprSetPtrChild(&obj, \"ctx\", ctx);\n+\tmprSetPtrChild(&obj, \"hostname\", hostname);\n+\t\n+\t/* add methods to the object */\n+\tmprSetStringCFunction(&obj, \"DomainList\", ejs_net_domainlist);\n+\n+\t/* set the object returned by this function */\n+\tmpr_Return(eid, obj);\n+\n+\treturn 0;\n+}\n+\n+\n+static int ejs_net_domainlist(MprVarHandle eid, int argc, char **argv)\n+{\n+\tNTSTATUS status;\n+\tTALLOC_CTX *mem_ctx;\n+\tconst char* hostname;\n+\tstruct libnet_context *ctx;\n+\tstruct libnet_DomainList req;\n+\tstruct MprVar mprDomains;\n+\n+\tmem_ctx = talloc_new(mprMemCtx());\n+\tif (mem_ctx == NULL) {\n+\t\tejsSetErrorMsg(eid, \"could not create memory context - out of memory\");\n+\t\tgoto done;\n+\t}\n+\n+\t/* libnet context */\n+\tctx = mprGetThisPtr(eid, \"ctx\");\n+\tif (ctx == NULL) {\n+\t\tejsSetErrorMsg(eid, \"ctx property returns null pointer\");\n+\t\tgoto done;\n+\t}\n+\n+\thostname = mprGetThisPtr(eid, \"hostname\");\n+\tif (hostname == NULL) {\n+\t\tejsSetErrorMsg(eid, \"hostname property returns null pointer\");\n+\t\tgoto done;\n+\t}\n+\n+\t/* call the libnet function */\n+\treq.in.hostname = hostname;\n+\t\n+\tstatus = libnet_DomainList(ctx, mem_ctx, &req);\n+\tmprDomains = mprDomainsList(mem_ctx, &req, status);\n+\n+done:\n+\ttalloc_free(mem_ctx);\n+\tmpr_Return(eid, mprDomains);\n+\treturn 0;\n+}\n\n"}