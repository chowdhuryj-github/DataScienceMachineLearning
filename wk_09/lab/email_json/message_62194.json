{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"thebarncat@gmail.com\" <thebarncat@gmail.com>", "subject": "Re: hash comparison ideas", "body": "On Jul 4, 2:05 am, kra...@telus.net (John W. Krahn) wrote:\n>\n> > I have  a script which contains 2 hashes of file names as the keys and\n> > md5 sums as the values. I am looking for ideas on fast and efficient\n> > ways to compare the 2 hashes in the manner of the pseudo code below\n>\n> Can you fill us in on the big picture?  Perhaps you need a hash of arrays\n> where the keys are the md5 sums and the values are arrays of file names?\n\nthe base hash is an initial collection of current file names and check\nsums.  the script is kind of a poor man's incremental backup. here is\na snippet. the files_db hash (base hash) comes from a file\n--\nmy %files;\nfind sub {\n\t$path = $File::Find::dir;\n\t(my $tpath = $path) =~ s/^c:/$target/;\n\tmkpath ($tpath, {verbose => 1} ) unless -e $tpath;\n\tif ( -f ) {\n\t       # copy any files that don't exists at all on target\n\t      (my $tname = $name) =~ s/^c:/$target/;\n\t      copy ($name, $tpath) and print \"copying $name\\n\"  unless -e\n$tname;\n\n\t      open F,  $_ or do {\n        \t      warn \"Cannot open '$File::Find::name' $!\";\n        \t      return;\n                      };\n\n\t     binmode(F);\n\t     my $digest = Digest::MD5->new;\n\t     $digest->addfile(*F);\n\t     my $sum = $digest->hexdigest;\n\n\t    $files{$name} = $sum;\n\t    if ( exists $files_db{$name} and ( $files{$name} ==\n$files_db{$name} ) ) {\n                                ####\n\t\t# **compare sums and do stuff here**\n\t   }\n            }\n\n}, $dir;\n\n--\n\ni am not sure how hash of arrays will help as each key = 1 sum  and\nvice versa\nThanks for your help and any suggestions\nJim\n\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}