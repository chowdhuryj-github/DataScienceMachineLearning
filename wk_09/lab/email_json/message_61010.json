{"category": "ham", "to_address": "Amichai Teumim <amichai@teumim.com>", "from_address": "Jeff Pang <pangj@earthlink.net>", "subject": "Re: TWO loops and ONE if statement", "body": "Amichai Teumim \\u5199\\u9053:\n> Hi guys\n> \n> You guys have been giving me some very good ideas. Very efficent ways\n> of doing things.\n> For this excercise that I'm trying to figure out I actually need the\n> following inefficient way:\n> \n> \n> \n> #!/usr/bin/perl\n> \n> @array = (5,3,2,1,4);\n> \n> ## include your code here ##\n> \n> foreach $elem (@array){\n>  print \"$elem\";\n> }\n> \n> I need to sort the @array from lowest to highest using TWO loops and\n> ONE if statement. That's why it's so confusing.\n> I could use a one liner to do all this. I need to do it however as\n> above mentioned.\n> \n> How can I do this?\n> \n\nWhy not Perl's built-in sort function?\n$ perl -e '@x=(3,2,1,4,5);@x = sort {$a<=>$b} @x;print \"@x\"'\n1 2 3 4 5\n\nsee perldoc -f sort\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}