{"category": "ham", "to_address": "perl6-language@perl.org", "from_address": "larry@cvs.develooper.com", "subject": "[svn:perl6-synopsis] r14405 - doc/trunk/design/syn", "body": "Author: larry\nDate: Tue May 29 11:14:43 2007\nNew Revision: 14405\n\nModified:\n   doc/trunk/design/syn/S03.pod\n\nLog:\nClarification of x and xx semantics requested by chas.owens++\n\n\nModified: doc/trunk/design/syn/S03.pod\n==============================================================================\n--- doc/trunk/design/syn/S03.pod\t(original)\n+++ doc/trunk/design/syn/S03.pod\tTue May 29 11:14:43 2007\n@@ -12,9 +12,9 @@\n \n   Maintainer: Larry Wall \n   Date: 8 Mar 2004\n-  Last Modified: 26 Apr 2007\n+  Last Modified: 29 May 2007\n   Number: 3\n-  Version: 114\n+  Version: 115\n \n =head1 Overview\n \n@@ -545,13 +545,32 @@\n \n infix:, string replication\n \n-    x\n+    $string x $count\n+\n+Evaluates the left argument in string context, replicates the resulting\n+string value the number of time specified by the right argument and\n+returns the result as a single concatenated string regardless of context.\n+\n+If the count is less than 1, returns the null string.\n+The count may not be C<*> because Perl 6 does not support\n+infinite strings.  (At least, not yet...)\n \n =item *\n \n infix:, list replication\n \n-    xx\n+    @list xx $count\n+\n+Evaluates the left argument in list context, replicates the resulting\n+Capture value the number of time specified by the right argument and\n+returns the result in a context dependent fashion.  If the operator\n+is being evaluated in ordinary list context, the operator returns a\n+flattened list.  In C<@@> context, the operator converts each Capture\n+to a separate sublist and returns the list of those sublists.\n+\n+If the count is less than 1, returns the empty list, C<()>.\n+If the count is C<*>, returns an infinite list (lazily, since lists\n+are lazy by default).\n \n =item *\n \n\n"}