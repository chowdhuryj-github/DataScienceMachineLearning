{"category": "ham", "to_address": "martin sikora <martin.sikora@upf.edu>", "from_address": "Adaikalavan Ramasamy <ramasamy@cancer.org.uk>", "subject": "Re: [R] speed and looping issues; calculations on big datasets", "body": "I don't fully understand what your objective here, but I would try a \ncombination of cut and grep in a shell to see if it works. For example, \nif your data was saved as a tab-delimited file and you have some \npredefined patterns you seek, then try the untested code below\n\n  cut -f3-6 | gsub 's/ //g' > tmp\n  grep \"^00\" tmp | wc >> rightA\n  grep \"^001\" tmp | wc >> rightB\n  grep \"^010|^0011\" tmp | wc >> rightC\n\n  cut -f1-3 | | gsub 's/ //g'\n  grep \"00$ | wc > leftA\n  grep \"000$|001$\" | wc > leftB\n\nThen you got to write a loop and generalise the codes. You can try this \nin bash, perl or rewrite it in C.\n\nIf you want more help, the provide more explanation on what the types of \npattern you are looking for. You might want to try checking the \nBioConductor packages as well.\n\nRegards, Adai\n\n\n\nmartin sikora wrote:\n> dear r users,\n> \n> i'm a little stuck with the following problem(s), hopefully somebody  \n> can offer some help:\n> \n> i have data organized in a binary matrix, which can become quite big  \n> like 60 rows x 10^5 columns (they represent SNP genotypes, for some  \n> background info). what i need to do is the following:\n> \n> let's suppose i have a matrix of size n x m. for each of the m  \n> columns, i want to know the counts of unique rows extended one by one  \n> from the \"core\" column, for both values at the \"core\" separately and  \n> in both directions. maybe better explained with a little example.\n> \n> data:\n> \n> 00 0 010\n> 10 1 001\n> 11 1 011\n> 10 0 011\n> 10 0 010\n> \n> so the extended unique rows & counts taking e.g. column 3 as \"core\" are:\n> \n> col 3 = 0:\n> right:\n> patterns / counts\n> 00 / 3\n> 001 / 3\n> 010, 0011 / 2,1\n> \n> left:\n> 00 / 3\n> 000,001 / 1,2\n> \n> and that for the other subset ( col3 = 1) as well, then doing the  \n> whole thing again for the next \"core\" column. the reason i need this  \n> counts is that i want to calculate frequencies of the different  \n> extended sequences to calculate the probability of drawing two  \n> identical sequences from the core up to an extended position from the  \n> whole set of sequences.\n> \n> my main problem is speed of the calculations. i tried different ways  \n> suggested here in the list of getting the counts of the unique rows,  \n> all of them using the \"table\" function. both a combination of table \n> ( do.call( paste, c( as.data.frame( mymatrix) ) ) ) or table( apply \n> ( mymatrix , 2 , paste , collapse =\"\" ) ) work fine, but are too slow  \n> for bigger matrices that i want to calculate (at least in my not very  \n> sophisticated function). then i found a great suggestion here to do a  \n> matrix multiplication with a vector of 2^(0:ncol-1) to convert each  \n> row into a decimal number, and do table on those. this speeds up  \n> things quite nicely, although the problem is that it of course does  \n> not work as soon as i extended for more than 60 columns, because the  \n> decimal numbers get to large to accurately distinguish between a 0  \n> and 1 at the smallest digit:\n> \n>  > 2^60+2 == 2^60\n> [1] TRUE\n> \n> another thing is that so far i could not come up with an idea on how  \n> or if it is possible to do this without the loops i am using, one  \n> large loop for each column in turn as core, and then another loop  \n> within that extends the rows by growing column numbers. since i am  \n> not the best of programmers (and still quite new to R), i was hoping  \n> that somebody has some advice on doing this calculations in a more  \n> elegant and more importantly, fast way.\n> just to get the idea, the approach with the matrix multiplication  \n> takes 20s for a 60 x 220 matrix on my macbook pro, which is obviously  \n> not perfect, considering i would like to use this function for  \n> matrices of size 10^2 x 10^5 or even more.\n> \n> so i would be very thankful for any ideas, suggestions etc to improve  \n> this\n> \n> cheers\n> martin\n> \n> ______________________________________________\n> R-help@stat.math.ethz.ch mailing list\n> https://stat.ethz.ch/mailman/listinfo/r-help\n> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n> and provide commented, minimal, self-contained, reproducible code.\n> \n> \n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}