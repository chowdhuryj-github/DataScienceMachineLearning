{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "gd@samba.org", "subject": "svn commit: samba r22460 - in branches/SAMBA_3_0/source/libads: .", "body": "Author: gd\nDate: 2007-04-22 15:15:00 +0000 (Sun, 22 Apr 2007)\nNew Revision: 22460\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22460\n\nLog:\nAdding a generic ads_ranged_search() function.\n\nGuenther\n\nModified:\n   branches/SAMBA_3_0/source/libads/ldap_utils.c\n\n\nChangeset:\nModified: branches/SAMBA_3_0/source/libads/ldap_utils.c\n===================================================================\n--- branches/SAMBA_3_0/source/libads/ldap_utils.c\t2007-04-22 15:13:50 UTC (rev 22459)\n+++ branches/SAMBA_3_0/source/libads/ldap_utils.c\t2007-04-22 15:15:00 UTC (rev 22460)\n@@ -46,7 +46,7 @@\n \tbp = SMB_STRDUP(bind_path);\n \n \tif (!bp) {\n-\t\treturn ADS_ERROR_NT(NT_STATUS_NO_MEMORY);\n+\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n \t}\n \n \t*res = NULL;\n@@ -163,6 +163,30 @@\n \t\t\t\t\t\"(objectclass=*)\", attrs, &args, res);\n }\n \n+ ADS_STATUS ads_search_retry_extended_dn_ranged(ADS_STRUCT *ads, TALLOC_CTX *mem_ctx, \n+\t\t\t\t\t\tconst char *dn, \n+\t\t\t\t\t\tconst char **attrs,\n+\t\t\t\t\t\tenum ads_extended_dn_flags flags,\n+\t\t\t\t\t\tchar ***strings,\n+\t\t\t\t\t\tsize_t *num_strings)\n+{\n+\tads_control args;\n+\n+\targs.control = ADS_EXTENDED_DN_OID;\n+\targs.val = flags;\n+\targs.critical = True;\n+\n+\t/* we can only range process one attribute */\n+\tif (!attrs || !attrs[0] || attrs[1]) {\n+\t\treturn ADS_ERROR_NT(NT_STATUS_INVALID_PARAMETER);\n+\t}\n+\n+\treturn ads_ranged_search(ads, mem_ctx, LDAP_SCOPE_BASE, dn, \n+\t\t\t\t \"(objectclass=*)\", &args, attrs[0],\n+\t\t\t\t strings, num_strings);\n+\n+}\n+\n  ADS_STATUS ads_search_retry_sid(ADS_STRUCT *ads, LDAPMessage **res, \n \t\t\t\t const DOM_SID *sid,\n \t\t\t\t const char **attrs)\n@@ -187,4 +211,152 @@\n \treturn status;\n }\n \n+ADS_STATUS ads_ranged_search(ADS_STRUCT *ads, \n+\t\t\t     TALLOC_CTX *mem_ctx,\n+\t\t\t     int scope,\n+\t\t\t     const char *base,\n+\t\t\t     const char *filter,\n+\t\t\t     void *args,\n+\t\t\t     const char *range_attr,\n+\t\t\t     char ***strings,\n+\t\t\t     size_t *num_strings)\n+{\n+\tADS_STATUS status;\n+\tuint32 first_usn;\n+\tint num_retries = 0;\n+\tconst char **attrs;\n+\tBOOL more_values = False;\n+\n+\t*num_strings = 0;\n+\t*strings = NULL;\n+\n+\tattrs = TALLOC_ARRAY(mem_ctx, const char *, 3);\n+\tADS_ERROR_HAVE_NO_MEMORY(attrs);\n+\n+\tattrs[0] = talloc_strdup(mem_ctx, range_attr);\n+\tattrs[1] = talloc_strdup(mem_ctx, \"usnChanged\");\n+\tattrs[2] = NULL;\n+\n+\tADS_ERROR_HAVE_NO_MEMORY(attrs[0]);\n+\tADS_ERROR_HAVE_NO_MEMORY(attrs[1]);\n+\n+\tdo {\n+\t\tstatus = ads_ranged_search_internal(ads, mem_ctx, \n+\t\t\t\t\t\t    scope, base, filter, \n+\t\t\t\t\t\t    attrs, args, range_attr, \n+\t\t\t\t\t\t    strings, num_strings,\n+\t\t\t\t\t\t    &first_usn, &num_retries, \n+\t\t\t\t\t\t    &more_values);\n+\n+\t\tif (NT_STATUS_EQUAL(STATUS_MORE_ENTRIES, ads_ntstatus(status))) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (!ADS_ERR_OK(status)) {\n+\t\t\t*num_strings = 0;\n+\t\t\tstrings = NULL;\n+\t\t\tgoto done;\n+\t\t}\n+\n+\t} while (more_values);\n+\n+ done:\n+\tDEBUG(10,(\"returning with %d strings\\n\", (int)*num_strings));\n+\n+\treturn status;\n+}\n+\n+ADS_STATUS ads_ranged_search_internal(ADS_STRUCT *ads, \n+\t\t\t\t      TALLOC_CTX *mem_ctx,\n+\t\t\t\t      int scope,\n+\t\t\t\t      const char *base,\n+\t\t\t\t      const char *filter,\n+\t\t\t\t      const char **attrs,\n+\t\t\t\t      void *args,\n+\t\t\t\t      const char *range_attr,\n+\t\t\t\t      char ***strings,\n+\t\t\t\t      size_t *num_strings,\n+\t\t\t\t      uint32 *first_usn,\n+\t\t\t\t      int *num_retries,\n+\t\t\t\t      BOOL *more_values)\n+{\n+\tLDAPMessage *res = NULL;\n+\tADS_STATUS status;\n+\tint count;\n+\tuint32 current_usn;\n+\n+\tDEBUG(10, (\"Searching for attrs[0] = %s, attrs[1] = %s\\n\", attrs[0], attrs[1]));\n+\n+\t*more_values = False;\n+\n+\tstatus = ads_do_search_retry_internal(ads, base, scope, filter, attrs, args, &res);\n+\n+\tif (!ADS_ERR_OK(status)) {\n+\t\tDEBUG(1,(\"ads_search: %s\\n\",\n+\t\t\t ads_errstr(status)));\n+\t\treturn status;\n+\t}\n+\t\n+\tif (!res) {\n+\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t}\n+\n+\tcount = ads_count_replies(ads, res);\n+\tif (count == 0) {\n+\t\tads_msgfree(ads, res);\n+\t\treturn ADS_ERROR(LDAP_SUCCESS);\n+\t}\n+\n+\tif (*num_strings == 0) {\n+\t\tif (!ads_pull_uint32(ads, res, \"usnChanged\", first_usn)) {\n+\t\t\tDEBUG(1, (\"could not pull first usnChanged!\\n\"));\n+\t\t\tads_msgfree(ads, res);\n+\t\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t\t}\n+\t}\n+\n+\tif (!ads_pull_uint32(ads, res, \"usnChanged\", &current_usn)) {\n+\t\tDEBUG(1, (\"could not pull current usnChanged!\\n\"));\n+\t\tads_msgfree(ads, res);\n+\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t}\n+\n+\tif (*first_usn != current_usn) {\n+\t\tDEBUG(5, (\"USN on this record changed\"\n+\t\t\t  \" - restarting search\\n\"));\n+\t\tif (*num_retries < 5) {\n+\t\t\t(*num_retries)++;\n+\t\t\t*num_strings = 0;\n+\t\t\tads_msgfree(ads, res);\n+\t\t\treturn ADS_ERROR_NT(STATUS_MORE_ENTRIES);\n+\t\t} else {\n+\t\t\tDEBUG(5, (\"USN on this record changed\"\n+\t\t\t\t  \" - restarted search too many times, aborting!\\n\"));\n+\t\t\tads_msgfree(ads, res);\n+\t\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t\t}\n+\t}\n+\n+\t*strings = ads_pull_strings_range(ads, mem_ctx, res,\n+\t\t\t\t\t range_attr,\n+\t\t\t\t\t *strings,\n+\t\t\t\t\t &attrs[0],\n+\t\t\t\t\t num_strings,\n+\t\t\t\t\t more_values);\n+\n+\tads_msgfree(ads, res);\n+\n+\t/* paranoia checks */\n+\tif (*strings == NULL && *more_values) {\n+\t\tDEBUG(0,(\"no strings found but more values???\\n\"));\n+\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t}\n+\tif (*num_strings == 0 && *more_values) {\n+\t\tDEBUG(0,(\"no strings found but more values???\\n\"));\n+\t\treturn ADS_ERROR(LDAP_NO_MEMORY);\n+\t}\n+\n+\treturn (*more_values) ? ADS_ERROR_NT(STATUS_MORE_ENTRIES) : ADS_ERROR(LDAP_SUCCESS);\n+}\n+\n #endif\n\n"}