{"category": "ham", "to_address": "Perl Beginners <beginners@perl.org>", "from_address": "\"John W. Krahn\" <krahnj@telus.net>", "subject": "Re: Nested loop", "body": "Chas Owens wrote:\n> On 4/19/07, John W. Krahn  wrote:\n>> Chas Owens wrote:\n>> > Yes, foreach was aliased to for for backwards compatibility,\n>>\n>> Huh?  Do you have something to back up that claim?\n> \n> Well, perlsyn* says\n>       The \"foreach\" keyword is actually a synonym for the \"for\" keyword, so\n>       you can use \"foreach\" for readability or \"for\" for brevity.  (Or\n>       because the Bourne shell is more familiar to you than csh, so writing\n>       \"for\" comes more naturally.)\n> \n> But Synopsis 4* says\n>       There is no foreach statement any more. It's always spelled for\n> in Perl 6,\n>       so it always takes a list as an argument\n> \n> So, you can either start training yourself to say for instead of\n> foreach now or wait for culture shock down the road.\n\nI see nothing about backwards compatibility in there?  ;-)\n\n>> > but, like\n>> > telnet and rsh, it should not be used in new code.\n>>\n>> Really?  I assume you mean the protocols and not the programs?\n> \n> The protocols and the programs (unless you are using the telnet\n> program for manual testing of server protocols).\n\nYes, the telnet program is a lot more useful than just using the telnet protocol.\n\n\n[ snip ]\n\n> Which still proves the point, for(;;) is no better than while (1) for\n> infinite loops.  In my opinion while is better since I will eventually\n> realize that this should not be an infinite loop.\n> \n> my $continue = 1;\n> $SIG{__TERM__} = sub { $continue = 0 };\n> while ($continue} {\n> }\n\nmy $continue = 1;\n$SIG{ __TERM__ } = sub { $continue = 0 };\nfor ( ;$continue; } {\n}\n\n\n\n\nJohn\n-- \nPerl isn't a toolbox, but a small machine shop where you can special-order\ncertain sorts of tools at low cost and in short order.       -- Larry Wall\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}