{"category": "ham", "to_address": "perl6-internals@perl.org, Mark Glines <mark@glines.org>", "from_address": "James E Keenan <jkeen@verizon.net>", "subject": "Re: POD Coverage  (was:  Parrot Project Management...)", "body": "Mark Glines wrote:\n>\n> Think its worth adding a\n> codingstd test for POD coverage?\n> \n> \n\nNo.\n\nOr perhaps:  No, not unless you want to start a big \"philosophical\" \nargument about POD coverage.\n\nI say this as someone who dissents from the prevailing wisdom about POD \ncoverage as it relates to CPAN modules.  That's because the tests on \nCPAN that purport to rate the \"kwalitee\" of the POD coverage of CPAN \ndistributions will only credit you if you write your POD in one \nparticular style.  If you happen to have written POD for one of your \ndistros before that standard was formulated, or if you happen to think \nthat style doesn't suit your distro well, then you don't get credit and \nyour \"kwalitee\" sinks.\n\nThere are distros for which I've written 40+ pages of documentation but \nwhich fail these \"kwalitee\" tests because of the way I structured the \n=head tags.\n\nI happen to think that some of our coding standards amount to excessive \nnitpicking ... and when Perl::Critic is applied to some of the code I \nmaintain, the results, IMHO, are demonstrably less readable code.  And \nthat's for stuff we write in relatively well structured languages like \nPerl 5 and PIR.  We write POD in English; need I say more?\n\nFinally, to add a test for POD coverage is just one more test which will \nfail often in 'make test' or 'make smoke' and yet say nothing about the \nquality of Parrot.\n\nIn, short:  No.\n\nkid51\n\n"}