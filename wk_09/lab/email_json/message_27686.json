{"category": "ham", "to_address": "Prof Brian Ripley <ripley@stats.ox.ac.uk>", "from_address": "Tony Plate <tplate@acm.org>", "subject": "Re: [R] getting informative error messages", "body": "Prof Brian Ripley wrote:\n> It is not clear to me what you want here.\n\nI just wanted to be able to quickly find the expression in which an \nerror occurred when it was inside a lengthy function.  I now know that \n'debug()' can help with this (debug() allows me to easily step through \nthe function and see where the error occurs.)\n\n> Errors are tagged by a 'call', and f(1:3) is the innermost 'call' (special \n> primitives do not set a context and so do not count if you consider '[' \n> to be a function).\n\nThanks for the explanation.  I suspected that it had something to do \nwith primitive functions, but was unable to confirm that by searching.\n\n> \n> The message could tell you what the type was, but it does not and we have \n> lost the pool of active contributors we once had to submit tested patches \n> for things like that.\n\nWhat is required to test patches for things like this?  Is there \nanything written up on that anywhere?  I've not been able to clearly \ndiscern what the desired output of 'make check' is -- there seem to be \nreported differences that don't actually matter, but I didn't see a fast \nand easy way of distinguishing those from the ones that do matter.  I \ndid look in R-exts, and on developer.r-project.org but was unable to \nfind clear guidance there either.\n\n-- Tony Plate\n> \n> \n> On Mon, 7 May 2007, Tony Plate wrote:\n> \n>> Certain errors seem to generate messages that are less informative than\n>> most -- they just tell you which function an error happened in, but\n>> don't indicate which line or expression the error occurred in.\n>>\n>> Here's a toy example:\n>>\n>>> f <- function(x) {a <- 1; y <- x[list(1:3)]; b <- 2; return(y)}\n>>> options(error=NULL)\n>>> f(1:3)\n>> Error in f(1:3) : invalid subscript type\n>>> traceback()\n>> 1: f(1:3)\n>> In this function, it's clear that the error is in subscripting 'x', but\n>> it's not always so immediately obvious in lengthier functions.\n>>\n>> Is there anything I can do to get a more informative error message in\n>> this type of situation?  I couldn't find any help in the section\n>> \"Debugging R Code\" in \"R-exts\" (or anything at all relevant in \"R-intro\").\n>>\n>> (Different values for options(error=...) and different formatting of the\n>> function made no difference.)\n>>\n>> -- Tony Plate\n>>\n>>> sessionInfo()\n>> R version 2.5.0 (2007-04-23)\n>> i386-pc-mingw32\n>>\n>> locale:\n>> LC_COLLATE=English_United States.1252;LC_CTYPE=English_United\n>> States.1252;LC_MONETARY=English_United\n>> States.1252;LC_NUMERIC=C;LC_TIME=English_United States.1252\n>>\n>> attached base packages:\n>> [1] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"\n>> [7] \"base\"\n>>\n>> other attached packages:\n>> tap.misc\n>>    \"1.0\"\n>> ______________________________________________\n>> R-help@stat.math.ethz.ch mailing list\n>> https://stat.ethz.ch/mailman/listinfo/r-help\n>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html\n>> and provide commented, minimal, self-contained, reproducible code.\n>>\n>\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}