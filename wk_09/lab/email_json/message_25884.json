{"category": "ham", "to_address": "\"Alek Storm\" <alek.storm@gmail.com>", "from_address": "chromatic <chromatic@wgz.org>", "subject": "Re: [perl #42905] [PATCH] implement vtable overriding for PDD15, bugfix", "body": "On Tuesday 08 May 2007 15:02:34 Alek Storm wrote:\n\n> No, with :vtable you define a sub of any name and use the :vtable\n> attribute, specifying which vtable method it overrides if the name doesn't\n> match the vtable name. \u00a0Then you create a Class PMC and call 'add_method'\n> on it, passing the name, sub, flag that it's a vtable method, and flag that\n> it's anonymous. \u00a0However, since it's anonymous, the name parameter doesn't\n> matter.\n\nIf I've already defined the sub, with a name, presumably in a namespace, and \nmarked it with :vtable, why do I have to play the games by getting a Class \nPMC and calling methods on it?  I presume in this case I also have to \n*remove* it from the namespace if I don't want it to be there too, right?\n\nThat does not seem like an improvement over the current approach where merely \nputting the :vtable attribute on a subroutine does the right thing.\n\n-- c\n\n"}