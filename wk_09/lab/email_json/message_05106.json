{"category": "ham", "to_address": "p6l <perl6-language@perl.org>", "from_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "subject": "Re: Should a dirhandle be a filehandle-like iterator?", "body": "Uri Guttman wrote:\n> >>>>> \"JL\" == Jonathan Lang  writes:\n>\n>\n>   JL> Please.  I've always found the \"opendir ... readdir ... closedir\" set\n>   JL> to be clunky.\n>\n>   JL> Also: why distinguish between \"open\" and \"opendir\"?  If the string is\n>   JL> the name of a file, 'open' means \"open the file\"; if it is the name of\n>   JL> a directory, 'open' means \"open the directory\".  If it's the name of a\n>   JL> pipe, it opens the pipe.  And so on.\n>\n> maybe this won't help you but if you did open on a dir in perl5 you can\n> read the raw directory data which is pretty useless in most cases. so\n> with open working as opendir on directories, what is the op/method to\n> get the next directory entry? that isn't the same as reading a\n> line. there won't be any trailing newlines to chomp. marking a location\n> is not the same with tell and telldir (one is a byte offset, the other a\n> directory entry index). and since dirs can reorder their entries\n> (especially hash based dirs) the ordering and seek points may move. not\n> gonna happen on text files. there are many differences and the only one\n> you seem to see is a linear scan of them (which is just the most common\n> access style).\n\nWell, I did suggest that \"openfile\" and \"opendir\" exist alongside\n\"open\", with \"openfile\" being more akin to Perl 5's \"open\" or\n\"sysopen\", and \"open\" being a bit more dwimmy.\n\nBut in general, most of the differences that you mention are things\nthat ought to be addressed in the resulting iterators, not in the\ncreating statement.  No, a \"directory handle\" will not behave exactly\nlike a \"file handle\".  But then, a file handle doesn't behave exactly\nlike \"standard in\" or \"standard out\", either (last I checked, Perl 5\nwon't do anything useful if you say \"seek STDIN, 0, SEEK_END\").\n\n--\nJonathan \"Dataweaver\" Lang\n\n"}