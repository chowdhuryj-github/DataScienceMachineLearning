{"category": "ham", "to_address": "samba-technical@lists.samba.org", "from_address": "seatec <seatec-astronomy@gmx.de>", "subject": "Re: win2k3 to win98", "body": "Hi Chris,\n\nthanks for your reply. When I first read it I thought \"he wants me to\nrtfm. great reply\". I have (and also read) your book and done my fare\nshare of basic cifs auth coding. I know the davenport site, but I didnt\nknow the ms link. That one was nice, and finally helped me find the\nsolution.\n\nWhere winxp(and earlier) uses the plaintext --(DES)--> LM hash\n--(DES)--> Ntlm hash scheme, Win2k3 uses the passwords md4 hash\n--(DES)--> Ntlm hash. So the first step is different, the second is not.\n\nWhat really confused me is that winxp and win2k3 sent exactly the same\npacket, but a different password hash, and both actually worked.\n\nThanks for pointing that ms link out to me. It's sunday night and I\nspent many hours on this problem this weekend. Seeing it solved before\nthe time ran out(too busy during the week) made my day(well, night).\n\nseatec\n\nChristopher R. Hertel wrote:\n> Seatec:\n> \n> Start here:\n> \n>   http://ubiqx.org/cifs/SMB.html#SMB.8\n> \n> That should get you most of the way from the old LM hash through NTLM, LMv2,\n> and NTLMv2.\n> \n> Once you've covered that, you may want to look at:\n> \n>   http://www.microsoft.com/technet/technetmag/issues/2006/08/SecurityWatch/\n> and\n>   http://davenport.sourceforge.net/ntlm.html\n> and, of course, Wikipedia.\n> \n> The basic problem is that authentication is a moving target.  Microsoft,\n> quite reasonably, has to keep introducing stronger authentication methods\n> and defaulting to stricter requirements.  Newer systems may, for instance,\n> require Kerberos authentication.\n> \n> I hope that helps.\n> \n> Chris -)-----\n> \n> seatec wrote:\n>> Hi everyone,\n>>\n>> after talking to Kai Blin on irc for half a night and part of the day he\n>> pointed me to the list.\n>>\n>> I wrote a little pseudo-cifs server about 2 years ago, which works fine\n>> for smbclient, XP (SP2) and others. It doesn't offer much, but it\n>> negotiates the challenge/response authentication scheme\n>>\n>> The client password gets uppercased, padded with zeros to 14 bytes,\n>> split into two halves of 7 bytes, 2 eight byte DES keys are created out\n>> of those. These 2 keys are used to encrypt a static string -> 2 LM hashes.\n>> Those two 16 byte lm hashes are padded with 5 zeros to 21 bytes, split\n>> into 3 chunks, DES key creation, those are used to encrypt the challenge\n>> -> 24 byte ntlm hash. Thats the scheme we are talking about.\n>>\n>> 2 nights ago I noticed it doesnt work for win2k3. Knowing the plaintext\n>> password and seeing the challenge on the wire, I can create the hash,\n>> and I can see smbclient or XP send exactly what I created. Win2k3 also\n>> sends a 24 byte hash, but that one is completely off.\n>>\n>> Whats even more strange: I setup a win98 in vmware and made win2k3\n>> connect to a share. I see the whole session negotiation, challenge/hash\n>> exchange and everything, and again the hash \"should be\" different than\n>> win2k3 is sending. But not only is the hash I see on the wire different,\n>> win98 even accepts that hash and allows the client to log in with it.\n>>\n>> I don't have the slightest idea what kind of hash win2k3 is sending, and\n>> why it works.\n>>\n>> Last night I compared the pcap of a winxp logging into my little pseudo\n>> server with a win2k3 logging in. Both clients send the same flags, the\n>> same fields(different account and machine names. but that shouldnt\n>> matter), the same everything. As the plaintext password is the same and\n>> the challenge for this testcase was static, they should both send the\n>> same hash. smbclient sends what xp sends. win2k3 also sends a 24 byte\n>> hash, but it's different.\n>>\n>> If anyone could tell me what kind of hash win2k3 is sending there I'd be\n>>  grateful. I can provide pcaps, plaintext password, hash, session\n>> key(challenge), ...\n>>\n>>\n>> seatec\n> \n\n"}