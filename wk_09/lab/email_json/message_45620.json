{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 525: - send tcp info to all connected nodes,\n\tnot just vnnmap nodes in http://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 525\nrevision-id: tridge@samba.org-20070609224633-eo5a0r2uf2u83u3q\nparent: tridge@samba.org-20070609115850-l2fqzlhyvl68lzrl\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sun 2007-06-10 08:46:33 +1000\nmessage:\n  - send tcp info to all connected nodes, not just vnnmap nodes\n  - use a non-blocking freeze when banned\n  - release all IPs when banned\nmodified:\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  server/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  server/ctdb_freeze.c           ctdb_freeze.c-20070512051503-935zdtyuqknqnhmo-1\n  server/ctdb_monitor.c          ctdb_monitor.c-20070518100625-8jf4ft1mjzmb22ck-1\n  takeover/ctdb_takeover.c       ctdb_takeover.c-20070525071636-a5n1ihghjtppy08r-2\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-06-07 08:07:38 +0000\n+++ b/include/ctdb_private.h\t2007-06-09 22:46:33 +0000\n@@ -1022,4 +1022,6 @@\n \t\t\t       uint32_t destnode,\n \t\t\t       struct ctdb_tunable *tunables);\n \n+void ctdb_start_freeze(struct ctdb_context *ctdb);\n+\n #endif\n\n=== modified file 'server/ctdb_daemon.c'\n--- a/server/ctdb_daemon.c\t2007-06-07 12:06:19 +0000\n+++ b/server/ctdb_daemon.c\t2007-06-09 22:46:33 +0000\n@@ -54,6 +54,12 @@\n \t\t(ctdb->nodes[c->vnn]->flags&NODE_FLAGS_DISCONNECTED) \n \t\t| (c->flags & ~NODE_FLAGS_DISCONNECTED);\t\n \tDEBUG(2,(\"Node flags for node %u are now 0x%x\\n\", c->vnn, ctdb->nodes[c->vnn]->flags));\n+\n+\t/* make sure we don't hold any IPs when we shouldn't */\n+\tif (c->vnn == ctdb->vnn &&\n+\t    (ctdb->nodes[c->vnn]->flags & (NODE_FLAGS_INACTIVE|NODE_FLAGS_BANNED))) {\n+\t\tctdb_release_all_ips(ctdb);\n+\t}\n }\n \n /* called when the \"startup\" event script has finished */\n\n=== modified file 'server/ctdb_freeze.c'\n--- a/server/ctdb_freeze.c\t2007-06-07 12:06:19 +0000\n+++ b/server/ctdb_freeze.c\t2007-06-09 22:46:33 +0000\n@@ -182,6 +182,24 @@\n }\n \n /*\n+  start the freeze process\n+ */\n+void ctdb_start_freeze(struct ctdb_context *ctdb)\n+{\n+\tif (ctdb->freeze_mode == CTDB_FREEZE_FROZEN) {\n+\t\t/* we're already frozen */\n+\t\treturn;\n+\t}\n+\n+\t/* if there isn't a freeze lock child then create one */\n+\tif (!ctdb->freeze_handle) {\n+\t\tctdb->freeze_handle = ctdb_freeze_lock(ctdb);\n+\t\tCTDB_NO_MEMORY_VOID(ctdb, ctdb->freeze_handle);\n+\t\tctdb->freeze_mode = CTDB_FREEZE_PENDING;\n+\t}\n+}\n+\n+/*\n   freeze the databases\n  */\n int32_t ctdb_control_freeze(struct ctdb_context *ctdb, struct ctdb_req_control *c, bool *async_reply)\n@@ -193,12 +211,7 @@\n \t\treturn 0;\n \t}\n \n-\t/* if there isn't a freeze lock child then create one */\n-\tif (!ctdb->freeze_handle) {\n-\t\tctdb->freeze_handle = ctdb_freeze_lock(ctdb);\n-\t\tCTDB_NO_MEMORY(ctdb, ctdb->freeze_handle);\n-\t\tctdb->freeze_mode = CTDB_FREEZE_PENDING;\n-\t}\n+\tctdb_start_freeze(ctdb);\n \n \t/* add ourselves to list of waiters */\n \tw = talloc(ctdb->freeze_handle, struct ctdb_freeze_waiter);\n@@ -220,17 +233,7 @@\n  */\n bool ctdb_blocking_freeze(struct ctdb_context *ctdb)\n {\n-\tif (ctdb->freeze_mode == CTDB_FREEZE_FROZEN) {\n-\t\t/* we're already frozen */\n-\t\treturn true;\n-\t}\n-\n-\t/* if there isn't a freeze lock child then create one */\n-\tif (!ctdb->freeze_handle) {\n-\t\tctdb->freeze_handle = ctdb_freeze_lock(ctdb);\n-\t\tCTDB_NO_MEMORY(ctdb, ctdb->freeze_handle);\n-\t\tctdb->freeze_mode = CTDB_FREEZE_PENDING;\n-\t}\n+\tctdb_start_freeze(ctdb);\n \n \t/* block until frozen */\n \twhile (ctdb->freeze_mode == CTDB_FREEZE_PENDING) {\n\n=== modified file 'server/ctdb_monitor.c'\n--- a/server/ctdb_monitor.c\t2007-06-09 11:58:50 +0000\n+++ b/server/ctdb_monitor.c\t2007-06-09 22:46:33 +0000\n@@ -219,9 +219,8 @@\n \tif ((node->flags & NODE_FLAGS_BANNED) && !(old_flags & NODE_FLAGS_BANNED)) {\n \t\t/* make sure we are frozen */\n \t\tDEBUG(0,(\"This node has been banned - forcing freeze and recovery\\n\"));\n-\t\tif (!ctdb_blocking_freeze(ctdb)) {\n-\t\t\tctdb_fatal(ctdb, \"Unable to freeze when banned\");\n-\t\t}\n+\t\tctdb_start_freeze(ctdb);\n+\t\tctdb_release_all_ips(ctdb);\n \t\tctdb->recovery_mode = CTDB_RECOVERY_ACTIVE;\n \t}\n \t\n\n=== modified file 'takeover/ctdb_takeover.c'\n--- a/takeover/ctdb_takeover.c\t2007-06-09 11:47:06 +0000\n+++ b/takeover/ctdb_takeover.c\t2007-06-09 22:46:33 +0000\n@@ -247,7 +247,7 @@\n \t\t\tdata.dptr = (uint8_t *)&t\n \t\t\tdata.dsize = sizeof(t);\n \n-\t\t\tctdb_daemon_send_control(ctdb, CTDB_BROADCAST_VNNMAP, 0, \n+\t\t\tctdb_daemon_send_control(ctdb, CTDB_BROADCAST_CONNECTED, 0, \n \t\t\t\t\t\t CTDB_CONTROL_TCP_ADD,\n \t\t\t\t\t\t 0, CTDB_CTRL_FLAG_NOREPLY, data, NULL, NULL);\n \t\t}\n@@ -469,7 +469,6 @@\n \n \t/* at this point ctdb->nodes[i]->takeover_vnn is the vnn which will own each IP */\n \n-\n \t/* now tell all nodes to delete any alias that they should not\n \t   have.  This will be a NOOP on nodes that don't currently\n \t   hold the given alias */\n@@ -557,7 +556,7 @@\n \tdata.dsize = sizeof(t);\n \n \t/* tell all nodes about this tcp connection */\n-\tret = ctdb_daemon_send_control(ctdb, CTDB_BROADCAST_VNNMAP, 0, \n+\tret = ctdb_daemon_send_control(ctdb, CTDB_BROADCAST_CONNECTED, 0, \n \t\t\t\t       CTDB_CONTROL_TCP_ADD,\n \t\t\t\t       0, CTDB_CTRL_FLAG_NOREPLY, data, NULL, NULL);\n \tif (ret != 0) {\n@@ -703,7 +702,7 @@\n \t\tp.dest = tcp->daddr;\n \t\tdata.dptr = (uint8_t *)&p\n \t\tdata.dsize = sizeof(p);\n-\t\tctdb_daemon_send_control(client->ctdb, CTDB_BROADCAST_VNNMAP, 0, \n+\t\tctdb_daemon_send_control(client->ctdb, CTDB_BROADCAST_CONNECTED, 0, \n \t\t\t\t\t CTDB_CONTROL_TCP_REMOVE,\n \t\t\t\t\t 0, CTDB_CTRL_FLAG_NOREPLY, data, NULL, NULL);\n \t\ttalloc_free(tcp);\n\n"}