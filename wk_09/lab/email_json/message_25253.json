{"category": "ham", "to_address": "som.ctc@gmail.com", "from_address": "\"Chas Owens\" <chas.owens@gmail.com>", "subject": "Re: Inserting Image in a Button or label.", "body": "On 5/8/07, Chas Owens  wrote:\n> On 5/8/07, Somu  wrote:\n> > Thank you so much.. I was doing\n> >  $pic=$mw->Photo(args...)->pack;\n> >  by the way, how do i get the data for any picture as Zentara did?\n> > And, please Mr. Chas, can u explain me your example in the other\n> > string? I dont know what XPM is and i couldn't follow your code from\n> >  static char ...\n>\n> I will have to look for Zentara's email.\n>\n> XPM is a file format.  It was originally created to allow C programs\n> to embed images inside  the source code.  That is why the string looks\n> like code.  I would suggest looking XPM up in wikipedia* if you wish\n> to know more.\n>\n> * http://en.wikipedia.org/wiki/XPM_%28image_format%29\n>\n\nAh, Zentara was using the base64* method of creating a Tk::Photo.\nBase64 is an encoding for a binary file that lets it be used/sent in\nplaces where only ASCII characters are available (i.e. email\nattachments).  On most UNIX boxes creating a base64 encoding of a file\nis as easy as saying \"uuencode -m file\".  On XP I am not certain what\nthe best way is, but, hey, we have Perl so we don't need any stinking\nutilities.  Simply install MIME::Base64* and you can convert foo.jpg\ninto a base64 encoded string by saying:\n\nperl -MMIME::Base64 -e '$/=undef; print MIME::Base64::encode(<>),\"\\n\"' foo.jpg\n\n* http://en.wikipedia.org/wiki/Base64\n* http://search.cpan.org/~gaas/MIME-Base64-3.07/Base64.pm\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}