{"category": "ham", "to_address": "Alma <almatirkey@gmail.com>", "from_address": "Steve Bertrand <iaccounts@ibctech.ca>", "subject": "Re: Passing arguments", "body": "> testsub(35);\n\nYou call the sub with one parameter, integer 35. However, this won't\nwork as calling the sub before the sub is defined with a prototype will\nbarf with an error. Let's assume had the sub call beneath the definition\nfrom the start.\n\n> sub testsub($)\n\nAbove, your prototype says testsub() will only take a single parameter,\nnothing more.\n\n>    my $self = shift;\n\nAbove, you shift off the first and only parameter (as defined by the\nprototype) directly into the $self variable.\n\nThis essentially leaves the rest of @_ empty, populating $id with 0, or\nnothing.\n\n>    my $id = @_;\n>    print \"$id\";\n\nHad you of actually tested the code, you would of found this. If you had\nof inserted a print for $self, you would of seen that it took the only\nparameter leaving $id blank.\n\nSteve\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}