{"category": "ham", "to_address": "larry@cvs.develooper.com", "from_address": "John Macdonald <john@perlwolf.com>", "subject": "Re: [svn:perl6-synopsis] r14385 - doc/trunk/design/syn", "body": "On Fri, Apr 27, 2007 at 08:46:04AM -0700, larry@cvs.perl.org wrote:\n> +The matches are guaranteed to be returned in left-to-right order with\n> +respect to the starting positions.  The order within each starting\n> +position is not guaranteed and may depend on the nature of both the\n> +pattern and the matching engine.  (Conjecture: or we could enforce\n> +backtracking engine semantics.  Or we could guarantee no order at all\n> +unless the pattern starts with \"::\" or some such to suppress DFAish\n> +solutions.)\n\nAre you sure you want to guarantee left-to-right starting\nposition order?  If there are multiple processors available, and\nin a lazy context, it may be preferrable to not guarantee any\norder.  Then, if one processor that starts at a later position\nbut which finds a match quickly while another processor starts\nearlier but needs to take a lot longer to find its first match,\nthe lazy processing can start working on the first match found\nat the earliest possible time.\n\n-- \n\n"}