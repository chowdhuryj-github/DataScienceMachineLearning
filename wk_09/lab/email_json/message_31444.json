{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r22968 - in branches/SAMBA_4_0/source/lib/events:\n\t.", "body": "Author: tridge\nDate: 2007-05-17 07:52:33 +0000 (Thu, 17 May 2007)\nNew Revision: 22968\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=22968\n\nLog:\n\nandrew bartlett pointed out that the parent process could add a fd to\nthe epoll context which would then appear in the children. To fix this\nwe need to check for pid changes in more places. Luckily on platforms\nwhere we have epoll(), getpid() is very very cheap.\n\nModified:\n   branches/SAMBA_4_0/source/lib/events/events_aio.c\n   branches/SAMBA_4_0/source/lib/events/events_epoll.c\n   branches/SAMBA_4_0/source/lib/events/events_standard.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/lib/events/events_aio.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/events/events_aio.c\t2007-05-17 05:46:45 UTC (rev 22967)\n+++ branches/SAMBA_4_0/source/lib/events/events_aio.c\t2007-05-17 07:52:33 UTC (rev 22968)\n@@ -103,10 +103,14 @@\n   see http://junkcode.samba.org/ftp/unpacked/junkcode/epoll_fork.c for an \n   demonstration of why this is needed\n  */\n-static void epoll_reopen(struct aio_event_context *aio_ev)\n+static void epoll_check_reopen(struct aio_event_context *aio_ev)\n {\n \tstruct fd_event *fde;\n \n+\tif (aio_ev->pid == getpid()) {\n+\t\treturn;\n+\t}\n+\n \tclose(aio_ev->epoll_fd);\n \taio_ev->epoll_fd = epoll_create(MAX_AIO_QUEUE_DEPTH);\n \tif (aio_ev->epoll_fd == -1) {\n@@ -131,16 +135,6 @@\n \tstruct epoll_event event;\n \tif (aio_ev->epoll_fd == -1) return;\n \n-\t/* during an add event we need to check if our pid has changed\n-\t   and re-open the epoll socket. Note that we don't need to do this \n-\t   for other epoll changes */\n-\tif (aio_ev->pid != getpid()) {\n-\t\tepoll_reopen(aio_ev);\n-\t\t/* the current event gets added in epoll_reopen(), so\n-\t\t   we can return here */\n-\t\treturn;\n-\t}\n-\n \tfde->additional_flags &= ~EPOLL_ADDITIONAL_FD_FLAG_REPORT_ERROR;\n \n \t/* if we don't want events yet, don't add an aio_event */\n@@ -424,6 +418,8 @@\n \t\t\t\t\t\t\t   struct aio_event_context);\n \tstruct fd_event *fde;\n \n+\tepoll_check_reopen(aio_ev);\n+\n \tfde = talloc(mem_ctx?mem_ctx:ev, struct fd_event);\n \tif (!fde) return NULL;\n \n@@ -468,6 +464,8 @@\n \n \tfde->flags = flags;\n \n+\tepoll_check_reopen(aio_ev);\n+\n \tepoll_change_event(aio_ev, fde);\n }\n \n@@ -485,6 +483,8 @@\n \t\treturn 0;\n \t}\n \n+\tepoll_check_reopen(aio_ev);\n+\n \treturn aio_event_loop(aio_ev, &tval);\n }\n \n\nModified: branches/SAMBA_4_0/source/lib/events/events_epoll.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/events/events_epoll.c\t2007-05-17 05:46:45 UTC (rev 22967)\n+++ branches/SAMBA_4_0/source/lib/events/events_epoll.c\t2007-05-17 07:52:33 UTC (rev 22968)\n@@ -102,10 +102,14 @@\n   see http://junkcode.samba.org/ftp/unpacked/junkcode/epoll_fork.c for an \n   demonstration of why this is needed\n  */\n-static void epoll_reopen(struct epoll_event_context *epoll_ev)\n+static void epoll_check_reopen(struct epoll_event_context *epoll_ev)\n {\n \tstruct fd_event *fde;\n \n+\tif (epoll_ev->pid == getpid()) {\n+\t\treturn;\n+\t}\n+\n \tclose(epoll_ev->epoll_fd);\n \tepoll_ev->epoll_fd = epoll_create(64);\n \tif (epoll_ev->epoll_fd == -1) {\n@@ -131,16 +135,6 @@\n \n \tif (epoll_ev->epoll_fd == -1) return;\n \n-\t/* during an add event we need to check if our pid has changed\n-\t   and re-open the epoll socket. Note that we don't need to do this \n-\t   for other epoll changes */\n-\tif (epoll_ev->pid != getpid()) {\n-\t\tepoll_reopen(epoll_ev);\n-\t\t/* the current event gets added in epoll_reopen(), so\n-\t\t   we can return here */\n-\t\treturn;\n-\t}\n-\n \tfde->additional_flags &= ~EPOLL_ADDITIONAL_FD_FLAG_REPORT_ERROR;\n \n \t/* if we don't want events yet, don't add an epoll_event */\n@@ -373,6 +367,8 @@\n \t\t\t\t\t\t\t   struct epoll_event_context);\n \tstruct fd_event *fde;\n \n+\tepoll_check_reopen(epoll_ev);\n+\n \tfde = talloc(mem_ctx?mem_ctx:ev, struct fd_event);\n \tif (!fde) return NULL;\n \n@@ -417,6 +413,8 @@\n \n \tfde->flags = flags;\n \n+\tepoll_check_reopen(epoll_ev);\n+\n \tepoll_change_event(epoll_ev, fde);\n }\n \n@@ -434,6 +432,8 @@\n \t\treturn 0;\n \t}\n \n+\tepoll_check_reopen(epoll_ev);\n+\n \treturn epoll_event_loop(epoll_ev, &tval);\n }\n \n\nModified: branches/SAMBA_4_0/source/lib/events/events_standard.c\n===================================================================\n--- branches/SAMBA_4_0/source/lib/events/events_standard.c\t2007-05-17 05:46:45 UTC (rev 22967)\n+++ branches/SAMBA_4_0/source/lib/events/events_standard.c\t2007-05-17 07:52:33 UTC (rev 22968)\n@@ -119,10 +119,14 @@\n   see http://junkcode.samba.org/ftp/unpacked/junkcode/epoll_fork.c for an \n   demonstration of why this is needed\n  */\n-static void epoll_reopen(struct std_event_context *std_ev)\n+static void epoll_check_reopen(struct std_event_context *std_ev)\n {\n \tstruct fd_event *fde;\n \n+\tif (std_ev->pid == getpid()) {\n+\t\treturn;\n+\t}\n+\n \tclose(std_ev->epoll_fd);\n \tstd_ev->epoll_fd = epoll_create(64);\n \tif (std_ev->epoll_fd == -1) {\n@@ -147,16 +151,6 @@\n \tstruct epoll_event event;\n \tif (std_ev->epoll_fd == -1) return;\n \n-\t/* during an add event we need to check if our pid has changed\n-\t   and re-open the epoll socket. Note that we don't need to do this \n-\t   for other epoll changes */\n-\tif (std_ev->pid != getpid()) {\n-\t\tepoll_reopen(std_ev);\n-\t\t/* the current event gets added in epoll_reopen(), so\n-\t\t   we can return here */\n-\t\treturn;\n-\t}\n-\n \tfde->additional_flags &= ~EPOLL_ADDITIONAL_FD_FLAG_REPORT_ERROR;\n \n \t/* if we don't want events yet, don't add an epoll_event */\n@@ -415,6 +409,8 @@\n \t\t\t\t\t\t\t   struct std_event_context);\n \tstruct fd_event *fde;\n \n+\tepoll_check_reopen(std_ev);\n+\n \tfde = talloc(mem_ctx?mem_ctx:ev, struct fd_event);\n \tif (!fde) return NULL;\n \n@@ -462,6 +458,8 @@\n \n \tfde->flags = flags;\n \n+\tepoll_check_reopen(std_ev);\n+\n \tepoll_change_event(std_ev, fde);\n }\n \n@@ -558,6 +556,8 @@\n \t\treturn 0;\n \t}\n \n+\tepoll_check_reopen(std_ev);\n+\n \tif (epoll_event_loop(std_ev, &tval) == 0) {\n \t\treturn 0;\n \t}\n\n"}