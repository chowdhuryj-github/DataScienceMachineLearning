{"category": "ham", "to_address": "Volker.Lendecke@SerNet.DE", "from_address": "James Peach <jpeach@samba.org>", "subject": "Re: Consolidating kernel-related parts of opening a file?", "body": "On Jun 21, 2007, at 10:34 AM, Volker Lendecke wrote:\n\n> Hi!\n>\n> Attached find a patch that consolidates the open(2) call,\n> setting the kernel share mode and kernel oplocks into\n> fd_open(). Survives make test, I'm now doing tests with\n> kernel oplocks activated.\n\nThis looks nice. I don't think you have to pass share_access around,  \nbecause by this time, fsp->share_access has been set.\n\n> Why? People with more createfile semantics (i.e. real share\n> modes and/or real oplocks) have a cleaner place to plug in,\n> and from my point of view these three steps logically belong\n> together, thus our error paths might be cleaned up a bit.\n\nI have a module that detect share mode conflicts in SMB_VFS_OPEN  \nrather than SMB_VFS_KERNEL_FLOCK, so it would be nice if this was  \nsupported more directly. If not, then it still reduces my patch  \nnicely :)\n\n--\nJames Peach | jpeach@samba.org\n\n"}