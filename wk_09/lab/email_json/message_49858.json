{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: lorikeet r745 - in trunk/heimdal: . kdc", "body": "Author: abartlet\nDate: 2007-06-18 05:27:40 +0000 (Mon, 18 Jun 2007)\nNew Revision: 745\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=lorikeet&rev=745\n\nLog:\nI forgot to include this change (to ensure that default_config.c doesn't contain references to hdb) in the diff, so lha's merge wiped it out.\n\nAndrew Bartlett\n\nModified:\n   trunk/heimdal/heimdal-lorikeet.diff\n   trunk/heimdal/kdc/config.c\n   trunk/heimdal/kdc/default_config.c\n\n\nChangeset:\nModified: trunk/heimdal/heimdal-lorikeet.diff\n===================================================================\n--- trunk/heimdal/heimdal-lorikeet.diff\t2007-06-18 05:27:03 UTC (rev 744)\n+++ trunk/heimdal/heimdal-lorikeet.diff\t2007-06-18 05:27:40 UTC (rev 745)\n@@ -96,3 +96,131 @@\n  esym=\"__i686.get_pc_thunk fc_softc\"\n  symbols=\n  \n+--- /data/heimdal-svn/kdc/default_config.c\t2007-06-08 12:22:34.000000000 +1000\n++++ kdc/default_config.c\t2007-06-11 19:03:21.000000000 +1000\n+@@ -38,51 +38,6 @@\n+ \n+ RCSID(\"$Id: default_config.c 20532 2007-04-23 07:46:57Z lha $\");\n+ \n+-static void\n+-get_dbinfo(krb5_context context, struct krb5_kdc_configuration *c)\n+-{\n+-    struct hdb_dbinfo *info, *d;\n+-    krb5_error_code ret;\n+-\n+-    /* fetch the databases */\n+-    ret = hdb_get_dbinfo(context, &info);\n+-    if (ret)\n+-\tkrb5_err(context, 1, ret, \"hdb_get_dbinfo\");\n+-    \n+-    d = NULL;\n+-    while ((d = hdb_dbinfo_get_next(info, d)) != NULL) {\n+-\tvoid *ptr;\n+-\t\n+-\tptr = realloc(c->db, (c->num_db + 1) * sizeof(*c->db));\n+-\tif (ptr == NULL)\n+-\t    krb5_err(context, 1, ret, \"out of memory\");\n+-\tc->db = ptr;\n+-\t\n+-\tret = hdb_create(context, &c->db[c->num_db], \n+-\t\t\t hdb_dbinfo_get_dbname(context, d));\n+-\tif(ret)\n+-\t    krb5_err(context, 1, ret, \"hdb_create %s\", \n+-\t\t     hdb_dbinfo_get_dbname(context, d));\n+-\t\n+-\tret = hdb_set_master_keyfile(context, c->db[c->num_db], \n+-\t\t\t\t     hdb_dbinfo_get_mkey_file(context, d));\n+-\tif (ret)\n+-\t    krb5_err(context, 1, ret, \"hdb_set_master_keyfile\");\n+-\t\n+-\tc->num_db++;\n+-\n+-\tkdc_log(context, c, 0, \"label: %s\\n\",\n+-\t\thdb_dbinfo_get_label(context, d));\n+-\tkdc_log(context, c, 0, \"\\trealm: %s\\n\",\n+-\t\thdb_dbinfo_get_realm(context, d));\n+-\tkdc_log(context, c, 0, \"\\tdbname: %s\\n\",\n+-\t\thdb_dbinfo_get_dbname(context, d));\n+-\tkdc_log(context, c, 0, \"\\tmkey_file: %s\\n\",\n+-\t\thdb_dbinfo_get_mkey_file(context, d));\n+-    }\n+-    hdb_free_dbinfo(context, &info);\n+-}\n+-\n+ \n+ int\n+ krb5_kdc_get_config(krb5_context context, krb5_kdc_configuration **config)\n+@@ -112,8 +67,6 @@\n+     c->num_db = 0;\n+     c->logf = NULL;\n+ \n+-    get_dbinfo(context, c);\n+-\n+     c->require_preauth =\n+ \tkrb5_config_get_bool_default(context, NULL, \n+ \t\t\t\t     c->require_preauth,\n+--- /data/heimdal-svn/kdc/config.c\t2007-06-08 12:22:33.000000000 +1000\n++++ kdc/config.c\t2007-06-13 15:25:07.000000000 +1000\n+@@ -145,6 +145,51 @@\n+     krb5_free_addresses (context, &tmp);\n+ }\n+ \n++static void\n++get_dbinfo(krb5_context context, struct krb5_kdc_configuration *c)\n++{\n++    struct hdb_dbinfo *info, *d;\n++    krb5_error_code ret;\n++\n++    /* fetch the databases */\n++    ret = hdb_get_dbinfo(context, &info);\n++    if (ret)\n++\tkrb5_err(context, 1, ret, \"hdb_get_dbinfo\");\n++    \n++    d = NULL;\n++    while ((d = hdb_dbinfo_get_next(info, d)) != NULL) {\n++\tvoid *ptr;\n++\t\n++\tptr = realloc(c->db, (c->num_db + 1) * sizeof(*c->db));\n++\tif (ptr == NULL)\n++\t    krb5_err(context, 1, ret, \"out of memory\");\n++\tc->db = ptr;\n++\t\n++\tret = hdb_create(context, &c->db[c->num_db], \n++\t\t\t hdb_dbinfo_get_dbname(context, d));\n++\tif(ret)\n++\t    krb5_err(context, 1, ret, \"hdb_create %s\", \n++\t\t     hdb_dbinfo_get_dbname(context, d));\n++\t\n++\tret = hdb_set_master_keyfile(context, c->db[c->num_db], \n++\t\t\t\t     hdb_dbinfo_get_mkey_file(context, d));\n++\tif (ret)\n++\t    krb5_err(context, 1, ret, \"hdb_set_master_keyfile\");\n++\t\n++\tc->num_db++;\n++\n++\tkdc_log(context, c, 0, \"label: %s\\n\",\n++\t\thdb_dbinfo_get_label(context, d));\n++\tkdc_log(context, c, 0, \"\\trealm: %s\\n\",\n++\t\thdb_dbinfo_get_realm(context, d));\n++\tkdc_log(context, c, 0, \"\\tdbname: %s\\n\",\n++\t\thdb_dbinfo_get_dbname(context, d));\n++\tkdc_log(context, c, 0, \"\\tmkey_file: %s\\n\",\n++\t\thdb_dbinfo_get_mkey_file(context, d));\n++    }\n++    hdb_free_dbinfo(context, &info);\n++}\n++\n+ krb5_kdc_configuration *\n+ configure(krb5_context context, int argc, char **argv)\n+ {\n+@@ -200,7 +245,9 @@\n+     if (ret)\n+ \tkrb5_err(context, 1, ret, \"krb5_kdc_default_config\");\n+ \n+-    kdc_openlog(context, config);\n++    get_dbinfo(context, config);\n++\n++   kdc_openlog(context, config);\n+ \n+     if(max_request_str)\n+ \tmax_request = parse_bytes(max_request_str, NULL);\n\nModified: trunk/heimdal/kdc/config.c\n===================================================================\n--- trunk/heimdal/kdc/config.c\t2007-06-18 05:27:03 UTC (rev 744)\n+++ trunk/heimdal/kdc/config.c\t2007-06-18 05:27:40 UTC (rev 745)\n@@ -145,6 +145,51 @@\n     krb5_free_addresses (context, &tmp);\n }\n \n+static void\n+get_dbinfo(krb5_context context, struct krb5_kdc_configuration *c)\n+{\n+    struct hdb_dbinfo *info, *d;\n+    krb5_error_code ret;\n+\n+    /* fetch the databases */\n+    ret = hdb_get_dbinfo(context, &info);\n+    if (ret)\n+\tkrb5_err(context, 1, ret, \"hdb_get_dbinfo\");\n+    \n+    d = NULL;\n+    while ((d = hdb_dbinfo_get_next(info, d)) != NULL) {\n+\tvoid *ptr;\n+\t\n+\tptr = realloc(c->db, (c->num_db + 1) * sizeof(*c->db));\n+\tif (ptr == NULL)\n+\t    krb5_err(context, 1, ret, \"out of memory\");\n+\tc->db = ptr;\n+\t\n+\tret = hdb_create(context, &c->db[c->num_db], \n+\t\t\t hdb_dbinfo_get_dbname(context, d));\n+\tif(ret)\n+\t    krb5_err(context, 1, ret, \"hdb_create %s\", \n+\t\t     hdb_dbinfo_get_dbname(context, d));\n+\t\n+\tret = hdb_set_master_keyfile(context, c->db[c->num_db], \n+\t\t\t\t     hdb_dbinfo_get_mkey_file(context, d));\n+\tif (ret)\n+\t    krb5_err(context, 1, ret, \"hdb_set_master_keyfile\");\n+\t\n+\tc->num_db++;\n+\n+\tkdc_log(context, c, 0, \"label: %s\\n\",\n+\t\thdb_dbinfo_get_label(context, d));\n+\tkdc_log(context, c, 0, \"\\trealm: %s\\n\",\n+\t\thdb_dbinfo_get_realm(context, d));\n+\tkdc_log(context, c, 0, \"\\tdbname: %s\\n\",\n+\t\thdb_dbinfo_get_dbname(context, d));\n+\tkdc_log(context, c, 0, \"\\tmkey_file: %s\\n\",\n+\t\thdb_dbinfo_get_mkey_file(context, d));\n+    }\n+    hdb_free_dbinfo(context, &info);\n+}\n+\n krb5_kdc_configuration *\n configure(krb5_context context, int argc, char **argv)\n {\n@@ -200,8 +245,10 @@\n     if (ret)\n \tkrb5_err(context, 1, ret, \"krb5_kdc_default_config\");\n \n-    kdc_openlog(context, config);\n+    get_dbinfo(context, config);\n \n+   kdc_openlog(context, config);\n+\n     if(max_request_str)\n \tmax_request = parse_bytes(max_request_str, NULL);\n \n\nModified: trunk/heimdal/kdc/default_config.c\n===================================================================\n--- trunk/heimdal/kdc/default_config.c\t2007-06-18 05:27:03 UTC (rev 744)\n+++ trunk/heimdal/kdc/default_config.c\t2007-06-18 05:27:40 UTC (rev 745)\n@@ -38,52 +38,7 @@\n \n RCSID(\"$Id: default_config.c 20532 2007-04-23 07:46:57Z lha $\");\n \n-static void\n-get_dbinfo(krb5_context context, struct krb5_kdc_configuration *c)\n-{\n-    struct hdb_dbinfo *info, *d;\n-    krb5_error_code ret;\n \n-    /* fetch the databases */\n-    ret = hdb_get_dbinfo(context, &info);\n-    if (ret)\n-\tkrb5_err(context, 1, ret, \"hdb_get_dbinfo\");\n-    \n-    d = NULL;\n-    while ((d = hdb_dbinfo_get_next(info, d)) != NULL) {\n-\tvoid *ptr;\n-\t\n-\tptr = realloc(c->db, (c->num_db + 1) * sizeof(*c->db));\n-\tif (ptr == NULL)\n-\t    krb5_err(context, 1, ret, \"out of memory\");\n-\tc->db = ptr;\n-\t\n-\tret = hdb_create(context, &c->db[c->num_db], \n-\t\t\t hdb_dbinfo_get_dbname(context, d));\n-\tif(ret)\n-\t    krb5_err(context, 1, ret, \"hdb_create %s\", \n-\t\t     hdb_dbinfo_get_dbname(context, d));\n-\t\n-\tret = hdb_set_master_keyfile(context, c->db[c->num_db], \n-\t\t\t\t     hdb_dbinfo_get_mkey_file(context, d));\n-\tif (ret)\n-\t    krb5_err(context, 1, ret, \"hdb_set_master_keyfile\");\n-\t\n-\tc->num_db++;\n-\n-\tkdc_log(context, c, 0, \"label: %s\\n\",\n-\t\thdb_dbinfo_get_label(context, d));\n-\tkdc_log(context, c, 0, \"\\trealm: %s\\n\",\n-\t\thdb_dbinfo_get_realm(context, d));\n-\tkdc_log(context, c, 0, \"\\tdbname: %s\\n\",\n-\t\thdb_dbinfo_get_dbname(context, d));\n-\tkdc_log(context, c, 0, \"\\tmkey_file: %s\\n\",\n-\t\thdb_dbinfo_get_mkey_file(context, d));\n-    }\n-    hdb_free_dbinfo(context, &info);\n-}\n-\n-\n int\n krb5_kdc_get_config(krb5_context context, krb5_kdc_configuration **config)\n {\n@@ -112,8 +67,6 @@\n     c->num_db = 0;\n     c->logf = NULL;\n \n-    get_dbinfo(context, c);\n-\n     c->require_preauth =\n \tkrb5_config_get_bool_default(context, NULL, \n \t\t\t\t     c->require_preauth,\n\n"}