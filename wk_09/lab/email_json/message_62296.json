{"category": "ham", "to_address": "mfrumin <michael@frumin.net>", "from_address": "Peter Dalgaard <p.dalgaard@biostat.ku.dk>", "subject": "Re: [R] Lookups in R", "body": "mfrumin wrote:\n> Hey all; I'm a beginner++ user of R, trying to use it to do some processing\n> of data sets of over 1M rows, and running into a snafu.  imagine that my\n> input is a huge table of transactions, each linked to a specif user id.  as\n> I run through the transactions, I need to update a separate table for the\n> users, but I am finding that the traditional ways of doing a table lookup\n> are way too slow to support this kind of operation.\n>\n> i.e:\n>\n> for(i in 1:1000000) {\n>    userid = transactions$userid[i];\n>    amt = transactions$amounts[i];\n>    users[users$id == userid,'amt'] += amt;\n> }\n>\n> I assume this is a linear lookup through the users table (in which there are\n> 10's of thousands of rows), when really what I need is O(constant time), or\n> at worst O(log(# users)).\n>\n> is there any way to manage a list of ID's (be they numeric, string, etc) and\n> have them efficiently mapped to some other table index?\n>\n> I see the CRAN package for SQLite hashes, but that seems to be going a bit\n> too far.\n>   \nSometimes you need a bit of lateral thinking. I suspect that you could \ndo it like this:\n\ntbl <- with(transactions, tapply(amount, userid, sum))\nusers$amt <- users$amt + tbl[users$id]\n\none catch is that there could be users with no transactions, in which \ncase you may need to replace userid by factor(userid, levels=users$id). \nNone of this is tested, of course.\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}