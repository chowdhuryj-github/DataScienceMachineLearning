{"category": "ham", "to_address": "parrot-porters@perl.org", "from_address": "James Keenan <jkeen@verizon.net>", "subject": "Fwd: [TODO] Parrot::Configure::Step:  Test remaining untested\n subroutines", "body": "Forwarded to list pending return to life of rt.perl.org:\n\n>\n> According to its documentation, the purpose of  \n> Parrot::Configure::Step is to hold \"... utility functions for  \n> [configuration] steps to use.\"\n>\n> This package, in relation to others in the Parrot::Configure::*  \n> tree, has a relatively large amount of code not covered by tests in  \n> t/configure/ or elsewhere.  (See http://thenceforward.net/parrot/ \n> coverage/configure-build/lib-Parrot-Configure-Step-pm.html.)   \n> Additional unit tests are needed to deal with 3 aspects of this  \n> package:\n>\n> 1.  prompt():  As yet not covered by any unit tests.  Whoever works  \n> on this should see whether this subroutine is called anywhere in  \n> the lib/ or config/ hierarchies.\n>\n> 2.  Branches and conditions in various subroutines:  file_checksum \n> (); genfile(); run_command(); cc_build(); cc_run(); cc_run_capture \n> (); check_progs(); slurp().  As with item (1), each subroutine  \n> should be checked for current instances of usage during configuration.\n>\n> 3.  There has been talk in other RT threads cc_build() a  \n> \"meaningful return value\" (cf. http://tinyurl.com/2e7glm).\n>\n> So this is a 3-part task involving testing and possibly refactoring.\n>\n> kid51\n\n"}