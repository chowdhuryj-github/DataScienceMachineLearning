{"category": "ham", "to_address": "chromatic <chromatic@wgz.org>", "from_address": "\"Matt Diephouse\" <mddiep@gmail.com>", "subject": "Re: P6 String Assertion Failure (diagnosis and fix)", "body": "On 6/7/07, chromatic  wrote:\n> When I run the t/01-sanity/06-use.t test in languages/perl6, I get an\n> assertion failure:\n>\n>         parrot: src/string.c:2028: string_hash: Assertion `s->encoding && s->charset\n> && !(((s)->obj.flags) & b_PObj_on_free_list_FLAG)' failed.\n\nAssertions like this really ought to be broken up in the source. By\nusing multiple assertions, it's immediately obvious which assertion as\nactually failing. I've been meaning to split this up for quite some\ntime but never got around to it.\n\n> This happens when trying to hash a string (specifically the\n> string 'Perl6::Grammar::quote_term').  I dug into this a little bit.  It's\n> the last test that fails; the string IS on the free list.  Something isn't\n> marking it as live appropriately.\n\n\n\n> The test then passed.  The assertion was okay.  The String is obviously live,\n> after it gets marked as live.  I then wondered if strings get marked as live\n> when they're created.  The answer was in new_string_header() in\n> src/headers.c:\n>\n>         PObj_get_FLAGS(string) |= flags |PObj_is_string_FLAG|PObj_is_COWable_FLAG;\n>\n> I changed it:\n>\n>         PObj_get_FLAGS(string) |= flags |\n>                 PObj_is_string_FLAG | PObj_is_COWable_FLAG | PObj_live_FLAG;\n>\n> Adding the live flag fixed the problem (r18855).\n\nGood work! This has been the cause of a number of Perl 6 GC errors. I\nspent some time trying to track it down before but never made it as\nfar as you did.\n\nHere's hoping that this is the last GC bug. ;-)\n\n-- \nMatt Diephouse\nhttp://matt.diephouse.com\n\n"}