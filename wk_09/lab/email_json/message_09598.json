{"category": "ham", "to_address": "\"Mark Glines\" <mark@glines.org>", "from_address": "\"Paul Cochrane\" <paultcochrane@gmail.com>", "subject": "Re: RT #41858, reasonable set of rules for splint (was: Re: Parrot Bug Summary)", "body": "Mark,\n\n> Random cage cleaner here.  At Andy Lester's suggestion, I've begun\n> working on this splint stuff. So everything below is all his fault. :)\nGreat to have another cage cleaner around :-)  There aren't many of us\nat this stage!\n\n\n\nIn my (very limited) dealings with splint I too have found problems\nwith the standard headers, and have used the same options (if only to\nmake splint get further before it barfs; btw: I'm using Gentoo linux\nas well).  I think you're heading in the right direction though.\n\n> I'd like to spend some time trying to make \"make splint\" more\n> portable... splint defines a special preprocessor variable when it\n> runs, so maybe config.h can skip all the platform-specific stuff when\n> that variable is defined, or something like that.  And I'd like to\n> spend some time fixing the source files I listed above, or, failing\n> that, marking them somehow so splint will skip the erroneous stuff.\nAwesome!  Go for it!!!  Start making patches (see\nhttp://www.parrotcode.org/docs/submissions.html for help on how to\ncreate patches) and send them to parrotbug@parrotcode.org and we'll\nreview them and apply your changes.  There is also the file\ndocs/project/cage_cleaners_guide.pod in the Parrot distro, so if\nyou're interested there's stuff to do there.  Also, if you do a search\non http://rt.perl.org/rt3//Public/ for \"cage\" then there's heaps to do\nthere too :-)\n\n> I'd also like to spend some time researching and (hopefully) fixing\n> some of the warnings in the above warning list, too.\n>\n> Is anyone already working on this?\nWhen I have the tuits, yeah, but generally I work on other stuff, so\nany help in this department is *greatly* appreciated.\n\n> Does anyone have any interest in this?\nI can't speak for everyone, but Parrot is going to be the most\nplatform independent thing out there so making it as compliant as\npossible with every platform/compiler/etc is of interest to the\nproject as a whole.  So yes, I'd say there's interest :-)\n\n> Does anyone have an objection to it?\nNone whatsoever.\n\nPaul\n\n"}