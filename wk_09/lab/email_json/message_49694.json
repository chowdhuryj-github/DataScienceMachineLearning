{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r23533 - in\n\tbranches/SAMBA_4_0/source/torture/nbench: .", "body": "Author: tridge\nDate: 2007-06-17 20:03:31 +0000 (Sun, 17 Jun 2007)\nNew Revision: 23533\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23533\n\nLog:\n\nadded --option torture:targetrate=rate to target a particular\nthroughput in MBytes/sec\n\nModified:\n   branches/SAMBA_4_0/source/torture/nbench/nbench.c\n   branches/SAMBA_4_0/source/torture/nbench/nbio.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/torture/nbench/nbench.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/nbench/nbench.c\t2007-06-17 20:02:56 UTC (rev 23532)\n+++ branches/SAMBA_4_0/source/torture/nbench/nbench.c\t2007-06-17 20:03:31 UTC (rev 23533)\n@@ -46,7 +46,12 @@\n \tchar *cname;\n \tFILE *f;\n \tBOOL correct = True;\n+\tdouble target_rate = lp_parm_double(-1, \"torture\", \"targetrate\", 0);\t\n \n+\tif (target_rate != 0) {\n+\t\tprintf(\"Targetting %.4f MByte/sec\\n\", target_rate);\n+\t}\n+\n \tif (torture_nprocs == 1) {\n \t\tif (!read_only && !torture_setup_dir(cli, \"\\\\clients\")) {\n \t\t\treturn False;\n@@ -86,6 +91,8 @@\n \t\t\tnbio_time_delay(targett);\n \t\t\tparams++;\n \t\t\ti--;\n+\t\t} else if (target_rate != 0) {\n+\t\t\tnbio_target_rate(target_rate);\n \t\t}\n \n \t\tif (i < 2 || params[0][0] == '#') continue;\n\nModified: branches/SAMBA_4_0/source/torture/nbench/nbio.c\n===================================================================\n--- branches/SAMBA_4_0/source/torture/nbench/nbio.c\t2007-06-17 20:02:56 UTC (rev 23532)\n+++ branches/SAMBA_4_0/source/torture/nbench/nbio.c\t2007-06-17 20:03:31 UTC (rev 23533)\n@@ -57,6 +57,29 @@\n \tstruct timeval starttime;\n } *children;\n \n+void nbio_target_rate(double rate)\n+{\n+\tstatic double last_bytes;\n+\tstatic struct timeval last_time;\n+\tdouble tdelay;\n+\n+\tif (last_bytes == 0) {\n+\t\tlast_bytes = children[nbio_id].bytes;\n+\t\tlast_time = timeval_current();\n+\t\treturn;\n+\t}\n+\n+\ttdelay = (children[nbio_id].bytes - last_bytes)/(1.0e6*rate) - timeval_elapsed(&last_time);\n+\tif (tdelay > 0) {\n+\t\tmsleep(tdelay*1000);\n+\t} else {\n+\t\tchildren[nbio_id].max_latency = MAX(children[nbio_id].max_latency, -tdelay);\n+\t}\n+\n+\tlast_time = timeval_current();\n+\tlast_bytes = children[nbio_id].bytes;\n+}\n+\n void nbio_time_reset(void)\n {\n \tchildren[nbio_id].starttime = timeval_current();\t\n@@ -68,7 +91,7 @@\n \tif (targett > elapsed) {\n \t\tmsleep(1000*(targett - elapsed));\n \t} else if (elapsed - targett > children[nbio_id].max_latency) {\n-\t\tchildren[nbio_id].max_latency = elapsed - targett;\n+\t\tchildren[nbio_id].max_latency = MAX(elapsed - targett, children[nbio_id].max_latency);\n \t}\n }\n \n\n"}