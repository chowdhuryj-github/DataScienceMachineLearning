{"category": "ham", "to_address": "p6l <perl6-language@perl.org>", "from_address": "\"Jonathan Lang\" <dataweaver@gmail.com>", "subject": "Re: Sigils by example (was: Re: Is Perl 6 too late?)", "body": "Mark J. Reed wrote:\n> Jonathan Lang wrote:\n> > Good examples.  Now could you provide some to explain to me why it's\n> > important to distinguish between '$', '@', '%', and '&'?  I ask\n> > because I've seen a lot of object-based code that has said stuff like\n> > '$container{$key}';\n>\n> Well, $container{$key} is how you access elements of %container in\n> Perl5; in Perl6 that's %container{$key}.  But in object-based P5 code,\n> you'd be much more likely to see $container->{$key}, where $container\n> contains a reference to a hash.\n\nTrue; but not at all what I was referring to.\n\n> I believe in P6 you could write that\n> either as $container.{$key}, $container{$key} (where the . is implied\n> since $container{$key} can't refer to %container anymore),  or\n> %$container{$key}.\n\n_This_ is closer to what I'm referring to.  As I understand it, Hash\nis a role that provides (among other things) postcircumfix:<{ }>.  So\nany object that does Hash should be able to call the above method.\nAnd unless I've missed something, there's nothing in perl 6 that\ninsists that an object that does Hash must be assigned to a variable\nthat uses the '%' sigil; the '$' sigil seems to work equally well.\ni.e., I've seen code to the effect of:\n\n  class Foo does Hash { ... }\n  my $obj is Foo;\n  $obj = 5;\n  say $obj;\n\nIn short, it appears that there's nothing keeping you from assigning\nhash-like or list-like objects to scalar variables.\n\nAnd this is without bringing references into the picture.\n\n> You aren't the only person who feels this way; there was a proposal\n> back in the RFC process to remove sigils in favor of \"everything is a\n> scalar, dereference as needed\".  I was in that camp myself.  But Larry\n> rejected that proposal, defending the utility of sigils, and I have\n> been swayed by the arguments, which I'm not going to repeat because I\n> can't say it as well, but I do advise you to go read - it was either\n> Apoc1 or Apoc2, I think.\n\nI have never been in that camp.  In fact, I tend to see the points I\nraise above as a bug, not a feature.\n\nPerhaps the relationship between sigils and roles will be addressed in\nthe as-yet unwritten S14 (or whichever spec is supposed to address\ntied variables)?\n\n-- \nJonathan \"Dataweaver\" Lang\n\n"}