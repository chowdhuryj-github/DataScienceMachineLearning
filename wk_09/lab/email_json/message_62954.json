{"category": "ham", "to_address": "beginners@perl.org", "from_address": "\"Jenda Krynicky\" <Jenda@Krynicky.cz>", "subject": "Re: Snippet explanation please", "body": "From: Monty \n> I'm reading \"Network Programming with Perl\" by Lincoln Stein, and I've\n> come across a snippet of code I'mnot quite following:\n> \n> open (WHOFH, \"who |\") or die \"Can't open who: $!\";\n> \n> While () {\n>     next unless /^(\\S+)/;\n>     $who{$1}++;\n> }\n> \n> It's the 'next' line I'm unclear on.  I know that results: parse the\n> first field from each output line of the 'who' command, but I'm\n> wondering why this might have been done in this way.  It seems to me\n> that the 'next' line states \"get the next record unless the current\n> one startes with a non-whitespace character\".\n> \n> The UNIX 'who' command output lines always start with non-whitespace\n> characters, as far as I can see.  It seems just as sensible to leave\n> this line out.  Does anyone know additional value to doing this?\n> \n> Also, the '$who{$1}++' lines has the same effect here as \"awk '{ print\n> $1 }'\", and leads me to believe that $2, $3, etc. also exist, but that\n> doesn't seem to be the case as I've tried printing those variables.\n> How does the '$1' work in this case?\n\nThe\n  next unless /^(\\S+)/;\nserves two purposes. First it makes sure you do not try to process \nlines that are empty or start with whitespace (whether that's likely \nto happen or not I have no idea) and it captures the first \"word\" \nfrom the line so that you can access it via $1.\n\nThe magic is in the regular expression\n\n  /^(\\S+)/\n\nThe \\S means \"any character except whitespace, the + means one or \nmore such characters, the () mean that you are interested in those \ncharacters and the ^ means that you are searching for thise non-\nwhitespace characters in the beginning of the string only.\n\nSo that line could be read as\n\n  go read the next line if the current one doesn't start with non-\nwhitespace characters. If it does, remember them in $1.\n\nHTH, Jenda\n\n===== Jenda@Krynicky.cz === http://Jenda.Krynicky.cz =====\nWhen it comes to wine, women and song, wizards are allowed \nto get drunk and croon as much as they like.\n\t-- Terry Pratchett in Sourcery\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}