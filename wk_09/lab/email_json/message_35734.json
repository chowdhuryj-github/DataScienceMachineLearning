{"category": "ham", "to_address": "\"Ken Nussear\" <knussear@usgs.gov>", "from_address": "\"Spielas Bates\" <bates@stat.wisc.edu>", "subject": "Re: [R] Function to Sort and test AIC for mixed model lme?", "body": "On 5/24/07, Ken Nussear  wrote:\n> > Ken Nussear  mac.com> writes:\n> >\n> > > I'm running a series of mixed models using lme, and I wonder if\n> > there\n> > > is a way to sort them by AIC prior to testing using anova\n> > > (lme1,lme2,lme3,....lme7) other than by hand.\n> >\n> > You can try something like the following. However, also consider\n> > using dropterm or stepAIC in MASS.\n> >\n> > Dieter\n> >\n> > #---------------------\n> >\n> > library(nlme)\n> > fmlist = vector(\"list\",2)\n> > fmlist[[1]] = lme(distance ~ age, data = Orthodont,method=\"ML\")\n> > fmlist[[2]] = lme(distance ~ age + Sex, data = Orthodont,   random\n> > = ~ 1,method=\"ML\")\n> > aic0 = unlist(lapply(fmlist,AIC))\n> > aic0 # larger first\n> > fmlist1 = fmlist[order(aic0)]\n> > unlist(lapply(fmlist1,AIC)) # smaller first\n>\n> I looked at stepAIC, but wanted to specify my own models.\n>\n> I have come pretty close with this\n>\n> # grab all lme objects\n> tst1 <- ls(pat=\".ml\")\n>  > tst1\n> [1] \"lme.T972way.ml\"  \"lme.T97FULL.ml\"  \"lme.T97NOINT.ml\"\n> \"lme.T97NULL.ml\"  \"lme.T97fc.ml\"    \"lme.T97min.ml\"\n> [7] \"lme.T97ns.ml\"\n>\n> #create array of AIC for all in tst1\n> tst2 <- lapply(lapply(tst1,get),AIC)\n>  > tst2\n> [[1]]\n> [1] 507.0991\n>\n> [[2]]\n> [1] 508.7594\n>\n> [[3]]\n> [1] 564.8574\n>\n> [[4]]\n> [1] 624.3053\n>\n> [[5]]\n> [1] 502.5878\n>\n> [[6]]\n> [1] 569.8188\n>\n> [[7]]\n> [1] 504.8971\n>\n> #sort tst1 by order of tst2\n> tst3 <- tst1[order(unlist(tst2))]\n>\n>  > tst3\n> [1] \"lme.T97fc.ml\"    \"lme.T97ns.ml\"    \"lme.T972way.ml\"\n> \"lme.T97FULL.ml\"  \"lme.T97NOINT.ml\" \"lme.T97min.ml\"\n> [7] \"lme.T97NULL.ml\"\n>\n>\n> The problem comes with getting the final anova statement to run.\n>\n>  >anova(tst3)\n> Error in anova(tst3) : no applicable method for \"anova\"\n>\n> I also tried\n>\n> tst4 <- paste(toString(tst3),collapse=\"\")\n>\n>  > tst4\n> [1] \"lme.T97fc.ml, lme.T97ns.ml, lme.T972way.ml, lme.T97FULL.ml,\n> lme.T97NOINT.ml, lme.T97min.ml, lme.T97NULL.ml\"\n>  >\n>  > anova(tst4)\n> Error in anova(tst4) : no applicable method for \"anova\"\n>\n> Any ideas on getting the last part to work?\n\n\ntst3 is a character vector of names so you would need to use\n\ndo.call(anova, lapply(tst3, get))\n\nI think it is better to create a list of fitted models initially\ninstead of working with names.  It would look something like this\n(this code is untested)\n\ntst2 <- lapply(tst1, get)\nnames(tst2) <- tst1\ndo.call(anova, tst2[order(unlist(lapply(tst2, AIC)))])\n\n______________________________________________\nR-help@stat.math.ethz.ch mailing list\nhttps://stat.ethz.ch/mailman/listinfo/r-help\nPLEASE do read the posting guide http://www.R-project.org/posting-guide.html\nand provide commented, minimal, self-contained, reproducible code.\n\n"}