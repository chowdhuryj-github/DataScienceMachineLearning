{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Rob Dixon <rob.dixon@350.com>", "subject": "Re: reqular expr for string manip.", "body": "oryann9 wrote:\n>\n> Dr. Ruud wrote:\n>>\n>> \"Mumia W.\" schreef:\n>>>\n>>> my $lang = ($topdir =~ /([^\\/]+)$/)[0];\n>>\n>> ITYRMSL:\n>>\n>>   my ($lang) = $topdir =~ m~([^/]+)$~;\n> \n> I have never seen the expression m~ or $~\n> Will you tell me what this is and what is says?\n\nLike all Perl quoted constructs, the pattern match\ncan take any delimiter you choose as long as you supply\nthe m explcitly, so the following are equivalent:\n\n  /regex/\n  m/regex/\n  m~regex~\n  m(regex)\n  m\n\n(Note that bracket-like delimiters are paired.)\n\nUsing a different delimiter from the usual slash character\nremoves the need to escape slashes within the regex itself,\nwhich is what Mumia has done.\n\n\nHTH,\n\nRob\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}