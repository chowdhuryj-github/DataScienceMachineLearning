{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "svn commit: samba r23519 - in branches/SAMBA_4_0/source/libcli: .\n\traw", "body": "Author: tridge\nDate: 2007-06-16 17:13:42 +0000 (Sat, 16 Jun 2007)\nNew Revision: 23519\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23519\n\nLog:\n\nadded libcli code for fetching shadow copy information\n\nAdded:\n   branches/SAMBA_4_0/source/libcli/raw/rawshadow.c\nModified:\n   branches/SAMBA_4_0/source/libcli/config.mk\n   branches/SAMBA_4_0/source/libcli/raw/interfaces.h\n   branches/SAMBA_4_0/source/libcli/raw/rawrequest.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/libcli/config.mk\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/config.mk\t2007-06-16 11:48:11 UTC (rev 23518)\n+++ branches/SAMBA_4_0/source/libcli/config.mk\t2007-06-16 17:13:42 UTC (rev 23519)\n@@ -147,6 +147,7 @@\n \t\traw/rawioctl.o \\\n \t\traw/rawacl.o \\\n \t\traw/rawdate.o \\\n-\t\traw/rawlpq.o\n+\t\traw/rawlpq.o \\\n+\t\traw/rawshadow.o\n \n include smb2/config.mk\n\nModified: branches/SAMBA_4_0/source/libcli/raw/interfaces.h\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/raw/interfaces.h\t2007-06-16 11:48:11 UTC (rev 23518)\n+++ branches/SAMBA_4_0/source/libcli/raw/interfaces.h\t2007-06-16 17:13:42 UTC (rev 23519)\n@@ -2632,4 +2632,19 @@\n \t} out;\n };\n \n+/*\n+  struct for shadow copy volumes\n+ */\n+struct smb_shadow_copy {\n+\tstruct {\n+\t\tunion smb_handle file;\n+\t\tuint32_t max_data;\n+\t} in;\n+\tstruct {\n+\t\tuint32_t num_volumes;\n+\t\tuint32_t num_names;\n+\t\tconst char **names;\n+\t} out;\n+};\n+\n #endif /* __LIBCLI_RAW_INTERFACES_H__ */\n\nModified: branches/SAMBA_4_0/source/libcli/raw/rawrequest.c\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/raw/rawrequest.c\t2007-06-16 11:48:11 UTC (rev 23518)\n+++ branches/SAMBA_4_0/source/libcli/raw/rawrequest.c\t2007-06-16 17:13:42 UTC (rev 23519)\n@@ -737,9 +737,9 @@\n   on failure zero is returned and *dest is set to NULL, otherwise the number\n   of bytes consumed in the blob is returned\n */\n-static size_t smbcli_blob_pull_ucs2(TALLOC_CTX* mem_ctx,\n-\t\t\t\t    const DATA_BLOB *blob, const char **dest, \n-\t\t\t\t    const uint8_t *src, int byte_len, uint_t flags)\n+size_t smbcli_blob_pull_ucs2(TALLOC_CTX* mem_ctx,\n+\t\t\t     const DATA_BLOB *blob, const char **dest, \n+\t\t\t     const uint8_t *src, int byte_len, uint_t flags)\n {\n \tint src_len, src_len2, alignment=0;\n \tssize_t ret;\n\nAdded: branches/SAMBA_4_0/source/libcli/raw/rawshadow.c\n===================================================================\n--- branches/SAMBA_4_0/source/libcli/raw/rawshadow.c\t2007-06-16 11:48:11 UTC (rev 23518)\n+++ branches/SAMBA_4_0/source/libcli/raw/rawshadow.c\t2007-06-16 17:13:42 UTC (rev 23519)\n@@ -0,0 +1,79 @@\n+/* \n+   Unix SMB/CIFS implementation.\n+\n+   shadow copy file operations\n+\n+   Copyright (C) Andrew Tridgell 2007\n+   \n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+   \n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+   \n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n+*/\n+\n+#include \"includes.h\"\n+#include \"libcli/raw/libcliraw.h\"\n+#include \"libcli/raw/ioctl.h\"\n+\n+/* \n+   get shadow volume data\n+*/\n+_PUBLIC_ NTSTATUS smb_raw_shadow_data(struct smbcli_tree *tree, \n+\t\t\t\t      TALLOC_CTX *mem_ctx, struct smb_shadow_copy *info)\n+{\n+\tunion smb_ioctl nt;\n+\tNTSTATUS status;\n+\tDATA_BLOB blob;\n+\tuint32_t dlength;\n+\tint i;\n+\tuint32_t ofs;\n+\n+\tnt.ntioctl.level        = RAW_IOCTL_NTIOCTL;\n+\tnt.ntioctl.in.function  = FSCTL_GET_SHADOW_COPY_DATA;\n+\tnt.ntioctl.in.file.fnum = info->in.file.fnum;\n+\tnt.ntioctl.in.fsctl     = True;\n+\tnt.ntioctl.in.filter    = 0;\n+\tnt.ntioctl.in.max_data  = info->in.max_data;\n+\tnt.ntioctl.in.blob      = data_blob(NULL, 0);\n+\n+\tstatus = smb_raw_ioctl(tree, mem_ctx, &nt);\n+\t\n+\tblob = nt.ntioctl.out.blob;\n+\n+\tif (blob.length < 12) {\n+\t\treturn NT_STATUS_INVALID_NETWORK_RESPONSE;\n+\t}\n+\t\n+\tinfo->out.num_volumes = IVAL(blob.data, 0);\n+\tinfo->out.num_names   = IVAL(blob.data, 4);\n+\tdlength               = IVAL(blob.data, 8);\n+\tif (dlength > blob.length - 12) {\n+\t\treturn NT_STATUS_INVALID_NETWORK_RESPONSE;\n+\t}\n+\n+\tinfo->out.names = talloc_array(mem_ctx, const char *, info->out.num_names);\n+\tNT_STATUS_HAVE_NO_MEMORY(info->out.names);\n+\n+\tofs = 12;\n+\tfor (i=0;iout.num_names;i++) {\n+\t\tsize_t len;\n+\t\tlen = smbcli_blob_pull_ucs2(info->out.names, \n+\t\t\t\t      &blob, &info->out.names[i],\n+\t\t\t\t      blob.data+ofs, -1, STR_TERMINATE);\n+\t\tif (len == 0) {\n+\t\t\treturn NT_STATUS_INVALID_NETWORK_RESPONSE;\n+\t\t}\n+\t\tofs += len;\n+\t}\n+\t\n+\treturn status;\n+}\n\n"}