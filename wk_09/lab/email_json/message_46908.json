{"category": "ham", "to_address": "beginners@perl.org", "from_address": "Northstardomus <northstardomus@gmail.com>", "subject": "Re: Database insertion, escape issue", "body": "On Jun 12, 4:59 am, t...@tacocat.net (Tom Allison) wrote:\n> On Jun 11, 2007, at 7:52 PM, Northstardomus wrote:\n>\n>\n>\n>\n>\n>\n>\n> > I have a Perl script where I try to strip some data from a web page\n> > and insert it\n>\n> > into a database.  I'm having a problem where, it seems like the method\n> > of quoting\n>\n> > the data for insertion don't seem to be working (as far as escaping\n> > the text) and\n>\n> > some of the text is ending up getting injected into the SQL command.\n>\n> > In this example, I am capturing the paragraphs of text and inserting\n> > each HTML\n>\n> > paragraph into a new record.  What seems to be hanging up the\n> > insertion is the \"or\n>\n> > die\" portion of the text.  It will also bomb if the text has a word\n> > like \"don't\".\n>\n> > I thought the insertion mechanism I'm using would properly escape\n> > these special\n>\n> There are two methods of doing a \"safe\" insertion that I'm familiar  \n> with under the DBI module.\n> I've never had a problem with either of these.  But I've had many  \n> problems when I don't use these.\n>\n> Option one:\n>\n> use the prepare statement\n>\n> my $sql = \"insert into table(name, address, state) values (?,?,?)\";\n> my $sth = $dbh->prepare($sql);\n>\n> ...\n>\n> $sth->execute($name,$address, $state);\n>\n> This will automatically do proper escaping of the strings you want to  \n> insert.\n>\n> Option Two:\n>\n> If for some reason it's not practical or possible to use the prepare  \n> statement then you can use the DBI quote().  However, this is  \n> generally rare.\n>\n> my $sql = \"insert into table(name) values (\" . $dbh->quote($name) . \")\";\n> $dbh->do($sql);\n>\n> But option one is going to be your best bet.- Hide quoted text -\n>\n> - Show quoted text -\n\nSorry if this is a repeat, I haven't seen my latest reply in a couple\nhours here:\n\nI replaced the commented code with the following:\n\n#    if ($OK2INSERT) {\n#        $dbh = DBI->connect(\"DBI:SQLite:dbname=C:/Lanosrep/beW/Perl/\nHelpPage/area.db\", \"\", \"\", {'RaiseError' => 1});\n#        print \"Inserting into Database , @values.\";\n#        $dbh->do(\"INSERT INTO area_status (areaID, survey_date,\nupdate_time, status ) VALUES ('$values[0]', '$values[1]',\n'$values[2]', '$values[3]')\");\n#        $dbh->disconnect();\n#    }\n    if ($OK2INSERT) {\n        $dbh = DBI->connect(\"DBI:SQLite:dbname=C:/Lanosrep/beW/Perl/\nHelpPage/area.db\", \"\", \"\", {'RaiseError' => 1});\n        print \"Inserting into Database , @values.\";\n        $dbh->prepare('INSERT INTO area_status (areaID, survey_date,\nupdate_time, status ) VALUES (?,?,?,?)');\n        $dbh->execute('$values[0]', '$values[1]', '$values[2]',\n'$values[3]');\n        $dbh->disconnect();\n    }\n\nAnd I get this error:\n\nCan't locate object method \"execute\" via package \"DBI::db\" at\ntest_script.pl\n\tline 182 (#1)\n    (F) You called a method correctly, and it correctly indicated a\npackage\n    functioning as a class, but that package doesn't define that\nparticular\n    method, nor does any of its base classes.  See perlobj.\n\nUncaught exception from user code:\n\tCan't locate object method \"execute\" via package \"DBI::db\" at\ntest_script.pl line 182.\n at test_script.pl line 182\n\nI would think I would have this available just by using DBI???\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}