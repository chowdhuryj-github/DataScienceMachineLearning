{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "abartlet@samba.org", "subject": "svn commit: samba r23132 - in branches/SAMBA_4_0/source/auth: .\n\tcredentials", "body": "Author: abartlet\nDate: 2007-05-25 05:19:02 +0000 (Fri, 25 May 2007)\nNew Revision: 23132\n\nWebSVN: http://websvn.samba.org/cgi-bin/viewcvs.cgi?view=rev&root=samba&rev=23132\n\nLog:\nResolve an issue where we would use the ccache after we free()ed it.\n\nThe problem was, we would set the ccache, then invalidate it as we set\ndetails from it (like the principal name from the ccache).\n\nInstead, set the ccache onto the credentials structure after we are\ndone processing it.\n\nAndrew Bartlett\n\nModified:\n   branches/SAMBA_4_0/source/auth/auth_util.c\n   branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\n\n\nChangeset:\nModified: branches/SAMBA_4_0/source/auth/auth_util.c\n===================================================================\n--- branches/SAMBA_4_0/source/auth/auth_util.c\t2007-05-25 04:10:51 UTC (rev 23131)\n+++ branches/SAMBA_4_0/source/auth/auth_util.c\t2007-05-25 05:19:02 UTC (rev 23132)\n@@ -581,8 +581,9 @@\n \treturn session_info;\n }\n \n-NTSTATUS auth_system_session_info(TALLOC_CTX *parent_ctx, \n-\t\t\t\t  struct auth_session_info **_session_info) \n+static NTSTATUS _auth_system_session_info(TALLOC_CTX *parent_ctx, \n+\t\t\t\t\t  BOOL anonymous_credentials, \n+\t\t\t\t\t  struct auth_session_info **_session_info) \n {\n \tNTSTATUS nt_status;\n \tstruct auth_serversupplied_info *server_info = NULL;\n@@ -609,7 +610,7 @@\n \n \tcli_credentials_set_conf(session_info->credentials);\n \n-\tif (lp_parm_bool(-1,\"system\",\"anonymous\", False)) {\n+\tif (anonymous_credentials) {\n \t\tcli_credentials_set_anonymous(session_info->credentials);\n \t} else {\n \t\tcli_credentials_set_machine_account_pending(session_info->credentials);\n@@ -619,17 +620,42 @@\n \treturn NT_STATUS_OK;\n }\n \n+_PUBLIC_ NTSTATUS auth_system_session_info(TALLOC_CTX *parent_ctx, \n+\t\t\t\t\t   struct auth_session_info **_session_info) \n+{\n+\treturn _auth_system_session_info(parent_ctx, lp_parm_bool(-1,\"system\",\"anonymous\", False), \n+\t\t\t\t\t _session_info);\n+}\n+\n+/*\n+  Create a system session, with machine account credentials\n+*/\n _PUBLIC_ struct auth_session_info *system_session(TALLOC_CTX *mem_ctx) \n {\n \tNTSTATUS nt_status;\n \tstruct auth_session_info *session_info = NULL;\n-\tnt_status = auth_system_session_info(mem_ctx, &session_info);\n+\tnt_status = auth_system_session_info(mem_ctx,\n+\t\t\t\t\t     &session_info);\n \tif (!NT_STATUS_IS_OK(nt_status)) {\n \t\treturn NULL;\n \t}\n \treturn session_info;\n }\n \n+/*\n+  Create a system session, but with anonymous credentials (so we do not need to open secrets.ldb)\n+*/\n+_PUBLIC_ struct auth_session_info *system_session_anon(TALLOC_CTX *mem_ctx) \n+{\n+\tNTSTATUS nt_status;\n+\tstruct auth_session_info *session_info = NULL;\n+\tnt_status = _auth_system_session_info(mem_ctx, False, &session_info);\n+\tif (!NT_STATUS_IS_OK(nt_status)) {\n+\t\treturn NULL;\n+\t}\n+\treturn session_info;\n+}\n+\n /****************************************************************************\n  prints a struct auth_session_info security token to debug output.\n ****************************************************************************/\n\nModified: branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\n===================================================================\n--- branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\t2007-05-25 04:10:51 UTC (rev 23131)\n+++ branches/SAMBA_4_0/source/auth/credentials/credentials_krb5.c\t2007-05-25 05:19:02 UTC (rev 23132)\n@@ -60,7 +60,8 @@\n \treturn NT_STATUS_OK;\n }\n \n-int cli_credentials_set_from_ccache(struct cli_credentials *cred, \n+static int cli_credentials_set_from_ccache(struct cli_credentials *cred, \n+\t\t\t\t    struct ccache_container *ccache,\n \t\t\t\t    enum credentials_obtained obtained)\n {\n \t\n@@ -73,37 +74,37 @@\n \t\treturn 0;\n \t}\n \n-\tret = krb5_cc_get_principal(cred->ccache->smb_krb5_context->krb5_context, \n-\t\t\t\t    cred->ccache->ccache, &princ);\n+\tret = krb5_cc_get_principal(ccache->smb_krb5_context->krb5_context, \n+\t\t\t\t    ccache->ccache, &princ);\n \n \tif (ret) {\n-\t\tchar *err_mess = smb_get_krb5_error_message(cred->ccache->smb_krb5_context->krb5_context, ret, cred);\n+\t\tchar *err_mess = smb_get_krb5_error_message(ccache->smb_krb5_context->krb5_context, \n+\t\t\t\t\t\t\t    ret, cred);\n \t\tDEBUG(1,(\"failed to get principal from ccache: %s\\n\", \n \t\t\t err_mess));\n \t\ttalloc_free(err_mess);\n \t\treturn ret;\n \t}\n \t\n-\tret = krb5_unparse_name(cred->ccache->smb_krb5_context->krb5_context, princ, &name);\n+\tret = krb5_unparse_name(ccache->smb_krb5_context->krb5_context, princ, &name);\n \tif (ret) {\n-\t\tchar *err_mess = smb_get_krb5_error_message(cred->ccache->smb_krb5_context->krb5_context, ret, cred);\n+\t\tchar *err_mess = smb_get_krb5_error_message(ccache->smb_krb5_context->krb5_context, ret, cred);\n \t\tDEBUG(1,(\"failed to unparse principal from ccache: %s\\n\", \n \t\t\t err_mess));\n \t\ttalloc_free(err_mess);\n \t\treturn ret;\n \t}\n \n-\trealm = krb5_princ_realm(cred->ccache->smb_krb5_context->krb5_context, princ);\n+\trealm = krb5_princ_realm(ccache->smb_krb5_context->krb5_context, princ);\n \n \tcli_credentials_set_principal(cred, name, obtained);\n \n \tfree(name);\n \n-\tkrb5_free_principal(cred->ccache->smb_krb5_context->krb5_context, princ);\n+\tkrb5_free_principal(ccache->smb_krb5_context->krb5_context, princ);\n \n \t/* set the ccache_obtained here, as it just got set to UNINITIALISED by the calls above */\n \tcred->ccache_obtained = obtained;\n-\tcli_credentials_invalidate_client_gss_creds(cred, cred->ccache_obtained);\n \n \treturn 0;\n }\n@@ -181,20 +182,22 @@\n \n \tkrb5_free_principal(ccc->smb_krb5_context->krb5_context, princ);\n \n-\tcred->ccache = ccc;\n-\ttalloc_steal(cred, ccc);\n+\tret = cli_credentials_set_from_ccache(cred, ccc, obtained);\n \n-\tret = cli_credentials_set_from_ccache(cred, obtained);\n-\n \tif (ret) {\n \t\treturn ret;\n \t}\n \n+\tcred->ccache = ccc;\n+\tcred->ccache_obtained = obtained;\n+\ttalloc_steal(cred, ccc);\n+\n+\tcli_credentials_invalidate_client_gss_creds(cred, cred->ccache_obtained);\n \treturn 0;\n }\n \n \n-int cli_credentials_new_ccache(struct cli_credentials *cred, struct ccache_container **_ccc)\n+static int cli_credentials_new_ccache(struct cli_credentials *cred, struct ccache_container **_ccc)\n {\n \tkrb5_error_code ret;\n \tchar *rand_string;\n@@ -241,17 +244,10 @@\n \n \ttalloc_set_destructor(ccc, free_mccache);\n \n-\tcred->ccache = ccc;\n-\ttalloc_steal(cred, ccc);\n \ttalloc_free(ccache_name);\n \n-\tif (_ccc) {\n-\t\t*_ccc = ccc;\n-\t}\n+\t*_ccc = ccc;\n \n-\tcred->ccache_obtained = (MAX(MAX(cred->principal_obtained, \n-\t\t\t\t\t cred->username_obtained), \n-\t\t\t\t     cred->password_obtained));\n \treturn ret;\n }\n \n@@ -272,20 +268,27 @@\n \t\treturn EINVAL;\n \t}\n \n-\tret = cli_credentials_new_ccache(cred, NULL);\n+\tret = cli_credentials_new_ccache(cred, ccc);\n \tif (ret) {\n \t\treturn ret;\n \t}\n-\tret = kinit_to_ccache(cred, cred, cred->ccache->smb_krb5_context, cred->ccache->ccache);\n+\n+\tret = kinit_to_ccache(cred, cred, (*ccc)->smb_krb5_context, (*ccc)->ccache);\n \tif (ret) {\n \t\treturn ret;\n \t}\n-\tret = cli_credentials_set_from_ccache(cred, cred->principal_obtained);\n \n+\tret = cli_credentials_set_from_ccache(cred, *ccc, \n+\t\t\t\t\t      (MAX(MAX(cred->principal_obtained, \n+\t\t\t\t\t\t       cred->username_obtained), \n+\t\t\t\t\t\t   cred->password_obtained)));\n+\t\n+\tcred->ccache = *ccc;\n+\tcred->ccache_obtained = cred->principal_obtained;\n \tif (ret) {\n \t\treturn ret;\n \t}\n-\t*ccc = cred->ccache;\n+\tcli_credentials_invalidate_client_gss_creds(cred, cred->ccache_obtained);\n \treturn ret;\n }\n \n@@ -297,6 +300,7 @@\n \tif (obtained >= cred->client_gss_creds_obtained) {\n \t\tif (cred->client_gss_creds_obtained > CRED_UNINITIALISED) {\n \t\t\ttalloc_free(cred->client_gss_creds);\n+\t\t\tcred->client_gss_creds = NULL;\n \t\t}\n \t\tcred->client_gss_creds_obtained = CRED_UNINITIALISED;\n \t}\n@@ -317,6 +321,7 @@\n \tif (obtained >= cred->ccache_obtained) {\n \t\tif (cred->ccache_obtained > CRED_UNINITIALISED) {\n \t\t\ttalloc_free(cred->ccache);\n+\t\t\tcred->ccache = NULL;\n \t\t}\n \t\tcred->ccache_obtained = CRED_UNINITIALISED;\n \t}\n@@ -424,8 +429,10 @@\n \t}\n \n \tif (ret == 0) {\n-\t\tret = cli_credentials_set_from_ccache(cred, obtained);\n+\t\tret = cli_credentials_set_from_ccache(cred, ccc, obtained);\n \t}\n+\tcred->ccache = ccc;\n+\tcred->ccache_obtained = obtained;\n \tif (ret == 0) {\n \t\tgcc->creds = gssapi_cred;\n \t\ttalloc_set_destructor(gcc, free_gssapi_creds);\n\n"}