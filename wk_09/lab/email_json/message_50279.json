{"category": "ham", "to_address": "Paul Lalli <mritty@gmail.com>, beginners@perl.org", "from_address": "John Degen <jeehannes@yahoo.com>", "subject": "Re: Command line usage [solved]", "body": ">\n>\n>----- Original Message ----\n>From: Paul Lalli \n>To: beginners@perl.org\n>Sent: Monday, June 18, 2007 6:47:05 PM\n>Subject: Re: Command line usage\n>\n>On Jun 18, 10:50 am, jeehan...@yahoo.com (John Degen) wrote:\n>\n>> I think I'm out of luck with this OS;) Your suggestion for creating a backup\n>> file gave the same result: no error, no change in the files. The output of\n>> 'perl -le\"print for @ARGV\" *'  is * and the other is *.*. Funny though that\n>> sed *does* work.\n>\n>Ah.  Well there's your problem.  The command line interpreter you're\n>running doesn't expand wildcards.  That's why Perl wasn't giving you\n>any errors - it had nothing to do because there was no file named \"*\"\n>that it could find...   You'll have to expand the wildcard from within\n>Perl.\n>\n>perl -pi.bkp -e\"BEGIN { @ARGV = glob($ARGV[0]); }  s/old/new/;\" *\n>\n>Hope this helps,\n>Paul Lalli\n\nThank you all for your responses. Paul's suggestion above is the winner. The command works, creates a neat backup file and does what it's told. I'll be checking the docs to see *why* it works:)\n\nBest regards,\n\nJohn Degen\n\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n\n\n\n\n\n \n____________________________________________________________________________________\nGet your own web address.  \nHave a HUGE year through Yahoo! Small Business.\nhttp://smallbusiness.yahoo.com/domains/?p=BESTDEAL\n\n-- \nTo unsubscribe, e-mail: beginners-unsubscribe@perl.org\nFor additional commands, e-mail: beginners-help@perl.org\nhttp://learn.perl.org/\n\n\n"}