{"category": "ham", "to_address": "samba-cvs@samba.org", "from_address": "tridge@samba.org", "subject": "Rev 427: disable realtime scheduler in event scripts in\n\thttp://samba.org/~tridge/ctdb", "body": "------------------------------------------------------------\nrevno: 427\nrevision-id: tridge@samba.org-20070601224649-wvwheltox404k3pe\nparent: tridge@samba.org-20070601224119-obiwab2ev9lnfwn3\ncommitter: Andrew Tridgell \nbranch nick: tridge\ntimestamp: Sat 2007-06-02 08:46:49 +1000\nmessage:\n  disable realtime scheduler in event scripts\nmodified:\n  common/ctdb_daemon.c           ctdb_daemon.c-20070409200331-3el1kqgdb9m4ib0g-1\n  common/ctdb_util.c             ctdb_util.c-20061128065342-to93h6eejj5kon81-3\n  include/ctdb_private.h         ctdb_private.h-20061117234101-o3qt14umlg9en8z0-13\n  takeover/system.c              system.c-20070525071636-a5n1ihghjtppy08r-3\n=== modified file 'common/ctdb_daemon.c'\n--- a/common/ctdb_daemon.c\t2007-06-01 09:05:41 +0000\n+++ b/common/ctdb_daemon.c\t2007-06-01 22:46:49 +0000\n@@ -766,7 +766,7 @@\n \tblock_signal(SIGPIPE);\n \n \t/* try to set us up as realtime */\n-\tctdb_set_realtime();\n+\tctdb_set_realtime(true);\n \n \t/* ensure the socket is deleted on exit of the daemon */\n \tdomain_socket_name = talloc_strdup(talloc_autofree_context(), ctdb->daemon.name);\n\n=== modified file 'common/ctdb_util.c'\n--- a/common/ctdb_util.c\t2007-05-31 03:50:53 +0000\n+++ b/common/ctdb_util.c\t2007-06-01 22:46:49 +0000\n@@ -204,16 +204,20 @@\n /*\n   if possible, make this task real time\n  */\n-void ctdb_set_realtime(void)\n+void ctdb_set_realtime(bool enable)\n {\n #if HAVE_SCHED_SETSCHEDULER\n \tstruct sched_param p;\n \tp.__sched_priority = 1;\n \n-\tif (sched_setscheduler(getpid(), SCHED_FIFO, &p) == -1) {\n-\t\tDEBUG(0,(\"Unable to set scheduler to SCHED_FIFO (%s)\\n\", strerror(errno)));\n+\tif (enable) {\n+\t\tif (sched_setscheduler(getpid(), SCHED_FIFO, &p) == -1) {\n+\t\t\tDEBUG(0,(\"Unable to set scheduler to SCHED_FIFO (%s)\\n\", strerror(errno)));\n+\t\t} else {\n+\t\t\tDEBUG(0,(\"Set scheduler to SCHED_FIFO\\n\"));\n+\t\t}\n \t} else {\n-\t\tDEBUG(0,(\"Set scheduler to SCHED_FIFO\\n\"));\n+\t\tsched_setscheduler(getpid(), SCHED_OTHER, &p);\n \t}\n #endif\n }\n\n=== modified file 'include/ctdb_private.h'\n--- a/include/ctdb_private.h\t2007-06-01 22:41:19 +0000\n+++ b/include/ctdb_private.h\t2007-06-01 22:46:49 +0000\n@@ -928,7 +928,7 @@\n \t\t\t       uint32_t destnode, uint32_t db_id, uint64_t rsn);\n int ctdb_ctrl_delete_low_rsn(struct ctdb_context *ctdb, struct timeval timeout, \n \t\t\t     uint32_t destnode, uint32_t db_id, uint64_t rsn);\n-void ctdb_set_realtime(void);\n+void ctdb_set_realtime(bool enable);\n int32_t ctdb_control_takeover_ip(struct ctdb_context *ctdb, \n \t\t\t\t struct ctdb_req_control *c,\n \t\t\t\t TDB_DATA indata, \n\n=== modified file 'takeover/system.c'\n--- a/takeover/system.c\t2007-06-01 13:25:33 +0000\n+++ b/takeover/system.c\t2007-06-01 22:46:49 +0000\n@@ -385,6 +385,7 @@\n \n \tif (state->child == 0) {\n \t\tclose(state->fd[0]);\n+\t\tctdb_set_realtime(false);\n \t\tva_start(ap, fmt);\n \t\tret = ctdb_event_script_v(ctdb, fmt, ap);\n \t\tva_end(ap);\n\n"}