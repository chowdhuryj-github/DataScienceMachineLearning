{"category": "ham", "to_address": "Herb Lewis <hlewis@panasas.com>", "from_address": "Jeremy Allison <jra@samba.org>", "subject": "Re: comment doesn't match code", "body": "On Mon, May 21, 2007 at 10:42:01AM -0700, Herb Lewis wrote:\n> in smbd/open.c in the function open_file_ntcreate we have the\n> following comment and code which contradict.\n> \n>         /* note that we ignore failure for the following. It is\n>            basically a hack for NFS, and NFS will never set one of\n>            these only read them. Nobody but Samba can ever set a deny\n>            mode and we have already checked our more authoritative\n>            locking database for permission to set this deny mode. If\n>            the kernel refuses the operations then the kernel is wrong.\n>            note that GPFS supports it as well - jmcd */\n> \n>         ret_flock = SMB_VFS_KERNEL_FLOCK(fsp, fsp->fh->fd, share_access);\n>         if(ret_flock == -1 ){\n> \n>                 TALLOC_FREE(lck);\n>                 fd_close(conn, fsp);\n>                 file_free(fsp);\n> \n>                 return NT_STATUS_SHARING_VIOLATION;\n>         }\n\nBut if you look at the implementation it goes...\n\nstatic int vfswrap_kernel_flock(vfs_handle_struct *handle, files_struct *fsp, int fd,\n                                uint32 share_mode)\n{\n        START_PROFILE(syscall_kernel_flock);\n        kernel_flock(fd, share_mode);\n        END_PROFILE(syscall_kernel_flock);\n        return 0;\n}\n\nalways returns ok :-). Confusing comment - needs to be moved\nto modules/vfs_default.c I think.\n\n"}